"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[38681],{53150:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>a,frontMatter:()=>l,toc:()=>c});var r=s(74848),n=s(28453);const l={pagination_prev:null,pagination_next:null},i="%XDBC.Gateway.JDBC.ResultSet",c=[{value:"Properties",id:"properties",level:2},{value:"%atEnd",id:"atend",level:3},{value:"%bufferCount",id:"buffercount",level:3},{value:"%bufferPointer",id:"bufferpointer",level:3},{value:"%connection",id:"connection",level:3},{value:"%currentRow",id:"currentrow",level:3},{value:"%externalResult",id:"externalresult",level:3},{value:"%fetchSize",id:"fetchsize",level:3},{value:"%rowBuffer",id:"rowbuffer",level:3},{value:"%allowBufferAccess",id:"allowbufferaccess",level:3},{value:"%isBeforeFirst",id:"isbeforefirst",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"Get",id:"get",level:3},{value:"GetData",id:"getdata",level:3},{value:"GetRow",id:"getrow",level:3},{value:"GetRows",id:"getrows",level:3},{value:"GetBuffer",id:"getbuffer",level:3},{value:"Next",id:"next",level:3},{value:"Close",id:"close",level:3},{value:"getRowstoBuffer",id:"getrowstobuffer",level:3},{value:"GetFetchSize",id:"getfetchsize",level:3},{value:"GetObject",id:"getobject",level:3},{value:"GetString",id:"getstring",level:3},{value:"SetFetchSize",id:"setfetchsize",level:3},{value:"WasNull",id:"wasnull",level:3},{value:"IsBeforeFirst",id:"isbeforefirst-1",level:3},{value:"BeforeFirst",id:"beforefirst",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"xdbcgatewayjdbcresultset",children:"%XDBC.Gateway.JDBC.ResultSet"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XDBC.Gateway.JDBC.ResultSet Extends %XDBC.Gateway.ResultSet [ System = 4 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"FOR INTERNAL USE - do not invoke directly"}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"atend",children:"%atEnd"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %atEnd As %Boolean [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"buffercount",children:"%bufferCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %bufferCount As %Integer [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"bufferpointer",children:"%bufferPointer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %bufferPointer As %Integer [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"connection",children:"%connection"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %connection As %XDBC.Gateway.JDBC.Connection [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"currentrow",children:"%currentRow"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %currentRow As %List [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"externalresult",children:"%externalResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %externalResult As %ObjectHandle [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"fetchsize",children:"%fetchSize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %fetchSize As %Integer [ InitialExpression = 1000, Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"rowbuffer",children:"%rowBuffer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %rowBuffer As %RawString [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"allowbufferaccess",children:"%allowBufferAccess"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %allowBufferAccess As %Boolean [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"isbeforefirst",children:"%isBeforeFirst"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %isBeforeFirst As %Boolean [ InitialExpression = 1, Private ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"Tracks whether we are before the first row on the IRIS side; since we grab buffers at a time from the Java side, this will be out of sync with whether the Java result set is technically before the first row."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnNew(connection As %XDBC.Gateway.JDBC.Connection, externalResult As %ObjectHandle) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method Get(colindex As %RawString = "") As %Library.RawString\n'})}),"\n",(0,r.jsx)(t.p,{children:"Returns the value of the column with the name colname in the current row of the result set."}),"\n",(0,r.jsx)(t.p,{children:"If colname is not a valid column name, this method throws a  error."}),"\n",(0,r.jsx)(t.h3,{id:"getdata",children:"GetData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetData(colindex As %Integer) As %Library.RawString\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getrow",children:"GetRow"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRow() As %Library.List\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getrows",children:"GetRows"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRows(rowCount As %Library.Integer, ByRef rows As %Library.List, ByRef sc As %Library.Status = {$$$OK}) As %Library.Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Advance the next rowCount rows in the result. Returns 0 if the cursor is at the end of the result set. Note, when 0 is returned, it is likely there are rows returned in the rows array. An optional argument contains a %Library.Status value on return. This %Status value indicates success or failure of the %GetRows call. %SQLCODE is also set by %GetRows. The rows are returned in an array of $List values in the Row array argument. If %SQLCODE'=0 for a row, that will be the end of the results."}),"\n",(0,r.jsxs)(t.p,{children:["For example, suppose rset.%GetRows(10,.tenrows,.sc) is called:",(0,r.jsx)(t.br,{}),"\n- If there are more then 10 rows remaining to be fetched from the result set, tenrows=10, tenrows(1)=$lb(first row's contents), ..., tenrows(10)=$lb(tenth row's contents), and %GetRows will return 1.",(0,r.jsx)(t.br,{}),"\n- If there are 5 rows remaining to be fetched from the result set, tenrows=5, tenrows(1)=$lb(first row's contents), ..., tenrows(5)=$lb(fifth row's contents), and %GetRows will return 0.",(0,r.jsx)(t.br,{}),"\n- If there are 0 rows remaining to be fetched from the result set, tenrows=0 and %GetRows will return 0."]}),"\n",(0,r.jsx)(t.p,{children:"This implementation is overridden by classes that implement the result set interface. Signature/behavior here to match that of %SQL.StatementResult:%GetRows()"}),"\n",(0,r.jsx)(t.h3,{id:"getbuffer",children:"GetBuffer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetBuffer(ByRef moreBuffers As %Boolean) As %List\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the current row buffer to the caller. This method will refuse to return the buffer if there result set is already being iterated over by cursor (if the cursor is not before the start of the result set) Returns 1 if more buffers exist, 0 if this is the last buffer"}),"\n",(0,r.jsx)(t.h3,{id:"next",children:"Next"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Next() As %Boolean\n"})}),"\n",(0,r.jsx)(t.h3,{id:"close",children:"Close"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Close() As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getrowstobuffer",children:"getRowstoBuffer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method getRowstoBuffer(numRows As %Integer = 0) As %Boolean [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getfetchsize",children:"GetFetchSize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFetchSize() As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Retrieves the fetch size for this ResultSet object."}),"\n",(0,r.jsx)(t.h3,{id:"getobject",children:"GetObject"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetObject(columnIndex As %Integer) As %ObjectHandle\n"})}),"\n",(0,r.jsx)(t.p,{children:"Gets the value of the designated column in the current row of this ResultSet object as %ObjectHandle"}),"\n",(0,r.jsx)(t.h3,{id:"getstring",children:"GetString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetString(columnIndex As %Integer) As %String\n"})}),"\n",(0,r.jsx)(t.h3,{id:"setfetchsize",children:"SetFetchSize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetFetchSize(rowCount As %Integer)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Gives the driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object."}),"\n",(0,r.jsx)(t.h3,{id:"wasnull",children:"WasNull"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method WasNull() As %Boolean\n"})}),"\n",(0,r.jsx)(t.p,{children:"Reports whether the last column read had a value of SQL NULL."}),"\n",(0,r.jsx)(t.h3,{id:"isbeforefirst-1",children:"IsBeforeFirst"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsBeforeFirst() As %Boolean\n"})}),"\n",(0,r.jsx)(t.p,{children:"Getter method for the %isBeforeFirst property on this class, which tracks whether the IRIS-side result set is before the first row and may not match up with whether the Java-side result set is before the first row."}),"\n",(0,r.jsx)(t.h3,{id:"beforefirst",children:"BeforeFirst"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method BeforeFirst()\n"})}),"\n",(0,r.jsx)(t.p,{children:"Position the cursor before the first row in the result set"})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var r=s(96540);const n={},l=r.createContext(n);function i(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);