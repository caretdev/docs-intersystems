"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[33612],{63426:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>n,default:()=>d,frontMatter:()=>l,toc:()=>i});var a=t(74848),r=t(28453);const l={pagination_prev:null,pagination_next:null},n="%ZEN.Report.Display.COSChart.cbarChart",i=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"DEFAULTAPPEARANCE",id:"defaultappearance",level:3},{value:"Properties",id:"properties",level:2},{value:"chartStacked",id:"chartstacked",level:3},{value:"chartPivot",id:"chartpivot",level:3},{value:"%edgeArray",id:"edgearray",level:3},{value:"%lastValueLabel",id:"lastvaluelabel",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"renderSeries",id:"renderseries",level:3},{value:"getChartElementStyle",id:"getchartelementstyle",level:3},{value:"getXAxisType",id:"getxaxistype",level:3},{value:"getYAxisType",id:"getyaxistype",level:3},{value:"useSumForRange",id:"usesumforrange",level:3},{value:"getSeriesType",id:"getseriestype",level:3},{value:"hasMultiples",id:"hasmultiples",level:3},{value:"plotTargetForSeries",id:"plottargetforseries",level:3}];function c(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"zenreportdisplaycoschartcbarchart",children:"%ZEN.Report.Display.COSChart.cbarChart"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.COSChart.cbarChart Extends cchart [ Deprecated, LegacyInstanceContext, System = 4 ]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE = 0;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["This is an SVG chart component that displays a bar chart.",(0,a.jsx)(s.br,{}),"\nThis chart displays one or more data series as rectangular bars whose size is proportional to the data value.",(0,a.jsx)(s.br,{}),"\nIf there are multiple data series, the bars are plotted either side-by-side or stacked, as specified by the chartStacked property.",(0,a.jsx)(s.br,{}),"\nYou can view data as a set of horizontal columns by setting the chartPivot property.",(0,a.jsx)(s.br,{}),"\nNote: the plotToEdge property is always treated as false for bar charts. Default value for plotToEdge property."]}),"\n",(0,a.jsx)(s.h3,{id:"defaultappearance",children:"DEFAULTAPPEARANCE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DEFAULTAPPEARANCE = "2D";\n'})}),"\n",(0,a.jsx)(s.p,{children:"Default appearance of this component."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"chartstacked",children:"chartStacked"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property chartStacked As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsxs)(s.p,{children:["If true, this is a ",(0,a.jsx)(s.em,{children:"stacked"})," bar chart. That is, data series are plotted on top of one another.",(0,a.jsx)(s.br,{}),"\nIf false, then data series are plotted side-by-side."]}),"\n",(0,a.jsx)(s.h3,{id:"chartpivot",children:"chartPivot"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property chartPivot As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, pivot this chart: display categories vertically and values horizontally."}),"\n",(0,a.jsx)(s.h3,{id:"edgearray",children:"%edgeArray"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property %edgeArray As list Of node(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.h3,{id:"lastvaluelabel",children:"%lastValueLabel"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property %lastValueLabel As list Of node(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeries(group)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw data series for this chart. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(s.h3,{id:"getchartelementstyle",children:"getChartElementStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getChartElementStyle(series, item)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return default style for a bar element."}),"\n",(0,a.jsx)(s.h3,{id:"getxaxistype",children:"getXAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxisType()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of x axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"getyaxistype",children:"getYAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxisType()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of y axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"usesumforrange",children:"useSumForRange"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method useSumForRange()\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method returns true if data series should be summed when calculating data range for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"getseriestype",children:"getSeriesType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesType(series)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type (how a series should be displayed) for the given data series (0-based). Overridden in combo chart."}),"\n",(0,a.jsx)(s.h3,{id:"hasmultiples",children:"hasMultiples"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasMultiples()\n"})}),"\n",(0,a.jsx)(s.p,{children:'Indicates that this chart supports "show multiples" mode.'}),"\n",(0,a.jsx)(s.h3,{id:"plottargetforseries",children:"plotTargetForSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method plotTargetForSeries(group, sno, data)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Plot a set of target lines based on the given data series."})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>i});var a=t(96540);const r={},l=a.createContext(r);function n(e){const s=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),a.createElement(l.Provider,{value:s},e.children)}}}]);