"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[57202],{10120:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>d,frontMatter:()=>r,toc:()=>l});var a=t(74848),n=t(28453);const r={pagination_prev:null,pagination_next:null},i="Backup.General",l=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"Methods",id:"methods",level:2},{value:"ExternalFreeze",id:"externalfreeze",level:3},{value:"ExternalThaw",id:"externalthaw",level:3},{value:"ExternalSetHistory",id:"externalsethistory",level:3},{value:"StartTask",id:"starttask",level:3},{value:"GetFilename",id:"getfilename",level:3},{value:"FreezeLog",id:"freezelog",level:3},{value:"SuspendWD",id:"suspendwd",level:3},{value:"ResumeWD",id:"resumewd",level:3},{value:"QuiesceUpdates",id:"quiesceupdates",level:3},{value:"BlockUpdates",id:"blockupdates",level:3},{value:"ResumeUpdates",id:"resumeupdates",level:3},{value:"QuiesceUpdatesClusterWide",id:"quiesceupdatesclusterwide",level:3},{value:"BlockUpdatesClusterWide",id:"blockupdatesclusterwide",level:3},{value:"BlockUpdatesSlaves",id:"blockupdatesslaves",level:3},{value:"ResumeUpdatesClusterWide",id:"resumeupdatesclusterwide",level:3},{value:"ResumeUpdatesSlaves",id:"resumeupdatesslaves",level:3},{value:"AreUpdatesBlocked",id:"areupdatesblocked",level:3},{value:"AddDatabaseToList",id:"adddatabasetolist",level:3},{value:"RemoveDatabaseFromList",id:"removedatabasefromlist",level:3},{value:"ClearDatabaseList",id:"cleardatabaselist",level:3},{value:"GetLastFullBackupInfo",id:"getlastfullbackupinfo",level:3},{value:"GetBackupVolumeInfo",id:"getbackupvolumeinfo",level:3},{value:"DatabaseListExecute",id:"databaselistexecute",level:3},{value:"DatabaseListFetch",id:"databaselistfetch",level:3},{value:"DatabaseListClose",id:"databaselistclose",level:3},{value:"IsWDSuspended",id:"iswdsuspended",level:3},{value:"IsWDSuspendedExt",id:"iswdsuspendedext",level:3},{value:"AbortBackup",id:"abortbackup",level:3},{value:"GetAbortStatus",id:"getabortstatus",level:3},{value:"ClearAbortStatus",id:"clearabortstatus",level:3},{value:"GetDBNoBackupFlag",id:"getdbnobackupflag",level:3},{value:"CommandLineFreeze",id:"commandlinefreeze",level:3},{value:"CommandLineThaw",id:"commandlinethaw",level:3}];function o(e){const s={a:"a",br:"br",code:"code",date:"date",description:"description",device:"device",em:"em",error:"error",filename:"filename",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"backupgeneral",children:"Backup.General"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class Backup.General Extends %SYSTEM.Help [ Abstract, System = 4 ]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%Utility";\n'})}),"\n",(0,a.jsx)(s.p,{children:"Default Localization Domain"}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"externalfreeze",children:"ExternalFreeze"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ExternalFreeze(LogFile As %String = "", Text As %String = "", SwitchJournalFile As %Boolean = 1, TimeOut As %Integer = 10, Hibernate As %Integer = 0, Verbose As %Boolean = 0, ExternalFreezeTimeOut As %Integer = 0, Username As %String = "", Password As %String = "", WDSuspendLimit As %Integer = 0, RequiredFile As %String) As %Status [ PublicList = (ALRDY10, ALRDY13, FORCE, NOINPUT, NOFORCE, LOGONLY, CLUBACKUP, QUIET, QUIETLY, INTERNAL, gui, logfile, OK, CLUMEM, markinfo, DATE, TIME, TYPE, Y, lastfile, success, status, ans) ]\n'})}),"\n",(0,a.jsxs)(s.p,{children:["This method is intended to be called when you perform an external backup as described in ",(0,a.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+Backup.General",children:"External Backup"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"ExternalFreeze is used to freeze InterSystems IRIS before starting an operation which will produce a valid full backup of a set of databases using technology external to InterSystems IRIS such as disk mirroring or snapshots. The mechanisms used to freeze InterSystems IRIS are different on clustered and non-clustered systems."}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Non-Clustered systems:"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"WARNING:"})," On non-clustered systems, this entry point should only be used if you are journaling all of your database updates. If databases are not being journalled, and the system should happen to crash while the write daemon is suspended, then all updates to non-journalled databases will be lost from the point in time the write daemon was suspended."]}),"\n",(0,a.jsx)(s.p,{children:"When this entry point is called on non-clustered systems, the write daemon is suspended from writing to the database. Processes will continue to run with updates only being written to the journal file and to the global buffer pool. Updates will not be written to the databases. When the ExternalThaw method is called, the write daemon will resume and write the updated buffers to the databases. During the period of time that the write daemon is suspended, processes may themselves be suspended when trying to update the database if one of the following occurs:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The system runs out of global buffers for processes to write to."}),"\n",(0,a.jsx)(s.li,{children:"The length of the suspension is longer than the system default (currently 600 seconds/10 minutes)."}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Note that the behavior of #2 can be modified by specifying the ",(0,a.jsx)(s.strong,{children:"ExternalFreezeTimeOut"})," parameter to extend the amount of time user processes can continue to update the database on the system before they are suspended."]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Restoring the backup:"})}),"\n",(0,a.jsx)(s.p,{children:"Restore the database files using your external restore mechanism. Once the databases are restored and mounted on the system, you will need to restore the journals starting which the one which was switched to during the ExternalFreeze. You can see what journal file to start with by examining the messages.log."}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Clustered systems:"})}),"\n",(0,a.jsx)(s.p,{children:"When this entry point is called on a clustered system, switch 13 is set on all the cluster members which will suspend all processes trying to update the database. When this method returns successfully, all the clustered systems have been quiesced, and it is now safe to take a snapshot of the database. When the ExternalThaw method is called, switch 13 is cleared on all the cluster members, and the suspended processes will resume writing to the database."}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Restoring the backup:"})}),"\n",(0,a.jsx)(s.p,{children:"Restore the database files using your external restore mechanism. Once the databases are restored and mounted on the system, you will need to use option 4 in CLUMENU^JRNRESTO."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.em,{children:"Arguments:"}),(0,a.jsx)(s.br,{}),"\nText Optional text string to store in the journal marker."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"LogFile"}),' If this is not NULL then this is a filename which is opened for output where messages from the execution of this method are logged. The file is created if it does not exist. If the file exists, new messages are appended to the end of the file. By default, all messages are also logged to the messages.log file. Default="" (no logging).']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"SwitchJournalFile"})," 0/1 to indicate whether the system should switch to a new journal file and add a journal marker before freezing the system. Default=1 (switch journal)."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"TimeOut"})," Ignored on non-cluster systems. For clustered systems, how long to wait (in seconds) for the system to quiesce before giving up. Default=10."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Hibernate"})," Ignored on non-cluster systems. For clustered systems, number of times to hibernate (with database updates resuming) and retry the whole process of blocking and waiting, before returning failure. Default=0."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Verbose"})," Ignored on non-cluster systems. 0/1 For clustered systems, whether to print out messages on the screen about what is going on. Default=0."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ExternalFreezeTimeOut"})," Ignored for Clustered systems. Optional parameter which specifies the number of seconds which the write daemon can be suspended before the system blocks processes which are updating the database. The default of 0 should be sufficient for most environments and means that the system will wait for 600 seconds (10 minutes) before suspending processes which are updating the database. Some environments may find that their disk snapshots take more than 10 minutes and that processes are getting suspended. In those situations, an explicit value can be passed. For example, to increase this time to 15 minutes, pass 900 for this parameter. This assumes that there are sufficient buffer space to support the activity for the period. If the buffers become full processes may start to be blocked. NOTE: If the system should crash while the write daemon is suspended, a subsequent startup of the system may take an extended period of time while the databases are updated with information from the journal."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Username"}),' Username to pass to the ExternalThaw method. Default="".']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Password"}),' Password to pass to the ExternalThaw method. Default="".']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"WDSuspendLimit"})," Ignored for Clustered systems. An optional parameter for user to specify the maximum duration, in seconds, for which the write daemon (WD) should remain suspended. Once the limit is reached or exceeded, WD resumes activity (as when ExternalThaw is called) and any backup that hasn't finished by then should be considered a failure. By default, WD doesn't resume activity until notified so (when backup is finished)."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"RequiredFile"})," (Return by reference) the oldest journal file required for transaction rollback after the backup is restored."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.em,{children:"Returns:"})," On error a descriptive message is included as part of the return code. If an error occurs, the system is not frozen when this method returns.",(0,a.jsx)(s.br,{}),"\nIf this command is used as an argument as part of an O/S script, a Status value of 5 is returned if the system is successfully frozen. If the Freeze fails, then a Status value of 3 is returned.",(0,a.jsx)(s.br,{}),'\nHere is an example of how to use this on each of the platforms. Make sure your default directory is the "mgr" directory before you invoke the API. Also keep in mind that in Windows batch scripts all method arguments to ExternalFreeze and ExternalThaw of type string need to be entered with three double quotation marks on either side.']}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Windows"})}),"\n",(0,a.jsx)(s.p,{children:"..\\bin\\irisdb -s. -U%%SYS ##Class(Backup.General).ExternalFreeze() rem note that we need to check errorlevel from highest to lowest here.... if errorlevel 5 goto OK if errorlevel 3 goto FAIL echo errorlevel returned wrong value goto END :OK echo SYSTEM IS FROZEN goto END :FAIL echo SYSTEM FREEZE FAILED :END rem Now unfreeze the system ..\\bin\\irisdb -s. -U%%SYS ##Class(Backup.General).ExternalThaw()"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Unix"})," The following example assumes that the instance name is syu72."]}),"\n",(0,a.jsx)(s.p,{children:'iris terminal syu72 -U%SYS "##Class(Backup.General).ExternalFreeze()" status=$? \tif [ $status -eq 5 ]; then \t\techo "SYSTEM IS FROZEN" \telif [ $status -eq 3 ]; then \t\techo "SYSTEM FREEZE FAILED" \tfi # Now unfreeze the system iris terminal syu72 -U%SYS "##Class(Backup.General).ExternalThaw()"'}),"\n",(0,a.jsx)(s.p,{children:'Note that if you pass parameters into the call, you may need to escape them depending on the O/S you are running on. For example the quotes "" are escaped below:'}),"\n",(0,a.jsx)(s.p,{children:'..\\bin\\irisdb -s. -U%SYS ##Class(Backup.General).ExternalFreeze("c:\\data\\freeze.log")'}),"\n",(0,a.jsx)(s.h3,{id:"externalthaw",children:"ExternalThaw"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ExternalThaw(LogFile As %String = "", Username As %String = "", Password As %String = "") As %Status\n'})}),"\n",(0,a.jsxs)(s.p,{children:["This method is intended to be called when you perform an external backup as described in ",(0,a.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+Backup.General",children:"External Backup"}),"."]}),"\n",(0,a.jsx)(s.p,{children:"ExternalThaw is used to resume InterSystems IRIS after Backup.General.ExternalFreeze(). Note that when ##Class(Backup.General).ExternalThaw is passed in on the `iris terminal` command line, the process does not go through the normal authentication method. Instead the username and password passed in as parameters is checked against the username and password passed into the ExternalFreeze method."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.em,{children:"Arguments:"}),(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"LogFile"})," If this is not NULL then this is a filename which is opened for output where messages from the execution of this method are logged. The file is created if it does not exist. If the file exists, new messages are appended to the end of the file. By default, all messages are also logged to the messages.log file."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Username"}),' Username which was passed to the ExternalFreeze method. Default="".']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Password"}),' Password which was passed to the ExternalFreeze method. Default="".']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.em,{children:"Returns:"})," On error a descriptive message is included as part of the return code. If an error occurs, the system may still be suspended.",(0,a.jsx)(s.br,{}),"\nIf the method is invoked via an OS script, exit status 5 indicates success and 3, failure. See ExternalFreeze for sample code to check exit status."]}),"\n",(0,a.jsx)(s.h3,{id:"externalsethistory",children:"ExternalSetHistory"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ExternalSetHistory(LogFile As %String = "", Description As %String = "") As %Status\n'})}),"\n",(0,a.jsxs)(s.p,{children:["This method is intended to be called when you perform an external backup as described in ",(0,a.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+Backup.General",children:"External Backup"}),". Use this method to record the fact that you have successfully performed an external backup and to note the name of the log file for that backup. ExternalSetHistory adds an entry to the backup history and counts that backup in the journal purge criteria. Call this method after a successful backup and after calling ExternalThaw."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.em,{children:"Arguments:"}),(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"LogFile"}),"This is the name of the log file to be recorded in the backup history."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Description"})," A description of this backup to be recorded in backup history."]}),"\n",(0,a.jsx)(s.p,{children:"_Returns:_Always returns OK."}),"\n",(0,a.jsx)(s.h3,{id:"starttask",children:"StartTask"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod StartTask(taskname As %String, jobbackup As %Boolean = 0, quietflag As %Boolean = 1, Device As %String = "", IsTape As %String = "") As %Status [ Internal, PublicList = (gui, logfile, FORCE, NOFORCE, LOGONLY, P10, return) ]\n'})}),"\n",(0,a.jsx)(s.p,{children:"Starts a backup using the specified task."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"jobbackup"})," FALSE means the backup should be run in the current process and the returned value reflects the success or failure of the backup. TRUE means the backup is jobbed off and the returned value reflects whether we successfully jobbed the backup off or not."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"quietflag"}),"When ",(0,a.jsx)(s.em,{children:"jobbackup"})," is false, this is FALSE if output should be displayed on the principle output device or TRUE if output should only be written to the log file.",(0,a.jsx)(s.br,{}),"\nWhen ",(0,a.jsx)(s.em,{children:"jobbackup"})," is TRUE this is a signal whether the backup is being started via the ControlPanel. When quietflag is TRUE (the default) no output is generated on the principle output device. The log file still contains all of generated messages."]}),"\n",(0,a.jsx)(s.p,{children:"The combination of jobbackup=TRUE and quietflag=FALSE is not supported for customer written applications."}),"\n",(0,a.jsx)(s.p,{children:"Returns: %Status to indicate whether the backup succeeded or failed or was jobbed off successfully."}),"\n",(0,a.jsx)(s.h3,{id:"getfilename",children:"GetFilename"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetFilename(taskname As %String = "", NextBackup As %Boolean = 1, LogFile As %Boolean = 1, Device As %String = "") As %String [ Internal ]\n'})}),"\n",(0,a.jsx)(s.p,{children:"Given a task, a Last or Next flag and the file type flag (log file or backup file), add in the path information and return the fully expanded form of the file so it can be opened."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"taskname"})," - name of the task to get a filename for.",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"NextBackup"})," - FALSE = Filename for last run, TRUE = Filename for next run",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"LogFile"})," - FALSE = Get name of backup output file, TRUE = Get name of log file"]}),"\n",(0,a.jsxs)(s.p,{children:["Returns:",(0,a.jsx)(s.br,{}),"\n$LB(0,",(0,a.jsxs)(s.error,{message:"",children:[") = Failed for specified reason, either the task does not exist or the last file was requested and a backup has not been run yet.",(0,a.jsx)(s.br,{}),"\n$LB(1,",(0,a.jsx)(s.filename,{children:") = Requested file name"})]})]}),"\n",(0,a.jsx)(s.h3,{id:"freezelog",children:"FreezeLog"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod FreezeLog(File As %String = "", Msg As %String = "", Level As %Integer = 0) [ Internal ]\n'})}),"\n",(0,a.jsx)(s.h3,{id:"suspendwd",children:"SuspendWD"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SuspendWD(TimeOut As %Integer, Hibernate As %Integer = 0, Verbose As %Boolean = 0, FreezeTimeout As %Integer = 0, WDSuspendLimit As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method suspends the wd and returns when it is suspended. This can be called for either clustered or non clustered systems. For non clustered systems if the system code supports a value of SFNMAX in the gfbackreq array, it works by setting SFNMAX into the gfbackreq array and setting the # of databases to 1. This suspends the wd w/out adjusting the incremental backup info for any of the databases. If the system code doesn't support this feature then it uses the traditional method of setting switch 13. Note that the TimeOut, hibernate and verbose settings are ignored if we use $ZU(182) to suspend the wd as this should never fail."}),"\n",(0,a.jsx)(s.h3,{id:"resumewd",children:"ResumeWD"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ResumeWD() As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method resumes the system after SuspendWD() has suspended it."}),"\n",(0,a.jsx)(s.h3,{id:"quiesceupdates",children:"QuiesceUpdates"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod QuiesceUpdates(TimeOut As %Integer, Hibernate As %Integer = 0, Verbose As %Boolean = 0) As %Status [ PublicList = (ALRDY13, NOFORCE, CLUBACKUP, QUIET, QUIETLY, INTERNAL) ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Block new database update activity and wait for existing update activity to finish within a certain period of time"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"TimeOut: How long to wait (in seconds) before giving up. Default=10."}),"\n",(0,a.jsx)(s.li,{children:"Hibernate: Number of times to hibernate (with database updates resuming) and retry the whole process of blocking and waiting, before returning failure. Default=0."}),"\n",(0,a.jsxs)(s.li,{children:["Verbose: Whether to print out messages on the screen about what is going on. Default=0.\n",(0,a.jsxs)(s.strong,{children:["WARNING: It is assumed that updates are ",(0,a.jsx)(s.em,{children:"not"})," blocked ",(0,a.jsx)(s.em,{children:"before"})," this call"]})]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"blockupdates",children:"BlockUpdates"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BlockUpdates() As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"resumeupdates",children:"ResumeUpdates"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ResumeUpdates() As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Allow database updates to resume"}),"\n",(0,a.jsx)(s.h3,{id:"quiesceupdatesclusterwide",children:"QuiesceUpdatesClusterWide"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod QuiesceUpdatesClusterWide(TimeOut As %Integer, Hibernate As %Integer = 0, Verbose As %Boolean = 0) As %Status [ PublicList = (ALRDY13, NOFORCE, CLUBACKUP, QUIET, QUIETLY, INTERNAL) ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Quiesce database update activity cluster wide"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"TimeOut: How long to wait (in seconds) before giving up. If not specified, the default is determined based on system configuration."}),"\n",(0,a.jsx)(s.li,{children:"Hibernate: Number of times to hibernate (with database updates resuming) and retry the whole process of blocking and waiting, before returning failure. Default=0."}),"\n",(0,a.jsxs)(s.li,{children:["Verbose: Whether to print out messages on the screen about what is going on. Default=0.\n",(0,a.jsxs)(s.strong,{children:["WARNING: It is assumed that updates are ",(0,a.jsx)(s.em,{children:"not"})," blocked on the ",(0,a.jsx)(s.em,{children:"local"})," system ",(0,a.jsx)(s.em,{children:"before"})," this call"]})]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"blockupdatesclusterwide",children:"BlockUpdatesClusterWide"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BlockUpdatesClusterWide(AlreadyBlockedLocally As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"blockupdatesslaves",children:"BlockUpdatesSlaves"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BlockUpdatesSlaves() As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"resumeupdatesclusterwide",children:"ResumeUpdatesClusterWide"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ResumeUpdatesClusterWide() As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Allow database updates to resume cluster wide (including local system)"}),"\n",(0,a.jsx)(s.h3,{id:"resumeupdatesslaves",children:"ResumeUpdatesSlaves"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ResumeUpdatesSlaves() As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"areupdatesblocked",children:"AreUpdatesBlocked"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AreUpdatesBlocked() As %Boolean [ Internal ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Whether database updates are blocked on local system"}),"\n",(0,a.jsx)(s.h3,{id:"adddatabasetolist",children:"AddDatabaseToList"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AddDatabaseToList(newdb As %String) As %Status\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Add a database to the list of databases to be included in a backup.",(0,a.jsx)(s.br,{}),"\nAn error is returned if the specified database is the system TEMP database."]}),"\n",(0,a.jsx)(s.h3,{id:"removedatabasefromlist",children:"RemoveDatabaseFromList"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveDatabaseFromList(remdb As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Remove a database from the list of databases to be included in a backup"}),"\n",(0,a.jsx)(s.h3,{id:"cleardatabaselist",children:"ClearDatabaseList"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ClearDatabaseList() As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Remove all databases from the list of databases to be included in a backup"}),"\n",(0,a.jsx)(s.h3,{id:"getlastfullbackupinfo",children:"GetLastFullBackupInfo"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLastFullBackupInfo() As %String\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Get information about last full backup",(0,a.jsx)(s.br,{}),"\nReturns:",(0,a.jsx)(s.br,{}),'\n$LB(0,"No information recorded about a full backup")',(0,a.jsx)(s.br,{}),"\n$LB(1,",(0,a.jsxs)(s.date,{children:[",",(0,a.jsxs)(s.description,{children:[",",(0,a.jsx)(s.device,{children:")"})]})]})]}),"\n",(0,a.jsx)(s.h3,{id:"getbackupvolumeinfo",children:"GetBackupVolumeInfo"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetBackupVolumeInfo(Volume As %String, ByRef Info As %String) As %String\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Return Information about a backup volume.",(0,a.jsx)(s.br,{}),"\nReturns the following information in the Info array:"]}),"\n",(0,a.jsxs)(s.p,{children:['Info("BackupVersion") - Internal version of the BACKUP utility (currently 1)',(0,a.jsx)(s.br,{}),'\nInfo("CacheVersion") - Product version which created the backup',(0,a.jsx)(s.br,{}),'\nInfo("BackupVolume") - Backup volume #',(0,a.jsx)(s.br,{}),'\nInfo("BackupDate") - Date of the backup (AUG 2 2012)',(0,a.jsx)(s.br,{}),'\nInfo("BackupTime") - Time of the backup (11:35AM)',(0,a.jsx)(s.br,{}),'\nInfo("BackupType") - Type of backup (Full, Incremental, Cumulative Incremental)',(0,a.jsx)(s.br,{}),'\nInfo("BackupTimeDH") - $h of backup. Can be used to reference ^SYS("BUHISTORY",Time) where time is calculated with +Info("BackupTimeDH")*1000000+$p(Info("BackupTimeDH"),",",2)',(0,a.jsx)(s.br,{}),'\nInfo("PrevBackupDate") - Date of last backup (AUG 2 2012)',(0,a.jsx)(s.br,{}),'\nInfo("PrevBackupTime") - Time of last backup (11:35AM)',(0,a.jsx)(s.br,{}),'\nInfo("PrevBackupType") - Type of backup (Full, Incremental, Cumulative Incremental)',(0,a.jsx)(s.br,{}),'\nInfo("LastFullBackupDate") - Date of last FULL backup (AUG 2 2012)',(0,a.jsx)(s.br,{}),'\nInfo("LastFullBackupTime") - Time of last FULL backup (11:35AM)',(0,a.jsx)(s.br,{}),'\nInfo("Description") - Description of the backup',(0,a.jsx)(s.br,{}),'\nInfo("BufferCount") - Used for Magtapes backup',(0,a.jsx)(s.br,{}),'\nInfo("Size") - Size in MB of the backup volume. "UNKNOWN for magtapes']}),"\n",(0,a.jsx)(s.p,{children:'The following fields are retrieved from the backup history global. If the backup history does not exist, they are returned as "UNKNOWN"'}),"\n",(0,a.jsxs)(s.p,{children:['s Info("JournalFile") - Journal file in use at time of backup',(0,a.jsx)(s.br,{}),'\ns Info("LogFile") - Log results of the backup',(0,a.jsx)(s.br,{}),'\ns Info("Status") - Result of the backup. "Aborted","Warning","Completed", or "Failed"',(0,a.jsx)(s.br,{}),'\ns Info("WIJInfo") - Information from the WIJ file at the end of backup']}),"\n",(0,a.jsx)(s.p,{children:"If the backup was done on a Mirror or Async mirror, the following is also returned:"}),"\n",(0,a.jsxs)(s.p,{children:['Info("MirrorName") - Name of the mirror',(0,a.jsx)(s.br,{}),'\nInfo("FailoverMember") - Name of the failover member',(0,a.jsx)(s.br,{}),'\nInfo("AsyncMember") - Name of the Async Member']}),"\n",(0,a.jsx)(s.p,{children:"Now for each database in the backup volume, we return the following (note that the index is in the order the database was backed up in the file):"}),"\n",(0,a.jsxs)(s.p,{children:['Info("Database",index,"Directory") - Directory of the database',(0,a.jsx)(s.br,{}),'\nInfo("Database",index,"ClusterFlag") - "P" (private mount) "C" (Cluster mount)',(0,a.jsx)(s.br,{}),'\nInfo("Database",index,"ZU49") - $zu(49) flags at time backup started']}),"\n",(0,a.jsx)(s.p,{children:'If the database is mirrored, additional mirror information is returned in Info("Database",index,"Mirror")'}),"\n",(0,a.jsx)(s.h3,{id:"databaselistexecute",children:"DatabaseListExecute"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DatabaseListExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Provides the list of databases the user has specified to be included in a backup. Note that if the user has not defined a list of databases to be backed up then all databases except the IRISTEMP database will be backed up."}),"\n",(0,a.jsx)(s.h3,{id:"databaselistfetch",children:"DatabaseListFetch"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DatabaseListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"databaselistclose",children:"DatabaseListClose"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DatabaseListClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = DatabaseListExecute ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"iswdsuspended",children:"IsWDSuspended"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsWDSuspended() As %Boolean\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method returned a value to tell whether the Write Daemon is suspended or not. Return value 1 indicates the WD is suspended, 0 indicates WD is NOT suspended."}),"\n",(0,a.jsx)(s.h3,{id:"iswdsuspendedext",children:"IsWDSuspendedExt"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsWDSuspendedExt() As %Boolean\n"})}),"\n",(0,a.jsx)(s.p,{children:"An external version of IsWDSuspended(). When called in an external script, exit status is set to 5 if WD is suspended or 3 otherwise."}),"\n",(0,a.jsx)(s.h3,{id:"abortbackup",children:"AbortBackup"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AbortBackup() As %Integer\n"})}),"\n",(0,a.jsxs)(s.p,{children:["This method will abort the currently running InterSystems IRIS On-Line Backup operation.",(0,a.jsx)(s.br,{}),"\nReturns 0 - success, 1 - No Backup is currently running, 2 - Backup is aborted already."]}),"\n",(0,a.jsx)(s.h3,{id:"getabortstatus",children:"GetAbortStatus"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAbortStatus() As %Integer\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Return the status of backup abort flag.",(0,a.jsx)(s.br,{}),"\nReturns 0 - Abort is NOT in progress. 1 - Abort is in progress."]}),"\n",(0,a.jsx)(s.h3,{id:"clearabortstatus",children:"ClearAbortStatus"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ClearAbortStatus() As %Integer\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Clear backup abort flag.",(0,a.jsx)(s.br,{}),"\nReturns the original backup abort status."]}),"\n",(0,a.jsx)(s.h3,{id:"getdbnobackupflag",children:"GetDBNoBackupFlag"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetDBNoBackupFlag(Directory As %String = "", ByRef Result As %Integer) As %Status\n'})}),"\n",(0,a.jsxs)(s.p,{children:["Get the GFNOBACKUP flag in the database.",(0,a.jsx)(s.br,{}),"\nThe flag is returned in 'Result'. When it is one means don't mark incremental bitmaps, and if we attempt to backup the file we must do a full backup. This flag is set by file creation and by detecting a label error on an incremental backup bitmap."]}),"\n",(0,a.jsx)(s.h3,{id:"commandlinefreeze",children:"CommandLineFreeze"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CommandLineFreeze(doHalt As %Boolean = 1, ExternalFreezeTimeOut As %Integer = 0, ShardMasterNamespace As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsx)(s.p,{children:'This method supports the command line "iris freeze " option. On non-sharded systems, it calls Backup.General:ExternalFreeze. On sharded systems, it runs a coordinated freeze of the entire cluster via Backup.ShardedCluster:ExternalFreeze By default, this method terminates the process with either a success (0) or failure (1) status returned to the OS caller. If the doHalt flag is turned off, it returns a status code instead of halting.'}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Arguments:"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"doHalt"})," = flag to halt process after freezing. Default is 1."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ExternalFreezeTimeOut"})," = time, in seconds, to let processes run during a freeze before they are suspended. Uses the system default when 0. Default is 0. Note, if global buffers fill up, suspension may occur before this timeout."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ShardMasterNamespace"})," = master namespace for a sharded cluster. Ignored on non-sharded systems. If left empty, defaults to the cluster metadata's MasterNamespace value (the shard master namespace from the data master's perspective)."]}),"\n",(0,a.jsx)(s.h3,{id:"commandlinethaw",children:"CommandLineThaw"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CommandLineThaw(doHalt As %Boolean = 1, ShardMasterNamespace As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsx)(s.p,{children:'This method supports the command line "iris thaw iris" option. It calls either Backup.General:ExternalThaw() or Backup.ShardedCluster:ExternalThaw() as appropriate. By default, this method terminates the process with either a success (0) or failure (1) status returned to the OS caller. If the doHalt flag is turned off, it returns a status code instead of halting.'}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.em,{children:"Arguments:"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"doHalt"})," = flag to halt process after thawing. Default is 1."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ShardMasterNamespace"})," = shard master namespace for a sharded cluster. Ignored on non-sharded systems. If left empty, this method defaults to the cluster metadata's MasterNamespace value (the shard master namespace from the data master's perspective)."]})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>l});var a=t(96540);const n={},r=a.createContext(n);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);