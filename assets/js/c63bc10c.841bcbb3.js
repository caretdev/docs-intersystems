"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[17760],{2544:(e,s,l)=>{l.r(s),l.d(s,{contentTitle:()=>r,default:()=>o,frontMatter:()=>t,toc:()=>i});var a=l(74848),n=l(28453);const t={pagination_prev:null,pagination_next:null},r="%CSP.UI.Portal.SQL.QButtons.ShowPlanAlt",i=[{value:"Parameters",id:"parameters",level:2},{value:"RESOURCE",id:"resource",level:3},{value:"CSPURL",id:"cspurl",level:3},{value:"HELPADDRESS",id:"helpaddress",level:3},{value:"PAGENAME",id:"pagename",level:3},{value:"Properties",id:"properties",level:2},{value:"PlanPage",id:"planpage",level:3},{value:"ViewProcessPage",id:"viewprocesspage",level:3},{value:"QUERYCLASS",id:"queryclass",level:3},{value:"QUERYNAME",id:"queryname",level:3},{value:"QUERYTEXT",id:"querytext",level:3},{value:"COMPAREROWS",id:"comparerows",level:3},{value:"IsCompare",id:"iscompare",level:3},{value:"JOBID",id:"jobid",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"contentPane",id:"contentpane",level:3},{value:"Methods",id:"methods",level:2},{value:"onlayoutHandler",id:"onlayouthandler",level:3},{value:"adjustSizes",id:"adjustsizes",level:3},{value:"timeout",id:"timeout",level:3},{value:"doHistory",id:"dohistory",level:3},{value:"selectHistory",id:"selecthistory",level:3},{value:"historyFilterChanged",id:"historyfilterchanged",level:3},{value:"doClearQueryText",id:"doclearquerytext",level:3},{value:"doGetPlans",id:"dogetplans",level:3},{value:"toggleFields",id:"togglefields",level:3},{value:"doComparePlans",id:"docompareplans",level:3},{value:"doShowPlan",id:"doshowplan",level:3},{value:"doViewProcess",id:"doviewprocess",level:3},{value:"%OnAfterCreatePage",id:"onaftercreatepage",level:3},{value:"%OnGetPageName",id:"ongetpagename",level:3},{value:"%GetLocatorLinks",id:"getlocatorlinks",level:3},{value:"DrawDetailsTitle",id:"drawdetailstitle",level:3},{value:"possiblePlansExecute",id:"possibleplansexecute",level:3},{value:"possiblePlansFetch",id:"possibleplansfetch",level:3},{value:"possiblePlansClose",id:"possibleplansclose",level:3},{value:"possiblePlansStatsExecute",id:"possibleplansstatsexecute",level:3},{value:"possiblePlansStatsFetch",id:"possibleplansstatsfetch",level:3},{value:"possiblePlansStatsClose",id:"possibleplansstatsclose",level:3},{value:"PrepareShowPlan",id:"prepareshowplan",level:3},{value:"OnGetRibbonInfo",id:"ongetribboninfo",level:3},{value:"%OnGetJSResources",id:"ongetjsresources",level:3},{value:"JobPossiblePlans",id:"jobpossibleplans",level:3},{value:"JobComparePlans",id:"jobcompareplans",level:3},{value:"CreateRS",id:"creaters",level:3},{value:"ExecuteRS",id:"executers",level:3},{value:"CreateRSCompare",id:"createrscompare",level:3},{value:"ExecuteRSCompare",id:"executerscompare",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"cspuiportalsqlqbuttonsshowplanalt",children:"%CSP.UI.Portal.SQL.QButtons.ShowPlanAlt"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %CSP.UI.Portal.SQL.QButtons.ShowPlanAlt Extends (%CSP.UI.Template.Property, %CSP.UI.Portal.UtilsNav, %CSP.UI.Portal.SQL.QButtons.Utils) [ System = 4 ]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"resource",children:"RESOURCE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter RESOURCE = "%Development:USE";\n'})}),"\n",(0,a.jsx)(s.h3,{id:"cspurl",children:"CSPURL"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter CSPURL = "/csp/sys/exp/%CSP.UI.Portal.SQL.QButtons.ShowPlanAlt.zen";\n'})}),"\n",(0,a.jsx)(s.h3,{id:"helpaddress",children:"HELPADDRESS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter HELPADDRESS = "Home,SQL Alternate Show Plans";\n'})}),"\n",(0,a.jsx)(s.h3,{id:"pagename",children:"PAGENAME"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter PAGENAME = "SQL.QButtons.ShowPlanAlt";\n'})}),"\n",(0,a.jsx)(s.p,{children:"Displayed name of this page."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"planpage",children:"PlanPage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property PlanPage As %String;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"viewprocesspage",children:"ViewProcessPage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property ViewProcessPage As %ZEN.Datatype.string [ InitialExpression = {..Link("/csp/sys/op/%25CSP.UI.Portal.ProcessDetails.zen",,1)} ];\n'})}),"\n",(0,a.jsx)(s.h3,{id:"queryclass",children:"QUERYCLASS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property QUERYCLASS As %ZEN.Datatype.string [ InitialExpression = "%CSP.UI.Portal.SQL.QButtons.ShowPlanAlt" ];\n'})}),"\n",(0,a.jsx)(s.h3,{id:"queryname",children:"QUERYNAME"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property QUERYNAME As %ZEN.Datatype.string [ InitialExpression = "possiblePlans" ];\n'})}),"\n",(0,a.jsx)(s.h3,{id:"querytext",children:"QUERYTEXT"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property QUERYTEXT As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"comparerows",children:"COMPAREROWS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property COMPAREROWS As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(s.h3,{id:"iscompare",children:"IsCompare"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property IsCompare As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Whether the current background job is for compare show plan"}),"\n",(0,a.jsx)(s.h3,{id:"jobid",children:"JOBID"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property JOBID As %ZEN.Datatype.integer;\n"})}),"\n",(0,a.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(s.h3,{id:"style",children:"Style"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,a.jsx)(s.h3,{id:"contentpane",children:"contentPane"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'XData contentPane [ XMLNamespace = "http://www.intersystems.com/zen" ]\n'})}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"onlayouthandler",children:"onlayoutHandler"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod onlayoutHandler(load) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"adjustsizes",children:"adjustSizes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizes() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"timeout",children:"timeout"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod timeout() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"dohistory",children:"doHistory"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doHistory() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"selecthistory",children:"selectHistory"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod selectHistory(tID) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method processes actions for a query history item."}),"\n",(0,a.jsx)(s.h3,{id:"historyfilterchanged",children:"historyFilterChanged"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod historyFilterChanged(value) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"User entered something in to the filter. Re-load the table with filter value."}),"\n",(0,a.jsx)(s.h3,{id:"doclearquerytext",children:"doClearQueryText"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doClearQueryText() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"dogetplans",children:"doGetPlans"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doGetPlans() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Invoke method to gather SQL Statements and update SQL Statement Count table. During this time, disable the rasio buttons."}),"\n",(0,a.jsx)(s.h3,{id:"togglefields",children:"toggleFields"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod toggleFields(hideflag) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"docompareplans",children:"doComparePlans"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doComparePlans() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"doshowplan",children:"doShowPlan"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doShowPlan(ID, stats) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"doviewprocess",children:"doViewProcess"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod doViewProcess() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"View details of a background process for Show Plan"}),"\n",(0,a.jsx)(s.h3,{id:"onaftercreatepage",children:"%OnAfterCreatePage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterCreatePage() As %Status\n"})}),"\n",(0,a.jsx)(s.h3,{id:"ongetpagename",children:"%OnGetPageName"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnGetPageName() As %String\n"})}),"\n",(0,a.jsx)(s.p,{children:"Get the (localized) name of the page. This should be implemented in a subclass."}),"\n",(0,a.jsx)(s.h3,{id:"getlocatorlinks",children:"%GetLocatorLinks"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetLocatorLinks(Output pLink) As %Status\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Return the array of links to show in the locator bar.",(0,a.jsx)(s.br,{}),"\npLink(n)=$LB(caption,link)"]}),"\n",(0,a.jsx)(s.h3,{id:"drawdetailstitle",children:"DrawDetailsTitle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method DrawDetailsTitle(pSeed) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw html for details title: Routine name and Query text"}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansexecute",children:"possiblePlansExecute"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansExecute(ByRef qHandle As %Binary, JobID As %String) As %Status [ PublicList = (backgrnd, showErr, wrtref) ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"This query uses %AltPlan array generated from possiblePlans run in the background"}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansfetch",children:"possiblePlansFetch"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = possiblePlansExecute ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansclose",children:"possiblePlansClose"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = possiblePlansFetch ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansstatsexecute",children:"possiblePlansStatsExecute"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansStatsExecute(ByRef qHandle As %Binary, JobID As %String) As %Status [ PublicList = (backgrnd, showErr, wrtref) ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"This query uses %AltPlan array generated from possiblePlans run in the background"}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansstatsfetch",children:"possiblePlansStatsFetch"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansStatsFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = possiblePlansExecute ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"possibleplansstatsclose",children:"possiblePlansStatsClose"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod possiblePlansStatsClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = possiblePlansFetch ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"prepareshowplan",children:"PrepareShowPlan"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod PrepareShowPlan(query, rtn = "") As %String [ ZenMethod ]\n'})}),"\n",(0,a.jsx)(s.h3,{id:"ongetribboninfo",children:"OnGetRibbonInfo"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method OnGetRibbonInfo(Output pDisplay As %Boolean, Output pViewIcons As %List, Output pSortOptions As %List, Output pSearchBox As %Boolean, Output pRibbonTitle As %String, Output pCommands As %List) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Get information to display in the ribbon bar."}),"\n",(0,a.jsx)(s.h3,{id:"ongetjsresources",children:"%OnGetJSResources"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnGetJSResources(ByRef pResources As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"jobpossibleplans",children:"JobPossiblePlans"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod JobPossiblePlans(query) As %ZEN.proxyObject [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Method to job off Show Plan process in the background."}),"\n",(0,a.jsx)(s.h3,{id:"jobcompareplans",children:"JobComparePlans"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod JobComparePlans(query, idList) As %ZEN.proxyObject [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Method to job off Compare Show Plan process in the background."}),"\n",(0,a.jsx)(s.h3,{id:"creaters",children:"CreateRS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method CreateRS(Output tSC As %Status, pInfo As %ZEN.Auxiliary.QueryInfo) As %ResultSet\n"})}),"\n",(0,a.jsx)(s.p,{children:"pInfo holds details on how to create the query."}),"\n",(0,a.jsx)(s.h3,{id:"executers",children:"ExecuteRS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method ExecuteRS(pRS As %Library.ResultSet, Output tSC As %Status, pInfo As %ZEN.Auxiliary.QueryInfo) As %Boolean\n"})}),"\n",(0,a.jsx)(s.p,{children:"Method for executing the process query."}),"\n",(0,a.jsx)(s.h3,{id:"createrscompare",children:"CreateRSCompare"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method CreateRSCompare(Output tSC As %Status, pInfo As %ZEN.Auxiliary.QueryInfo) As %ResultSet\n"})}),"\n",(0,a.jsx)(s.p,{children:"pInfo holds details on how to create the query for compare show plans run in the background"}),"\n",(0,a.jsx)(s.h3,{id:"executerscompare",children:"ExecuteRSCompare"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method ExecuteRSCompare(pRS As %Library.ResultSet, Output tSC As %Status, pInfo As %ZEN.Auxiliary.QueryInfo) As %Boolean\n"})}),"\n",(0,a.jsx)(s.p,{children:"Method for executing the compare show plans query when it is run in the background"})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,l)=>{l.d(s,{R:()=>r,x:()=>i});var a=l(96540);const n={},t=a.createContext(n);function r(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);