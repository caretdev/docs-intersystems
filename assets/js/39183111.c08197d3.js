"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[3602],{56709:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>l,default:()=>c,frontMatter:()=>a,toc:()=>i});var t=r(74848),n=r(28453);const a={pagination_prev:null,pagination_next:null},l="%SYS.Journal.System",i=[{value:"Methods",id:"methods",level:2},{value:"Start",id:"start",level:3},{value:"Stop",id:"stop",level:3},{value:"RollToNextFile",id:"rolltonextfile",level:3},{value:"GetTheOtherDirectory",id:"gettheotherdirectory",level:3},{value:"SwitchDirectory",id:"switchdirectory",level:3},{value:"SwitchFile",id:"switchfile",level:3},{value:"GetDefaults",id:"getdefaults",level:3},{value:"IsJournalEncryptionEnabled",id:"isjournalencryptionenabled",level:3},{value:"ActivateEncryption",id:"activateencryption",level:3},{value:"DeactivateEncryption",id:"deactivateencryption",level:3},{value:"OKNoDBEncKeyNow",id:"oknodbenckeynow",level:3},{value:"OKNoDBEncKeyAtStartup",id:"oknodbenckeyatstartup",level:3},{value:"IsEncKeyInUse",id:"isenckeyinuse",level:3},{value:"IsDisabled",id:"isdisabled",level:3},{value:"IsPaused",id:"ispaused",level:3},{value:"IsFrozen",id:"isfrozen",level:3},{value:"IsGettingIOError",id:"isgettingioerror",level:3},{value:"GetLastFileName",id:"getlastfilename",level:3},{value:"GetCurrentFileName",id:"getcurrentfilename",level:3},{value:"GetCurrentFile",id:"getcurrentfile",level:3},{value:"GetCurrentFileOffset",id:"getcurrentfileoffset",level:3},{value:"GetCurrentFileCount",id:"getcurrentfilecount",level:3},{value:"GetStateString",id:"getstatestring",level:3},{value:"GetState",id:"getstate",level:3},{value:"Sync",id:"sync",level:3},{value:"WhereCommitted",id:"wherecommitted",level:3},{value:"GetImageJournalInfo",id:"getimagejournalinfo",level:3},{value:"GetClusterJournalLog",id:"getclusterjournallog",level:3},{value:"GetPrimaryDirectory",id:"getprimarydirectory",level:3},{value:"GetAlternateDirectory",id:"getalternatedirectory",level:3},{value:"GetJournalFilePrefix",id:"getjournalfileprefix",level:3},{value:"SetPrimaryDirectory",id:"setprimarydirectory",level:3},{value:"SetAlternateDirectory",id:"setalternatedirectory",level:3},{value:"GetFreeSpace",id:"getfreespace",level:3},{value:"VerifyJournalDirectory",id:"verifyjournaldirectory",level:3},{value:"VerifyJournalFilePrefix",id:"verifyjournalfileprefix",level:3},{value:"GetHistoryHeader",id:"gethistoryheader",level:3},{value:"PurgeHistory",id:"purgehistory",level:3},{value:"DisableJournalWithAllRole",id:"disablejournalwithallrole",level:3},{value:"GetDejournalReaderSettings",id:"getdejournalreadersettings",level:3},{value:"GetDejournalSettings",id:"getdejournalsettings",level:3},{value:"StatusExecute",id:"statusexecute",level:3},{value:"StatusFetch",id:"statusfetch",level:3},{value:"StatusClose",id:"statusclose",level:3},{value:"ProgressExecute",id:"progressexecute",level:3},{value:"ProgressFetch",id:"progressfetch",level:3},{value:"ProgressClose",id:"progressclose",level:3},{value:"SummaryExecute",id:"summaryexecute",level:3},{value:"SummaryFetch",id:"summaryfetch",level:3},{value:"SummaryClose",id:"summaryclose",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"sysjournalsystem",children:"%SYS.Journal.System"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %SYS.Journal.System Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Journaling related API"}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"start",children:"Start"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Start(curdir As %String, altdir As %String, maxsiz As %Integer, expsiz As %Integer, prefix As %String, okshdw As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Start journaling"}),"\n",(0,t.jsx)(s.p,{children:"Optional parameters for journaling:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"curdir: primary journal directory"}),"\n",(0,t.jsx)(s.li,{children:"altdir: alternate journal directory"}),"\n",(0,t.jsx)(s.li,{children:"maxsiz: max size of journal file in bytes"}),"\n",(0,t.jsx)(s.li,{children:"expsiz: [Windows & VMS only] unit increment of journal file size in bytes"}),"\n",(0,t.jsx)(s.li,{children:"prefix: a string preceding the standard journal file name YYYYMMDD.NNN\nshdwok: OK to share directory with shadow journal files despite potential file conflicts (DEFAULT = 0) Returns OK on success"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"stop",children:"Stop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Stop() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Stop journaling system wide"}),"\n",(0,t.jsx)(s.h3,{id:"rolltonextfile",children:"RollToNextFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RollToNextFile(Reason As %Integer, ByRef NewFile As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Roll journaling to next file, without any journal property change (to activate)"}),"\n",(0,t.jsx)(s.p,{children:"Input:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Reason: reason for the switch (0 = unspecified, 1 = user-initiated, etc.);\nOutput:"}),"\n",(0,t.jsx)(s.li,{children:"NewFile: the path of the file to which journaling has switched (if successfully)\nReturn success or error status."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Caveat: Journal history global is NOT updated, a la journal daemon"}),"\n",(0,t.jsx)(s.h3,{id:"gettheotherdirectory",children:"GetTheOtherDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetTheOtherDirectory(ByRef Directory As %String = "", ByRef Type As %Integer = 0) As %Integer\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Get the path of the journal directory other than the current one.",(0,t.jsx)(s.br,{}),'\nDirectory: The journal directory different from the current one or "" if none',(0,t.jsx)(s.br,{}),'\nType: 1 if Directory is Primary or 2 if Directory is Secondary or 0 if Directory is "" (meaning no other directory)']}),"\n",(0,t.jsx)(s.h3,{id:"switchdirectory",children:"SwitchDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod SwitchDirectory(ByRef NewFile As %String = "") As %Status\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Switch journaling to the other journal directory if specified",(0,t.jsx)(s.br,{}),"\nReturn (by reference) the path of current journal file after a successful switch."]}),"\n",(0,t.jsx)(s.h3,{id:"switchfile",children:"SwitchFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SwitchFile(curdir As %String, altdir As %String, maxsiz As %Integer, expsiz As %Integer, okshdw As %Boolean = 0, reason As %Integer) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Switch journal file (and optionally change one or more journaling parameters)"}),"\n",(0,t.jsx)(s.p,{children:"Optional parameters for journaling:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"curdir: primary journal directory"}),"\n",(0,t.jsx)(s.li,{children:"altdir: alternate journal directory"}),"\n",(0,t.jsx)(s.li,{children:"maxsiz: max size of journal file in bytes"}),"\n",(0,t.jsx)(s.li,{children:"expsiz: [Windows & VMS only] unit increment of journal file size in bytes"}),"\n",(0,t.jsx)(s.li,{children:"shdwok: OK to share directory with shadow journal files despite potential file conflicts (DEFAULT = 0)"}),"\n",(0,t.jsx)(s.li,{children:"reason: reason for journal switch (DEFAULT: by user)\nReturns OK on success"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"getdefaults",children:"GetDefaults"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDefaults(ByRef curdir As %String, ByRef altdir As %String, ByRef maxsize As %Integer, ByRef expqty As %Integer, ByRef prefix As %String, ByRef shortnam As %String, curfile As %String, jrnall As %Integer) As %Status [ Internal, PublicList = (curdir, altdir, maxsize, expqty, prefix, shortnam, curfile, jrnall) ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"isjournalencryptionenabled",children:"IsJournalEncryptionEnabled"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsJournalEncryptionEnabled(Type As %Integer = 1) As %Integer\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Return current journal encryption status.",(0,t.jsx)(s.br,{}),"\nType - 1: Run time journal encryption status (default).",(0,t.jsx)(s.br,{}),"\n2: Startup journal encryption status.",(0,t.jsx)(s.br,{}),"\n3: Run time or Startup encryption status.",(0,t.jsx)(s.br,{}),"\nRetrun 1 if journal encryption status is enabled, otherwise return 0."]}),"\n",(0,t.jsx)(s.h3,{id:"activateencryption",children:"ActivateEncryption"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ActivateEncryption(EnableStartup As %Boolean = 1) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Activate journal encryption such that new updates go to encrypted journal files."}),"\n",(0,t.jsx)(s.h3,{id:"deactivateencryption",children:"DeactivateEncryption"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DeactivateEncryption(DisableStartup As %Boolean = 1) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Deactivate journal encryption such that new updates go to unencrypted journal files."}),"\n",(0,t.jsx)(s.h3,{id:"oknodbenckeynow",children:"OKNoDBEncKeyNow"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OKNoDBEncKeyNow() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return OK if DBEncKey is not required for individual jobs to roll back their own open transactions (i.e., OK to deactivate DBEncKey); otherwise, return an error indicating why DBEncKey must stay activated."}),"\n",(0,t.jsx)(s.h3,{id:"oknodbenckeyatstartup",children:"OKNoDBEncKeyAtStartup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OKNoDBEncKeyAtStartup(LocalOnly As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return OK if DBEncKey is not required at startup (i.e., OK to disable DBEncKey activation at startup); otherwise, return an error indicating why DBEncKey must be activated at startup."}),"\n",(0,t.jsx)(s.h3,{id:"isenckeyinuse",children:"IsEncKeyInUse"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsEncKeyInUse(DBEncKeyID As %String) As %Boolean\n"})}),"\n",(0,t.jsx)(s.p,{children:"TRUE if the given DBEncKeyID is used on journal files required for recovery"}),"\n",(0,t.jsx)(s.h3,{id:"isdisabled",children:"IsDisabled"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod IsDisabled(Status As %String = "", ByRef Cause As %String) As %Boolean\n'})}),"\n",(0,t.jsx)(s.p,{children:"TRUE if journaling is disabled system wide"}),"\n",(0,t.jsx)(s.h3,{id:"ispaused",children:"IsPaused"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod IsPaused(Status As %String = "", ByRef Cause As %String) As %Boolean\n'})}),"\n",(0,t.jsx)(s.p,{children:"TRUE if journaling is paused system wide (when there is an ongoing journal switch)"}),"\n",(0,t.jsx)(s.h3,{id:"isfrozen",children:"IsFrozen"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod IsFrozen(Status As %String = "", ByRef Cause As %String) As %Boolean\n'})}),"\n",(0,t.jsx)(s.p,{children:"TRUE if journaling is frozen system wide (i.e., journal updates are blocked), typically when there is a journaling error and the system is set up to freeze on such errors."}),"\n",(0,t.jsx)(s.h3,{id:"isgettingioerror",children:"IsGettingIOError"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod IsGettingIOError(Status As %String = "", ByRef Cause As %String) As %Boolean\n'})}),"\n",(0,t.jsx)(s.p,{children:"TRUE if there is a journaling error, from which the system may be trying to recover"}),"\n",(0,t.jsx)(s.h3,{id:"getlastfilename",children:"GetLastFileName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLastFileName() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:'Get the path of the last journal file on the system -- meaningful only if current journal file name = "" (i.e., journaling hasn\'t started)'}),"\n",(0,t.jsx)(s.h3,{id:"getcurrentfilename",children:"GetCurrentFileName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCurrentFileName() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the path of current journal file"}),"\n",(0,t.jsx)(s.h3,{id:"getcurrentfile",children:"GetCurrentFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCurrentFile() As %SYS.Journal.File\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the object reference to current journal file"}),"\n",(0,t.jsx)(s.h3,{id:"getcurrentfileoffset",children:"GetCurrentFileOffset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCurrentFileOffset() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the ending offset of the last journal record in current journal file; 0 if journaling is off"}),"\n",(0,t.jsx)(s.h3,{id:"getcurrentfilecount",children:"GetCurrentFileCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCurrentFileCount() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the file count of current journal file"}),"\n",(0,t.jsx)(s.h3,{id:"getstatestring",children:"GetStateString"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetStateString() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the state of the journaling system as a string. Values are:"}),"\n",(0,t.jsxs)(s.p,{children:['"Normal" (Enabled and running normally)',(0,t.jsx)(s.br,{}),'\n"Disabled" (stopped)',(0,t.jsx)(s.br,{}),'\n"Suspended" (due to I/O error)',(0,t.jsx)(s.br,{}),'\n"Frozen" (due to I/O error)',(0,t.jsx)(s.br,{}),'\n"Paused" (during journal file switch)']}),"\n",(0,t.jsx)(s.p,{children:"Frozen and Suspended are the same state (I/O error occurred), but they differ in the action processes take (freeze or discard journal data respectively) when they encounter this state."}),"\n",(0,t.jsx)(s.h3,{id:"getstate",children:"GetState"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetState() As %Integer\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns the state of the journaling system as an Integer",(0,t.jsx)(s.br,{}),"\n0 - Enabled",(0,t.jsx)(s.br,{}),"\n1 - Disabled (stopped)",(0,t.jsx)(s.br,{}),"\n2 - Suspended (due to I/O error)",(0,t.jsx)(s.br,{}),"\n3 - Frozen (due to I/O error)",(0,t.jsx)(s.br,{}),"\n4 - Paused (during journal file switch)"]}),"\n",(0,t.jsx)(s.h3,{id:"sync",children:"Sync"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Sync() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Sync (commit) journal data to disk"}),"\n",(0,t.jsx)(s.p,{children:"Returns a journal offset. It is guaranteed that journal data at or prior to the offset are on disk by the time Sync() returns."}),"\n",(0,t.jsx)(s.p,{children:"Caveat: It is possible that journal file has been switched by the time Sync() returns. In that case, it is unpredictable which journal file the returned offset refers to and one might have to repeat Sync() until journal file remains the same before and after."}),"\n",(0,t.jsx)(s.h3,{id:"wherecommitted",children:"WhereCommitted"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod WhereCommitted() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purpose: Report what portion of the journal has been committed to disk"}),"\n",(0,t.jsx)(s.p,{children:"Returns a journal offset. It is guaranteed that journal data at or prior to the offset are on disk."}),"\n",(0,t.jsx)(s.p,{children:"Caveat: see Sync"}),"\n",(0,t.jsx)(s.h3,{id:"getimagejournalinfo",children:"GetImageJournalInfo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetImageJournalInfo(ByRef JournalFileName As %String, ByRef JournalFileOffset As %Integer, ByRef JournalFileCount As %Integer, ByRef OpenTransFileOffset As %Integer, ByRef OpenTransFileCount As %Integer) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the journal checkpoint information stored in the WIJ (aka Write Image Journal)"}),"\n",(0,t.jsx)(s.h3,{id:"getclusterjournallog",children:"GetClusterJournalLog"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetClusterJournalLog() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the path of the cluster journal log"}),"\n",(0,t.jsx)(s.h3,{id:"getprimarydirectory",children:"GetPrimaryDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetPrimaryDirectory(ByRef Status As %Status = {$$$OK}) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the path of the primary journal directory, which is not necessarily the current journal directory"}),"\n",(0,t.jsx)(s.h3,{id:"getalternatedirectory",children:"GetAlternateDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAlternateDirectory(ByRef Status As %Status = {$$$OK}) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the path of the secondary journal directory"}),"\n",(0,t.jsx)(s.h3,{id:"getjournalfileprefix",children:"GetJournalFilePrefix"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetJournalFilePrefix() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the journal file name prefix"}),"\n",(0,t.jsx)(s.h3,{id:"setprimarydirectory",children:"SetPrimaryDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetPrimaryDirectory(dir As %String, create As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"setalternatedirectory",children:"SetAlternateDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetAlternateDirectory(dir As %String, create As %Boolean) As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getfreespace",children:"GetFreeSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFreeSpace() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the free space available for journal files"}),"\n",(0,t.jsx)(s.h3,{id:"verifyjournaldirectory",children:"VerifyJournalDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod VerifyJournalDirectory(dir As %String, create As %Boolean) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"verifyjournalfileprefix",children:"VerifyJournalFilePrefix"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod VerifyJournalFilePrefix(prefix As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"gethistoryheader",children:"GetHistoryHeader"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetHistoryHeader(jrnlogfd As %String, ByRef header As %String, Mirror As %Boolean = 0) As %Status [ Deprecated, Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"purgehistory",children:"PurgeHistory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PurgeHistory(DaysOld As %Integer = 100) As %Status [ Deprecated, Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"disablejournalwithallrole",children:"DisableJournalWithAllRole"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DisableJournalWithAllRole() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getdejournalreadersettings",children:"GetDejournalReaderSettings"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDejournalReaderSettings(ByRef CacheSize As %Integer, ByRef ReadAheadSize As %Integer, ByRef disableaio As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getdejournalsettings",children:"GetDejournalSettings"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDejournalSettings(type As %String, name As %String, ByRef numpref As %Integer, ByRef quesiz As %Integer, ByRef stksiz As %Integer, ByRef sizmod As %Integer, ByRef numupd As %Integer, ByRef rangemax As %Integer, ByRef maxpref As %Integer, ByRef inorder As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:'Supported \'type\' values are: "jrnrest" for journal restore, "jrnrest1" for journal restore at InterSystems IRIS startup or set to abort on DB errors, "shadow" for shadowing, "mirror" for regular mirroring and "mircatchup" for mirror catchup. All but journal restore ("jrnrest" or "sturest") also requires a name (shadow or mirror name). For "shadow", quesiz is also an input for default limit on gmheap, in pages.[HYY2181] Returned parameters: numpref - initial/minimal # of (active) prefetchers (0 = no prefetching) quesiz - size of the dejournal queue, in pages stksiz - size of the dejournal stack, in pages NB: A -1 value for stksiz tells the caller to use its own default. sizmod - a flag indicating whether quesiz or stksiz is also a maximum, used as an argument of $zu(78,50). 2 = quesiz and stksiz are in pages (same as 0) +4 = quesiz is also the maximum size +8 = stksiz is also the maximum size NB: A user-specified quesiz or stksiz is in bytes, whereas we return in pages. numupd - # of updaters rangemax - max # of updates between the foremost and the hindmost updaters maxpref - max # of prefetchers inorder - updates should be applied in order, except for db\'s listed in ^MIRROR(mirrorname,"APD",db) if any. Note: A user-specified "" value (NOT undefined) is equivalent to -1 here. A user-specified 0 value means NO (for prefetching only) or default algorithm.'}),"\n",(0,t.jsx)(s.h3,{id:"statusexecute",children:"StatusExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StatusExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns status of the journaling system."}),"\n",(0,t.jsxs)(s.p,{children:["Example:",(0,t.jsx)(s.code,{children:'s rs=##class(%ResultSet).%New("%SYS.Journal.System:Status") s rc=rs.Execute() w rc while rs.Next() { w rs.Data("Main Status"),! h 10 }'})," Here the journaling status of a remote system is retrieved and displayed every 10 seconds. See %RemoteResultSet for details on how to use it."]}),"\n",(0,t.jsx)(s.h3,{id:"statusfetch",children:"StatusFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StatusFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"statusclose",children:"StatusClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StatusClose(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"progressexecute",children:"ProgressExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProgressExecute(ByRef qHandle As %Binary, GetCommitted As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns info on journaling progress Example:",(0,t.jsx)(s.code,{children:'s rs=##class(%ResultSet).%New("%SYS.Journal.System:Progress") s rc=rs.Execute() w rc while rs.Next() { w $zdt(rs.Data("TimeStamp"),8),": ",$j(rs.Data("Offset"),10)," ",rs.Data("File Name"),! h 10 }'})," Here the current journal file name and offset are retrieved and displayed every 10 seconds."]}),"\n",(0,t.jsx)(s.h3,{id:"progressfetch",children:"ProgressFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProgressFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"progressclose",children:"ProgressClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProgressClose(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"summaryexecute",children:"SummaryExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SummaryExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Query returns a summary of the journaling system status."}),"\n",(0,t.jsxs)(s.p,{children:["Example:",(0,t.jsx)(s.code,{children:'s rs=##class(%ResultSet).%New("%SYS.Journal.System:Summary") s rc=rs.Execute() w !,rs.GetColumnHeader(1),?40," ",rs.GetColumnHeader(2),! while rs.Next() { w !,rs.Data("Parameter"),?40," ",rs.Data("Value") }'})]}),"\n",(0,t.jsx)(s.h3,{id:"summaryfetch",children:"SummaryFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SummaryFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = SummaryExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"summaryclose",children:"SummaryClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SummaryClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = SummaryFetch ]\n"})})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>i});var t=r(96540);const n={},a=t.createContext(n);function l(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);