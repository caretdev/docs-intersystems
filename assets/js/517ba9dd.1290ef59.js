"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[34624],{2118:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>c,frontMatter:()=>r,toc:()=>a});var i=t(74848),n=t(28453);const r={pagination_prev:null,pagination_next:null},l="%DeepSee.Model.level",a=[{value:"Properties",id:"properties",level:2},{value:"hierarchy",id:"hierarchy",level:3},{value:"properties",id:"properties-1",level:3},{value:"members",id:"members",level:3},{value:"timeFunction",id:"timefunction",level:3},{value:"timeFormat",id:"timeformat",level:3},{value:"timeOffset",id:"timeoffset",level:3},{value:"list",id:"list",level:3},{value:"listDelimiter",id:"listdelimiter",level:3},{value:"nullReplacement",id:"nullreplacement",level:3},{value:"rangeExpression",id:"rangeexpression",level:3},{value:"memberList",id:"memberlist",level:3},{value:"useDisplayValue",id:"usedisplayvalue",level:3},{value:"sort",id:"sort",level:3},{value:"dependsOn",id:"dependson",level:3},{value:"useAsFilter",id:"useasfilter",level:3},{value:"castAsNumeric",id:"castasnumeric",level:3},{value:"hidden",id:"hidden",level:3},{value:"factNumber",id:"factnumber",level:3},{value:"Methods",id:"methods",level:2},{value:"timeFunctionIsValid",id:"timefunctionisvalid",level:3},{value:"%AtScaleExport",id:"atscaleexport",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"deepseemodellevel",children:"%DeepSee.Model.level"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Model.level Extends (%DeepSee.Model.node, %DeepSee.Model.source) [ System = 3 ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Meta-data for a hierarchy level within a dimension within a DeepSee cube."}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"hierarchy",children:"hierarchy"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship hierarchy As %DeepSee.Model.hierarchy(XMLPROJECTION = "none") [ Cardinality = one, Inverse = levels ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Hierarchy that this level belongs to."}),"\n",(0,i.jsx)(s.h3,{id:"properties-1",children:"properties"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property properties As list Of %DeepSee.Model.property(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Set of properties defined for this level."}),"\n",(0,i.jsx)(s.h3,{id:"members",children:"members"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property members As list Of %DeepSee.Model.member(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Optional. Set of explicitly defined members for this level.",(0,i.jsx)(s.br,{}),"\nIf defined, this is a list of the members that are to be displayed for this level in the given order."]}),"\n",(0,i.jsx)(s.h3,{id:"timefunction",children:"timeFunction"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property timeFunction As %DeepSee.Datatype.string(VALUELIST = ",Year,QuarterYear,MonthYear,WeekYear,DayMonthYear,Decade,QuarterNumber,MonthNumber,WeekNumber,DayNumber,HourNumber,MinuteNumber,Days,Months,Years", XMLPROJECTION = "attribute") [ Internal ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For time dimensions, this is the name of the function that provides the data for this level.",(0,i.jsx)(s.br,{}),'\nA time function is the class name of a time level class (without the package name). E.g., "Year".']}),"\n",(0,i.jsx)(s.h3,{id:"timeformat",children:"timeFormat"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property timeFormat As %DeepSee.Datatype.string(XMLPROJECTION = "attribute") [ Internal ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For time dimensions, this is optional display format to apply to time values within this level.",(0,i.jsx)(s.br,{}),"\n(See the %FormatDate method in the %DeepSee.Utils class) for details on the format."]}),"\n",(0,i.jsx)(s.h3,{id:"timeoffset",children:"timeOffset"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property timeOffset As %DeepSee.Datatype.string(XMLPROJECTION = "attribute") [ Internal ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For time dimensions, this is optional offset to apply to time values within this level.",(0,i.jsx)(s.br,{}),'\nThe offset is an interval in the form "99y99m99d" where 9 is any digit and y,m, and d indicate years, months, and days. The interval may have a leading minus sign.',(0,i.jsx)(s.br,{}),"\nThis is used in cases where a time period does not correspond to actual time (such as a fiscal year starting on Oct 1)."]}),"\n",(0,i.jsx)(s.h3,{id:"list",children:"list"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property list As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If true, then the value for this level contains a list of items. Each distinct item is treated as a member of this level.",(0,i.jsx)(s.br,{}),"\nBy default the list consists of a $List of items. You can also use a character-delimited list by setting the listDelimiter attribute.",(0,i.jsx)(s.br,{}),"\nA nullReplacement for a list property is applied when the entire list is missing. Missing elements within a list are simply ignored."]}),"\n",(0,i.jsx)(s.h3,{id:"listdelimiter",children:"listDelimiter"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property listDelimiter As %DeepSee.Datatype.string(MAXLEN = 1, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Optional. If the list attribute for this level is true, then setting this will cause the list to be interpreted as a character delimited value using this attribute as the delimiter character."}),"\n",(0,i.jsx)(s.h3,{id:"nullreplacement",children:"nullReplacement"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property nullReplacement As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Optional. If defined, this is used as the display value for any members of this level whose value is null (missing).",(0,i.jsx)(s.br,{}),"\nIf not defined, then missing members will not be listed by queries.",(0,i.jsx)(s.br,{}),"\nThis cannot be used for levels within time dimensions or for levels that contain a list of values (see list)."]}),"\n",(0,i.jsx)(s.h3,{id:"rangeexpression",children:"rangeExpression"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property rangeExpression As %DeepSee.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Optional. If defined, this contains a range expression that transforms incoming values according to a set of range conditions.",(0,i.jsx)(s.br,{}),'\nA range condition is a string containing one or more range conditions. Each condition has a test value and a replacement value of the form "test:replace;" A test value can contain a single value or a range. A range is enclosed with () (exclusive) or [] (inclusive).',(0,i.jsx)(s.br,{}),"\nFor example:",(0,i.jsx)(s.br,{}),'\n"(,0]:Below Normal;(0,100):Normal;[100,):Above Normal;" This cannot be used for levels within time dimensions or for levels that contain a list of values (see list).',(0,i.jsx)(s.br,{}),"\nRange expressions are applied before null value substitution.",(0,i.jsx)(s.br,{}),"\nValues that do not match any range condition are converted to null."]}),"\n",(0,i.jsx)(s.h3,{id:"memberlist",children:"memberList"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property memberList As %DeepSee.Datatype.string(XMLPROJECTION = "attribute") [ Deprecated ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Optional. If defined, this is a comma-delimited list of the members that are to be displayed for this level in the given order.",(0,i.jsx)(s.br,{}),"\nThis is deprecated in favor of the members collection."]}),"\n",(0,i.jsx)(s.h3,{id:"usedisplayvalue",children:"useDisplayValue"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property useDisplayValue As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If true, then use the display (external) value of the field (if applicable) in the source table when fetching data for this level.",(0,i.jsx)(s.br,{}),"\nThis is only applied for levels that specify a sourceProperty."]}),"\n",(0,i.jsx)(s.h3,{id:"sort",children:"sort"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property sort As %DeepSee.Datatype.string(VALUELIST = ",asc,desc,asc numeric,desc numeric", XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If specified, then use this property to define the default sort order for members of the current level.",(0,i.jsx)(s.br,{}),'\nThe value can be "asc" for ascending order, "desc" for descending order, "asc numeric" for ascending numeric order, or "desc numeric" for descending numeric order.',(0,i.jsx)(s.br,{}),"\nFor more precise control, you can specify sort order within the property definitions associated with this level."]}),"\n",(0,i.jsx)(s.h3,{id:"dependson",children:"dependsOn"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property dependsOn As %DeepSee.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsxs)(s.p,{children:['If defined, this is an MDX expression identifying another level within this cube that this level depends on, e.g., "[Outlet].[H1].[City]"',(0,i.jsx)(s.br,{}),"\nThis causes the following changes to this cube."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"An additional index is created based on the \"master\" level's fact and this level's fact."}),"\n",(0,i.jsx)(s.li,{children:"When the set of members for this level is produced it is filtered using this index."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"useasfilter",children:"useAsFilter"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property useAsFilter As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 1 ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If true (the default), then this level can be used a filter within a dashboard. If false, it is still visible to the Analyzer, but is not listed as a choice for a widget filter.",(0,i.jsx)(s.br,{}),"\nThis has no effect on the operation of the cube."]}),"\n",(0,i.jsx)(s.h3,{id:"castasnumeric",children:"castAsNumeric"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property castAsNumeric As %Boolean(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"If true, the engine will treat the members of this level as numbers."}),"\n",(0,i.jsx)(s.h3,{id:"hidden",children:"hidden"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property hidden As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If true, this level is hidden. That is, it will not be listed among the cube's members within the various DeepSee utilities.",(0,i.jsx)(s.br,{}),"\nIt can still be used within MDX queries and expressions."]}),"\n",(0,i.jsx)(s.h3,{id:"factnumber",children:"factNumber"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property factNumber As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Define a stable fact number for this level"}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"timefunctionisvalid",children:"timeFunctionIsValid"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod timeFunctionIsValid(%val) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Override default validation to allow for additional time classes."}),"\n",(0,i.jsx)(s.h3,{id:"atscaleexport",children:"%AtScaleExport"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %AtScaleExport(pStatus As %Status = {$$$OK}, ByRef pAuxiliaryIndex As %DynamicAbstractObject = {$$$NULLOREF}) As %DynamicAbstractObject\n"})}),"\n",(0,i.jsx)(s.p,{children:"Produce the structures needed to emit the appropriate JSON and export this item to AtScale"})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>a});var i=t(96540);const n={},r=i.createContext(n);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);