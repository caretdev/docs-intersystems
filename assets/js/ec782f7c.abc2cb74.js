"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[74616],{48859:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>n,default:()=>d,frontMatter:()=>r,toc:()=>o});var i=s(74848),a=s(28453);const r={pagination_prev:null,pagination_next:null},n="%OAuth2.Server.Authenticate",o=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"Methods",id:"methods",level:2},{value:"GetLanguageList",id:"getlanguagelist",level:3},{value:"BeforeAuthenticate",id:"beforeauthenticate",level:3},{value:"AfterAuthenticate",id:"afterauthenticate",level:3},{value:"DelegatedAuthentication",id:"delegatedauthentication",level:3},{value:"DirectLogin",id:"directlogin",level:3},{value:"DisplayLogin",id:"displaylogin",level:3},{value:"Display2FA",id:"display2fa",level:3},{value:"DisplayPermissions",id:"displaypermissions",level:3},{value:"DrawLoginHead",id:"drawloginhead",level:3},{value:"Draw2FAHead",id:"draw2fahead",level:3},{value:"DrawStyle",id:"drawstyle",level:3},{value:"DrawFooter",id:"drawfooter",level:3},{value:"DrawAcceptHead",id:"drawaccepthead",level:3}];function l(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"oauth2serverauthenticate",children:"%OAuth2.Server.Authenticate"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Class %OAuth2.Server.Authenticate Extends %CSP.Page [ System = 4 ]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["%OAuth2.Server.Authenticate acts as the subclass for all user written Authenticate classes as well as being the default Authenticate class. The Authenticate class is used by Authorization Endpoint at OAuth2.Server.Auth to authenticate the user. This class allows the customization of the authentication process.",(0,i.jsx)(t.br,{}),"\nThe following methods may be implemented to override the default in OAuth2.Server: DirectLogin, DisplayLogin and DisplayPermissions.",(0,i.jsx)(t.br,{}),"\nThe scope argument to all of these methods is a %ArrayOfDatatypes where the keys are scope values and the values are the display form of the scope value."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.th,{children:"The CSS style is defined in DrawStyle."})})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.td,{children:"loginForm is for DisplayLogin"})}),(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.td,{children:"permissionForm is for DisplayPermissions"})}),(0,i.jsx)(t.tr,{children:(0,i.jsx)(t.td,{children:"Customer can modify these CSS to tailor desired look and feel."})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%OAuth2Login";\n'})}),"\n",(0,i.jsx)(t.p,{children:"Login page localization domain"}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"getlanguagelist",children:"GetLanguageList"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetLanguageList() As %List\n"})}),"\n",(0,i.jsx)(t.p,{children:"The GetLanguageList method returns a comma separated list of the languages that are supported for the message domain used for this class. This language list is returned as the ui_locales server metadata property."}),"\n",(0,i.jsx)(t.h3,{id:"beforeauthenticate",children:"BeforeAuthenticate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod BeforeAuthenticate(scope As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"The BeforeAuthenticate method of the Authenticate class is called before any authentication takes place to allow the scope or claims associated with the request to be modified based on scope values or request parameters."}),"\n",(0,i.jsx)(t.h3,{id:"afterauthenticate",children:"AfterAuthenticate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod AfterAuthenticate(scope As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"The AfterAuthenticate method of the Authenticate class is called after any authentication is completed (including if the authentication is cookie based) to allow the scope or properties associated with the request to be modified based on scope values or request parameters. AfterAuthenticate may add properties to the authentication HTTP response, by adding them to properties.ResponseProperties."}),"\n",(0,i.jsx)(t.h3,{id:"delegatedauthentication",children:"DelegatedAuthentication"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DelegatedAuthentication(properties As %OAuth2.Server.Properties, localRedirectURL As %String, Output delegatedAuthenticationURL As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"DelegatedAuthentication can be used to redirect the flow of the authorization process to another authentication system, such as an OpenID Connect Identity Provider. If it is not null, the resource owner will be redirected to delegatedAuthenticationURL. localRedirectURL is a URL that the delegated authentication service should redirect to after completion in order to reinsert the user back into the original authorization flow. This method may set values of the properties.CustomProperties array that may be used in the ValidateDelegatedAuthentication method of the Validate class."}),"\n",(0,i.jsx)(t.h3,{id:"directlogin",children:"DirectLogin"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DirectLogin(scope As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties, Output username As %String, Output password As %String) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If DirectLogin chooses to do authentication by some means other than display of the user login form, DirectLogin sets the username and password arguments which will later be used to obtain the properties associated with the access token and to generate the token. If username is set to $char(0), then the access_denied error will be returned.",(0,i.jsx)(t.br,{}),"\nThis method may directly look at the request properties and set properties for GenerateAccessToken using the properties array argument."]}),"\n",(0,i.jsx)(t.h3,{id:"displaylogin",children:"DisplayLogin"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DisplayLogin(authorizationCode As %String, scope As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties, loginCount As %Integer = 1) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:['DisplayLogin is responsible for writing out the HTML to display the user login form. The login form must contain a Username field, a Password field and an AuthorizationCode hidden field. The Authorization code hidden field is inserted by DisplayLogin using the InsertHiddenField method of %CSP.Page. The form will normally be submitted using a button named "Login". If it is submitted with a button named "Accept", then the page will skip calling DisplayPermissions to authorize the scopes. If this done, the page ',(0,i.jsx)(t.em,{children:"should"})," display the requested scopes prior to submitting. If the form is submitted using a button named Cancel, then the authorization process will terminate with an error return of access_denied.",(0,i.jsx)(t.br,{}),"\nloginCount is the integer count of which login attempt is taking place.",(0,i.jsx)(t.br,{}),"\nThis method may directly look at the request properties and set properties for GenerateAccessToken using the properties array argument. In addition, any submitted values with name beginning with p_ (i.e. the element name begins with p_) will be copied to the properties.CustomProperties array with the p_ prefix removed from the name."]}),"\n",(0,i.jsx)(t.h3,{id:"display2fa",children:"Display2FA"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Display2FA(authorizationCode As %String, scope As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties, loginCount As %Integer = 1) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:['Display2fa is responsible for writing out the HTML to display an HTML form to allow the user to perform two factor authentication.The form should include a 2FAToken field and an AuthorizationCode hidden field. The Authorization code hidden field is inserted by Display2fa using the InsertHiddenField method of %CSP.Page. The form will normally be submitted using a button named "Login". If it is submitted with a button named "Accept", then the page will skip calling DisplayPermissions to authorize the scopes. If this done, the page ',(0,i.jsx)(t.em,{children:"should"})," display the requested scopes prior to submitting. If the form is submitted using a button named Cancel, then the authorization process will terminate with an error return of access_denied.",(0,i.jsx)(t.br,{}),"\nloginCount is the integer count of which login attempt is taking place.",(0,i.jsx)(t.br,{}),"\nThis method may directly look at the request properties and set properties for GenerateAccessToken using the properties array argument."]}),"\n",(0,i.jsx)(t.h3,{id:"displaypermissions",children:"DisplayPermissions"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DisplayPermissions(authorizationCode As %String, scopeArray As %ArrayOfDataTypes, currentScopeArray As %ArrayOfDataTypes, properties As %OAuth2.Server.Properties) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["DisplayPermissions is responsible for writing out the HTML to display the user accept permissions form.",(0,i.jsx)(t.br,{}),"\nThe accept permissions form should display the already obtained scopes in display format based on currentScopeArray.",(0,i.jsx)(t.br,{}),"\nThe accept permissions form should display the requested scopes in display format based on scopeArray.",(0,i.jsx)(t.br,{}),'\nThe Authorization code hidden field is inserted by DisplayPermissions using the InsertHiddenField method of %CSP.Page. The form should be submitted using a button named "Accept". If the form is submitted using a button named Cancel, then the authorization process will terminate with an error return of access_denied.',(0,i.jsx)(t.br,{}),"\nThis method may directly look at the request properties and set properties for GenerateAccessToken using the properties array argument. In addition, any submitted values with name beginning with p_ (i.e. the element name begins with p_) will be copied to the properties.CustomProperties array with the p_ prefix removed from the name."]}),"\n",(0,i.jsx)(t.h3,{id:"drawloginhead",children:"DrawLoginHead"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DrawLoginHead(LOGINHEADTITLE, MSGUSERNAME, MSGPASSWORD, MSGUSERNAMEPASSWORD)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"draw2fahead",children:"Draw2FAHead"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Draw2FAHead(TITLE2FA, MSGTOKEN)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"drawstyle",children:"DrawStyle"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DrawStyle()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"drawfooter",children:"DrawFooter"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DrawFooter()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"drawaccepthead",children:"DrawAcceptHead"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DrawAcceptHead(ACCEPTHEADTITLE)\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>o});var i=s(96540);const a={},r=i.createContext(a);function n(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);