"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[7769],{43739:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>d,frontMatter:()=>i,toc:()=>r});var n=t(74848),a=t(28453);const i={pagination_prev:null,pagination_next:null},l="%Studio.SourceControl.ItemSet",r=[{value:"Parameters",id:"parameters",level:2},{value:"MANAGEDEXTENT",id:"managedextent",level:3},{value:"SrcVer",id:"srcver",level:3},{value:"Version",id:"version",level:3},{value:"CSPAppLink",id:"cspapplink",level:3},{value:"Properties",id:"properties",level:2},{value:"%PL97361",id:"pl97361",level:3},{value:"CCR",id:"ccr",level:3},{value:"SiteCode",id:"sitecode",level:3},{value:"Changelists",id:"changelists",level:3},{value:"ClientResponses",id:"clientresponses",level:3},{value:"Committed",id:"committed",level:3},{value:"CommittedTimestamp",id:"committedtimestamp",level:3},{value:"CreatedBy",id:"createdby",level:3},{value:"CreateTimestamp",id:"createtimestamp",level:3},{value:"Deployed",id:"deployed",level:3},{value:"DeployedTimestamp",id:"deployedtimestamp",level:3},{value:"Environment",id:"environment",level:3},{value:"ExportTimestamp",id:"exporttimestamp",level:3},{value:"ImportTimestamp",id:"importtimestamp",level:3},{value:"ItemList",id:"itemlist",level:3},{value:"ItemSetFile",id:"itemsetfile",level:3},{value:"ItemSetFilename",id:"itemsetfilename",level:3},{value:"FileLabel",id:"filelabel",level:3},{value:"Job",id:"job",level:3},{value:"Log",id:"log",level:3},{value:"LogHistory",id:"loghistory",level:3},{value:"Name",id:"name",level:3},{value:"Payload",id:"payload",level:3},{value:"PayloadFile",id:"payloadfile",level:3},{value:"PayloadFilename",id:"payloadfilename",level:3},{value:"ServerItemSetID",id:"serveritemsetid",level:3},{value:"SessionToken",id:"sessiontoken",level:3},{value:"Source",id:"source",level:3},{value:"System",id:"system",level:3},{value:"Target",id:"target",level:3},{value:"Methods",id:"methods",level:2},{value:"GetPathTranslation",id:"getpathtranslation",level:3},{value:"NameCVT",id:"namecvt",level:3},{value:"FindReplaceInFile",id:"findreplaceinfile",level:3},{value:"LoadPayload",id:"loadpayload",level:3},{value:"Create",id:"create",level:3},{value:"Export",id:"export",level:3},{value:"ExportToFile",id:"exporttofile",level:3},{value:"Import",id:"import",level:3},{value:"CheckWritableState",id:"checkwritablestate",level:3},{value:"ChangeWritableState",id:"changewritablestate",level:3},{value:"LoadToOS",id:"loadtoos",level:3},{value:"LoadToNS",id:"loadtons",level:3},{value:"P4SubmitItemSet",id:"p4submititemset",level:3},{value:"P4Revert",id:"p4revert",level:3},{value:"WSList",id:"wslist",level:3},{value:"WSDownload",id:"wsdownload",level:3},{value:"WSConfirmLoad",id:"wsconfirmload",level:3},{value:"WSUpload",id:"wsupload",level:3},{value:"WSCanUpload",id:"wscanupload",level:3},{value:"WSDetails",id:"wsdetails",level:3},{value:"ValidateCCR",id:"validateccr",level:3},{value:"Download",id:"download",level:3},{value:"Load",id:"load",level:3},{value:"Bundle",id:"bundle",level:3},{value:"Upload",id:"upload",level:3},{value:"IRISLIBReadOnly",id:"irislibreadonly",level:3},{value:"IsValidOSProcessName",id:"isvalidosprocessname",level:3},{value:"HasInstancePrimaryNamespace",id:"hasinstanceprimarynamespace",level:3},{value:"SetUpProxyUnauth",id:"setupproxyunauth",level:3},{value:"ServerItemSetCount",id:"serveritemsetcount",level:3},{value:"DisplayLog",id:"displaylog",level:3},{value:"ServerItemSetIDSet",id:"serveritemsetidset",level:3},{value:"ServerItemSetIDGet",id:"serveritemsetidget",level:3},{value:"SessionTokenSet",id:"sessiontokenset",level:3},{value:"SessionTokenGet",id:"sessiontokenget",level:3},{value:"VersionPostfix",id:"versionpostfix",level:3},{value:"LogToggle",id:"logtoggle",level:3},{value:"LogToggleCore",id:"logtogglecore",level:3},{value:"LogTags",id:"logtags",level:3},{value:"OnToolsCompile",id:"ontoolscompile",level:3},{value:"InstanceVersion",id:"instanceversion",level:3},{value:"BuildNewIndexes",id:"buildnewindexes",level:3},{value:"%OnAddToSaveSet",id:"onaddtosaveset",level:3}];function o(e){const s={code:"code",file:"file",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",ver:"ver",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"studiosourcecontrolitemset",children:"%Studio.SourceControl.ItemSet"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Studio.SourceControl.ItemSet Extends (%Persistent, %XML.Adaptor) [ Inheritance = right, System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Class which lists things coming to or from the client as part of the CCR process"}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"managedextent",children:"MANAGEDEXTENT"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter MANAGEDEXTENT As INTEGER [ Constraint = "0,1", Flags = ENUM ] = 0;\n'})}),"\n",(0,n.jsx)(s.p,{children:"The MANAGEDEXTENT parameter can be set to 0 (zero) to cause the Extent Manager to ignore this class. If set to 1 then the Extent Manager will register globals used by the class and detect collisions. Unmanaged extents (MANAGEDEXTENT = 0) are not checked. Currently, only classes using default storage (%Storage.Persistent) can be managed. This is required since each Namespace will have it's own Change extent"}),"\n",(0,n.jsx)(s.h3,{id:"srcver",children:"SrcVer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter SrcVer = "$Id: //iris/2024.3.0/databases/sys/cls/Studio/SourceControl/ItemSet.xml#1 $";\n'})}),"\n",(0,n.jsx)(s.p,{children:"This Parameter should be updated when synced from Perforce"}),"\n",(0,n.jsx)(s.h3,{id:"version",children:"Version"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter Version = 167;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Revision number of this class when compiled as part of the //custom_ccrs/_common/config/... branch. This version will not be updated (by design) when the class is integrated to other branches. This allows the user to tell what version of the Studio client tools are in use."}),"\n",(0,n.jsx)(s.h3,{id:"cspapplink",children:"CSPAppLink"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter CSPAppLink = "itemsetsourcelink";\n'})}),"\n",(0,n.jsx)(s.p,{children:"This is the string used for naming the default proxy CSPApplication that is referenced for exporting/importing files"}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"pl97361",children:"%PL97361"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property %PL97361 As %Integer(MINVAL = 1, XMLPROJECTION = "NONE") [ Identity, Internal, Private, ReadOnly, SqlFieldName = %IDKEY ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"This is a workaround for PL 97361. This is an Identity property (name for IDKEY) used to define the ItemSetMap Index needed for server-side processing. ItemSet is marked private and readonly to force the default system assigned id values and to discourage use of this property by applications. The RowId should be referred to as %ID in SQL queries, but by default may also be referred to as ID, IDn is used if ID or ID(n-1) is defined explicitly. Applications should refer to the ID using the %Id() accessor."}),"\n",(0,n.jsx)(s.h3,{id:"ccr",children:"CCR"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CCR As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"CCR for which this ItemSet was created"}),"\n",(0,n.jsx)(s.h3,{id:"sitecode",children:"SiteCode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property SiteCode As %String(XMLPROJECTION = "NONE") [ Calculated, SqlComputeCode = {s {*}=$ZCVT($E({CCR},1,4),"U")}, SqlComputed ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Site Code for which this ItemSet was created"}),"\n",(0,n.jsx)(s.h3,{id:"changelists",children:"Changelists"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Changelists As %List(XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"If ItemSet is generated by CCR, this contains a list of changelist numbers that are included in this ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"clientresponses",children:"ClientResponses"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property ClientResponses As array Of %Integer(XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Tracks the deployment of the ItemSet to Primary and Secondary Environments by EID using same values as Deployed (0,1,2,3) Does not need abandoned or stale since these are specific to the whole ItemSet"}),"\n",(0,n.jsx)(s.p,{children:"a value of 0 means that it has not been deployed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 1 means that it has been downloaded but not yet deployed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 2 means that it has been deployed successfully"}),"\n",(0,n.jsx)(s.p,{children:"a value of 3 means that there has been an attempt to deploy but there was an error"}),"\n",(0,n.jsx)(s.h3,{id:"committed",children:"Committed"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Committed As %Integer(XMLPROJECTION = "NONE") [ InitialExpression = "0" ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Indicates that this ItemSet (created on a Client) has been committed to Perforce by the CCR Server"}),"\n",(0,n.jsx)(s.p,{children:"a value of 0 means that it has not been committed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 1 means that it is currently being committed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 2 means that it has been committed successfully"}),"\n",(0,n.jsx)(s.p,{children:"a value of -1 means that it has been aborted"}),"\n",(0,n.jsx)(s.h3,{id:"committedtimestamp",children:"CommittedTimestamp"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CommittedTimestamp As %TimeStamp;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Time the ItemSet was committed to Perforce"}),"\n",(0,n.jsx)(s.h3,{id:"createdby",children:"CreatedBy"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CreatedBy As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"User who created or imported this ItemSet; this should be a CCR Username"}),"\n",(0,n.jsx)(s.h3,{id:"createtimestamp",children:"CreateTimestamp"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CreateTimestamp As %TimeStamp [ InitialExpression = {$zdt($H,3)}, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Time the ItemSet was created"}),"\n",(0,n.jsx)(s.h3,{id:"deployed",children:"Deployed"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Deployed As %Integer(XMLPROJECTION = "NONE") [ InitialExpression = "0" ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Indicates the status of the deployment of this ItemSet"}),"\n",(0,n.jsx)(s.p,{children:"a value of 0 means that it has not been deployed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 1 means that it has been downloaded but not yet deployed"}),"\n",(0,n.jsx)(s.p,{children:"a value of 2 means that it has been deployed successfully"}),"\n",(0,n.jsx)(s.p,{children:"a value of 3 means that there has been an attempt to deploy but there was an error"}),"\n",(0,n.jsx)(s.p,{children:"a value of -1 means that it has been abandoned"}),"\n",(0,n.jsx)(s.h3,{id:"deployedtimestamp",children:"DeployedTimestamp"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DeployedTimestamp As %TimeStamp;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Time the ItemSet was deployed"}),"\n",(0,n.jsx)(s.h3,{id:"environment",children:"Environment"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Environment As %String(VALUELIST = ",BASE,TEST,UAT,LIVE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Environment for/from which this ItemSet was created"}),"\n",(0,n.jsx)(s.h3,{id:"exporttimestamp",children:"ExportTimestamp"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ExportTimestamp As %TimeStamp;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Time the ItemSet was exported"}),"\n",(0,n.jsx)(s.h3,{id:"importtimestamp",children:"ImportTimestamp"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ImportTimestamp As %TimeStamp;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Time the ItemSet was imported"}),"\n",(0,n.jsx)(s.h3,{id:"itemlist",children:"ItemList"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property ItemList As array Of %String(COLLATION = "EXACT");\n'})}),"\n",(0,n.jsx)(s.p,{children:"List of Items in this ItemSet, where the key is the item name, and the value is add/edit/delete/failed"}),"\n",(0,n.jsx)(s.h3,{id:"itemsetfile",children:"ItemSetFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property ItemSetFile As %String(MAXLEN = 200, XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Enables Fast lookup of all ItemSets containing a given Item Index to match items in the itemlist This is called item map because it maps items to the individual itemset When PL97361 is resolved for all supported client versions, the first subscript should be changed from %PL97361 to %%ID Location path and filename on local file system where exported XML for this ItemSet is stored"}),"\n",(0,n.jsx)(s.h3,{id:"itemsetfilename",children:"ItemSetFilename"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ItemSetFilename As %String [ Calculated, SqlComputeCode = {s {*}=##class(%File).GetFilename({ItemSetFile})}, SqlComputed ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"name of ItemSet file for this ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"filelabel",children:"FileLabel"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property FileLabel As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Additional identifying Label for the Payload filename"}),"\n",(0,n.jsx)(s.h3,{id:"job",children:"Job"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Job As %String [ Calculated, SqlComputeCode = {s {*}=$S(($$Sys^%buildccr="CCR")&&(\'($$IsLIVE^%buildccr)):"dev"_{CCR}_"-"_$piece($system,":"),1:{CCR}) }, SqlComputed ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Perforce Job that was exported in this ItemSet; or Job associated with this CCR on this Server"}),"\n",(0,n.jsx)(s.h3,{id:"log",children:"Log"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Log As %Stream.GlobalCharacter(XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Global stream storing the most recent Log for this system"}),"\n",(0,n.jsx)(s.h3,{id:"loghistory",children:"LogHistory"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property LogHistory As %Stream.GlobalCharacter(XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Global stream storing the cumulative logs for this ItemSet on this system"}),"\n",(0,n.jsx)(s.h3,{id:"name",children:"Name"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Name As %String(MAXLEN = 128);\n"})}),"\n",(0,n.jsx)(s.p,{children:"readable name of this ItemSet; used for file names and project name"}),"\n",(0,n.jsx)(s.h3,{id:"payload",children:"Payload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Payload As %FileCharacterStream(TRANSLATETABLE = "RAW");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Object forthe payload file for this ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"payloadfile",children:"PayloadFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property PayloadFile As %String(MAXLEN = 200, XMLPROJECTION = "NONE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Location on local file system where Payload for this ItemSet is stored"}),"\n",(0,n.jsx)(s.h3,{id:"payloadfilename",children:"PayloadFilename"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property PayloadFilename As %String [ Calculated, SqlComputeCode = {s {*}=##class(%File).GetFilename({PayloadFile})}, SqlComputed ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"name of Payload for this ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"serveritemsetid",children:"ServerItemSetID"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property ServerItemSetID As %Integer(XMLPROJECTION = "NONE") [ Calculated, SqlComputeCode = {s {*}=$P({Name},"_",*)}, SqlComputed ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Transient property to store the server-side ID for this ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"sessiontoken",children:"SessionToken"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property SessionToken As %String(XMLPROJECTION = "NONE") [ Calculated ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Transient property to store the session token to pull this ItemSet from the Server"}),"\n",(0,n.jsx)(s.h3,{id:"source",children:"Source"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Source As %String(MAXLEN = 100) [ InitialExpression = {$get(^SYS("SourceControl","ItemSetConfig","Source"),$zu(54,0))} ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Name of the server where this ItemSet was created"}),"\n",(0,n.jsx)(s.h3,{id:"system",children:"System"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property System As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"System for which this CCR was created"}),"\n",(0,n.jsx)(s.h3,{id:"target",children:"Target"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Target As %String(VALUELIST = ",Server,Client") [ Required ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"generic intended destination for this ItemSet"}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"getpathtranslation",children:"GetPathTranslation"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetPathTranslation(ByRef pRoot, ByRef pPath) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"the Utility CSPApplication, called '/itemsetsourcelink*' acts as a mechanism to 'tar' and 'untar' ItemSets for transport to/from Server/Client this makes sure that the CSP Application is defined for this namespace, and finds where it points on the file system"}),"\n",(0,n.jsx)(s.h3,{id:"namecvt",children:"NameCVT"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod NameCVT(ByRef pNameList = "", pValidate As %Boolean = 0, pDropLeadingSlash As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["takes an item name (or an array of names), and converts it from the file system representation to the csp application representation, or vice versa if pName includes a Perforce version identifier (e.g. ",(0,n.jsxs)(s.file,{children:["#",(0,n.jsx)(s.ver,{children:" ignore the version when validating the file's existence"})]})]}),"\n",(0,n.jsx)(s.p,{children:"When pValidate is '1', the method will confirm that the file exists."}),"\n",(0,n.jsx)(s.h3,{id:"findreplaceinfile",children:"FindReplaceInFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod FindReplaceInFile(pFind, pReplace, pFile, pExtensionRename = "", pLog As %Stream.Object = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"as cspapplication paths must be unique, if multiple namespaces on this instance need to send/receive ItemSets, then we may be using a secondary cspApp naming convention which is '/..#CSPAppLink/' When this is the case, this method exchanges the values in an XML file on disk to or from the standard (/..#CSPAppLink/) or local csp application name."}),"\n",(0,n.jsx)(s.h3,{id:"loadpayload",children:"LoadPayload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod LoadPayload(pPayloadFile, pQspec = "", ByRef pErrorlog, ByRef pLoadedlist, pListOnly = 0, ByRef pToLoad = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Method to load an unpacked itemset. This handles IRIS to Cache conversion"}),"\n",(0,n.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method Create(pItems = "", pJob = "", pCreatedBy = "", pLabel = "", pTarget = "Server", pCCR = "", pEnv = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Method to create a ItemSet and Payload file which can be passed to another system for import pItems is an array subscripted by the item name (full file name on file system), with a value of add/edit/delete"}),"\n",(0,n.jsx)(s.h3,{id:"export",children:"Export"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Export(pID = "", ByRef pItemSetFile) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Export the ItemSet to the file system"}),"\n",(0,n.jsx)(s.h3,{id:"exporttofile",children:"ExportToFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ExportToFile(ByRef pItemSetFile) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Export the ItemSet to the file system"}),"\n",(0,n.jsx)(s.h3,{id:"import",children:"Import"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Import(pItemSetFile, ByRef pObj As %Studio.SourceControl.ItemSet = "", pServerISID As %String, pToken As %String) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Import a ItemSet from the file system"}),"\n",(0,n.jsx)(s.h3,{id:"checkwritablestate",children:"CheckWritableState"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CheckWritableState(pList = "", ByRef pReadOnly, ByRef pReadWrite, ByRef pAbsent, ByRef pLog As %Stream.Object = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Given a list of files on the OS, returns a list of those that are Readonly, and a list of those that are writable"}),"\n",(0,n.jsx)(s.h3,{id:"changewritablestate",children:"ChangeWritableState"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ChangeWritableState(pList = "", pReadOnly As %Boolean = 0, ByRef pLog As %Stream.Object = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"method takes a file name, or an array of filenames, and changes the pReadonly state to the pReadOnly value"}),"\n",(0,n.jsx)(s.h3,{id:"loadtoos",children:"LoadToOS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method LoadToOS(pQspec As %String = {$get(^SYS("SourceControl","Misc","ImportFlags"),"kvfbryu")}, ByRef pErrorlog As %String, ByRef pLoadedlist As %String, ByRef pReadWrite As %String, pListonly As %Boolean = 0, pOverwrite As %Boolean = 0, pP4user = "", pP4pass = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Load the items in this ItemSet into the local file system If the file already exists and is ReadOnly, then it will be changed to ReadWrite, loaded to the OS, and then marked as ReadOnly again If the file exists and is ReadWrite, it will not be overwritten by the ItemSet load, unless pOverwrite is set to true"}),"\n",(0,n.jsx)(s.h3,{id:"loadtons",children:"LoadToNS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method LoadToNS(pQspec As %String = {$get(^SYS("SourceControl","Misc","ImportFlags"),"kvfbryu")}, pLoadedlist, pListonly As %Boolean = 0, pCompileProject As %Boolean = 0, ByRef pIncPercent As %String, ByRef pProjectName As %String) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Loads the files from the file system into the namespace; creates a project and (optionally) compiles the project"}),"\n",(0,n.jsx)(s.p,{children:"When pCompileProject=1, the project will be compiled after load is complete"}),"\n",(0,n.jsx)(s.p,{children:"When pCompileProject=2, the project will only be compiled after load if the ItemSet does not contain this class in it's payload (i.e. pIncPercent'=2)"}),"\n",(0,n.jsx)(s.h3,{id:"p4submititemset",children:"P4SubmitItemSet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method P4SubmitItemSet(pQspec As %String = "kvfbryu", ByRef pErrorlog As %String, ByRef pLoadedlist As %String, pP4user As %String = "", pP4pass As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Logic used on the server to submit contents of a ChangeList to Perforce"}),"\n",(0,n.jsx)(s.h3,{id:"p4revert",children:"P4Revert"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method P4Revert(SCs = "", changelist = "", perforceBranch = "", pP4user, pP4pass) As %Status\n'})}),"\n",(0,n.jsx)(s.h3,{id:"wslist",children:"WSList"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod WSList(pJob As %String = "", pEnv As %String = "", pToken As %String = "", ByRef pRS As %XML.DataSet) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper that calls List WebService to get a result-set listing ItemSets for a given pJob and pEnv"}),"\n",(0,n.jsx)(s.h3,{id:"wsdownload",children:"WSDownload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod WSDownload(pJob As %String = "", pEnv As %String = "", pToken As %String = "", pDir As %String = "", pISID As %String = "", ByRef pFilename As %String) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper that calls Download WebService to download an ItemSet XML for a given ID to the local filesystem"}),"\n",(0,n.jsx)(s.h3,{id:"wsconfirmload",children:"WSConfirmLoad"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod WSConfirmLoad(pISID As %String = "", pJob As %String = "", pEnv As %String = "", pToken As %String = "", pLoadStatus As %Status = "", ByRef pLog As %GlobalCharacterStream) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper that calls ConfirmLoad WebService to send back the results of an ItemSetLoad"}),"\n",(0,n.jsx)(s.h3,{id:"wsupload",children:"WSUpload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod WSUpload(pItemSetFile As %String = "", pCCR As %String = "", pToken As %String = "", pEmailRecipient As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper that calls Upload WebService to upload an ItemSet XML for a given ID to the ItemSet Server"}),"\n",(0,n.jsx)(s.h3,{id:"wscanupload",children:"WSCanUpload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod WSCanUpload(pCCR As %String, pOrg As %String, pSystem As %String, ByRef pReasonString As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(s.h3,{id:"wsdetails",children:"WSDetails"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod WSDetails(pCCR As %String, pToken As %String, Output pDataSet As %XML.DataSet) As %Status\n"})}),"\n",(0,n.jsx)(s.h3,{id:"validateccr",children:"ValidateCCR"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ValidateCCR(siteCode As %String, sysCode As %String, state As %String, Output reasonString) As %Boolean\n"})}),"\n",(0,n.jsx)(s.p,{children:"Method to validate a CCR for Upload given a CCR ID and Token"}),"\n",(0,n.jsx)(s.h3,{id:"download",children:"Download"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Download(pLoad As %Boolean = 1)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper method for interactively downloading list of ItemSets from server via Web Service, and then selecting and saving one to disk"}),"\n",(0,n.jsx)(s.h3,{id:"load",children:"Load"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Load(pInteractive As %Boolean = 1, pItemSetFile = "", pLoadToOS As %Boolean = "", pOverwrite As %Boolean = 0, pLoadToNS As %Boolean = "", pCompile As %Boolean = "", pQspec = {$get(^SYS("SourceControl","Misc","ImportFlags"),"kvfbryu")}, pP4user, pP4pass, ByRef pNewID As %String, pServerISID = "", pToken = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper method for importing, loading to file system (OS), loading to namespace and compiling ItemSet into this namespace Can be either interactive or scripted"}),"\n",(0,n.jsx)(s.h3,{id:"bundle",children:"Bundle"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Bundle(pInteractive As %Boolean = 1, pIncludeAllUncommitted As %Boolean = 0, pCCR = "", pCreatedBy, pPerformUpload = 1, pEmailRecipient = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper method for bundling pending changes, and added them to an ItemSet which can be uploaded to CCR for check-in Can be either interactive or scripted"}),"\n",(0,n.jsx)(s.h3,{id:"upload",children:"Upload"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Upload(pInteractive As %Boolean = 1, pCCR, pToken, pItemSetFile, pEmailRecipient = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Wrapper method for Uploading uncommitted changes to CCR for check-in Can be either interactive or scripted"}),"\n",(0,n.jsx)(s.h3,{id:"irislibreadonly",children:"IRISLIBReadOnly"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod IRISLIBReadOnly(mode = "") As %Boolean\n'})}),"\n",(0,n.jsx)(s.p,{children:"Utility method to change mount setting for IRISLIB; passing no mode argument will return the current status"}),"\n",(0,n.jsx)(s.h3,{id:"isvalidosprocessname",children:"IsValidOSProcessName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsValidOSProcessName(ByRef pCurrentProcess, ByRef pSServer) As %Boolean\n"})}),"\n",(0,n.jsx)(s.p,{children:"Utility method to check the OS username of the current process make sure for UNIX it matches the username that the Super Server is running as"}),"\n",(0,n.jsx)(s.h3,{id:"hasinstanceprimarynamespace",children:"HasInstancePrimaryNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod HasInstancePrimaryNamespace(Output namespace As %String) As %Boolean\n"})}),"\n",(0,n.jsx)(s.p,{children:"check for and return Instance Wide Primary Namespace if it is definted and exists"}),"\n",(0,n.jsx)(s.h3,{id:"setupproxyunauth",children:"SetUpProxyUnauth"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetUpProxyUnauth(ByRef ws As %SOAP.WebClient)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Proxy configuration for un-authenticated proxy connection"}),"\n",(0,n.jsx)(s.h3,{id:"serveritemsetcount",children:"ServerItemSetCount"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ServerItemSetCount(pCCR) As %Integer\n"})}),"\n",(0,n.jsx)(s.p,{children:"Returns the count of ItemSets destined for the Server"}),"\n",(0,n.jsx)(s.h3,{id:"displaylog",children:"DisplayLog"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DisplayLog(pID) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Displays the LogHistory of an ItemSet"}),"\n",(0,n.jsx)(s.h3,{id:"serveritemsetidset",children:"ServerItemSetIDSet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ServerItemSetIDSet(val) As %Status\n"})}),"\n",(0,n.jsx)(s.h3,{id:"serveritemsetidget",children:"ServerItemSetIDGet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ServerItemSetIDGet() As %String\n"})}),"\n",(0,n.jsx)(s.h3,{id:"sessiontokenset",children:"SessionTokenSet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SessionTokenSet(val) As %Status\n"})}),"\n",(0,n.jsx)(s.h3,{id:"sessiontokenget",children:"SessionTokenGet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SessionTokenGet() As %String\n"})}),"\n",(0,n.jsx)(s.h3,{id:"versionpostfix",children:"VersionPostfix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod VersionPostfix() As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Version string used to append to environment name when transmitting data to the CCR Server web services. Uses '@' as postfix piece separator and avoids use of \":\" which can be used to indicate a secondary postfix of EnvID"}),"\n",(0,n.jsx)(s.h3,{id:"logtoggle",children:"LogToggle"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method LogToggle(ByRef pIO = "")\n'})}),"\n",(0,n.jsx)(s.p,{children:"Logging instance method for this object; redirects IO to ..Log, and then saves it to ..LogHistory and saves the object when logging is turned off"}),"\n",(0,n.jsx)(s.h3,{id:"logtogglecore",children:"LogToggleCore"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod LogToggleCore(ByRef pIO = "", ByRef pLog As %Stream.Object)\n'})}),"\n",(0,n.jsx)(s.p,{children:"Logging class method; redirects IO to either a %Stream.GlobalCharacter or a %Stream.FileCharacter"}),"\n",(0,n.jsx)(s.h3,{id:"logtags",children:"LogTags"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LogTags() As %String [ ProcedureBlock = 0 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"holder method for output redirect tags; returns the name of the compiled routine where these tags exist [Previously private]"}),"\n",(0,n.jsx)(s.h3,{id:"ontoolscompile",children:"OnToolsCompile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OnToolsCompile() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Handles all compile-time logic for this class [Previously private]"}),"\n",(0,n.jsx)(s.h3,{id:"instanceversion",children:"InstanceVersion"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod InstanceVersion() As %Numeric [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Returns value the Major.Minor version for this instance, so it can be used in comparison code which makes sure certain features are used in appropriate versions"}),"\n",(0,n.jsx)(s.h3,{id:"buildnewindexes",children:"BuildNewIndexes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BuildNewIndexes() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Check indexes defined in this class build them if they have never been built. Any errors are thrown as an exception."}),"\n",(0,n.jsx)(s.h3,{id:"onaddtosaveset",children:"%OnAddToSaveSet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAddToSaveSet(depth As %Integer = 3, insert As %Integer = 0, callcount As %Integer = 0) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback method is invoked when the current object is added to the SaveSet, either because %Save() was invoked on this object or on an object that references this object. %OnAddToSaveSet can modify the current object. It can also add other objects to the current SaveSet by invoking %AddToSaveSet or remove objects by calling %RemoveFromSaveSet."}),"\n",(0,n.jsx)(s.p,{children:"If this method returns an error status then %Save() will fail and the transaction will be rolled back."})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>r});var n=t(96540);const a={},i=n.createContext(a);function l(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);