"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[18284],{75952:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>c,default:()=>o,frontMatter:()=>l,toc:()=>t});var n=r(74848),i=r(28453);const l={pagination_prev:null,pagination_next:null},c="SYS.History.SystemUsage",t=[{value:"Properties",id:"properties",level:2},{value:"Processes",id:"processes",level:3},{value:"CSPSession",id:"cspsession",level:3},{value:"LicUsedLocal",id:"licusedlocal",level:3},{value:"LicUsedDist",id:"licuseddist",level:3},{value:"CPUKernel",id:"cpukernel",level:3},{value:"CPUUser",id:"cpuuser",level:3},{value:"CPUIdle",id:"cpuidle",level:3},{value:"CPUIOwait",id:"cpuiowait",level:3},{value:"JrnFiles",id:"jrnfiles",level:3},{value:"JrnSize",id:"jrnsize",level:3},{value:"ECPResponse",id:"ecpresponse",level:3},{value:"AppErrors",id:"apperrors",level:3},{value:"Alerts",id:"alerts",level:3},{value:"GlobalBuffers",id:"globalbuffers",level:3},{value:"Methods",id:"methods",level:2},{value:"PropList",id:"proplist",level:3},{value:"SetSummary",id:"setsummary",level:3}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"syshistorysystemusage",children:"SYS.History.SystemUsage"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class SYS.History.SystemUsage Extends %SerialObject [ System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"A list of System Usage properties for the SysData interval collection class."}),"\n",(0,n.jsxs)(s.p,{children:["For details, see ",(0,n.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+SYS.History.SystemUsage",children:"History Monitor"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"processes",children:"Processes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Processes As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Process count"}),"\n",(0,n.jsx)(s.h3,{id:"cspsession",children:"CSPSession"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CSPSession As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Count of CSP Sessions"}),"\n",(0,n.jsx)(s.h3,{id:"licusedlocal",children:"LicUsedLocal"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property LicUsedLocal As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"License count currently used (local)"}),"\n",(0,n.jsx)(s.h3,{id:"licuseddist",children:"LicUsedDist"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property LicUsedDist As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"License count currently used (distributed)"}),"\n",(0,n.jsx)(s.h3,{id:"cpukernel",children:"CPUKernel"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CPUKernel As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Percentage of system CPU(s) time in kernel mode."}),"\n",(0,n.jsx)(s.h3,{id:"cpuuser",children:"CPUUser"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CPUUser As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Percentage of system CPU(s) time in user mode."}),"\n",(0,n.jsx)(s.h3,{id:"cpuidle",children:"CPUIdle"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CPUIdle As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Percentage of system CPU(s) time idle."}),"\n",(0,n.jsx)(s.h3,{id:"cpuiowait",children:"CPUIOwait"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CPUIOwait As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Percentage of system CPU(s) time in io_wait mode."}),"\n",(0,n.jsx)(s.h3,{id:"jrnfiles",children:"JrnFiles"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property JrnFiles As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Number of Journal files"}),"\n",(0,n.jsx)(s.h3,{id:"jrnsize",children:"JrnSize"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property JrnSize As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Total size of Journal files (in MB)"}),"\n",(0,n.jsx)(s.h3,{id:"ecpresponse",children:"ECPResponse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ECPResponse As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"ECP Response time"}),"\n",(0,n.jsx)(s.h3,{id:"apperrors",children:"AppErrors"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AppErrors As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Application error count, taken from %Monitor.System.Dashboard2 class"}),"\n",(0,n.jsx)(s.h3,{id:"alerts",children:"Alerts"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Alerts As %Numeric;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Serious alert count, taken from %Monitor.System.Dashboard1 class"}),"\n",(0,n.jsx)(s.h3,{id:"globalbuffers",children:"GlobalBuffers"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property GlobalBuffers As %List;\n"})}),"\n",(0,n.jsx)(s.p,{children:"A list of the top 10 globals in the buffer pool. Each entry in the list is GlobalName,Database,Percent."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"proplist",children:"PropList"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PropList() As %String [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Fetch a list of detail properties for this class for Hourly and Daily summaries"}),"\n",(0,n.jsx)(s.h3,{id:"setsummary",children:"SetSummary"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetSummary(ByRef Function As %String, Period As %String) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:'Configure the summary methods for this class for either the Hourly or Daily summaries. This is a comma-delimited list of functions to use for the summary. The available functions are Average, Maximum (high-water mark), Minimum (lowest value), Standard Deviation, Median, and Total. These are abbreviated in the \'Function\' argument as "Avg", "Max", "Min", StDev", Med", and "Tot". If nothing is specified, the default is "Avg,Max,StDev". You may also specify the string "None" for a summary period to disable that summary.'}),"\n",(0,n.jsx)(s.p,{children:"A null 'Function' argument will return the current summary setting in the 'Function' variable."}),"\n",(0,n.jsx)(s.p,{children:'The \'Period\' argument can be either "Hourly" or "Daily".'})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>t});var n=r(96540);const i={},l=n.createContext(i);function c(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);