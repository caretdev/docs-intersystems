"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[1143],{70034:(e,l,a)=>{a.r(l),a.d(l,{contentTitle:()=>t,default:()=>o,frontMatter:()=>n,toc:()=>r});var s=a(74848),i=a(28453);const n={pagination_prev:null,pagination_next:null},t="%ZEN.Report.Display.Chart.axis",r=[{value:"Properties",id:"properties",level:2},{value:"minValue",id:"minvalue",level:3},{value:"maxValue",id:"maxvalue",level:3},{value:"minValueDisplacement",id:"minvaluedisplacement",level:3},{value:"maxValueDisplacement",id:"maxvaluedisplacement",level:3},{value:"title",id:"title",level:3},{value:"baseValue",id:"basevalue",level:3},{value:"majorUnits",id:"majorunits",level:3},{value:"minorUnits",id:"minorunits",level:3},{value:"labelUnits",id:"labelunits",level:3},{value:"labelAngle",id:"labelangle",level:3},{value:"majorGridLines",id:"majorgridlines",level:3},{value:"minorGridLines",id:"minorgridlines",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"textAnchor",id:"textanchor",level:3},{value:"labelValues",id:"labelvalues",level:3},{value:"labelGroup",id:"labelgroup",level:3},{value:"labelValue",id:"labelvalue",level:3},{value:"majorGridStyle",id:"majorgridstyle",level:3},{value:"minorGridStyle",id:"minorgridstyle",level:3},{value:"labelDisplacement",id:"labeldisplacement",level:3}];function c(e){const l={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.header,{children:(0,s.jsx)(l.h1,{id:"zenreportdisplaychartaxis",children:"%ZEN.Report.Display.Chart.axis"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.Chart.axis Extends %ZEN.Report.Display.node [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Base class for xaxis and yaxis."}),"\n",(0,s.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(l.h3,{id:"minvalue",children:"minValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property minValue As %ZEN.Datatype.float;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Minimum value along this axis.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the value will be automatically calculated.']}),"\n",(0,s.jsx)(l.h3,{id:"maxvalue",children:"maxValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property maxValue As %ZEN.Datatype.float;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Maximum value along this axis.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the value will be automatically calculated.']}),"\n",(0,s.jsx)(l.h3,{id:"minvaluedisplacement",children:"minValueDisplacement"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property minValueDisplacement As %ZEN.Datatype.float;\n"})}),"\n",(0,s.jsx)(l.p,{children:"When minValue is automatically calculated this displacement is added to minValue"}),"\n",(0,s.jsx)(l.h3,{id:"maxvaluedisplacement",children:"maxValueDisplacement"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property maxValueDisplacement As %ZEN.Datatype.float;\n"})}),"\n",(0,s.jsx)(l.p,{children:"When minValue is automatically calculated this displacement is added to minValue"}),"\n",(0,s.jsx)(l.h3,{id:"title",children:"title"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property title As %ZEN.Datatype.caption;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional title to display along this axis."}),"\n",(0,s.jsx)(l.h3,{id:"basevalue",children:"baseValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property baseValue As %ZEN.Datatype.float;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Base value for this axis. For charts with filled regions (such as bar or area plots), this specifies where the base of the filled region should be plotted.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the base value will be the bottom of the plot area.']}),"\n",(0,s.jsx)(l.h3,{id:"majorunits",children:"majorUnits"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property majorUnits As %ZEN.Datatype.float(MINVAL = 0);\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Major units along this axis. This specifies how major gridlines will be spaced along this axis.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the value will be automatically calculated.']}),"\n",(0,s.jsx)(l.h3,{id:"minorunits",children:"minorUnits"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property minorUnits As %ZEN.Datatype.float(MINVAL = 0);\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Minor units along this axis. This specifies how minor gridlines will be spaced along this axis.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the value will be automatically calculated.']}),"\n",(0,s.jsx)(l.h3,{id:"labelunits",children:"labelUnits"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelUnits As %ZEN.Datatype.float(MINVAL = 0);\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Label units along this axis. This specifies how labels will be spaced along this axis.",(0,s.jsx)(l.br,{}),'\nIf this is missing (""), then the value will be automatically calculated.']}),"\n",(0,s.jsx)(l.h3,{id:"labelangle",children:"labelAngle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelAngle As %ZEN.Datatype.float [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Number of degrees that labels for this axis should be rotated."}),"\n",(0,s.jsx)(l.h3,{id:"majorgridlines",children:"majorGridLines"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property majorGridLines As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Specifies whether gridlines should be displayed for each major unit."}),"\n",(0,s.jsx)(l.h3,{id:"minorgridlines",children:"minorGridLines"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property minorGridLines As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Specifies whether gridlines should be displayed for each minor unit."}),"\n",(0,s.jsx)(l.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: style used for labels along this axis."}),"\n",(0,s.jsx)(l.h3,{id:"textanchor",children:"textAnchor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property textAnchor As %ZEN.Datatype.string [ InitialExpression = "middle" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"textAnchor value"}),"\n",(0,s.jsx)(l.h3,{id:"labelvalues",children:"labelValues"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelValues As %ZEN.Datatype.csv;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: comma-delimited list of label values of category axes. If left blank, the category number is used."}),"\n",(0,s.jsx)(l.h3,{id:"labelgroup",children:"labelGroup"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelGroup As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: Group used to get label values of category axes. If left blank, the category number is used."}),"\n",(0,s.jsx)(l.h3,{id:"labelvalue",children:"labelValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelValue As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: Value used to get label values of category axes from Group. If left blank, the category number is used."}),"\n",(0,s.jsx)(l.h3,{id:"majorgridstyle",children:"majorGridStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property majorGridStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: style used for major grid lines along this axis."}),"\n",(0,s.jsx)(l.h3,{id:"minorgridstyle",children:"minorGridStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property minorGridStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional: style used for minor grid lines along this axis."}),"\n",(0,s.jsx)(l.h3,{id:"labeldisplacement",children:"labelDisplacement"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property labelDisplacement As %ZEN.Datatype.float [ InitialExpression = 0 ];\n"})})]})}function o(e={}){const{wrapper:l}={...(0,i.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,l,a)=>{a.d(l,{R:()=>t,x:()=>r});var s=a(96540);const i={},n=s.createContext(i);function t(e){const l=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(n.Provider,{value:l},e.children)}}}]);