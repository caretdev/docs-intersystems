"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[53414],{69338:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>a,frontMatter:()=>o,toc:()=>c});var s=t(74848),r=t(28453);const o={pagination_prev:null,pagination_next:null},i="%Library.ExtentSQLQuery",c=[{value:"Methods",id:"methods",level:2},{value:"Close",id:"close",level:3},{value:"Execute",id:"execute",level:3},{value:"FetchRows",id:"fetchrows",level:3},{value:"Fetch",id:"fetch",level:3},{value:"GetInfo",id:"getinfo",level:3},{value:"Func",id:"func",level:3},{value:"GetODBCInfo",id:"getodbcinfo",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"libraryextentsqlquery",children:"%Library.ExtentSQLQuery"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Library.ExtentSQLQuery Extends %SQLQuery [ Not ProcedureBlock, System = 2 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:'This class is used to implement the system-provided "Extent" query that every persistent class contains. This class is not for application use.'}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"close",children:"Close"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Close(%qHandle As %Binary) As %Status [ CodeMode = generator, ProcedureBlock = 1, PublicList = SQLCODE, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Close the query associated with the handle. This is also an opportunity to clean up."}),"\n",(0,s.jsx)(n.h3,{id:"execute",children:"Execute"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Execute(ByRef %qHandle As %Binary) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute is passed parameters for Query Returns handle for subsequent operations"}),"\n",(0,s.jsx)(n.h3,{id:"fetchrows",children:"FetchRows"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod FetchRows(ByRef %qHandle As %Binary, FetchCount As %Integer = 0, ByRef RowSet As %List, ByRef ReturnCount As %Integer, ByRef AtEnd As %Integer) As %Status [ CodeMode = generator, PlaceAfter = Execute, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:'FetchRows returns the next FetchCount rows in the query Updates handle for subsequent operations Returns $list for row or "" if no more rows'}),"\n",(0,s.jsx)(n.h3,{id:"fetch",children:"Fetch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Fetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ CodeMode = generator, PlaceAfter = Execute, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getinfo",children:"GetInfo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetInfo(ByRef colinfo As %List, ByRef parminfo As %List, ByRef idinfo As %List, ByRef %qHandle As %Binary, extoption As %Integer = 0, extinfo As %List) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"GetInfo() returns information about columns in the query result, parameters in the query formal list, and whether or not the result contains enough information to form an ID value. This information is return in three pass-by-reference parmeters: colinfo - contains one list element for each column declared in ROWSPEC. The form is name:exttype:caption parminfo - contains one list element for each formal paramter of the query in the form name:exttype idinfo - Integer indicating the posistion of the ID value, zero if not included. The information is not constructed until the first invocation of GetInfo(). Once the information is compiled the first time, it is stored in the ^oddMAC global and is retrieved on subsequent calls to GetInfo()"}),"\n",(0,s.jsx)(n.h3,{id:"func",children:"Func"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Func() As %SQL.StatementResult [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Func is a method that is used to invoke the query as a function, returning an instance of %SQL.StatementResult."}),"\n",(0,s.jsx)(n.h3,{id:"getodbcinfo",children:"GetODBCInfo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetODBCInfo(ByRef colinfo As %List, ByRef parminfo As %List, ByRef qHandle As %Binary) [ CodeMode = generator, ServerOnly = 1 ]\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);