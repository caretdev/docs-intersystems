"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[80212],{29984:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>n,default:()=>o,frontMatter:()=>i,toc:()=>l});var s=a(74848),r=a(28453);const i={pagination_prev:null,pagination_next:null},n="%Stream.FileCharacter",l=[{value:"Parameters",id:"parameters",level:2},{value:"OPENREAD",id:"openread",level:3},{value:"OPENWRITE",id:"openwrite",level:3},{value:"OPENAPPEND",id:"openappend",level:3},{value:"OPENREADTERM",id:"openreadterm",level:3},{value:"Properties",id:"properties",level:2},{value:"StreamFormatWrite",id:"streamformatwrite",level:3},{value:"TranslateTable",id:"translatetable",level:3},{value:"OidTranslateTable",id:"oidtranslatetable",level:3},{value:"BOM",id:"bom",level:3},{value:"Methods",id:"methods",level:2},{value:"%Oid",id:"oid",level:3},{value:"TranslateTableSet",id:"translatetableset",level:3},{value:"IsFileUnicode",id:"isfileunicode",level:3},{value:"OpenDevice",id:"opendevice",level:3},{value:"GetWriteOpenParameter",id:"getwriteopenparameter",level:3},{value:"SizeGet",id:"sizeget",level:3},{value:"%ObjectModified",id:"objectmodified",level:3},{value:"%IsModified",id:"ismodified",level:3}];function c(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"streamfilecharacter",children:"%Stream.FileCharacter"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Stream.FileCharacter Extends %Stream.FileBinary [ ClientDataType = CHARACTERSTREAM, MemberSuper = (%Compiler.Type.FileStream, %Compiler.Type.Stream), OdbcType = LONGVARCHAR, System = 2 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"For information on this class"}),", see ",(0,s.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25Stream.FileCharacter",children:"Working with Streams"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Stream class that stores character data in files. For example, the following code opens a file binary stream, points it at a particular file on the filesystem, and then reads it in chunks of 32,000 bytes: ",(0,s.jsx)(t.code,{children:'Set stream=##class(%Stream.FileCharacter).%New() Set sc=stream.LinkToFile("c:\\myfile.txt") While \'stream.AtEnd { Set line=stream.Read() ; Process the chunk here }'})," The difference between file character stream and file binary streams is that the character stream understands that it is writing character data and this may be subject to characterset translation. For example you may wish to utf-8 encode character data being written to the file, but with a binary file stream it is just a series of binary data and so this is always read/written exactly as it is without and translation. Also the file is written in 'S' mode so for example writing cr/lf on a unix system will just append lf as this is the unix line terminator."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"openread",children:"OPENREAD"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter OPENREAD = "RU";\n'})}),"\n",(0,s.jsx)(t.h3,{id:"openwrite",children:"OPENWRITE"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter OPENWRITE = "WSN";\n'})}),"\n",(0,s.jsx)(t.h3,{id:"openappend",children:"OPENAPPEND"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter OPENAPPEND = "AWS";\n'})}),"\n",(0,s.jsx)(t.h3,{id:"openreadterm",children:"OPENREADTERM"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter OPENREADTERM = "RS";\n'})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"streamformatwrite",children:"StreamFormatWrite"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property StreamFormatWrite As %Boolean [ InitialExpression = 1, Transient ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"The StreamFormatWrite property controls whether file output is in stream or undefined format. If StreamFormatWrite is 1 (true), the default, the file is written in S (stream) format. If StreamFormatWrite is 0 (false), the file is written in U (Undefined) format. For Unix file output, S format converts crlf to lf which can be a problem for MIME output such as email. The user can now set messagepart.TextData.StreamFormatWrite=0 to keep crlf in text message parts of the mail message."}),"\n",(0,s.jsx)(t.h3,{id:"translatetable",children:"TranslateTable"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property TranslateTable As %String [ InitialExpression = "0", Transient ];\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The translation table to be used when reading or writing the file. See ",(0,s.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=LANDING+TRANSLATETABLES",children:"Translation Tables"}),".",(0,s.jsx)(t.br,{}),"\nInitial value of 0 indicates that the table has not yet been set.",(0,s.jsx)(t.br,{}),'\nIf the translation table is set after the file has been opened then switch the table used for the file. If the translation table is set to "", then the "RAW" table is used.']}),"\n",(0,s.jsx)(t.h3,{id:"oidtranslatetable",children:"OidTranslateTable"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property OidTranslateTable As %String [ InitialExpression = 0, Internal, Private, Transient ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Used to create the oid, only defined if user has explicitly set this"}),"\n",(0,s.jsx)(t.h3,{id:"bom",children:"BOM"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property BOM As %String [ Transient ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"BOM characters that appear at start of file to signify which encoding it is using"}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"oid",children:"%Oid"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Oid() As %ObjectIdentity\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the OID of this object."}),"\n",(0,s.jsx)(t.h3,{id:"translatetableset",children:"TranslateTableSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method TranslateTableSet(table As %String) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:'If translation table is set after the file has been opened then switch the table used for the file. If the translation table is set to "", then the "RAW" table is used.'}),"\n",(0,s.jsx)(t.h3,{id:"isfileunicode",children:"IsFileUnicode"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsFileUnicode() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns true if the file is Unicode. This method may only be called after data has been read from the file stream."}),"\n",(0,s.jsx)(t.h3,{id:"opendevice",children:"OpenDevice"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method OpenDevice(filename As %String, mode As %Integer, nocheck As %Boolean = 0) As %Status [ Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getwriteopenparameter",children:"GetWriteOpenParameter"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetWriteOpenParameter(filename As %String, mode As %Integer) As %String [ Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"sizeget",children:"SizeGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SizeGet() As %Integer\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the current size of the data stream. Note this is complicated by having to worry about the translate table used to write the file."}),"\n",(0,s.jsx)(t.h3,{id:"objectmodified",children:"%ObjectModified"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ObjectModified() As %Integer [ ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"ismodified",children:"%IsModified"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %IsModified() As %Integer\n"})})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>l});var s=a(96540);const r={},i=s.createContext(r);function n(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);