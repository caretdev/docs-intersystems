"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[64386],{86628:(e,r,s)=>{s.r(r),s.d(r,{contentTitle:()=>l,default:()=>$,frontMatter:()=>a,toc:()=>i});var t=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},l="%Library.Prompt",i=[{value:"Methods",id:"methods",level:2},{value:"GetNumber",id:"getnumber",level:3},{value:"GetMenu",id:"getmenu",level:3},{value:"GetArray",id:"getarray",level:3},{value:"GetString",id:"getstring",level:3},{value:"GetYesNo",id:"getyesno",level:3},{value:"GetMore",id:"getmore",level:3},{value:"EditFields",id:"editfields",level:3}];function o(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"libraryprompt",children:"%Library.Prompt"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Class %Library.Prompt Extends %SYSTEM.Help [ Abstract, System = 4 ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Handles prompting for chui applications."}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"getnumber",children:"GetNumber"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod GetNumber(Prompt As %String, ByRef Value As %Integer, Min As %Integer, Max As %Integer, ByRef Help As %String, Flag As %Integer = 0, Timeout As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for a number."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nValue - Default value",(0,t.jsx)(r.br,{}),"\nMin - Minimum value allowed",(0,t.jsx)(r.br,{}),"\nMax - Maximum value allowed",(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpContextResponse - Disable entry of the help context character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\n- $$$AllowNullMask - Allow null entry TimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpContextResponse - Help context character entered if $$$DisableHelpContextCharMask set",(0,t.jsx)(r.br,{}),"\nValue - Entered number"]}),"\n",(0,t.jsx)(r.h3,{id:"getmenu",children:"GetMenu"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod GetMenu(Prompt As %String, ByRef Value As %Integer, ByRef List As %String, ByRef Help As %String, Flag As %Integer = 0, Timeout As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for a number in a displayed menu."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nValue - Default value",(0,t.jsx)(r.br,{}),"\nList - Array of menu items. This should be in one of the following two forms:",(0,t.jsx)(r.br,{}),'\nList(1)="Option 1"',(0,t.jsx)(r.br,{}),'\nList(2)="Option 2"',(0,t.jsx)(r.br,{}),'\nList(n)="Option n"']}),"\n",(0,t.jsxs)(r.p,{children:["or",(0,t.jsx)(r.br,{}),"\n$lb(QueryName,ExecuteParam1,ExecuteParam2,ExecuteParamN)",(0,t.jsx)(r.br,{}),'\nFor example: $lb("SYS.Database:List","*")',(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpContextCharMask - Disable entry of the help context character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\n- $$$InitialDisplayMask - Display the menu when initially called",(0,t.jsx)(r.br,{}),"\nTimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpContextResponse - Help context character entered if $$$DisableHelpContextCharMask set",(0,t.jsx)(r.br,{}),"\nValue - Entered number"]}),"\n",(0,t.jsx)(r.h3,{id:"getarray",children:"GetArray"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod GetArray(Prompt As %String, ByRef Value As %String, ByRef List As %String, MinLen As %Integer, MaxLen As %Integer, ByRef Help As %String, Flag As %Integer = 0, Timeout As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for a number or entry in a displayed menu. Returns the selected item."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nValue - Default value",(0,t.jsx)(r.br,{}),"\nList - Array of menu items. This should be in one of the following two forms:",(0,t.jsx)(r.br,{}),'\nList(1)="Option 1"',(0,t.jsx)(r.br,{}),'\nList(2)="Option 2"',(0,t.jsx)(r.br,{}),'\nList(n)="Option n"',(0,t.jsx)(r.br,{}),"\nIf List(n,0) exist then the help (? entered) will display List(n)_List(n,0)."]}),"\n",(0,t.jsxs)(r.p,{children:["or",(0,t.jsx)(r.br,{}),"\n$lb(QueryName,ExecuteParam1,ExecuteParam2,ExecuteParamN)",(0,t.jsx)(r.br,{}),'\nFor example: $lb("SYS.Database:List","*")',(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpContextCharMask - Disable entry of the help context character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\n- $$$InitialDisplayMask - Display the menu when initially called",(0,t.jsx)(r.br,{}),"\n- $$$AllowNullMask - Allow null entry",(0,t.jsx)(r.br,{}),"\n- $$$EnableMultipleSelectionMask - Allow comma delimited numeric entry, ranges, and * for all",(0,t.jsx)(r.br,{}),"\n- $$$MatchExactArrayMask - Only entries from the the array of options are allowed, case sensitive",(0,t.jsx)(r.br,{}),"\n- $$$MatchArrayMask - Only entries from the array of options are allowed, not case sensitive",(0,t.jsx)(r.br,{}),"\nTimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpContextResponse - Help character entered if $$$DisableHelpContextCharMask set",(0,t.jsx)(r.br,{}),"\nValue - Value of selected item; or if the $$$EnableMultipleSelectionMask flag is used, a list of selected items in $listbuild format.",(0,t.jsx)(r.br,{}),"\nIf the size of the selected set exceeds the maximum local variable string size either an error will be thrown or if $$$TrapErrorMask is specified, an error will be returned"]}),"\n",(0,t.jsx)(r.h3,{id:"getstring",children:"GetString"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod GetString(Prompt As %String, ByRef Value As %String, MinLen As %Integer, MaxLen As %Integer, ByRef Help As %String, Flag As %Integer = 0, Timeout As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for a String."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nValue - Default value",(0,t.jsx)(r.br,{}),"\nMin - Minimum length of string allowed",(0,t.jsx)(r.br,{}),"\nMax - Maximum length of string allowed",(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpContextCharMask - Disable entry of the help context character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\nTimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpContextResponse - Help character entered if $$$DisableHelpContextCharMask set",(0,t.jsx)(r.br,{}),"\nValue - Entered String"]}),"\n",(0,t.jsx)(r.h3,{id:"getyesno",children:"GetYesNo"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod GetYesNo(Prompt As %String, ByRef Value As %Integer, ByRef Help As %String, Flag As %Integer = 0, Timeout As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for a Yes/No answer."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nValue - Default value 0=No, 1=Yes",(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\nTimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\nValue - 0=No, 1=Yes"]}),"\n",(0,t.jsx)(r.h3,{id:"getmore",children:"GetMore"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:'ClassMethod GetMore(Prompt As %String = "-more-", ByRef Help As %String, Flag As %Integer = {$$$EnableQuitCharMask}, Timeout As %Integer = 0) As %Integer\n'})}),"\n",(0,t.jsx)(r.p,{children:"Prompt for More or Quit."}),"\n",(0,t.jsxs)(r.p,{children:["Input Parameters:",(0,t.jsx)(r.br,{}),"\nPrompt - Prompt to be displayed",(0,t.jsx)(r.br,{}),"\nHelp - Array of help text",(0,t.jsx)(r.br,{}),"\nFlag - From %syPrompt.inc",(0,t.jsx)(r.br,{}),"\n- $$$DisableBackupCharMask - Disable entry of the backup character",(0,t.jsx)(r.br,{}),"\n- $$$TrapCtrlCMask - Trap CTRL/C and return CTRL/C status",(0,t.jsx)(r.br,{}),"\n- $$$EnableQuitCharMask - Enable quit and return Quit status",(0,t.jsx)(r.br,{}),"\n- $$$DisableHelpCharMask - Disable entry of the help character",(0,t.jsx)(r.br,{}),"\n- $$$TrapErrorMask - Trap errors and return error status",(0,t.jsx)(r.br,{}),"\nTimeOut - Timeout for prompt"]}),"\n",(0,t.jsxs)(r.p,{children:["Output parameters:",(0,t.jsx)(r.br,{}),"\nStatus - One of the following from %syPrompt:",(0,t.jsx)(r.br,{}),"\n$$$SuccessResponse - Successful entry, Value contains valid open device",(0,t.jsx)(r.br,{}),"\n$$$BackupResponse - Backup character entered",(0,t.jsx)(r.br,{}),"\n$$$QuitResponse - Quit character entered if $$$EnableQuitCharMask set",(0,t.jsx)(r.br,{}),"\n$$$CtrlCResponse - CTRL/C entered if $$$TrapCtrlCMask set",(0,t.jsx)(r.br,{}),"\n$$$ErrorResponse - Error during entry if $$$TrapErrorMask set",(0,t.jsx)(r.br,{}),"\n$$$HelpResponse - Help character entered if $$$DisableHelpCharMask set",(0,t.jsx)(r.br,{}),"\nValue - Entered number"]}),"\n",(0,t.jsx)(r.h3,{id:"editfields",children:"EditFields"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod EditFields(Obj, New) [ Internal ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Edits an objects properties."})]})}function $(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>i});var t=s(96540);const n={},a=t.createContext(n);function l(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);