"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[80009],{91470:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>c,default:()=>o,frontMatter:()=>r,toc:()=>i});var a=t(74848),n=t(28453);const r={pagination_prev:null,pagination_next:null},c="%UnitTest.SQLDataRegression",i=[{value:"Parameters",id:"parameters",level:2},{value:"CORRELATIONLIST",id:"correlationlist",level:3},{value:"DATACLASS",id:"dataclass",level:3},{value:"DATAFILE",id:"datafile",level:3},{value:"DATATAG",id:"datatag",level:3},{value:"Methods",id:"methods",level:2},{value:"reloadDATA",id:"reloaddata",level:3},{value:"OnBeforeEachTest",id:"onbeforeeachtest",level:3}];function l(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",person:"person",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"unittestsqldataregression",children:"%UnitTest.SQLDataRegression"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %UnitTest.SQLDataRegression Extends %UnitTest.SQLRegression [ System = 4 ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Extend this class to create a regression test when .data files are used to load data into tables."}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"correlationlist",children:"CORRELATIONLIST"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter CORRELATIONLIST As STRING;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["List that correlates XML tags in a data file with classes. Tag/class entries are in the form ",(0,a.jsx)(s.em,{children:"tag:class, tag1:class1, tag2:class2"}),". Each entry is like setting the DATATAG and DATACLASS parameters, but the CORRELATIONLIST sets several tag/class pairs in one parameter. If CORRELATIONLIST, DATACLASS, and DATATAG are all specified, the DATATAG and DATACLASS pair are added to the end of the CORRELATIONLIST."]}),"\n",(0,a.jsx)(s.h3,{id:"dataclass",children:"DATACLASS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DATACLASS As STRING;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Specifies a class, such as ",(0,a.jsx)(s.strong,{children:"Sample.Person"}),", which should be correlated with the XML tag specified by DATATAG, such as ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.person,{})}),", in the DATAFILE."]}),"\n",(0,a.jsxs)(s.p,{children:["Sample.Person is part of ",(0,a.jsx)(s.a,{href:"https://github.com/intersystems/Samples-Data",children:"https://github.com/intersystems/Samples-Data."})," See ",(0,a.jsx)(s.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=landing+githubsamples",children:"Downloading Samples"}),"."]}),"\n",(0,a.jsx)(s.h3,{id:"datafile",children:"DATAFILE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DATAFILE As STRING;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["File that contains data in XML format, such as ",(0,a.jsx)(s.strong,{children:"Person.data"}),". If no directory name is specified by ",(0,a.jsx)(s.strong,{children:"RunTest"}),", then the current ",(0,a.jsx)(s.strong,{children:"UnitTest"})," directory is used."]}),"\n",(0,a.jsx)(s.h3,{id:"datatag",children:"DATATAG"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DATATAG As STRING;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Specifies an XML tag in DATAFILE, such as ",(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.person,{})}),", which should be correlated to the class specified by DATACLASS, such as ",(0,a.jsx)(s.strong,{children:"Sample.Person"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"reloaddata",children:"reloadDATA"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method reloadDATA() As %Status [ CodeMode = generator ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Method that handles the reloading of data from the DATAFILE for each Test method in SQLRegression"}),"\n",(0,a.jsx)(s.h3,{id:"onbeforeeachtest",children:"OnBeforeEachTest"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method OnBeforeEachTest() As %Status\n"})})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>i});var a=t(96540);const n={},r=a.createContext(n);function c(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);