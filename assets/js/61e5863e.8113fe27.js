"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[26496],{28382:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>a,frontMatter:()=>s,toc:()=>c});var i=t(74848),r=t(28453);const s={pagination_prev:null,pagination_next:null},l="%iKnow.Filters.SimpleMatchFilter",c=[];function o(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"iknowfilterssimplematchfilter",children:"%iKnow.Filters.SimpleMatchFilter"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Class %iKnow.Filters.SimpleMatchFilter Extends %iKnow.Filters.DictionaryMatchFilter [ Deprecated, System = 4 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"NOTE: This class is deprecated; use %iKnow.Filters.DictionaryMatchFilter instead"}),"\n",(0,i.jsx)(n.p,{children:"%iKnow.Filters.Filter implementation selecting sources based on whether they contain a minimum and/or maximum number or total score of dictionary matches."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"NOTE:"})," by default, this filter only uses existing match results and will only ensure all sources are fully matched when the ensureMatched parameter is enabled!"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Filter parameters"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"domainId"})," As %Integer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dictIds"})," As %List - target dictionaries (ORed together)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"min"})," As %Numeric (default 1) - minimum count or total score (-1 = no minimum)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"max"})," As %Numeric (default -1) - maximum count or total score (-1 = no maximum)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"metric"}),' As %String (["COUNT"|"SCORE"], default "COUNT") - whether to take the number of matches (default) or their aggregated score.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ensureMatched"})," As %Integer - controls whether or not all sources in the domain are matched through an explicit call to MatchingAPI.MatchSources() as follows:\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0 - no explicit matching, use current matching results (default)"}),"\n",(0,i.jsx)(n.li,{children:"1 - match before every invocation of the filter (warning: significant performance impact!)"}),"\n",(0,i.jsx)(n.li,{children:"2 - match once when the filter is instantiated"}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);