"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[62247],{7944:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>o,frontMatter:()=>a,toc:()=>l});var r=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},i="%Library.IResultSet",l=[{value:"Parameters",id:"parameters",level:2},{value:"COLUMNCOUNT;",id:"columncount",level:3},{value:"Properties",id:"properties",level:2},{value:"%Message",id:"message",level:3},{value:"%Metadata",id:"metadata",level:3},{value:"%Objects",id:"objects",level:3},{value:"%Parameters",id:"parameters-1",level:3},{value:"%rsmd",id:"rsmd",level:3},{value:"%NextColumn",id:"nextcolumn",level:3},{value:"%ResultColumnCount",id:"resultcolumncount",level:3},{value:"%ROWCOUNT",id:"rowcount",level:3},{value:"%ROWID",id:"rowid",level:3},{value:"%RuntimeMode",id:"runtimemode",level:3},{value:"%SQLCODE",id:"sqlcode",level:3},{value:"%PrivateTables",id:"privatetables",level:3},{value:"%LTT",id:"ltt",level:3},{value:"Methods",id:"methods",level:2},{value:"%ResultColumnCountGet",id:"resultcolumncountget",level:3},{value:"%Prepare",id:"prepare",level:3},{value:"%PrepareMetaData",id:"preparemetadata",level:3},{value:"%CreateSnapshot",id:"createsnapshot",level:3},{value:"%Get",id:"get",level:3},{value:"%GetData",id:"getdata",level:3},{value:"%Next",id:"next",level:3},{value:"%SendODBC",id:"sendodbc",level:3},{value:"%SendDelimitedRows",id:"senddelimitedrows",level:3},{value:"%SendObjects",id:"sendobjects",level:3},{value:"%CloseCursor",id:"closecursor",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchSetProperty",id:"dispatchsetproperty",level:3},{value:"%DispatchMethod",id:"dispatchmethod",level:3},{value:"%GetMetadata",id:"getmetadata",level:3},{value:"%Print",id:"print",level:3},{value:"%Display",id:"display",level:3},{value:"%DisplayFormatted",id:"displayformatted",level:3},{value:"Parameters",id:"parameters-2",level:4}];function c(e){const t={br:"br",classname:"classname",code:"code",colon:"colon",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",methodname:"methodname",p:"p",pre:"pre",queryname:"queryname",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"libraryiresultset",children:"%Library.IResultSet"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Library.IResultSet Extends %RegisteredObject [ Abstract, ClientDataType = HANDLE, ClientName = ResultSet, OdbcType = RESULTSET, System = 2 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Interface for result sets."}),"\n",(0,r.jsx)(t.p,{children:"A result set is a type of result returned by executing either a SELECT statement or a CALL statement. Please refer to %SQL.Statement and %SQL.StatementResult for more information on how to prepare dynamic SQL statements and how to process the results the of executing them."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"columncount",children:"COLUMNCOUNT;"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter COLUMNCOUNT;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"message",children:"%Message"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %Message As %Library.String;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"metadata",children:"%Metadata"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Metadata As %Library.String(MAXLEN = "") [ MultiDimensional ];\n'})}),"\n",(0,r.jsx)(t.h3,{id:"objects",children:"%Objects"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Objects As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"%Objects is a list of column/extent pairs"}),"\n",(0,r.jsx)(t.h3,{id:"parameters-1",children:"%Parameters"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Parameters As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"%Parameters is a parameter metadata string containing the parameter name and type."}),"\n",(0,r.jsx)(t.h3,{id:"rsmd",children:"%rsmd"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %rsmd As %ResultSet.MetaData [ Internal, Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"nextcolumn",children:"%NextColumn"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %NextColumn As %RawString [ Private ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"resultcolumncount",children:"%ResultColumnCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ResultColumnCount As %Library.Integer [ ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"%ResultColumnCount is the number of columns in the result set. This value is always zero unless the current result is a RESULTSET object (instance of %SQL.IResultSet) or a procedure context object (instance of %Library.IProcedureContext). For a CALL statement result, this value represents the column count of the result set currently bound. For more information on result set sequences and dynamic result set binding refer to <>."}),"\n",(0,r.jsx)(t.h3,{id:"rowcount",children:"%ROWCOUNT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ROWCOUNT As %Library.Integer;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"rowid",children:"%ROWID"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %ROWID As %String(MAXLEN = "");\n'})}),"\n",(0,r.jsx)(t.h3,{id:"runtimemode",children:"%RuntimeMode"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %RuntimeMode As %Library.String [ Private ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"This property is set on instantiation to the current value of $zu(115,5). It cannot be set directly by the user. It is to be used by the result set object to format column and parameter values. SQL based result sets using SELECTMODE=RUNTIME will use this value. The user can indirectly set this value by setting $zu(115,5) prior to calling %Prepare() to instantiate the result set. Possible values are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"0 for LOGICAL mode."}),"\n",(0,r.jsx)(t.li,{children:"1 for ODBC mode."}),"\n",(0,r.jsx)(t.li,{children:"2 for DISPLAY mode."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"sqlcode",children:"%SQLCODE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %SQLCODE As %Library.Integer;\n"})}),"\n",(0,r.jsx)(t.h3,{id:"privatetables",children:"%PrivateTables"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %PrivateTables As array Of %XSQL.DS.TempTable;\n"})}),"\n",(0,r.jsx)(t.p,{children:"%PrivateTables is an array of private temporary table orefs used by this result set subscripted by temp table name."}),"\n",(0,r.jsx)(t.h3,{id:"ltt",children:"%LTT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %LTT As %RawString [ Internal, MultiDimensional ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"%LTT is an array of temporary table storage indexes subscripted by temp table name."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"resultcolumncountget",children:"%ResultColumnCountGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ResultColumnCountGet() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"prepare",children:"%Prepare"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %Prepare(queryId As %String(MAXLEN=""), ByRef %returnError As %SYSTEM.Error, %importPackages As %RawString = "", %args...) As %Library.IResultSet [ ServerOnly = 1 ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"%Prepare()"}),"\n",(0,r.jsx)(t.p,{children:'This method is different for each type of result set class. This method has two tasks. First, instantiate the correct concrete result set class. Think of the first parameter, queryId, as being an "index key value" that is used to lookup the correct query implementation. For non-cached (static) queries this is simply the name of the class that implements the query, i.e. the %IResultSet interface. The second task is to prepare the resulting object for data retrieval by the caller.'}),"\n",(0,r.jsx)(t.p,{children:"queryId This can be the concrete subclass of %IResultSet that implements the desired query. For dynamic cached results this value is generally the query text that can be parsed, a hashed value computed and the cached result implementation class looked up in the query cache index."}),"\n",(0,r.jsxs)(t.p,{children:["queryId can also be a ",(0,r.jsx)(t.classname,{children:(0,r.jsx)(t.colon,{children:(0,r.jsxs)(t.queryname,{children:[" or ",(0,r.jsx)(t.classname,{children:(0,r.jsx)(t.colon,{children:(0,r.jsxs)(t.methodname,{children:[". If it is a ",(0,r.jsx)(t.queryname,{children:" then the result set returned is an instance of %Library.ResultSet that is bound to that query. If it is the name of a method Then that method is called, passing %args... to the method, and the first result set found in the context object (%sqlcontext) is returned."})]})})})]})})})]}),"\n",(0,r.jsx)(t.p,{children:"%returnError If an error occurs this is returned by reference and is a %SYSTEM.Error object with properties set to describe information about the error. %returnError.Status contains the %Status value. %importPackages This is a comma delimited list of packages to import. This is only relevant if the result set implementation is generated and the query source might include unqualified names. The import packages list is used to resolve package/schema names for unqualified names. %args...\nArgument values to be passed to the query/method/class %Execute() method. Zero, one or more argument values can be passed."}),"\n",(0,r.jsx)(t.h3,{id:"preparemetadata",children:"%PrepareMetaData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %PrepareMetaData(queryId As %String(MAXLEN=""), ByRef returnError As %SYSTEM.Error = "", importPackages As %RawString = "") As %ResultSet.MetaData\n'})}),"\n",(0,r.jsx)(t.p,{children:"%PrepareMetaData is similar to %Prepare except that no result set is instantiated. This method returns an instance of %ResultSet.MetaData. Be aware that the implementation of this method might cause the result set to be instantiated but that is up to the result set class itself and no result set is actually returned by this method - only metadata."}),"\n",(0,r.jsx)(t.p,{children:"queryId This can be the concrete subclass of %IResultSet that implements the desired query. For dynamic cached results this value is generally the query text that can be parsed, a hashed value computed and the cached result implementation class looked up in the query cache index."}),"\n",(0,r.jsxs)(t.p,{children:["queryId can also be a ",(0,r.jsx)(t.classname,{children:(0,r.jsx)(t.colon,{children:(0,r.jsxs)(t.queryname,{children:[" or ",(0,r.jsx)(t.classname,{children:(0,r.jsx)(t.colon,{children:(0,r.jsxs)(t.methodname,{children:[". If it is a ",(0,r.jsx)(t.queryname,{children:" then the metadata is retrieved from the compiled query. If it is the name of a method then no metadata can be prepared since it requires the method to be executed."})]})})})]})})})]}),"\n",(0,r.jsx)(t.p,{children:"returnError If an error occurs this is returned by reference and is a %SYSTEM.Error object with properties set to describe information about the error. returnError.Status contains the %Status value. importPackages This is a comma delimited list of packages to import. This is only relevant if the result set implementation is generated and the query source might include unqualified names. The import packages list is used to resolve package/schema names for unqualified names."}),"\n",(0,r.jsx)(t.h3,{id:"createsnapshot",children:"%CreateSnapshot"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %CreateSnapshot(storageOffset As %Integer, ByRef lastRow As %Integer, ByRef pRuntimeMode As %Integer = "", pStatic As %ResultSet.Static = "") As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"%CreateSnapshot(storageOffset,lastRow) Copy all rows from the current position to the end of the cursor into a temporary global. Fetch rowCount rows into a temporary global. If the rowCount is -1 then all rows are fetched"}),"\n",(0,r.jsx)(t.h3,{id:"get",children:"%Get"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Get(colname As %String = "") As %Library.String [ Abstract ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Returns the value of the column with the name name in the current row of the result set."}),"\n",(0,r.jsx)(t.p,{children:"If name is not a valid column name, this method returns an empty string."}),"\n",(0,r.jsx)(t.h3,{id:"getdata",children:"%GetData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetData(colnbr As %Integer = 0) As %Library.String [ Abstract ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the value of column colnbr in the current row of the result set."}),"\n",(0,r.jsx)(t.h3,{id:"next",children:"%Next"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Next(ByRef sc As %Library.Status = {$$$OK}) As %Library.Integer [ Abstract ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Advance the result set cursor to the next row. Returns 0 if the cursor is at the end of the result set."}),"\n",(0,r.jsx)(t.h3,{id:"sendodbc",children:"%SendODBC"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendODBC() As %Library.Integer [ Abstract, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Fetch and send a series of rows for the ODBC/JDBC server. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"senddelimitedrows",children:"%SendDelimitedRows"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %SendDelimitedRows(pMaxRows As %Integer = 0, pDelimiter As %String = "", ByRef pReturnCount As %Integer = 0) As %Status [ Abstract ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Fetch and send a series of rows for continuous query client. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"sendobjects",children:"%SendObjects"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendObjects(pObjectCount As %Integer = 0, pLock As %Integer = 0) As %Library.Integer [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"%SendObjects iterates over the rows in the result set and calls object export (quick load) on each column that is present in ..%Objects. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"closecursor",children:"%CloseCursor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CloseCursor() As %Status [ CodeMode = expression, Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This method is expected to be overridden by concrete subclasses"}),"\n",(0,r.jsx)(t.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ CodeMode = expression, Private ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(pProperty As %String(MAXLEN=255))\n"})}),"\n",(0,r.jsx)(t.h3,{id:"dispatchsetproperty",children:"%DispatchSetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchSetProperty(pProperty As %String, pValue As %String) [ Final, Internal ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Property dispatch method to catch references to virtual properties.",(0,r.jsx)(t.br,{}),"\nThis should not be called directly."]}),"\n",(0,r.jsx)(t.h3,{id:"dispatchmethod",children:"%DispatchMethod"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchMethod(pMethod As %String, Args...)\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getmetadata",children:"%GetMetadata"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetMetadata() As %ResultSet.MetaData\n"})}),"\n",(0,r.jsx)(t.h3,{id:"print",children:"%Print"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Print(pDelimiter As %String = " ") As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"%Print()"}),"\n",(0,r.jsx)(t.p,{children:"Write the current row to the current device. An optional column delimiter can be specified. No formatting is applied other than writing pDelimiter between column values. This can be useful for exporting result set data to tab delimited files."}),"\n",(0,r.jsx)(t.p,{children:"For example:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:'set sql = "select name,home_street,home_city,home_state,home_zip from sample.person" set rset = ##class(%ResultSet.SQL).%Prepare(.sql,.err,"") if \'$Isobject(err) { set file="c:\\temp\\names.asv" open file:"WNS" use file while rset.%Next() { do rset.%Print($char(9)) } close file }'})}),"\n",(0,r.jsx)(t.p,{children:"Example data:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Cornell,Ezra M."}),(0,r.jsx)(t.th,{children:"340 Franklin Court"}),(0,r.jsx)(t.th,{children:"Sarasota"}),(0,r.jsx)(t.th,{children:"NY"}),(0,r.jsx)(t.th,{children:"12866"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Huff,Stephen A."}),(0,r.jsx)(t.td,{children:"548 Washington Blvd"}),(0,r.jsx)(t.td,{children:"Brownfield Center"}),(0,r.jsx)(t.td,{children:"MD"}),(0,r.jsx)(t.td,{children:"53436"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Sands,Jeep Q."}),(0,r.jsx)(t.td,{children:"7298 Washington Drive"}),(0,r.jsx)(t.td,{children:"Xavier"}),(0,r.jsx)(t.td,{children:"WY"}),(0,r.jsx)(t.td,{children:"23685"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"display",children:"%Display"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Display(pDelimiter As %String = " ") As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"alias for %Print, implement %Display for new result set interface"}),"\n",(0,r.jsx)(t.h3,{id:"displayformatted",children:"%DisplayFormatted"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %DisplayFormatted(pFormat As %String = -1, ByRef pFileName As %String(MAXLEN="") = "", ByRef pMessages As %SQL.Manager.Messages = "", ByRef pFilesUsed As %String(MAXLEN="") = 0, pTranslateTable As %String(MAXLEN="") = "", pDelimiter As %String = {$c(9)})\n'})}),"\n",(0,r.jsx)(t.p,{children:"Display the contents of the result object. If formatted display is available then format the results using the requested format and, if appropriate, open the formatted results using the host OS. The output is directed to one or more files and messages are placed in a result set object. All file names used are returned in an array."}),"\n",(0,r.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFormat"}),(0,r.jsxs)(t.td,{children:["The format applied to the result content. This parameter is also used to determine the file name extension. Supported formats are: -1%Display() format 0XML 1HTML 2PDF (requires a renderer such as FOP) 99TXT 100CSV If pFormat is specified as any number not listed above then it will default to TXT. pFormat can also be specified as XML, HTML, PDF, TXT or CSV. ",(0,r.jsx)(t.em,{children:"NOTE: pFormat of CSV/100 is not a true comma separated value, but instead uses TAB separated values."})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFileName"}),(0,r.jsx)(t.td,{children:"The base file name to be used to generate actual file names used for output. If no value is specified then a file name will be generated, using the TEMP folder defined for the InterSystems IRIS instance. This value is not expected to include an extension. An extension is added to this value to form the actual file used. Also, if nested results exist then a number is appended to the file name specified to produce a unique name for each result."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pMessages"}),(0,r.jsx)(t.td,{children:"Instance of a system result set class. If no value is passed then the system message result class is instantiated. This parameter is passed by reference. It is up to the caller to process the result set oref that is returned. pMessages.Count() returns the number of messages contained in the result set. pMessages.%Display() will display the messages on the current device. pMessages.%DisplayFormatted() is also implemented and can be used to display the messages using the selected format."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFilesUsed"}),(0,r.jsx)(t.td,{children:"This pass-by-reference parameter will contain the number of files used to display the result content and the name of each file. pFilesUsed is the number of files and pFilesUsed(file_number) is the name of the file. The sequence of the files is the same sequence as the results are processed. For simple result objects, there is a single file. For context objects that can contain result set sequences, the results are output in the order they are returned and the files used are present in pFilesUsed in that same order."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pTranslateTable"}),(0,r.jsx)(t.td,{children:"This is the translate table used for the output files when the format is CSV or TXT. This parameter is optional."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pDelimiter"}),(0,r.jsx)(t.td,{children:"The delimiter to use between columns in the export file. This parameter is optional and defaults to tab character if not specified."})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(96540);const n={},a=r.createContext(n);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);