"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[93465],{83760:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>o,default:()=>r,frontMatter:()=>n,toc:()=>i});var l=s(74848),a=s(28453);const n={pagination_prev:null,pagination_next:null},o="%Studio.Global",i=[{value:"Methods",id:"methods",level:2},{value:"Kill",id:"kill",level:3},{value:"Set",id:"set",level:3},{value:"GlobalListClose",id:"globallistclose",level:3},{value:"GlobalListExecute",id:"globallistexecute",level:3},{value:"GlobalListFetch",id:"globallistfetch",level:3},{value:"GlobalListFetchRows",id:"globallistfetchrows",level:3},{value:"format",id:"format",level:3},{value:"decode",id:"decode",level:3},{value:"genPattern",id:"genpattern",level:3},{value:"LocalListClose",id:"locallistclose",level:3},{value:"LocalListExecute",id:"locallistexecute",level:3},{value:"LocalListFetch",id:"locallistfetch",level:3},{value:"LocalListFetchRows",id:"locallistfetchrows",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"studioglobal",children:"%Studio.Global"})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Studio.Global Extends %RegisteredObject [ System = 3 ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Provide interface to globals"}),"\n",(0,l.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(t.h3,{id:"kill",children:"Kill"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Kill(Node As %String, KillSubs As %Boolean = 0) As %Status\n"})}),"\n",(0,l.jsx)(t.p,{children:"Kill a global node. You pass it the name of the node and a flag to say if you want to kill subscripts or just this node and leave any subscripts."}),"\n",(0,l.jsx)(t.h3,{id:"set",children:"Set"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Set(Node As %String, %Value As %String, ValFormat As %Integer) As %Status\n"})}),"\n",(0,l.jsx)(t.p,{children:"Set a global node. You pass it the name of the node to set, along with the value to set and the values format and it sets this node."}),"\n",(0,l.jsx)(t.h3,{id:"globallistclose",children:"GlobalListClose"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GlobalListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GlobalListExecute ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Enumarate this global node and returning the $order items below this It takes the name of a global or local array to inspect including and initial subscripts. It returns the subscript name, the value and the $data of this node. Then it also returns the format of both the subscript and the data:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"1 - String format, this is the value of the value/subscript unaltered"}),"\n",(0,l.jsx)(t.li,{children:"2 - ObjectScript format, the value has been converted into the ObjectScript representation for easy viewing, for example instead of showing the binary value a list is displayed as '$LB(1,\"test\")'"}),"\n",(0,l.jsx)(t.li,{children:"3 - Not editable. Due to issues with the length of this data not all of it can be displayed so a portion is displayed\nThe Pattern parameter is supplied then it pattern matches on the data of each node and only display data that matches this pattern. The pattern match works the same as the Studio open dialog pattern matching and support both '*' which matches any number of characters and '?' which matches a single character operators. For example 'a*b' will match any string that starts with 'a' and ends with 'b'. If Format is 0 then do not format the resultset output."}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"globallistexecute",children:"GlobalListExecute"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GlobalListExecute(ByRef qHandle As %Binary, Node As %String, Pattern As %String = "", Format As %Boolean = 1) As %Status\n'})}),"\n",(0,l.jsx)(t.h3,{id:"globallistfetch",children:"GlobalListFetch"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GlobalListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,l.jsx)(t.h3,{id:"globallistfetchrows",children:"GlobalListFetchRows"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GlobalListFetchRows(ByRef qHandle As %Binary, FetchCount As %Integer = 0, ByRef RowSet As %List, ByRef ReturnCount As %Integer, ByRef AtEnd As %Integer = 0) As %Status\n"})}),"\n",(0,l.jsx)(t.h3,{id:"format",children:"format"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod format(value As %String, ByRef output As %String, format As %Boolean = 1) As %Integer\n"})}),"\n",(0,l.jsx)(t.p,{children:"Format the 'value' so it is readable and return the type of format we have used."}),"\n",(0,l.jsx)(t.h3,{id:"decode",children:"decode"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod decode(node As %String, ByRef output As %String) As %Integer\n"})}),"\n",(0,l.jsx)(t.h3,{id:"genpattern",children:"genPattern"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod genPattern(Spec As %String, ByRef AS As %String, ByRef AE As %String, ByRef Pattern As %String) [ Private ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Passed a pattern match this returns an COS style pattern and a start and stop point."}),"\n",(0,l.jsx)(t.h3,{id:"locallistclose",children:"LocalListClose"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LocalListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = GlobalListExecute ]\n"})}),"\n",(0,l.jsx)(t.h3,{id:"locallistexecute",children:"LocalListExecute"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod LocalListExecute(ByRef qHandle As %Binary, Pid As %String, Node As %String, Pattern As %String = "", Format As %Boolean = 1) As %Status\n'})}),"\n",(0,l.jsx)(t.h3,{id:"locallistfetch",children:"LocalListFetch"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LocalListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,l.jsx)(t.h3,{id:"locallistfetchrows",children:"LocalListFetchRows"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LocalListFetchRows(ByRef qHandle As %Binary, FetchCount As %Integer = 0, ByRef RowSet As %List, ByRef ReturnCount As %Integer, ByRef AtEnd As %Integer = 0) As %Status [ CodeMode = expression ]\n"})})]})}function r(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var l=s(96540);const a={},n=l.createContext(a);function o(e){const t=l.useContext(n);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),l.createElement(n.Provider,{value:t},e.children)}}}]);