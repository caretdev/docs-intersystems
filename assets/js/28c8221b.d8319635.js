"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[94625],{59308:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,toc:()=>l});var s=a(74848),n=a(28453);const r={pagination_prev:null,pagination_next:null},i="%Net.Remote.Service",l=[{value:"Methods",id:"methods",level:2},{value:"SpawnGateway",id:"spawngateway",level:3},{value:"StartGateway",id:"startgateway",level:3},{value:"StartGatewayInternal",id:"startgatewayinternal",level:3},{value:"StartGatewayObject",id:"startgatewayobject",level:3},{value:"RunStartCmd",id:"runstartcmd",level:3},{value:"IsCore",id:"iscore",level:3},{value:"IsNet",id:"isnet",level:3},{value:"CmdLineForDotNet",id:"cmdlinefordotnet",level:3},{value:"GetDotNetAssembly",id:"getdotnetassembly",level:3},{value:"CmdLineForJava",id:"cmdlineforjava",level:3},{value:"CmdLineForPython",id:"cmdlineforpython",level:3},{value:"CmdLineForODBC",id:"cmdlineforodbc",level:3},{value:"StopGateway",id:"stopgateway",level:3},{value:"StopGatewayObject",id:"stopgatewayobject",level:3},{value:"ShutdownGateway",id:"shutdowngateway",level:3},{value:"PingGateway",id:"pinggateway",level:3},{value:"ConnectGateway",id:"connectgateway",level:3},{value:"OpenGateway",id:"opengateway",level:3},{value:"IsGatewayRunning",id:"isgatewayrunning",level:3},{value:"UpdateState",id:"updatestate",level:3},{value:"LogStatus",id:"logstatus",level:3},{value:"Log",id:"log",level:3},{value:"GetJavaExecutableCommand",id:"getjavaexecutablecommand",level:3},{value:"GetPythonExecutableCommand",id:"getpythonexecutablecommand",level:3},{value:"GetPythonGatewayScript",id:"getpythongatewayscript",level:3},{value:"GetPythonVersion",id:"getpythonversion",level:3},{value:"GetChecksumPath",id:"getchecksumpath",level:3},{value:"CompareChecksum",id:"comparechecksum",level:3},{value:"SetupVirtualEnv",id:"setupvirtualenv",level:3},{value:"DeleteVirtualEnv",id:"deletevirtualenv",level:3},{value:"GetJavaVersion",id:"getjavaversion",level:3},{value:"CheckJavaVersionSupported",id:"checkjavaversionsupported",level:3},{value:"GetJARDirectory",id:"getjardirectory",level:3},{value:"GetJavaRequiredClassPath",id:"getjavarequiredclasspath",level:3},{value:"OnSystemStartup",id:"onsystemstartup",level:3},{value:"GetJavaIntegratedMLJAR",id:"getjavaintegratedmljar",level:3},{value:"IntegratedMLJARInstalled",id:"integratedmljarinstalled",level:3}];function o(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"netremoteservice",children:"%Net.Remote.Service"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Net.Remote.Service Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This class contains methods to start, monitor and stop an External Language Server for Java or .NET."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"spawngateway",children:"SpawnGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod SpawnGateway(pName As %String = "", pConfirmationTimeout As %Integer = 60) As %Status\n'})}),"\n",(0,s.jsx)(t.h3,{id:"startgateway",children:"StartGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod StartGateway(pName As %String = "", pVerbose As %Boolean = 0, Output pOutput As %String, pConfirm As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Start up the External Language Server whose definition is identified by pName. To supress write of progress messages, pass pVerbose = 0."}),"\n",(0,s.jsx)(t.h3,{id:"startgatewayinternal",children:"StartGatewayInternal"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod StartGatewayInternal(pName As %String, pVerbose As %Boolean = 0, Output pOutput As %String, pConfirm As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method is internal, it's called from ^%SYS.Gateway after granting resources"}),"\n",(0,s.jsx)(t.h3,{id:"startgatewayobject",children:"StartGatewayObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod StartGatewayObject(pGateway As %DynamicObject, pVerbose As %Boolean = 0, Output pOutput As %String, pConfirm As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Start up the External Language Server whose definition is an object reference variable pGateway. To supress write of progress messages, pass pVerbose = 0."}),"\n",(0,s.jsx)(t.h3,{id:"runstartcmd",children:"RunStartCmd"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RunStartCmd(pGateway As %DynamicObject, Output pOutput As %String, pVerbose As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run command to start the Gateway Server."}),"\n",(0,s.jsx)(t.h3,{id:"iscore",children:"IsCore"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsCore(pGateway As %DynamicObject) As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"True if the .NET version is .NET Core (ex: Core 2.1)"}),"\n",(0,s.jsx)(t.h3,{id:"isnet",children:"IsNet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsNet(pGateway As %DynamicObject) As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"True if the .NET version is .NET 5 or greater"}),"\n",(0,s.jsx)(t.h3,{id:"cmdlinefordotnet",children:"CmdLineForDotNet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CmdLineForDotNet(pGateway As %DynamicObject, Output pCmd As %String, Output pCmdArgs, Output pEnvVars, Output pPredictedCmdStr As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Assemble the command to start the External Language Server for .NET based on the settings."}),"\n",(0,s.jsx)(t.h3,{id:"getdotnetassembly",children:"GetDotNetAssembly"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetDotNetAssembly(pGateway As %DynamicObject, Output pCmd As %String, Output pCmdArgs, Output pPredictedCmdStr As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"cmdlineforjava",children:"CmdLineForJava"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CmdLineForJava(pGateway As %DynamicObject, Output pCmd As %String, Output pCmdArgs, Output pEnvVars, Output pPredictedCmdStr As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Assemble the command to start the External Language Server for Java based on the settings."}),"\n",(0,s.jsx)(t.h3,{id:"cmdlineforpython",children:"CmdLineForPython"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CmdLineForPython(pGateway As %DynamicObject, Output pCmd As %String, Output pCmdArgs, Output pEnvVars, Output pPredictedCmdStr As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Assemble the command to start the External Language Server for Python based on the settings."}),"\n",(0,s.jsx)(t.h3,{id:"cmdlineforodbc",children:"CmdLineForODBC"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CmdLineForODBC(pGateway As %DynamicObject, Output pCmd As %String, Output pCmdArgs, Output pEnvVars, Output pPredictedCmdStr As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Assemble the command to start the External Language Server for Python based on the settings."}),"\n",(0,s.jsx)(t.h3,{id:"stopgateway",children:"StopGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod StopGateway(pName As %String, pVerbose As %Boolean = 0, pStopMonitor As %Boolean = 1, pTimeout As %Integer = 0) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Stop the External Language Server whose definition is identified by pName. To supress write of progress messages, pass pVerbose = 0. pName : gateway name pVerbose : flag to enable verbose logging, 0 by default pStopMonitor : flag to enable monitoring of gateway shutdown process, no longer in use pTimeout : soft shutdown timeout in seconds, 0 by default"}),"\n",(0,s.jsx)(t.h3,{id:"stopgatewayobject",children:"StopGatewayObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod StopGatewayObject(pGateway As %DynamicObject, pVerbose As %Boolean = 0, pTimeout As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Stop the External Language Server whose definition is an object reference variable pGateway. To supress write of progress messages, pass pVerbose = 0. pGateway : object with gateway configuration settings pVerbose : flag to enable verbose logging, 0 by default pTimeout : soft shutdown timeout in seconds, 0 by default"}),"\n",(0,s.jsx)(t.h3,{id:"shutdowngateway",children:"ShutdownGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ShutdownGateway(pGateway As %DynamicObject, pVerbose As %Boolean = 0, pTimeout As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Shutdown the Gateway Server. pGateway : object with gateway configuration settings pVerbose : flag to enable verbose logging, 0 by default pTimeout : soft shutdown timeout in seconds, 0 by default"}),"\n",(0,s.jsx)(t.h3,{id:"pinggateway",children:"PingGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod PingGateway(pPort As %String, pAddress As %String = "127.0.0.1", pTimeout As %Integer = 5, pReuseSocket As %Boolean = 0, pVerbose As %Boolean = 0) As %Status\n'})}),"\n",(0,s.jsxs)(t.p,{children:['"Ping" the Gateway server to check if it is alive. If pReuseSocket is true (the default is false), it will try to reuse the TCP device and in case the TCP connection has become invalid it will reconnect.',(0,s.jsx)(t.br,{}),"\nInstead of using this method it is recommended to instantiate or use an existing %Net.Remote.Gateway client and %Connect(), call %Ping() and then %Disconnect()."]}),"\n",(0,s.jsx)(t.h3,{id:"connectgateway",children:"ConnectGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ConnectGateway(pGateway As %DynamicObject, ByRef pGatewayConn As %Net.Remote.Gateway, pAdditionalPaths As %String = "", pStartOnDemand As %Boolean = 1, pVerbose As %Boolean = 0, useSharedMemoryIfPossible As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Connect or reconnect to a running External Language Server.",(0,s.jsx)(t.br,{}),"\nWhen pStartOnDemand is true (which is the default), the Gateway will be started if it is not running."]}),"\n",(0,s.jsx)(t.h3,{id:"opengateway",children:"OpenGateway"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod OpenGateway(pName As %String, Output pGateway As %DynamicObject) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Get the Gateway definition object for a given Gateway name."}),"\n",(0,s.jsx)(t.h3,{id:"isgatewayrunning",children:"IsGatewayRunning"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod IsGatewayRunning(host As %String = "127.0.0.1", port As %String = "", pVerbose As %Boolean = 0, Output pSC As %Status, pPing As %Boolean = 1, allowedip As %String = "", sslConfiguration As %String = "") As %Boolean\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Return true if Gateway is running, based on the status of the TCP port, and responsiveness to PING",(0,s.jsx)(t.br,{}),"\nIf the port is not in use, then Gateway is not running on the port, otherwise, we will PING the port. Parameters pPing is deprecated."]}),"\n",(0,s.jsx)(t.h3,{id:"updatestate",children:"UpdateState"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod UpdateState(pPort As %String, pIsRunning As %Boolean) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Update local Gateway state"}),"\n",(0,s.jsx)(t.h3,{id:"logstatus",children:"LogStatus"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LogStatus(s As %Status, pGateway As %DynamicObject, pSource As %String, pVerbose As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Add the status expressed in variable \'s\' to the activity log as either "Info" or "Error".'}),"\n",(0,s.jsx)(t.h3,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Log(pRecordType, pGateway As %DynamicObject, pText As %String, pVerbose As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Add the text message expressed in variable pMsg to the activity log as type pRecordType, with information about the Gateway that originated the message. If pVerbose=1, also write it to the current device. [TO DO] If the current namespace is production-enabled, also log it in the Interoperability event log."}),"\n",(0,s.jsx)(t.h3,{id:"getjavaexecutablecommand",children:"GetJavaExecutableCommand"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetJavaExecutableCommand(javaHomeDir As %String = "", Output javaExecutable As %String = "", normalizeWithSpaces As %Boolean = 1) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"getpythonexecutablecommand",children:"GetPythonExecutableCommand"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetPythonExecutableCommand(pythonPath As %String = "", Output pythonExecutable As %String = "", Output pythonVersion As %String = "", normalizeWithSpaces As %Boolean = 1) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"getpythongatewayscript",children:"GetPythonGatewayScript"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetPythonGatewayScript(Output pythonGatewayScript As %String = "", scriptName As %String, normalizeWithSpaces As %Boolean = 1) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"getpythonversion",children:"GetPythonVersion"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetPythonVersion(pythonExecutable As %String = "", Output pythonVersion As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"getchecksumpath",children:"GetChecksumPath"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetChecksumPath(Output checksumPath As %String = "", serverName As %String) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"comparechecksum",children:"CompareChecksum"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod CompareChecksum(Output compareResult As %String = "", serverName As %String, pythonVersion As %String, pythonPath As %String, irisVersion As %String) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"setupvirtualenv",children:"SetupVirtualEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SetupVirtualEnv(pythonSetupScript As %String, serverName As %String, pythonExecutable As %String, setupLevel As %String, irisVersion As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"deletevirtualenv",children:"DeleteVirtualEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DeleteVirtualEnv(serverName As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getjavaversion",children:"GetJavaVersion"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetJavaVersion(javaHomeDir As %String = "", Output version As %Integer, Output versionString As %String) As %Status [ Internal ]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Returns the primary Java version number. For example, for 1.8.0_241, it returns 8. For 11.0.6, it returns 11. Rules of how the complete version string is formatted can be found here: ",(0,s.jsx)(t.a,{href:"http://www.oracle.com/technetwork/java/javase/versioning-naming-139433.html",children:"http://www.oracle.com/technetwork/java/javase/versioning-naming-139433.html"})]}),"\n",(0,s.jsx)(t.h3,{id:"checkjavaversionsupported",children:"CheckJavaVersionSupported"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod CheckJavaVersionSupported(javaVersion As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"getjardirectory",children:"GetJARDirectory"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetJARDirectory(javaVersion As %Integer, Output JARDir As %String) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getjavarequiredclasspath",children:"GetJavaRequiredClassPath"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetJavaRequiredClassPath(pGateway As %DynamicObject, Output requiredClassPath As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"onsystemstartup",children:"OnSystemStartup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod OnSystemStartup(Output pConsoleLog As %String) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Perform system startup task"}),"\n",(0,s.jsx)(t.h3,{id:"getjavaintegratedmljar",children:"GetJavaIntegratedMLJAR"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetJavaIntegratedMLJAR() As %String [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"integratedmljarinstalled",children:"IntegratedMLJARInstalled"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IntegratedMLJARInstalled() As %Boolean [ Internal ]\n"})})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>l});var s=a(96540);const n={},r=s.createContext(n);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);