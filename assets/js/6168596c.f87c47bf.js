"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[12393],{36522:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>a,default:()=>o,frontMatter:()=>i,toc:()=>c});var t=s(74848),r=s(28453);const i={pagination_prev:null,pagination_next:null},a="%CSP.Mgr.GatewayMgr",c=[{value:"Properties",id:"properties",level:2},{value:"Server",id:"server",level:3},{value:"AppMatch;",id:"appmatch",level:3},{value:"IPAddress",id:"ipaddress",level:3},{value:"Port",id:"port",level:3},{value:"Version",id:"version",level:3},{value:"State",id:"state",level:3},{value:"LastConnectTime",id:"lastconnecttime",level:3},{value:"CachePid",id:"cachepid",level:3},{value:"ResponseBufferTimeout",id:"responsebuffertimeout",level:3},{value:"Methods",id:"methods",level:2},{value:"ClearCache",id:"clearcache",level:3},{value:"GetApplicationParams",id:"getapplicationparams",level:3},{value:"SetApplicationParams",id:"setapplicationparams",level:3},{value:"GetApplicationPaths",id:"getapplicationpaths",level:3},{value:"GetServers",id:"getservers",level:3},{value:"GetCSPIni",id:"getcspini",level:3},{value:"ClearCSPLog",id:"clearcsplog",level:3},{value:"ActivateCSPIni",id:"activatecspini",level:3},{value:"GetCSPLog",id:"getcsplog",level:3},{value:"GetDefaultParams",id:"getdefaultparams",level:3},{value:"SetDefaultParams",id:"setdefaultparams",level:3},{value:"GetInfo",id:"getinfo",level:3},{value:"GetServerParams",id:"getserverparams",level:3},{value:"SetServerParams",id:"setserverparams",level:3},{value:"SetServerStatus",id:"setserverstatus",level:3},{value:"GetServerStatus",id:"getserverstatus",level:3},{value:"GetSystemMetrics",id:"getsystemmetrics",level:3},{value:"GetThisServerName",id:"getthisservername",level:3},{value:"GetSystemStatus",id:"getsystemstatus",level:3},{value:"CloseConnections",id:"closeconnections",level:3}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cspmgrgatewaymgr",children:"%CSP.Mgr.GatewayMgr"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %CSP.Mgr.GatewayMgr [ Abstract, System = 4 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"The Gateway Manager class defines an API used to control a Gateway from ObjectScript code. These provide the infrastructure for accessing (and modifying) the Gateway's internal tables, configuration, and log files from participating servers. This functionality is only provided by Version 2012 Gateways and later."}),"\n",(0,t.jsx)(n.p,{children:"Participating InterSystems IRIS servers are those to which the Gateway holds at least one connection. The Gateway will not allow access to these facilities from any other client. This does mean, however, that ObjectScript routines cannot access Gateway resources until the Gateway has created its first connection to that server - even if the Gateway contains a configuration (under 'Server Access') for accessing that InterSystems IRIS server."}),"\n",(0,t.jsx)(n.p,{children:"Please use a browser which supports html5."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Security"})}),"\n",(0,t.jsxs)(n.p,{children:["For read-oriented methods (e.g. GetDefaultParams()), users must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege.",(0,t.jsx)(n.br,{}),"\nFor update-oriented methods (e.g. SetDefaultParams()), users must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Logging"})}),"\n",(0,t.jsx)(n.p,{children:"All Gateway Manager commands are recorded in the Event Log (Gateway Log Level 'v2'). For example a request for the configuration file would be logged as:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Gateway Management: CallBack Request for Information Command=sys_get_CSP_ini; Bytes Returned=4206; CSPSYS=sys_set_config:default&Server_Response_Timeout=300 "})," A request to update the default configuration would be logged as something like: ",(0,t.jsx)(n.code,{children:"Gateway Management: Response to CallBack: /csp/samples/%CSP.Callback.cls HTTP/1.1 200 OK Content-Type= application/x-www-form-urlencoded Connection: close Content-Length: 83 CSPID: MyToken"})," Errors are recorded: ",(0,t.jsx)(n.code,{children:"Gateway Management: Bad Request CSPrequest: xxx_yyy_CSP_log"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Types of Methods"})}),"\n",(0,t.jsx)(n.p,{children:"The methods are divided into two groups. Those that GET information from the Gateway and those that SEND information or action requests to the Gateway. These methods send asynchronous requests to the Gateway. To get a list of gateways see %CSP.Mgr.GatewayRegistry."}),"\n",(0,t.jsx)(n.p,{children:"GET"}),"\n",(0,t.jsx)(n.p,{children:"GET methods wait for ten seconds for the CSP infrastructure to process the request."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A status of $$$OK indicates that the requested data was successfully returned"}),"\n",(0,t.jsx)(n.li,{children:"The status of $$$GatewayRequestTimeoutSec indicates that the request timed out."}),"\n",(0,t.jsx)(n.li,{children:"The status will indicate that an error occurred in processing the request."}),"\n",(0,t.jsx)(n.li,{children:"These functions wait for the return data (up to 10 seconds). Generally, when the load on the server is not too heavy, they will return very quickly as the return a small amount of data. The exception is GetCSPLog() which can return a very large amount of data and potentially time out."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"SEND"}),"\n",(0,t.jsx)(n.p,{children:"The status return indicates that the request was successfully sent to the Gateway. However, it does not indicate that updates were successfully applied."}),"\n",(0,t.jsx)(n.p,{children:"When a configuration is interactively modified, each parameter will be fully checked for validity. If a parameter or a value give for a particular parameter is unacceptable, then an error will be generated and the existing value is left unmodified. In some cases, the Gateway will modify a value such that it makes more sense in the context of the current configuration. For these cases a warning is generated with notification of the 'corrected' value."}),"\n",(0,t.jsx)(n.p,{children:"For commands updating configuration parameters, the new values should appear as a list of [name,value] pairs. For example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'$lb("Server_Response_Timeout=90","Queued_Request_Timeout=70")'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Note that all configuration parameters are case-sensitive."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:'All passwords will be encrypted (as appropriate) before they are saved in CSP.ini.\nSetting a parameter to empty string ("") effectively deletes it from CSP.ini.'}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In all cases the parameter names should be specified exactly as they appear in CSP.ini. The parameter values, in most cases, take the values as shown in the management form."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Example:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:'%SYS>s Reg=$SYSTEM.CSP.GetGatewayRegistry() %SYS>s Mgrs=Reg.GetGatewayMgrs() %SYS>w Mgrs.Count() 1 %SYS>s Mgr=Mgrs.GetAt(1) %SYS>w Mgr.Port 57775 %SYS>s Status=Mgr.GetCSPIni(.ini) %SYS>zw ini ini("[APP_PATH_INDEX]","/csp")="Enabled" ini("[LOCAL]")="" ini("[LOCAL]","Maximum_Session_Connections")=3 ini("[LOCAL]","Minimum_Server_Connections")=3 ini("[LOCAL]","TCP_Port")=56781 ini("[SYSTEM]","Configuration_Initialized")="Thu Oct 27 08:57:23 2011" ini("[SYSTEM]","Configuration_Initialized_Build")=1201.1264 ini("[SYSTEM]","Queued_Request_Timeout")=60 ini("[SYSTEM]","SM_Timeout")=300 ini("[SYSTEM]","Server_Response_Timeout")=60 ini("[SYSTEM]","sys_shm_inst")=1 ini("[SYSTEM]","sys_timestamp")=1336083061'})]}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Server As %String;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Server"})," and ",(0,t.jsx)(n.strong,{children:"Port"})," information of the Gateway being managed. If connecting with the server name fails, the IP Address will be used instead."]}),"\n",(0,t.jsx)(n.h3,{id:"appmatch",children:"AppMatch;"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property AppMatch;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The URL part matching the Web Application that initialized this connection"}),"\n",(0,t.jsx)(n.h3,{id:"ipaddress",children:"IPAddress"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property IPAddress As %String;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Server"})," and ",(0,t.jsx)(n.strong,{children:"Port"})," information of the Gateway being managed. This is used if connecting using the server name fails."]}),"\n",(0,t.jsx)(n.h3,{id:"port",children:"Port"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Port As %String;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"version",children:"Version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Version As %String;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Version"})," of the Gateway being managed."]}),"\n",(0,t.jsx)(n.p,{children:"."}),"\n",(0,t.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property State As %String;\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"State"})," has one of the following values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"a" - This gateway has a live connection to the currently-running instance of InterSystems IRIS.'}),"\n",(0,t.jsx)(n.li,{children:'"i" - This gateway was connected to this InterSystems IRIS instance some time in the recent past (currently one month), but is does not have a live connection to the currently-running InterSystems IRIS instance'}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"lastconnecttime",children:"LastConnectTime"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property LastConnectTime As %Date;\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"LastConnectTime"})," contains the data/time of the last time this Gateway connected to this InterSystems IRIS instance"]}),"\n",(0,t.jsx)(n.h3,{id:"cachepid",children:"CachePid"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property CachePid As %String;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The process identifier associated with this connection. (Has a value only for Active connections.)"}),"\n",(0,t.jsx)(n.h3,{id:"responsebuffertimeout",children:"ResponseBufferTimeout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ResponseBufferTimeout As %Integer;\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ResponseBufferTimeout"})," the maximum time the Mgr will before for the next portion of the response. 'GET's wait for a response from the Gateway. The response is sent in buffers. This is the maximum time the Manager will wait for the next buffer to be send, including the first buffer, i.e., the response must begin within ResponseBufferTimeout seconds of the request. This is measured in seconds. The default value is 10 seconds."]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"clearcache",children:"ClearCache"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method ClearCache(clearFilenames As %List) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"ClearCache clears the Gateway's Page Cache."}),"\n",(0,t.jsxs)(n.p,{children:["The values of ",(0,t.jsx)(n.em,{children:"clearFilenames"})," determines the exact action of the method."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"An empty or undefined value indicates that the entire cache should be cleared."}),"\n",(0,t.jsx)(n.li,{children:"A list of the file names to be purged from the cache."}),"\n",(0,t.jsx)(n.li,{children:"A file name may contain a wildcard, '*'."}),"\n",(0,t.jsxs)(n.li,{children:["Clear all forms named 'zenutils.js', regardless of path: ",(0,t.jsx)(n.em,{children:"/zenutils.js 2.  Clear all forms from the '/csp/samples/images/' location: /csp/samples/images/"})," 3.  Clear all forms whose path/name contains the '/Zen_' token: ",(0,t.jsx)(n.em,{children:"/Zen"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getapplicationparams",children:"GetApplicationParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetApplicationParams(path As %String, ByRef configAry) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetApplicationParams gets the Application Access Parameters."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"path"})," indicates the application path whose parameters are being requested. See the GetApplicationPaths() method to obtain a list of the application paths defined for this Gateway."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configAry"})," [name,value] pairs are returned in local array"]}),"\n",(0,t.jsx)(n.p,{children:"See SetApplicationParams for a list of parameters."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"setapplicationparams",children:"SetApplicationParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method SetApplicationParams(path As %String, ByRef configUpdates) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"SetApplicationParams updates settings in the 'Application Access' section."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"path"})," indicates that application path being updated. See the GetApplicationPaths() method to obtain a list of the application paths defined for this Gateway."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configUpdates"})," a local array whose [name,value] pairs are used to update the configuration."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Param Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Application_Status"}),(0,t.jsx)(n.td,{children:"Service Status: Enabled, Disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Extra_CGI_Env_Variables"}),(0,t.jsx)(n.td,{children:"Extra CGI Environment Variables"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Proc_Class"}),(0,t.jsx)(n.td,{children:"Process with this class"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"GZIP_Compression"}),(0,t.jsx)(n.td,{children:"GZIP Compression: Enabled, Disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"GZIP_Mininum_File_Size"}),(0,t.jsx)(n.td,{children:"GZIP minimum file size"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"GZIP_Exclude_File_Types"}),(0,t.jsx)(n.td,{children:"GZIP exclude file types"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"KeepAlive"}),(0,t.jsx)(n.td,{children:"Keep alive: Enabled, Disabled, No Action"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Non_Parsed_Headers"}),(0,t.jsx)(n.td,{children:"Non-parsed headers: Enabled, Disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Default_Server"}),(0,t.jsx)(n.td,{children:"Default server"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Alternative_Servers"}),(0,t.jsx)(n.td,{children:"Alternative Servers.This takes one of the following values: LoadBalancing - Load balancing and failoverFailOver - Failover only Disabled - Disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Alternative_Server_[n]"}),(0,t.jsx)(n.td,{children:"Alternative server"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Alternative_Server_[n]_Status"}),(0,t.jsx)(n.td,{children:"Alternative Server Status: Enabled, Disabled, OFFLINE"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getapplicationpaths",children:"GetApplicationPaths"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetApplicationPaths(ByRef appPaths As %List) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetApplicationPaths gets the list of configured application paths for this Gateway."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"appPaths"})," is a list of strings, each an application path."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getservers",children:"GetServers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetServers(ByRef serverList As %List) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetServers gets the list of configured servers for this server."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"serverList"})," is a list of strings, each the name of a configured server."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getcspini",children:"GetCSPIni"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetCSPIni(ByRef cspIni, format As %String = "array") As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"GetCSPIni get the contents of the configuration file (CSP.ini)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"format"})," is the return format:",(0,t.jsx)(n.br,{}),'\n"array" - return as an array.',(0,t.jsx)(n.br,{}),'\n"stream" - returns as a %Stream.GlobalCharacter.']}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"cspIni"})}),"\n",(0,t.jsxs)(n.p,{children:['If format="array", tke values are returned in a two-level array. A partial example: ',(0,t.jsx)(n.code,{children:'cspini("[APP_PATH:/]", "Default_Server" ) = "LOCAL" cspini("[APP_PATH:/csp]", "Default_Server") = "LOCAL" cspini("[APP_PATH:/csp]", "GZIP_Minimum_File_Size") = "0" cspini("[LOCAL]", "Ip_Address") = "127.0.0.1" cspini("[LOCAL]", "Maximum_Server_Connections") = "4" cspini("[LOCAL]", "Maximum_Session_Connections") = "3" cspini("[LOCAL]", "Minimum_Server_Connections") = "30" cspini("[LOCAL]", "Username") = "CSPSystem"'})]}),"\n",(0,t.jsx)(n.p,{children:'If format="stream", the data is returend as a %Stream.GlobalCharacter object which allows the CSP Ini text to be parsed directly.'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"clearcsplog",children:"ClearCSPLog"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method ClearCSPLog() As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"ClearCSPLog clears the Event Log (CSP.log)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"activatecspini",children:"ActivateCSPIni"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method ActivateCSPIni() As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"ActivateCSPIni activates changes made manually to the Gateway Configuration (CSP.ini)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getcsplog",children:"GetCSPLog"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetCSPLog(ByRef cspLogStream As %Stream.GlobalCharacter, startDateTime As %String = "now", direction As %Integer = -1, nEvents = 1000) As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"GetCSPLog gets the Event Log (CSP.log)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"cspLogStream"})," is a %Stream.GlobalCharacter stream from which you can read the lines of the returned from the event log When you close the stream, the temporary data from the server will be removed."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"startDateTime"})," the time from which to start returning events. The format the date one of the following:"]}),"\n",(0,t.jsx)(n.p,{children:"C format: e.g.:         Fri Apr 01 22:28:23 2011   RFC1123 format: e.g.:   Mon, 26 Jul 2010 15:09:28 GMT"}),"\n",(0,t.jsx)(n.p,{children:'The value "now" [default] will be replaced by the current date and time.'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"direction"})," the direction to scan for events: 1 -> forward; -1 -> backward"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"nEvents"})," the number of Events to return from the event file. Each event consists of one line in a structured name-value pair format. Caution: The CSP Log file contains tens of thousands of lines of text. If you request too many events in one call, GetCSPLog() will timeout waiting for the Gateway to finish transfering all the data."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getdefaultparams",children:"GetDefaultParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetDefaultParams(ByRef configAry) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetDefaultParams gets Default Parameters."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"config"})," values are returned as named parameters of the object. See SetDefaultParams for a list of parameters."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configAry"})," [name,value] pairs are returned in local array"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"setdefaultparams",children:"SetDefaultParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method SetDefaultParams(ByRef configUpdates) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"SetDefaultParams updates parameters in the 'Default Parameters' section."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configUpdates"})," a local array whose [name,value] pairs are used to update the configuration."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Param Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Instance_Host_Name"}),(0,t.jsx)(n.td,{children:"Instance host name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SM_Forms"}),(0,t.jsx)(n.td,{children:"Access to these forms"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Username"}),(0,t.jsx)(n.td,{children:"User name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Password"}),(0,t.jsx)(n.td,{children:"PasswordAll passwords will be encrypted (as appropriate) before they are saved in CSP.ini."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SM_Timeout"}),(0,t.jsx)(n.td,{children:"Session Timeout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"System_Manager"}),(0,t.jsx)(n.td,{children:"System Manager Machine(s)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"System_Manager_UNPW_Override"}),(0,t.jsx)(n.td,{children:'Override Username and Password Checkbox"1"=checked; ""=unchecked'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server_Response_Timeout"}),(0,t.jsx)(n.td,{children:"Server response timeout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Queued_Request_Timeout"}),(0,t.jsx)(n.td,{children:"Queued request timeout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"No_Activity_Timout"}),(0,t.jsx)(n.td,{children:"No activity timeout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Env_Parameters"}),(0,t.jsx)(n.td,{children:"Event Log Level"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Event_Log_File"}),(0,t.jsx)(n.td,{children:"Event log file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Event_Log_Rotation_Size"}),(0,t.jsx)(n.td,{children:"Event log rotation size"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Maximum_Logged_Request_Size"}),(0,t.jsx)(n.td,{children:"Maximum data logged per HTTP request"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Document_Root"}),(0,t.jsx)(n.td,{children:"Web document root"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ASP_Directory"}),(0,t.jsx)(n.td,{children:"Temp ASP Directory"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"WS_Service_Status"}),(0,t.jsx)(n.td,{children:"Service State: Enabled,Disabled"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"NSD_Document_Root"}),(0,t.jsx)(n.td,{children:"NSD Document Root"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server_Error"}),(0,t.jsx)(n.td,{children:"Server Error"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server_Busy"}),(0,t.jsx)(n.td,{children:"Server_Busy"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server_Unavailable"}),(0,t.jsx)(n.td,{children:"Server Unavailable"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server_Timeout"}),(0,t.jsx)(n.td,{children:"Server timeout"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Connection_Closed"}),(0,t.jsx)(n.td,{children:"Connection closed"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getinfo",children:"GetInfo"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetInfo(ByRef info, format As %String = "object") As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"GetInfo gets the information about the gateway."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"format"})," is the return format:",(0,t.jsx)(n.br,{}),'\n"object" - return as %CSP.Mgr.GatewayInformation object;',(0,t.jsx)(n.br,{}),'\n"stream" - returns as the information as XML in a %Stream.GlobalCharacter.']}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"info"}),' if format="object" this is an instance of the %CSP.Mgr.GatewayInformation class.',(0,t.jsx)(n.br,{}),'\nif format="stream", this is a %Stream.GlobalCharacter containing the information as XML']}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'<?xml version="1.0" encoding="UTF-8" ?> <GatewayInformation> <Version>2011.2.0.202.0</Version> <Build>1102.1226</Build> <WebServerName>localhost</WebServerName> <WebServerPort>57773</WebServerPort> <WebServerSoftware>Apache Cache_Server_Pages-Apache_Module/2011.2.0.202.0-1102.1226</WebServerSoftware> <ActiveInterface>apapi</ActiveInterface> </GatewayInformation>'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getserverparams",children:"GetServerParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetServerParams(server As %String, ByRef configAry) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetServerParams gets the Server Access Parameters for this server."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"server"})," indicates that server path whose values are being requested. See the GetServers() method to obtain a list of the servers defined for this Gateway."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configAry"})," [name,value] pairs are returned in local array"]}),"\n",(0,t.jsx)(n.p,{children:"See SetServerParams for a list of parameters."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"setserverparams",children:"SetServerParams"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method SetServerParams(server As %String, ByRef configUpdates) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"SetServerParams updates settings in the 'Server Access' section."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"server"})," indicates that server path being updated. See the GetServers() method to obtain a list of the servers configured on this Gateway."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"configUpdates"})," a local array whose [name,value] pairs are used to update the configuration."]}),"\n",(0,t.jsx)(n.p,{children:"Param Name"}),"\n",(0,t.jsx)(n.p,{children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Server_Status"}),"\n",(0,t.jsx)(n.p,{children:"Server status: Enabled, Disabled"}),"\n",(0,t.jsx)(n.p,{children:"Ip_Address"}),"\n",(0,t.jsx)(n.p,{children:"IP Address"}),"\n",(0,t.jsx)(n.p,{children:"TCP_Port"}),"\n",(0,t.jsx)(n.p,{children:"TCP Port"}),"\n",(0,t.jsx)(n.p,{children:"Minimum_Server_Connections"}),"\n",(0,t.jsx)(n.p,{children:"Minimum server connections"}),"\n",(0,t.jsx)(n.p,{children:"Maximum_Server_Connections"}),"\n",(0,t.jsx)(n.p,{children:"Maximum server connections"}),"\n",(0,t.jsx)(n.p,{children:"Connection_Security_Level"}),"\n",(0,t.jsx)(n.p,{children:"Connection Security Level"}),"\n",(0,t.jsx)(n.p,{children:"This takes a numeric value:"}),"\n",(0,t.jsx)(n.p,{children:"0 Password"}),"\n",(0,t.jsx)(n.p,{children:"1 Kerberos"}),"\n",(0,t.jsx)(n.p,{children:"2 Kerberos with Packet Integrity"}),"\n",(0,t.jsx)(n.p,{children:"3 Kerboros with Encryption"}),"\n",(0,t.jsx)(n.p,{children:"10 SSL"}),"\n",(0,t.jsx)(n.p,{children:"Product"}),"\n",(0,t.jsx)(n.p,{children:"Product"}),"\n",(0,t.jsx)(n.p,{children:"This takes a numeric value:"}),"\n",(0,t.jsx)(n.p,{children:"0 (deprecated)"}),"\n",(0,t.jsx)(n.p,{children:"1 InterSystems IRIS"}),"\n",(0,t.jsx)(n.p,{children:"Service_Principal_Name"}),"\n",(0,t.jsx)(n.p,{children:"Service principal name"}),"\n",(0,t.jsx)(n.p,{children:"Keytable"}),"\n",(0,t.jsx)(n.p,{children:"Key table"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Protocol"}),"\n",(0,t.jsx)(n.p,{children:"SSL Protocol"}),"\n",(0,t.jsx)(n.p,{children:"Deprecated; use SSLCC_Protocol_Min and SSLCC_Protocol_Max instead"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Protocol_Min"}),"\n",(0,t.jsx)(n.p,{children:"Minimum SSL/TLS Protocol Version"}),"\n",(0,t.jsx)(n.p,{children:"This takes a numeric value:"}),"\n",(0,t.jsx)(n.p,{children:"4 TLSv1.0"}),"\n",(0,t.jsx)(n.p,{children:"8 TLSv1.1"}),"\n",(0,t.jsx)(n.p,{children:"16 TLSv1.2"}),"\n",(0,t.jsx)(n.p,{children:"32 TLSv1.3"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Protocol_Max"}),"\n",(0,t.jsx)(n.p,{children:"Maximum SSL/TLS Protocol Version"}),"\n",(0,t.jsx)(n.p,{children:"This takes a numeric value:"}),"\n",(0,t.jsx)(n.p,{children:"4 TLSv1.0"}),"\n",(0,t.jsx)(n.p,{children:"8 TLSv1.1"}),"\n",(0,t.jsx)(n.p,{children:"16 TLSv1.2"}),"\n",(0,t.jsx)(n.p,{children:"32 TLSv1.3"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Key_Type"}),"\n",(0,t.jsx)(n.p,{children:"SSL Key Type"}),"\n",(0,t.jsx)(n.p,{children:"This takes a numeric value:"}),"\n",(0,t.jsx)(n.p,{children:"1 DSA"}),"\n",(0,t.jsx)(n.p,{children:"2 RSA"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Verify_Peer"}),"\n",(0,t.jsx)(n.p,{children:"SSL Verify Peer checkbox:"}),"\n",(0,t.jsx)(n.p,{children:'"1"=Checked;""=Unchecked"'}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Cipher_Suites"}),"\n",(0,t.jsx)(n.p,{children:"The Cipher Suite list (TLSv1.2 and below)"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Cipher_Suites_1_3"}),"\n",(0,t.jsx)(n.p,{children:"The Cipher Suite list (TLSv1.3)"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Certificate_File"}),"\n",(0,t.jsx)(n.p,{children:"SSL Certificate File"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_Certificate_Key_File"}),"\n",(0,t.jsx)(n.p,{children:"SSL Certifictate Key File"}),"\n",(0,t.jsx)(n.p,{children:"SSLCC_CA_Certificate_File"}),"\n",(0,t.jsx)(n.p,{children:"SSL CA Certificate File"}),"\n",(0,t.jsx)(n.p,{children:"Alternative Servers should be saved as a contiguous set of alternative servers as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Alternative_Server_1=APPSERVER1 Alternative_Server_1_Status=Enabled Alternative_Server_2=APPSERVER2 Alternative_Server_2=Disabled"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"setserverstatus",children:"SetServerStatus"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method SetServerStatus(path As %String = "*", server As %String = "*", status As %Integer) As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"SetServerStatus sets the 'online' status for either a single or a specified range of InterSystems IRIS servers"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"path"}),' is the application path as defined in the Gateway Configuration (or "*" for all)',(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"server"}),' is the InterSystems IRIS server name as defined in the Gateway configuration (or "*" for all)',(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"status"})," is '1' for online and '0' for offline"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getserverstatus",children:"GetServerStatus"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetServerStatus(path As %String = "*", server As %String = "*", ByRef statusAry) As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"GetServerStatus retrieves the 'online' status for either a single or a specified range of InterSystems IRIS servers"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"path"}),' is the application path as defined in the Gateway Configuration (or "*" for all)',(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"server"}),' is the InterSystems IRIS server name as defined in the Gateway configuration (or "*" for all)']}),"\n",(0,t.jsx)(n.p,{children:"An array of servers and their status is returned as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"statusAry(path,server_number)=$List(server, status)"})}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.em,{children:"status"})," is '1' for online and '0' for offline"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getsystemmetrics",children:"GetSystemMetrics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetSystemMetrics(ByRef metricsAry) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"GetSystemMetrics gets information related to Gateway performance. The information returned is used by the Gateway Monitor."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"metricsAry"})," [name,value] pairs are returned in local array"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," No privileges are necessary to call this method."]}),"\n",(0,t.jsx)(n.h3,{id:"getthisservername",children:"GetThisServerName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetThisServerName(ByRef serversAry) As %Status\n"})}),"\n",(0,t.jsxs)(n.p,{children:["GetThisServerName gets the name that the Gateway uses to access ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"this"})})," InterSystems IRIS server. The Gateway can be configured to access the same InterSystems IRIS server via multiple names. Therefore a numbered array will be returned. Index zero will hold the name used to currently access ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"this"})})," InterSystems IRIS server. Any other names will follow in the numbered list."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"serversAry"})," [number,name] pairs are returned in local array"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"getsystemstatus",children:"GetSystemStatus"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetSystemStatus(ByRef systemStatus, format As %String = "object") As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"GetSystemStatus gets the System Status."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"format"})," is the return format:",(0,t.jsx)(n.br,{}),'\n"object" - return as an object;',(0,t.jsx)(n.br,{}),'\n"stream" - returns as the information as XML.']}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"systemStatus"}),' if format="object" returned as an instance of a %CSP.Mgr.GatewaySystemStatus object. There are the following main sections to the status: Connections, Servers, Application Paths, Alternative Servers, and Cached Form.',(0,t.jsx)(n.br,{}),'\nif format="stream", this is a %Stream.GlobalCharacter containing the information as XML']}),"\n",(0,t.jsx)(n.p,{children:"| Connection, number          |  |\n| --------------------------- |  |\n| | WebServerPID              |  |\n| | CacheServerName           |  |\n| | IpAddress                 |  |\n| | TCPPort                   |  |\n| | CacheServerPID            |  |\n| | Status                    |  |\n| | IdleTime                  |  |\n| | Activity                  |  |\n| CacheServer, number         |  |\n| | CacheServerName           |  |\n| | IpAddress                 |  |\n| | TCPPort                   |  |\n| | TotalConnections          |  |\n| | ConnectionsInUse          |  |\n| | PrivateConnections        |  |\n| | Activity                  |  |\n| | QueuedRequests            |  |\n| Application Path, path      |  |\n| | AlternativeServer         |  |\n| | CacheServerName           |  |\n| | Activity                  |  |\n| | Status                    |  |\n| Alternative Server, number  |  |\n| | CacheServerName           |  |\n| | Activity                  |  |\n| | Status                    |  |\n| CachedForms                 |  |\n| | FormsInCache              |  |\n| | CachedData                |  |\n| | CacheActivity             |  |\n| CachedForms,Form, form name |  |\n| | Size                      |  |\n| | Activity                  |  |"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"javascript:togglessxml%28%29",children:"System Status XML Example"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'<?xml version="1.0" encoding="UTF-8" ?> <GatewaySystemStatus> <Connections> <Connection Number="0"> <WebServerPID>5936</WebServerPID> <CacheServerName>APPSERVER1</CacheServerName> <IpAddress>127.0.0.1</IpAddress> <TcpPort>56773</TcpPort> <CacheServerPID>3304</CacheServerPID> <Status>Free</Status> <IdleTime>0/0</IdleTime> <Activity>19</Activity> </Connection> <Connection Number="1"> <WebServerPID>5936</WebServerPID> <CacheServerName>APPSERVER1</CacheServerName> <IpAddress>127.0.0.1</IpAddress> <TcpPort>56773</TcpPort> <CacheServerPID>3428</CacheServerPID> <Status>Free</Status> <IdleTime>0/0</IdleTime> <Activity>12</Activity> </Connection> </Connections> <CacheServers> <CacheServer Number="2"> <CacheServerName>APPSERVER1</CacheServerName> <IpAddress>127.0.0.1</IpAddress> <TCPPort>56773</TCPPort> <TotalConnections>6</TotalConnections> <ConnectionsInUse>0</ConnectionsInUse> <PrivateConnections>0</PrivateConnections> <Activity>75</Activity> <QueuedRequests>0</QueuedRequests> </CacheServer> </CacheServers> <ApplicationPaths> <ApplicationPath Number="1"> <Path>/csp</Path> <AlternativeServer Number="0"> <CacheServerName>APPSERVER1</CacheServerName> <Activity>75</Activity> <Status>Enabled (Master)</Status> </AlternativeServer> <AlternativeServer Number="1"> <CacheServerName>APPSERVER2</CacheServerName> <Activity>0</Activity> <Status>Disabled</Status> </AlternativeServer> </ApplicationPath> </ApplicationPaths> <CachedForms> <FormsInCache>1</FormsInCache> <CachedData>6584</CachedData> <CacheActivity>3</CacheActivity> <Form id="/csp/samples/images/zenLogo.svg"> <Size>6584</Size> <Activity>3</Activity> </Form> </CachedForms> </GatewaySystemStatus>'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Operate:Use or %Admin_Manage:Use privilege."]}),"\n",(0,t.jsx)(n.h3,{id:"closeconnections",children:"CloseConnections"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method CloseConnections(connections As %String = "*") As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"CloseConnection closes connections to this gateway."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"connections"})," specifies which connections are to be closed:"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"*"}),(0,t.jsx)(n.th,{children:"All connections"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Server Name"}),(0,t.jsx)(n.td,{children:"Close connections to a specific server, e.g. LOCAL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"number"}),(0,t.jsx)(n.td,{children:"Close a specific connections, e.g. 3"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"list of numbers"}),(0,t.jsx)(n.td,{children:"Close a list of specific connections, e.g, $lb(2,5,7)"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," To call this method, you must hold the %Admin_Manage:Use privilege."]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(96540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);