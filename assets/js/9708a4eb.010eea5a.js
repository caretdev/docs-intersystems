"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[57321],{10029:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,toc:()=>l});var a=s(74848),n=s(28453);const r={pagination_prev:null,pagination_next:null},i="%SQL.IResultSet",l=[{value:"Parameters",id:"parameters",level:2},{value:"%StatementIndexHash;",id:"statementindexhash",level:3},{value:"Properties",id:"properties",level:2},{value:"%CursorNumber",id:"cursornumber",level:3},{value:"%Metadata",id:"metadata",level:3},{value:"%Objects",id:"objects",level:3},{value:"%ExtendedMetadata",id:"extendedmetadata",level:3},{value:"%rsmd",id:"rsmd",level:3},{value:"%NextColumn",id:"nextcolumn",level:3},{value:"%Parameters",id:"parameters-1",level:3},{value:"%PrivateTables",id:"privatetables",level:3},{value:"%LTT",id:"ltt",level:3},{value:"%SelectMode",id:"selectmode",level:3},{value:"Methods",id:"methods",level:2},{value:"%GetStatement",id:"getstatement",level:3},{value:"getSelectMode",id:"getselectmode",level:3},{value:"%CreateSnapshot",id:"createsnapshot",level:3},{value:"%SendODBC",id:"sendodbc",level:3},{value:"%FetchIntoTemp",id:"fetchintotemp",level:3},{value:"%SendDelimitedRows",id:"senddelimitedrows",level:3},{value:"%SendObjects",id:"sendobjects",level:3},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchMethod",id:"dispatchmethod",level:3},{value:"%GetMetadata",id:"getmetadata",level:3},{value:"%Display",id:"display",level:3},{value:"%DisplayMarkDown",id:"displaymarkdown",level:3},{value:"%Print",id:"print",level:3},{value:"%DisplayFormatted",id:"displayformatted",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"%GetClientMetadata",id:"getclientmetadata",level:3},{value:"%GetSerializedMetadata",id:"getserializedmetadata",level:3}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"sqliresultset",children:"%SQL.IResultSet"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SQL.IResultSet Extends (%SQL.StatementResult, %ResultSet.QuerySuper) [ Abstract, ClientDataType = HANDLE, ClientName = ResultSet, OdbcType = RESULTSET, System = 3 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"A result set can be returned by executing a SELECT statement or a CALL statement."}),"\n",(0,a.jsx)(t.p,{children:"A result set is a type of statement result (%SQL.StatementResult). A result set is a collection of rows, all of the same ROWTYPE. The ROWTYPE is described by the result set's metadata. The result set metadata can be retrieved by calling %GetMetadata. The OREF returned by %GetMetadata references an instance of %SQL.StatementMetadata."}),"\n",(0,a.jsx)(t.p,{children:"A result set has an iterator that is initially positioned before the first row. The iterator is repositioned by calling %Next. %Next returns one (1) if the iterator is positioned at the next row or zero (0) indicating that the iterator is positioned after the last row."}),"\n",(0,a.jsx)(t.p,{children:"Column values from the current row can be accessed by column name by calling %Get or by column position by calling %GetData."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'SAMPLES>set result = ##class(%SQL.Statement).%ExecDirect(,"select Name, SSN, DOB from Sample.Person where Age < 50")  \tSAMPLES>write result.%SQLCODE  \t0  \tSAMPLES>write result.%Next()  \t1  \tSAMPLES>write result.%Get("Name")  \tZevon,Patricia L.  \tSAMPLES>write result.%GetData(1)  \tZevon,Patricia L.  \tSAMPLES>write result.Name  \tZevon,Patricia L.  \n'})}),"\n",(0,a.jsx)(t.p,{children:"Column values can also be accessed by property name. The name of the property corresponding to a column is based on the column name. If the column name is not a valid object identifier then it is transformed into a valid object identifier. The column can still be accessed as a property through dynamic dispatch. If there are questions about the property name that corresponds to a particular column then the statement can define an alias for the column that is a valid object identifier."}),"\n",(0,a.jsx)(t.p,{children:"If the result set is the result of executing a statement prepared with %ObjectSelectMode = 1 then any column whose type class is a swizzleable class is bound to a swizzleable property."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:'set tStatement = ##class(%SQL.Statement).%New() set tStatement.%ObjectSelectMode = 1 set tSC = tStatement.%Prepare("select %ID as ID, Spouse as Spouse from Sample.Person where Spouse IS NOT NULL") set tResult = tStatement.%Execute() if \'tResult.%SQLCODE { if tResult.%Next() { write "Person ID: ",tResult.ID.%Id()," Name: ",tResult.ID.Name," Spouse Name: ",tResult.Spouse.Name,! } }'})}),"\n",(0,a.jsx)(t.p,{children:"Executing this code in the SAMPLES namespace generates output similar to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"Person ID: 101 Name: Donaldson,Nataliya J. Spouse Name: Grabscheid,Dan L.  \n"})}),"\n",(0,a.jsx)(t.p,{children:"The number of rows returned from a result set is available in the %ROWCOUNT property, which is inherited from the %SQL.StatementResult superclass."}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"statementindexhash",children:"%StatementIndexHash;"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter %StatementIndexHash;\n"})}),"\n",(0,a.jsx)(t.p,{children:"Hash of associated statement index entry"}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"cursornumber",children:"%CursorNumber"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %CursorNumber As %Integer [ Internal ];\n"})}),"\n",(0,a.jsx)(t.h3,{id:"metadata",children:"%Metadata"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Metadata As %Library.String(MAXLEN = "") [ Internal, MultiDimensional ];\n'})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"DO NOT USE DIRECTLY"})," -- call %GetMetadata to get an Object representation of this result set's metadata, or %GetClientMetadata for a serialized form."]}),"\n",(0,a.jsx)(t.h3,{id:"objects",children:"%Objects"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Objects As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"%Objects is a list of column/extent pairs"}),"\n",(0,a.jsx)(t.h3,{id:"extendedmetadata",children:"%ExtendedMetadata"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property %ExtendedMetadata As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"%ExtendedMetadata includes additional details about each column."}),"\n",(0,a.jsx)(t.h3,{id:"rsmd",children:"%rsmd"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %rsmd As %SQL.StatementMetadata [ Internal, Private ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"%rsmd is an internal holding area for a %SQL.StatementMetadata reference. When %GetMetadata is called, this value is returned if it has been set."}),"\n",(0,a.jsx)(t.h3,{id:"nextcolumn",children:"%NextColumn"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %NextColumn As %RawString [ Private ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"%NextColumn is used internally for managing partial rows sent to the client"}),"\n",(0,a.jsx)(t.h3,{id:"parameters-1",children:"%Parameters"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Parameters As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"%Parameters is a parameter metadata string containing the parameter name and type. Since result sets can be instantiated by multiple statement types (SELECT and CALL) there is a difference between the statement metadata and the result ROWTYPE metadata. The ROWTYPE metadata (all columns of RETURNCOL type) is completely contained in %Metadata. All other columns associated with the statement are described here. All of this behavior is encapsulated by %GetMetadata which returns a %SYS.StatementMetadata object."}),"\n",(0,a.jsx)(t.h3,{id:"privatetables",children:"%PrivateTables"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %PrivateTables As array Of %XSQL.DS.TempTable;\n"})}),"\n",(0,a.jsx)(t.p,{children:"%PrivateTables is an array of private temporary table orefs used by this result set subscripted by temp table name."}),"\n",(0,a.jsx)(t.h3,{id:"ltt",children:"%LTT"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %LTT As %RawString [ Internal, MultiDimensional ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"%LTT is an array of temporary table storage indexes subscripted by temp table name."}),"\n",(0,a.jsx)(t.h3,{id:"selectmode",children:"%SelectMode"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property %SelectMode As %Library.String [ InitialExpression = {$zu(115,5)}, Private ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"This property is set on instantiation to the current value of $zu(115,5). It cannot be set directly by the user. It is to be used by the result set object to format column and parameter values. SQL based result sets using SELECTMODE=RUNTIME will use this value. Possible values are:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"0 for LOGICAL mode."}),"\n",(0,a.jsx)(t.li,{children:"1 for ODBC mode."}),"\n",(0,a.jsx)(t.li,{children:"2 for DISPLAY mode."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"getstatement",children:"%GetStatement"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetStatement(ByRef sc As %Status) As INFORMATION.SCHEMA.STATEMENTS\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the asscoaited statement index object"}),"\n",(0,a.jsx)(t.h3,{id:"getselectmode",children:"getSelectMode"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method getSelectMode() As %Library.String [ CodeMode = expression ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"createsnapshot",children:"%CreateSnapshot"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %CreateSnapshot(storageOffset As %Integer, ByRef lastRow As %Integer, ByRef pRuntimeMode As %Integer = "", pStatic As %ResultSet.Static = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"%CreateSnapshot(storageOffset,lastRow) Copy all rows from the current position to the end of the cursor into a temporary global. Fetch rowCount rows into a temporary global. If the rowCount is -1 then all rows are fetched"}),"\n",(0,a.jsx)(t.h3,{id:"sendodbc",children:"%SendODBC"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendODBC() As %Library.Integer [ Abstract, Internal ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Fetch and send a series of rows for the ODBC/JDBC server. For internal use only."}),"\n",(0,a.jsx)(t.h3,{id:"fetchintotemp",children:"%FetchIntoTemp"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %FetchIntoTemp() As %Library.Integer [ Abstract, Internal ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Fetch and send all row's data to the ^IRIS.Temp.IRIS.Sql() global, used by %PARALLEL union queries. For internal use only."}),"\n",(0,a.jsx)(t.h3,{id:"senddelimitedrows",children:"%SendDelimitedRows"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %SendDelimitedRows(pMaxRows As %Integer = 0, pDelimiter As %String = "", ByRef pReturnCount As %Integer = 0) As %Status [ Abstract, Internal ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"Fetch and send a series of rows for continuous query client. For internal use only."}),"\n",(0,a.jsx)(t.h3,{id:"sendobjects",children:"%SendObjects"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendObjects(pObjectCount As %Integer = 0, pLock As %Integer = 0) As %Library.Integer [ Internal ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"%SendObjects iterates over the rows in the result set and calls object export (quick load) on each column that is present in ..%Objects. For internal use only."}),"\n",(0,a.jsx)(t.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(pProperty As %String(MAXLEN=255)) [ Internal ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Dispatch Get calls when the  does not exist in the class descriptor. This implementation normalizes case and attempts to dispatch to the correct property, effectively making properties corresponding to column values case insensitive. Also, SQLCODE, ROWID and ROWCOUNT are case-normalized and dispatched to the correct property."}),"\n",(0,a.jsx)(t.h3,{id:"dispatchmethod",children:"%DispatchMethod"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchMethod(pMethod As %String, Args...)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"getmetadata",children:"%GetMetadata"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetMetadata() As %SQL.StatementMetadata\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the result set metadata as a %SQL.StatementMetadata instance."}),"\n",(0,a.jsx)(t.h3,{id:"display",children:"%Display"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Display(pDelimiter As %String = {$Char(9)}, colAlign As %Integer = 0)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"displaymarkdown",children:"%DisplayMarkDown"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DisplayMarkDown()\n"})}),"\n",(0,a.jsx)(t.h3,{id:"print",children:"%Print"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Print(pDelimiter As %String = " ", colAlign As %Integer = 0, ByRef metadata As %ArrayOfObjects) As %Status\n'})}),"\n",(0,a.jsx)(t.p,{children:"%Print()"}),"\n",(0,a.jsx)(t.p,{children:"Write the current row to the current device. An optional column delimiter can be specified. No formatting is applied other than writing pDelimiter between column values. This can be useful for exporting result set data to tab delimited files."}),"\n",(0,a.jsx)(t.p,{children:"For example:"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:'set sql = "select name,home_street,home_city,home_state,home_zip from sample.person" set rset = ##class(%ResultSet.SQL).%Prepare(.sql,.err,"") if \'$Isobject(err) { set file="c:\\temp\\names.asv" open file:"WNS" use file while rset.%Next() { do rset.%Print($char(9)) } close file }'})}),"\n",(0,a.jsx)(t.p,{children:"Example data:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Cornell,Ezra M."}),(0,a.jsx)(t.th,{children:"340 Franklin Court"}),(0,a.jsx)(t.th,{children:"Sarasota"}),(0,a.jsx)(t.th,{children:"NY"}),(0,a.jsx)(t.th,{children:"12866"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Huff,Stephen A."}),(0,a.jsx)(t.td,{children:"548 Washington Blvd"}),(0,a.jsx)(t.td,{children:"Brownfield Center"}),(0,a.jsx)(t.td,{children:"MD"}),(0,a.jsx)(t.td,{children:"53436"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"Sands,Jeep Q."}),(0,a.jsx)(t.td,{children:"7298 Washington Drive"}),(0,a.jsx)(t.td,{children:"Xavier"}),(0,a.jsx)(t.td,{children:"WY"}),(0,a.jsx)(t.td,{children:"23685"})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"displayformatted",children:"%DisplayFormatted"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %DisplayFormatted(pFormat As %String = -1, ByRef pFileName As %String(MAXLEN="") = "", ByRef pMessages As %SQL.Manager.Messages = "", ByRef pFilesUsed As %String(MAXLEN="") = 0, pTranslateTable As %String(MAXLEN="") = "", pDelimiter As %String = {$c(9)})\n'})}),"\n",(0,a.jsx)(t.p,{children:"Display the contents of the result object. If formatted display is available then format the results using the requested format and, if appropriate, open the formatted results using the host OS. The output is directed to one or more files and messages are placed in a result set object. All file names used are returned in an array."}),"\n",(0,a.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pFormat"}),(0,a.jsxs)(t.td,{children:["The format applied to the result content. This parameter is also used to determine the file name extension. Supported formats are: -1%Display() format 0XML 1HTML 2PDF (requires a renderer such as FOP) 99TXT 100CSV If pFormat is specified as any number not listed above then it will default to TXT. pFormat can also be specified as XML, HTML, PDF, TXT or CSV. ",(0,a.jsx)(t.em,{children:"NOTE: pFormat of CSV/100 is not a true comma separated value, but instead uses TAB separated values."})]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pFileName"}),(0,a.jsx)(t.td,{children:"The base file name to be used to generate actual file names used for output. If no value is specified then a file name will be generated, using the TEMP folder defined for the InterSystems IRIS instance. This value is not expected to include an extension. An extension is added to this value to form the actual file used. Also, if nested results exist then a number is appended to the file name specified to produce a unique name for each result."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pMessages"}),(0,a.jsx)(t.td,{children:"Instance of a system result set class. If no value is passed then the system message result class is instantiated. This parameter is passed by reference. It is up to the caller to process the result set oref that is returned. pMessages.Count() returns the number of messages contained in the result set. pMessages.%Display() will display the messages on the current device. pMessages.%DisplayFormatted() is also implemented and can be used to display the messages using the selected format."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pFilesUsed"}),(0,a.jsx)(t.td,{children:"This pass-by-reference parameter will contain the number of files used to display the result content and the name of each file. pFilesUsed is the number of files and pFilesUsed(file_number) is the name of the file. The sequence of the files is the same sequence as the results are processed. For simple result objects, there is a single file. For context objects that can contain result set sequences, the results are output in the order they are returned and the files used are present in pFilesUsed in that same order."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pTranslateTable"}),(0,a.jsx)(t.td,{children:"This is the translate table used for the output files when the format is CSV or TXT. This parameter is optional."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"pDelimiter"}),(0,a.jsx)(t.td,{children:"The delimiter to use between columns in the export file. This parameter is optional and defaults to tab character if not specified."})]})]})]}),"\n",(0,a.jsx)(t.h3,{id:"getclientmetadata",children:"%GetClientMetadata"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %GetClientMetadata(ByRef pMetadata As %RawString = "") As %Status [ Final ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"This method returns the rowtype metadata, serialized for transport to clients. Its structure is based on the value of the public variable '%protocol' at the time the result set is instantiated."}),"\n",(0,a.jsx)(t.h3,{id:"getserializedmetadata",children:"%GetSerializedMetadata"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %GetSerializedMetadata(ByRef pMetadata As %RawString = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"DO NOT USE DIRECTLY"})," - use %GetClientMetadata instead Builds the serialized metadata for this result set."]})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var a=s(96540);const n={},r=a.createContext(n);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);