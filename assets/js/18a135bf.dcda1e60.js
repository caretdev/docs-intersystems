"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[34838],{60626:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>l,default:()=>i,frontMatter:()=>a,toc:()=>o});var t=r(74848),s=r(28453);const a={pagination_prev:null,pagination_next:null},l="%Library.Char",o=[{value:"Methods",id:"methods",level:2},{value:"LogicalToOdbc",id:"logicaltoodbc",level:3},{value:"LogicalToDisplay",id:"logicaltodisplay",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"librarychar",children:"%Library.Char"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Library.Char Extends %String [ System = 4 ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"%Char"})," data type class represents a fixed length character field."]}),"\n",(0,t.jsxs)(n.p,{children:["The logical value of the ",(0,t.jsx)(n.strong,{children:"%character field"})," data type is a character field."]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"logicaltoodbc",children:"LogicalToOdbc"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToOdbc(%val As %Char) As %String [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Converts %val, which represents a CHAR in logical format (no blank space padding), into format (blank padded on the right)."}),"\n",(0,t.jsx)(n.p,{children:"Returns the ODBC string for the logical value %val."}),"\n",(0,t.jsx)(n.h3,{id:"logicaltodisplay",children:"LogicalToDisplay"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToDisplay(%val As %Char) As %String [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Converts the value of %val, which is in logical format, into a display string. Removes all the null characters from the string."}),"\n",(0,t.jsx)(n.p,{children:"Returns the string value of %val."})]})}function i(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(96540);const s={},a=t.createContext(s);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);