"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[63155],{12257:(e,s,a)=>{a.r(s),a.d(s,{contentTitle:()=>r,default:()=>o,frontMatter:()=>i,toc:()=>l});var n=a(74848),t=a(28453);const i={pagination_prev:null,pagination_next:null},r="%Library.Name",l=[{value:"Parameters",id:"parameters",level:2},{value:"COLLATION",id:"collation",level:3},{value:"MAXLEN",id:"maxlen",level:3},{value:"INDEXSUBSCRIPTS",id:"indexsubscripts",level:3},{value:"XSDTYPE",id:"xsdtype",level:3},{value:"JSONTYPE",id:"jsontype",level:3},{value:"Methods",id:"methods",level:2},{value:"DisplayToLogical",id:"displaytological",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"LogicalToDisplay",id:"logicaltodisplay",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"libraryname",children:"%Library.Name"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Library.Name Extends %DataType [ SqlCategory = NAME, System = 2 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"%Name"})," data type class represents a string containing a name."]}),"\n",(0,n.jsxs)(s.p,{children:["The logical value of the ",(0,n.jsx)(s.strong,{children:"%Name"}),' data type is a string of the form "lastname,firstname".']}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"%Name"})," data type has special indexing support when used in conjunction with the %Storage.Persistent class (see the ",(0,n.jsx)(s.a,{href:"#INDEXSUBSCRIPTS",children:"INDEXSUBSCRIPTS"})," parameter)."]}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"collation",children:"COLLATION"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter COLLATION [ Constraint = ",ALPHAUP,EXACT,MINUS,MVR,PLUS,SPACE,COLLATE,SQLSTRING,SQLUPPER,STRING,TRUNCATE,UPPER,", Flags = ENUMEDIT ] = "SQLUPPER";\n'})}),"\n",(0,n.jsx)(s.p,{children:"The default collation value used for this data type."}),"\n",(0,n.jsx)(s.h3,{id:"maxlen",children:"MAXLEN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter MAXLEN As INTEGER = 25;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The maximum number of characters the string can contain."}),"\n",(0,n.jsx)(s.h3,{id:"indexsubscripts",children:"INDEXSUBSCRIPTS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter INDEXSUBSCRIPTS = 2;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The number of subscripts used by the attribute in indices. This parameter, if present, tells the methods of the %Storage.Persistent class (that is, the default storage structure) the number of subscripts used by the attribute in indices, using a comma as a delimiter in the property value."}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"%Name"})," data type has the value 2 for INDEXSUBSCRIPTS, meaning the 1st comma piece of the name (the last name) is stored as the first subscript and the 2nd comma piece of the name (the first name) is stored as the second subscript."]}),"\n",(0,n.jsx)(s.h3,{id:"xsdtype",children:"XSDTYPE"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter XSDTYPE = "string";\n'})}),"\n",(0,n.jsx)(s.p,{children:"Declares the XSD type used when projecting XML Schemas."}),"\n",(0,n.jsx)(s.h3,{id:"jsontype",children:"JSONTYPE"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter JSONTYPE = "string";\n'})}),"\n",(0,n.jsx)(s.p,{children:"JSONTYPE is JSON type used for this datatype."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"displaytological",children:"DisplayToLogical"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod DisplayToLogical(%val As %String = "") As %Name [ CodeMode = expression, ServerOnly = 0 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Converts the input value %val, which is a string representing a name, into the internal format."}),"\n",(0,n.jsx)(s.p,{children:"Returns the internal value of the input string %val."}),"\n",(0,n.jsx)(s.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsValid(%val As %RawString) As %Status [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Tests if the logical value %val, which is a string, is valid. The validation is based on the class parameter settings used for the class attribute this data type is associated with."}),"\n",(0,n.jsx)(s.h3,{id:"logicaltodisplay",children:"LogicalToDisplay"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod LogicalToDisplay(%val As %Name = "") As %String [ CodeMode = expression, ServerOnly = 0 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Converts the value of %val into a display string."}),"\n",(0,n.jsx)(s.p,{children:"Returns the formatted value of %val."})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>l});var n=a(96540);const t={},i=n.createContext(t);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);