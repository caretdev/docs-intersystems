"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[51064],{97647:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>l,toc:()=>a});var s=r(74848),n=r(28453);const l={pagination_prev:null,pagination_next:null},o="%XML.XSLT.CompiledStyleSheet",a=[{value:"Properties",id:"properties",level:2},{value:"ParsedSourceHandle",id:"parsedsourcehandle",level:3},{value:"Methods",id:"methods",level:2},{value:"CreateFromFile",id:"createfromfile",level:3},{value:"CreateFromStream",id:"createfromstream",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"ParsedSourceHandleGet",id:"parsedsourcehandleget",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"xmlxsltcompiledstylesheet",children:"%XML.XSLT.CompiledStyleSheet"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XML.XSLT.CompiledStyleSheet Extends %RegisteredObject [ System = 3 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"For details on using this class"}),", see ",(0,s.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25XML.XSLT.CompiledStyleSheet",children:"Performing XSLT Transformations"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Implements an interface to the XSLT CompiledStyleSheet. %XML.XSLT.CompiledStyleSheet should never be created directly with %New(), but via the CreateFromFile() or CreateFromStream() factory methods"}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"parsedsourcehandle",children:"ParsedSourceHandle"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property ParsedSourceHandle As %Integer;\n"})}),"\n",(0,s.jsx)(t.p,{children:"This property holds a handle to the parsed source"}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"createfromfile",children:"CreateFromFile"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateFromFile(pSource As %String, Output pCompiledStyleSheet As %XML.XSLT.CompiledStyleSheet, pErrorHandler As %XML.XSLT.ErrorHandler = {$$$NULLOREF}) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Use this method a create an instance of an %XML.XSLT.CompiledStyleSheet from a file path name."}),"\n",(0,s.jsx)(t.h3,{id:"createfromstream",children:"CreateFromStream"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateFromStream(pStream As %AbstractStream, Output pCompiledStyleSheet As %XML.XSLT.CompiledStyleSheet, pErrorHandler As %XML.XSLT.ErrorHandler = {$$$NULLOREF}) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Use this method to create an instance of an %XML.XSLT.CompiledStyleSheet from a binary stream"}),"\n",(0,s.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This callback method is invoked by the %New method to provide notification that a new instance of an object is being created. For this class, client code should NOT call this method directly via %New() but should use the 'CreateFromFile()' or 'CreateFromStream()' factory methods"}),"\n",(0,s.jsx)(t.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"parsedsourcehandleget",children:"ParsedSourceHandleGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ParsedSourceHandleGet()\n"})}),"\n",(0,s.jsx)(t.p,{children:"This accesses the parsed source handle which xalan uses to identify the previously parsed source document"})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var s=r(96540);const n={},l=s.createContext(n);function o(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);