"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[21434],{55606:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>o,toc:()=>i});var n=s(74848),r=s(28453);const o={pagination_prev:null,pagination_next:null},a="%Studio.SourceControl.CCREventHandler",i=[{value:"Parameters",id:"parameters",level:2},{value:"SrcVer",id:"srcver",level:3},{value:"Version",id:"version",level:3},{value:"Properties",id:"properties",level:2},{value:"RefreshPrompt",id:"refreshprompt",level:3},{value:"ItemSetID",id:"itemsetid",level:3},{value:"ItemSetItemList",id:"itemsetitemlist",level:3},{value:"ItemSetName",id:"itemsetname",level:3},{value:"Methods",id:"methods",level:2},{value:"RefreshPrepare",id:"refreshprepare",level:3},{value:"RefreshFinalize",id:"refreshfinalize",level:3},{value:"ItemSetBeforeLoad",id:"itemsetbeforeload",level:3},{value:"ItemSetAfterLoadToOS",id:"itemsetafterloadtoos",level:3},{value:"ItemSetAfterLoadToNS",id:"itemsetafterloadtons",level:3},{value:"OnToolsCompile",id:"ontoolscompile",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"studiosourcecontrolccreventhandler",children:"%Studio.SourceControl.CCREventHandler"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Studio.SourceControl.CCREventHandler Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"CCR Event Handlier superclass, this does nothing but provide interface for the real event handler classes to use. Subclass from this and implement the methods you need."}),"\n",(0,n.jsx)(t.p,{children:"The interface methods are all implemented as class methods so that the system can make their handler persistent if they so choose (the would need to fire the appropriate save logic from within one of the callback methods)."}),"\n",(0,n.jsx)(t.p,{children:"During a Refresh call, the same instance of the CCREventHandler class will be used to call RefreshPrepare as well as RefreshFinalize. This means that properties can be initilized in Prepare and used in Finalize."}),"\n",(0,n.jsx)(t.p,{children:"During an ItemSet load, the same instance will be used to call ItemSetBeforeLoad, ItemSetAfterLoadToOS. as well as ItemSetAfterLoadToNS. This allows properties to be accessed between each of the calls."}),"\n",(0,n.jsxs)(t.p,{children:["To activate the custom event handler, set the following global in CCR-controlled namespace:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.code,{children:'^SYS("SourceControl","EventHandler","Class")="Custom.MyEventHandler" '}),(0,n.jsx)(t.br,{}),"\nWhere the ",(0,n.jsx)(t.code,{children:"Custom.MyEventHandler.cls"})," class extends ",(0,n.jsx)(t.code,{children:"%Studio.SourceControl.CCREventHandler.cls"})]}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(t.h3,{id:"srcver",children:"SrcVer"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter SrcVer = "$Id: //iris/2024.3.0/databases/sys/cls/Studio/SourceControl/CCREventHandler.xml#1 $";\n'})}),"\n",(0,n.jsx)(t.p,{children:"This Parameter should be updated when synced from Perforce"}),"\n",(0,n.jsx)(t.h3,{id:"version",children:"Version"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter Version = 4;\n"})}),"\n",(0,n.jsx)(t.p,{children:"Revision number of this class when compiled as part of the //custom_ccrs/_common/config/... branch. This version will not be updated (by design) when the class is integrated to other branches. This allows the user to tell what version of the Studio client tools are in use."}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"refreshprompt",children:"RefreshPrompt"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property RefreshPrompt As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(t.p,{children:"This property is set to 1 if the Refresh is being run interactively and it is safe to prompt the user for input. If it is not true, do not issue any Read commands as it will hang when Refresh is run from Studio"}),"\n",(0,n.jsx)(t.h3,{id:"itemsetid",children:"ItemSetID"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property ItemSetID As %String;\n"})}),"\n",(0,n.jsx)(t.p,{children:"The ID of the %Studio.SourceControl.ItemSet object which is being loaded into the current namespace"}),"\n",(0,n.jsx)(t.h3,{id:"itemsetitemlist",children:"ItemSetItemList"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property ItemSetItemList As array Of %String;\n"})}),"\n",(0,n.jsx)(t.p,{children:"When an ItemSet is being loaded, its ItemSet is copied to this property."}),"\n",(0,n.jsx)(t.h3,{id:"itemsetname",children:"ItemSetName"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property ItemSetName As %String;\n"})}),"\n",(0,n.jsx)(t.p,{children:"The Name of the ItemSet being loaded"}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"refreshprepare",children:"RefreshPrepare"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method RefreshPrepare(ByRef abortRefresh As %Boolean) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"This method is called by the CCR Refresh logic, after the branch has been synced but before any of the items have been loaded into the namespace. It is intended for use to do any preparatory work that must be done in a certain order (e.g. creation of csp application definitions, security objects, etc)."}),"\n",(0,n.jsx)(t.p,{children:"If abortRefresh is set to 1 before returning to the caller, then the caller will abort the Refresh"}),"\n",(0,n.jsx)(t.h3,{id:"refreshfinalize",children:"RefreshFinalize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method RefreshFinalize() As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"This method is called by the CCR Refresh logic, after the items have been refreshed into the namespace. It is intended for any additional configuration work which may be necessary (e.g. initialization of reference tables, building of 3rd party sources, etc)"}),"\n",(0,n.jsx)(t.h3,{id:"itemsetbeforeload",children:"ItemSetBeforeLoad"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ItemSetBeforeLoad(ByRef abortLoad As %Boolean) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"This method is called during the loading of an ItemSet, before anything from the ItemSet has been loaded to the local disk yet (only the ItemSet object has been created)."}),"\n",(0,n.jsx)(t.p,{children:"If abortLoad is set to 1 before returning to the caller, then the caller will abort the ItemSet Load"}),"\n",(0,n.jsx)(t.h3,{id:"itemsetafterloadtoos",children:"ItemSetAfterLoadToOS"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ItemSetAfterLoadToOS(ByRef abortLoad As %Boolean) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"This method is called during the loading of an ItemSet, after the contents of the ItemSet have been extracted into the Source workspace, before they have been loaded into the namespace."}),"\n",(0,n.jsx)(t.p,{children:"If abortLoad is set to 1 before returning to the caller, then the caller will abort the ItemSet Load"}),"\n",(0,n.jsx)(t.h3,{id:"itemsetafterloadtons",children:"ItemSetAfterLoadToNS"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ItemSetAfterLoadToNS() As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"This method is called during the loading of an ItemSet, after the contents of the ItemSet have been loaded into the namespace, and after the ImplementCCR routine has been run"}),"\n",(0,n.jsx)(t.h3,{id:"ontoolscompile",children:"OnToolsCompile"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod OnToolsCompile() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Handles all compile-time logic for this class [Previously private]"})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(96540);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);