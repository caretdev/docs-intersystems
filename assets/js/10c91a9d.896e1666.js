"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[13781],{33203:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,toc:()=>l});var s=t(74848),r=t(28453);const a={pagination_prev:null,pagination_next:null},i="%Library.ArrayOfDataTypes",l=[{value:"Parameters",id:"parameters",level:2},{value:"ELEMENTTYPE",id:"elementtype",level:3},{value:"Properties",id:"properties",level:2},{value:"ElementType",id:"elementtype-1",level:3},{value:"Data",id:"data",level:3},{value:"Methods",id:"methods",level:2},{value:"Clear",id:"clear",level:3},{value:"Count",id:"count",level:3},{value:"IsDefined",id:"isdefined",level:3},{value:"Define",id:"define",level:3},{value:"Find",id:"find",level:3},{value:"GetNext",id:"getnext",level:3},{value:"GetPrevious",id:"getprevious",level:3},{value:"Next",id:"next",level:3},{value:"Previous",id:"previous",level:3},{value:"RemoveAt",id:"removeat",level:3},{value:"SetAt",id:"setat",level:3},{value:"%ValidateObject",id:"validateobject",level:3},{value:"BuildValueArray",id:"buildvaluearray",level:3},{value:"GetAt",id:"getat",level:3},{value:"%GetSerial",id:"getserial",level:3},{value:"%SetSerial",id:"setserial",level:3},{value:"LogicalToOdbc",id:"logicaltoodbc",level:3},{value:"OdbcToLogical",id:"odbctological",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"libraryarrayofdatatypes",children:"%Library.ArrayOfDataTypes"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Library.ArrayOfDataTypes Extends (%Collection.AbstractArrayOfDT, %SerialObject) [ ClassType = serial, OdbcType = VARCHAR, StorageStrategy = Custom, System = 2 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"For information on this class"}),", see ",(0,s.jsx)(n.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25Library.ArrayOfDataTypes",children:"Working with Collections"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The %ArrayOfDataTypes class represents an array of literal (i.e., data type) elements, each of which is associated with a unique key value. Keys can have any value, string or numeric."}),"\n",(0,s.jsx)(n.p,{children:"Refer to %Collection.AbstractArray for a description of the various array methods. These classes can be used 'standalone' to store a collection."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"elementtype",children:"ELEMENTTYPE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter ELEMENTTYPE = "%String";\n'})}),"\n",(0,s.jsx)(n.p,{children:"The type (class name) of the elements stored in the collection."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"elementtype-1",children:"ElementType"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property ElementType As %String(MAXLEN = 256) [ InitialExpression = {..#ELEMENTTYPE} ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"The type (classname:propertyname) of the elements stored in the collection."}),"\n",(0,s.jsx)(n.h3,{id:"data",children:"Data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Data As %String [ MultiDimensional ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"Data is a private property used to hold the contents of the array."}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"clear",children:"Clear"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method Clear() As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Clears the contents of the array."}),"\n",(0,s.jsx)(n.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,s.jsx)(n.h3,{id:"count",children:"Count"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method Count() As %Integer [ ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns the number of elements contained in the array."}),"\n",(0,s.jsx)(n.h3,{id:"isdefined",children:"IsDefined"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method IsDefined(key As %String) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns true (1) if a value is defined at location key, otherwise false (0)."}),"\n",(0,s.jsx)(n.h3,{id:"define",children:"Define"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method Define(key As %String) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"This method is deprecated."})}),"\n",(0,s.jsx)(n.p,{children:"Please use IsDefined instead."}),"\n",(0,s.jsx)(n.h3,{id:"find",children:"Find"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method Find(element As %String, key As %String) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:"Starting from, but not including, location key, finds the next element in the array with value equal to element."}),"\n",(0,s.jsx)(n.p,{children:'If key is a null string (""), the search starts at the beginning of the array.'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Find"}),' returns the key associated with the found element or null string ("") if no element is found.']}),"\n",(0,s.jsx)(n.h3,{id:"getnext",children:"GetNext"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetNext(ByRef key As %String) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:'Finds and returns the value of the element at the location after key in the array. If key is a null string (""), it returns the value of the first element in the array.'}),"\n",(0,s.jsx)(n.p,{children:'The value of key, which is passed by reference, is updated to the key value of the returned element or null string ("") if key is at the end of the array.'}),"\n",(0,s.jsx)(n.h3,{id:"getprevious",children:"GetPrevious"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetPrevious(ByRef key As %String) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:'Finds and returns the value of the element at the location before key in the array. If key is a null string (""), it returns the value of the last element in the array.'}),"\n",(0,s.jsx)(n.p,{children:'The value of key, which is passed by reference, is updated to the key value of the returned element or null string ("") if key is at the beginning of the array.'}),"\n",(0,s.jsx)(n.h3,{id:"next",children:"Next"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Method Next(key As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsxs)(n.p,{children:['Finds and returns the key value of the element at the location following key in the array. If key is a null string (""), then ',(0,s.jsx)(n.strong,{children:"Next"})," returns the key value for the first element in the array."]}),"\n",(0,s.jsx)(n.h3,{id:"previous",children:"Previous"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Method Previous(key As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(n.p,{children:'Finds and returns the key value of the element at the location preceding key in the array. If key is a null string (""), then Next returns the key value for the last element in the array.'}),"\n",(0,s.jsx)(n.h3,{id:"removeat",children:"RemoveAt"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method RemoveAt(key As %String) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:"Removes the element associated with key in the array."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"RemoveAt"}),' returns the value of the removed element or null string ("") if no element was removed.']}),"\n",(0,s.jsx)(n.h3,{id:"setat",children:"SetAt"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method SetAt(element As %String, key As %String) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Sets the value of the element associated with key to element."}),"\n",(0,s.jsx)(n.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,s.jsx)(n.h3,{id:"validateobject",children:"%ValidateObject"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ValidateObject(force As %Integer) As %Status\n"})}),"\n",(0,s.jsx)(n.h3,{id:"buildvaluearray",children:"BuildValueArray"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod BuildValueArray(serialized As %Binary, array As %Binary) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Constructs array(key)=value for each element in the serialval value."}),"\n",(0,s.jsx)(n.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,s.jsx)(n.h3,{id:"getat",children:"GetAt"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Method GetAt(key As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Finds and returns the value of the element associated with key."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"GetAt"}),' returns the value of the element associated with key or null string ("") if no element is found.']}),"\n",(0,s.jsx)(n.h3,{id:"getserial",children:"%GetSerial"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetSerial(force As %Integer = 0) As %String [ Private ]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"setserial",children:"%SetSerial"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SetSerial(serialized As %String) As %Status [ Private ]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"logicaltoodbc",children:"LogicalToOdbc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod LogicalToOdbc(val As %String = "") As %String\n'})}),"\n",(0,s.jsx)(n.p,{children:"Converts the serial state of this array object to a delimited string using the value of the ODBCDELIMITER parameter as a delimiter."}),"\n",(0,s.jsx)(n.h3,{id:"odbctological",children:"OdbcToLogical"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod OdbcToLogical(val As %String = "") As %String\n'})}),"\n",(0,s.jsx)(n.p,{children:"Converts the value of an incoming delimited string to a serialized state using the value of the ODBCDELIMITER parameter as a delimiter."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(96540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);