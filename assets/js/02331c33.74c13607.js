"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[97577],{45939:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>n,default:()=>r,frontMatter:()=>a,toc:()=>c});var i=s(74848),l=s(28453);const a={pagination_prev:null,pagination_next:null},n="%CSP.WhitelistUtils",c=[{value:"Parameters",id:"parameters",level:2},{value:"WHITELIST",id:"whitelist",level:3},{value:"Methods",id:"methods",level:2},{value:"SelectSearchNodes",id:"selectsearchnodes",level:3},{value:"SelectTargetClasses",id:"selecttargetclasses",level:3},{value:"IdentifyZenMethods",id:"identifyzenmethods",level:3},{value:"CommitWhitelist",id:"commitwhitelist",level:3},{value:"CheckSecurity",id:"checksecurity",level:3},{value:"%InitializeWhitelist",id:"initializewhitelist",level:3},{value:"%ActivateWhitelist",id:"activatewhitelist",level:3},{value:"%DeactivateWhitelist",id:"deactivatewhitelist",level:3},{value:"%DisableMethod",id:"disablemethod",level:3},{value:"%EnableMethod",id:"enablemethod",level:3},{value:"%IsWhitelistEnabled",id:"iswhitelistenabled",level:3},{value:"%IsMethodEnabled",id:"ismethodenabled",level:3}];function h(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"cspwhitelistutils",children:"%CSP.WhitelistUtils"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Class %CSP.WhitelistUtils [ Abstract, Final, System = 3 ]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Whitelist facility to selectively restrict web access to [ZenMethod] calls. The whitelist in question is namespace specific. This allows system administrators to configure the visibility of system level calls based upon from whence the call originated.  The whitelist is checked when a callback first attempts to call either an instance or class method that has previously been compiled with a [ZenMethod] tag. This check is only done when the request comes in from the client, purely internal invocations of the methods are not restricted. If whitelisting is enabled for the namespace, for a given method to be called, it must be enabled in the whitelist. Methods that are explicitly disabled or simply not listed in the whitelist are rejected and an exception is thrown ",(0,i.jsx)(t.strong,{children:"How to Set-up and Enable Whitelisting:"})," The call",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Do ##class(%CSP.WhitelistUtils).%InitializeWhitelist()"}),(0,i.jsx)(t.br,{}),"\nwill scan the current namespace for all defined or inherited [ZenMethod] functions. Each function discovered will be added to the whitelist and enabled by default (this is done for backwards compatibility). If a previous whitelist has been defined, this call will reinitialize it. The newly minted whitelist will not yet be active (and if whitelisting was previsously active, it will be turned off until the new list has been approved. ",(0,i.jsx)(t.strong,{children:"Note:"})," Depending on the size and complexity of the class dictionary in the current namespace, this method may take several seconds to complete The default initial list may be edited using the following two routines: ",(0,i.jsx)(t.code,{children:"Do ##class(%CSP.WhitelistUtils).%EnableMethod(myClass,myMethod)"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Do ##class(%CSP.WhitelistUtils).%DisableMethod(myClass,myMethod)"})," The first adds or edits a given entry, approving it for general access. The second explicitly bars web applications from calling the method in question. To approve the current whitelist for use and start enforcing the new policy, call:",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Do ##class(%CSP.WhitelistUtils).%ActivateWhitelist()"})," To temporarily disable whitelisting without reconfiguring the whitelist itself, call:",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Do ##class(%CSP.WhitelistUtils).%DeactivateWhitelist()"})," To see if whitelisting is active for the namespace, call:",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Write ##class(%CSP.WhitelistUtils).%IsWhitelistEnabled()"})," To query the individual entries of the whitelist, call:",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.code,{children:"Write ##class(%CSP.WhitelistUtils).%IsMethodEnabled(myClass,myMethod)"})," Attempts to create, edit or change the activity status of the whitelist require ",(0,i.jsx)(t.strong,{children:"Admin_Secure:USE"})," privilege. Queries to inspect the whitelist or its status are not so restricted."]}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"whitelist",children:"WHITELIST"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter WHITELIST As STRING [ Final, Internal ] = "^ISCMethodWhitelist";\n'})}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"selectsearchnodes",children:"SelectSearchNodes"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SelectSearchNodes(className As %String, ref As %String, criteria As %DynamicObject) As %DynamicObject [ Internal ]\n"})}),"\n",(0,i.jsx)(t.p,{children:'Search the named class for the methods matching the search criteria Return an AET consisting of the name of the class searched (class) and an array (methods) of all names of methods matching the criteria or "" if no methods matching the criteria are found'}),"\n",(0,i.jsx)(t.h3,{id:"selecttargetclasses",children:"SelectTargetClasses"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod SelectTargetClasses(PatternList As %String = "*.cls", System As %Boolean = 0, Max As %Integer = 20000) As %DynamicArray [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"Get an array of matching classname hits based on a search pattern, a classname pattern, and assorted flags"}),"\n",(0,i.jsx)(t.h3,{id:"identifyzenmethods",children:"IdentifyZenMethods"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IdentifyZenMethods(aet) As %DynamicObject [ Internal ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Build an object, organized by classname, for all the ZenMethods found in the current namespace."}),"\n",(0,i.jsx)(t.h3,{id:"commitwhitelist",children:"CommitWhitelist"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CommitWhitelist(aet As %DynamicArray) [ Internal ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"checksecurity",children:"CheckSecurity"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CheckSecurity() As %Boolean [ Internal ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Validate that the user has appropriate access."}),"\n",(0,i.jsx)(t.h3,{id:"initializewhitelist",children:"%InitializeWhitelist"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %InitializeWhitelist() As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This method identifies (and tags as approved) all methods tagged as ZenMethod callbacks in the current namespace. This data is used to build the initial whitelist. This list may then be edited (using the methods found here) as needed. This call does ",(0,i.jsx)(t.strong,{children:"NOT"})," activate the use of the whitelist. That is done by a separate call (%ActivateWhitelist) once the whitelist has been configured to the site administrators' satisfaction.",(0,i.jsx)(t.br,{}),"\nIf a previous version of the whitelist was in place, this call will overwrite its settings in favor of a fresh scan and will mark the list as inactive pending approval."]}),"\n",(0,i.jsx)(t.h3,{id:"activatewhitelist",children:"%ActivateWhitelist"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %ActivateWhitelist() As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Turn on the use of the whitelist for the current namespace. When activated, all web callbacks to zenMethods will be tested against the whitelist. Any method that is either missing or set to false (0) will be disallowed. Methods set to true (1) in the whitelist will be allowed to execute according to normal role and privilege restrictions."}),"\n",(0,i.jsx)(t.h3,{id:"deactivatewhitelist",children:"%DeactivateWhitelist"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %DeactivateWhitelist() As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Turn off (but do not otherwise alter) the use of the whitelist for the current namespace. When deactivated, all web callbacks to zenMethods will be permitted according to normal role and privilege restrictions."}),"\n",(0,i.jsx)(t.h3,{id:"disablemethod",children:"%DisableMethod"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %DisableMethod(pClass As %String, pMethod As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Tag a given member of the whitelist as false (meaning do not execute). The entry remains in the whitelist."}),"\n",(0,i.jsx)(t.h3,{id:"enablemethod",children:"%EnableMethod"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %EnableMethod(pClass As %String, pMethod As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Tag a given member of the whitelist as true (meaning ok to execute). When the whitelist is active, a method must both appear in the whitelist and be set to true in order for the method to be called from a web access point."}),"\n",(0,i.jsx)(t.h3,{id:"iswhitelistenabled",children:"%IsWhitelistEnabled"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %IsWhitelistEnabled() As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Test to see if whitelist checking is enabled for this namespace"}),"\n",(0,i.jsx)(t.h3,{id:"ismethodenabled",children:"%IsMethodEnabled"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %IsMethodEnabled(pClass As %String, pMethod As %String) As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Test to see if the given method call should be allowed under the current whitelist policy"})]})}function r(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>c});var i=s(96540);const l={},a=i.createContext(l);function n(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);