"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[19916],{29127:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>o,frontMatter:()=>a,toc:()=>l});var n=t(74848),r=t(28453);const a={pagination_prev:null,pagination_next:null},i="%SQL.Manager.Messages",l=[{value:"Properties",id:"properties",level:2},{value:"Message",id:"message",level:3},{value:"Messages",id:"messages",level:3},{value:"%currentRow",id:"currentrow",level:3},{value:"AtEnd",id:"atend",level:3},{value:"Methods",id:"methods",level:2},{value:"%OpenCursor",id:"opencursor",level:3},{value:"%Next",id:"next",level:3},{value:"Count",id:"count",level:3},{value:"Insert",id:"insert",level:3},{value:"%SetIterator",id:"setiterator",level:3},{value:"%DisplayFormatted",id:"displayformatted",level:3},{value:"Parameters",id:"parameters",level:4},{value:"%Display",id:"display",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"sqlmanagermessages",children:"%SQL.Manager.Messages"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %SQL.Manager.Messages Extends %SQL.CustomResultSet [ System = 4 ]\n"})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"message",children:"Message"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Message As %String(MAXLEN = 200);\n"})}),"\n",(0,n.jsx)(s.h3,{id:"messages",children:"Messages"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Messages As list Of %String(MAXLEN = "") [ Private ];\n'})}),"\n",(0,n.jsx)(s.h3,{id:"currentrow",children:"%currentRow"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %currentRow As %Integer [ Private ];\n"})}),"\n",(0,n.jsx)(s.h3,{id:"atend",children:"AtEnd"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AtEnd As %Integer [ Private ];\n"})}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"opencursor",children:"%OpenCursor"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OpenCursor() As %Library.Status [ Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Implement code to open the cursor here. You may also define new formal arguments. Any arguments defined will be automatically added to the constructor interface and callers can specify actual arguments in the call to %New()."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'\tmethod %OpenCursor(pBeginDate as %Date = "", pEndDate as %Date = "") as %Library.Status [ private ] \t\t{ \t\t\tset ..BeginDate = pBeginDate \t\t\tset ..EndDate = $Select(pEndDate\'="":pEndDate,1:$H) \t\t\tquit $$$OK \t\t} \n'})}),"\n",(0,n.jsx)(s.p,{children:"Given the above example implementation of %OpenCursor, the following is a valid call to instantiate a new instance."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"\tset tResult = ##class(MyCustom.ResultSet).%New(,$H-30,$H-10) \n"})}),"\n",(0,n.jsx)(s.p,{children:"To report an error from %OpenCursor just set ..%SQLCODE and %Message to appropriate values. To report no rows found, set %SQLCODE to 100. Errors are indicated by negative ..%SQLCODE values."}),"\n",(0,n.jsx)(s.h3,{id:"next",children:"%Next"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %Next(ByRef sc As %Library.Status = {$$$OK}) As %Library.Integer\n"})}),"\n",(0,n.jsx)(s.p,{children:"Advance to the next row in the result referenced by %ProcCursor. Returns 0 if the cursor is at the end of the result set. An optional argument contains a %Status value on return. This %Status value indicates success or failure of the %Next call. %SQLCODE is also set by %Next. This implementation is overridden by classes that implement the result set interface."}),"\n",(0,n.jsx)(s.h3,{id:"count",children:"Count"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Count() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"insert",children:"Insert"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Insert(pMessage As %String(MAXLEN=200)) [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"setiterator",children:"%SetIterator"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %SetIterator(pRowNumber As %Library.Integer = 0) As %Library.Integer\n"})}),"\n",(0,n.jsx)(s.h3,{id:"displayformatted",children:"%DisplayFormatted"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayFormatted(pFormat As %String = -1, ByRef pFileName As %String(MAXLEN="") = "", ByRef pMessages As %SQL.Manager.Messages = "", ByRef pFilesUsed As %String(MAXLEN="") = 0, pTranslateTable As %String(MAXLEN="") = "", pDelimiter As %String = {$c(9)})\n'})}),"\n",(0,n.jsx)(s.p,{children:"Display the contents of the result object. If formatted display is available then format the results using the requested format and, if appropriate, open the formatted results using the host OS. The output is directed to one or more files and messages are placed in a result set object. All file names used are returned in an array."}),"\n",(0,n.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pFormat"}),(0,n.jsx)(s.td,{children:"The format applied to the result content. This parameter is also used to determine the file name extension. Supported formats are: -1%Display() format 0XML 1HTML 2PDF (requires a renderer such as FOP) 99TXT If pFormat is specified as any number not listed above then it will default to TXT. pFormat can also be specified as XML, HTML, PDF, or TXT."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pFileName"}),(0,n.jsx)(s.td,{children:"The base file name to be used to generate actual file names used for output. If no value is specified then a file name will be generated, using the TEMP folder defined for the InterSystems IRIS instance. This value is not expected to include an extension. An extension is added to this value to form the actual file used. Also, if nested results exist then a number is appended to the file name specified to produce a unique name for each result."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pMessages"}),(0,n.jsx)(s.td,{children:"Instance of a system result set class. If no value is passed then the system message result class is instantiated. This parameter is passed by reference. It is up to the caller to process the result set oref that is returned. pMessages.Count() returns the number of messages contained in the result set. pMessages.%Display() will display the messages on the current device. pMessages.%DisplayFormatted() is also implemented and can be used to display the messages using the selected format."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pFilesUsed"}),(0,n.jsx)(s.td,{children:"This pass-by-reference parameter will contain the number of files used to display the result content and the name of each file. pFilesUsed is the number of files and pFilesUsed(file_number) is the name of the file. The sequence of the files is the same sequence as the results are processed. For simple result objects, there is a single file. For context objects that can contain result set sequences, the results are output in the order they are returned and the files used are present in pFilesUsed in that same order."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pTranslateTable"}),(0,n.jsx)(s.td,{children:"This is the translate table used for the output files when the format is CSV or TXT. This parameter is optional."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"pDelimiter"}),(0,n.jsx)(s.td,{children:"The delimiter to use between columns in the export file. This parameter is optional and defaults to tab character if not specified."})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"display",children:"%Display"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %Display(pDelimiter As %String = {$Char(9)})\n"})})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>l});var n=t(96540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);