"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[79514],{4514:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>o,frontMatter:()=>a,toc:()=>r});var i=t(74848),n=t(28453);const a={pagination_prev:null,pagination_next:null},l="%Studio.Project",r=[{value:"Parameters",id:"parameters",level:2},{value:"SQLPUBLICSECURITY",id:"sqlpublicsecurity",level:3},{value:"Properties",id:"properties",level:2},{value:"Name",id:"name",level:3},{value:"LastModified",id:"lastmodified",level:3},{value:"Description",id:"description",level:3},{value:"Target",id:"target",level:3},{value:"TargetType",id:"targettype",level:3},{value:"RunInTerminal",id:"runinterminal",level:3},{value:"HttpServer",id:"httpserver",level:3},{value:"Locked",id:"locked",level:3},{value:"TerminalUsername",id:"terminalusername",level:3},{value:"TerminalPassword",id:"terminalpassword",level:3},{value:"TerminalPort",id:"terminalport",level:3},{value:"Projections",id:"projections",level:3},{value:"Defines",id:"defines",level:3},{value:"DebugStepping",id:"debugstepping",level:3},{value:"Stream",id:"stream",level:3},{value:"StreamName",id:"streamname",level:3},{value:"Items",id:"items",level:3},{value:"BreakPoints",id:"breakpoints",level:3},{value:"WatchVariables",id:"watchvariables",level:3},{value:"WatchPoints",id:"watchpoints",level:3},{value:"Methods",id:"methods",level:2},{value:"TargetNormalize",id:"targetnormalize",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"%OnOpen",id:"onopen",level:3},{value:"%OnBeforeSave",id:"onbeforesave",level:3},{value:"%OnAfterSave",id:"onaftersave",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"%IsModified",id:"ismodified",level:3},{value:"%ObjectModified",id:"objectmodified",level:3},{value:"%OnDelete",id:"ondelete",level:3},{value:"GetDate",id:"getdate",level:3},{value:"NameSet",id:"nameset",level:3},{value:"NameIsValid",id:"nameisvalid",level:3},{value:"Delete",id:"delete",level:3},{value:"Lock",id:"lock",level:3},{value:"Unlock",id:"unlock",level:3},{value:"LockItem",id:"lockitem",level:3},{value:"CreateClone",id:"createclone",level:3},{value:"AddItem",id:"additem",level:3},{value:"RemoveItem",id:"removeitem",level:3},{value:"AddBreakPoint",id:"addbreakpoint",level:3},{value:"RemoveBreakPoint",id:"removebreakpoint",level:3},{value:"RemoveBreakPointsForRoutine",id:"removebreakpointsforroutine",level:3},{value:"RemoveAllBreakPoints",id:"removeallbreakpoints",level:3},{value:"AddWatchPoint",id:"addwatchpoint",level:3},{value:"RemoveWatchPoint",id:"removewatchpoint",level:3},{value:"RemoveAllWatchPoints",id:"removeallwatchpoints",level:3},{value:"AddWatchVariable",id:"addwatchvariable",level:3},{value:"RemoveWatchVariable",id:"removewatchvariable",level:3},{value:"RemoveAllWatchVariables",id:"removeallwatchvariables",level:3},{value:"GetCurrentTimeStamp",id:"getcurrenttimestamp",level:3},{value:"ListWebPages",id:"listwebpages",level:3},{value:"Compile",id:"compile",level:3},{value:"realCompile",id:"realcompile",level:3},{value:"compileUserType",id:"compileusertype",level:3},{value:"Export",id:"export",level:3},{value:"Check",id:"check",level:3},{value:"DeployToGbl",id:"deploytogbl",level:3},{value:"DeployToFile",id:"deploytofile",level:3},{value:"Deploy",id:"deploy",level:3},{value:"addclass",id:"addclass",level:3},{value:"createDatabase",id:"createdatabase",level:3},{value:"deployToDatabase",id:"deploytodatabase",level:3},{value:"deployGbl",id:"deploygbl",level:3},{value:"packGbls",id:"packgbls",level:3},{value:"BackupDeployContent",id:"backupdeploycontent",level:3},{value:"InstallFromFile",id:"installfromfile",level:3},{value:"InstallFromGbl",id:"installfromgbl",level:3},{value:"internalInstall",id:"internalinstall",level:3},{value:"DeployToStream",id:"deploytostream",level:3},{value:"ExportToStream",id:"exporttostream",level:3},{value:"SetStreamName",id:"setstreamname",level:3},{value:"GetStreamName",id:"getstreamname",level:3},{value:"ExportList",id:"exportlist",level:3},{value:"ExportListToStream",id:"exportlisttostream",level:3},{value:"Import",id:"import",level:3},{value:"ImportFromStream",id:"importfromstream",level:3},{value:"ExportCDLToStream",id:"exportcdltostream",level:3},{value:"ExportRtnToStream",id:"exportrtntostream",level:3},{value:"ExportRtn",id:"exportrtn",level:3},{value:"sLoadLargeList",id:"sloadlargelist",level:3},{value:"sLoadStreamLargeList",id:"sloadstreamlargelist",level:3},{value:"sCompileLargeList",id:"scompilelargelist",level:3},{value:"StreamToArray",id:"streamtoarray",level:3},{value:"ArrayToStream",id:"arraytostream",level:3},{value:"ProjectItemsListExecute",id:"projectitemslistexecute",level:3},{value:"ProjectItemsListClose",id:"projectitemslistclose",level:3},{value:"ProjectItemsListFetch",id:"projectitemslistfetch",level:3},{value:"ProjectItemsListFetchRows",id:"projectitemslistfetchrows",level:3},{value:"FindInProject",id:"findinproject",level:3},{value:"FindInFilesAtelierv6",id:"findinfilesatelierv6",level:3},{value:"FindInFiles",id:"findinfiles",level:3},{value:"pattern",id:"pattern",level:3},{value:"searchItem",id:"searchitem",level:3},{value:"searchClassNode",id:"searchclassnode",level:3},{value:"FindInFilesRegex",id:"findinfilesregex",level:3},{value:"searchItemRegex",id:"searchitemregex",level:3},{value:"searchClassNodeRegex",id:"searchclassnoderegex",level:3},{value:"DeleteItem",id:"deleteitem",level:3},{value:"NormalizeName",id:"normalizename",level:3},{value:"Normalize",id:"normalize",level:3},{value:"IsUpToDate",id:"isuptodate",level:3}];function c(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"studioproject",children:"%Studio.Project"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Studio.Project Extends (%Persistent, %XML.Adaptor) [ System = 3 ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Represents a Studio Project."}),"\n",(0,i.jsxs)(s.p,{children:["Many methods in this class use the qspec argument, which is a list of flags or qualifiers. See ",(0,i.jsx)(s.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=ObjectScript+qspec",children:"System Flags and Qualifiers"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(s.h3,{id:"sqlpublicsecurity",children:"SQLPUBLICSECURITY"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter SQLPUBLICSECURITY = "{""Project_ProjectItemsList"":""Requires:%Development:USE"",""Project_WatchVariablesList"":""Requires:%Development:USE"",""Project_BreakPointsList"":""Requires:%Development:USE"",""Project_WatchPointsList"":""Requires:%Development:USE""}";\n'})}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"name",children:"Name"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Name As %String(MAXLEN = 64, XMLNAME = "name", XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"lastmodified",children:"LastModified"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property LastModified As %Studio.TimeStamp(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Description As %String(MAXLEN = 4000, XMLNAME = "ProjectDescription", XMLPROJECTION = "element");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"target",children:"Target"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Target As %String(MAXLEN = 256, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"targettype",children:"TargetType"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property TargetType As %Integer(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"runinterminal",children:"RunInTerminal"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property RunInTerminal As %Boolean(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"httpserver",children:"HttpServer"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property HttpServer As %String(MAXLEN = 256, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"locked",children:"Locked"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Locked As %Integer(XMLPROJECTION = "none") [ Transient ];\n'})}),"\n",(0,i.jsx)(s.h3,{id:"terminalusername",children:"TerminalUsername"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property TerminalUsername As %String(MAXLEN = 64, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"terminalpassword",children:"TerminalPassword"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property TerminalPassword As %String(MAXLEN = 64, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"terminalport",children:"TerminalPort"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property TerminalPort As %Integer(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"projections",children:"Projections"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Projections As list Of %String(MAXLEN = 128, XMLPROJECTION = "none");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"defines",children:"Defines"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Defines As %String(MAXLEN = 4000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"debugstepping",children:"DebugStepping"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property DebugStepping As %String(MAXLEN = 64, XMLPROJECTION = "none");\n'})}),"\n",(0,i.jsx)(s.h3,{id:"stream",children:"Stream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property Stream As %FileBinaryStream(XMLPROJECTION = "none") [ Transient ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Temporary stream for passing information between InterSystems IRIS and client system."}),"\n",(0,i.jsx)(s.h3,{id:"streamname",children:"StreamName"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property StreamName As %String(MAXLEN = 256, XMLPROJECTION = "none") [ Transient ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Temporary name of the stream"}),"\n",(0,i.jsx)(s.h3,{id:"items",children:"Items"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship Items As ProjectItem(XMLITEMNAME = "ProjectItem", XMLPROJECTION = "wrapped") [ Cardinality = children, Inverse = Project ];\n'})}),"\n",(0,i.jsx)(s.h3,{id:"breakpoints",children:"BreakPoints"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship BreakPoints As BreakPoint(XMLITEMNAME = "BreakPoint", XMLPROJECTION = "wrapped") [ Cardinality = children, Inverse = Project ];\n'})}),"\n",(0,i.jsx)(s.h3,{id:"watchvariables",children:"WatchVariables"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship WatchVariables As WatchVariable(XMLITEMNAME = "WatchVariable", XMLPROJECTION = "wrapped") [ Cardinality = children, Inverse = Project ];\n'})}),"\n",(0,i.jsx)(s.h3,{id:"watchpoints",children:"WatchPoints"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship WatchPoints As WatchPoint(XMLITEMNAME = "WatchPoint", XMLPROJECTION = "wrapped") [ Cardinality = children, Inverse = Project ];\n'})}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"targetnormalize",children:"TargetNormalize"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod TargetNormalize(val As %String) As %String\n"})}),"\n",(0,i.jsx)(s.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"onopen",children:"%OnOpen"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnOpen() As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"onbeforesave",children:"%OnBeforeSave"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnBeforeSave(insert As %Boolean) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"onaftersave",children:"%OnAfterSave"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterSave(insert As %Boolean) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"ismodified",children:"%IsModified"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %IsModified() As %Integer\n"})}),"\n",(0,i.jsx)(s.h3,{id:"objectmodified",children:"%ObjectModified"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ObjectModified() As %Integer\n"})}),"\n",(0,i.jsx)(s.h3,{id:"ondelete",children:"%OnDelete"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnDelete(oid As %ObjectIdentity) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"This callback method is invoked by the %Delete method to provide notification that the object specified by oid is being deleted."}),"\n",(0,i.jsx)(s.p,{children:"If this method returns an error then the object will not be deleted."}),"\n",(0,i.jsx)(s.h3,{id:"getdate",children:"GetDate"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDate(name As %String) As %TimeStamp\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return the timestamp the project with name was last updated."}),"\n",(0,i.jsx)(s.h3,{id:"nameset",children:"NameSet"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method NameSet(val As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"nameisvalid",children:"NameIsValid"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod NameIsValid(val As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"delete",children:"Delete"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Delete(id As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Delete this project"}),"\n",(0,i.jsx)(s.h3,{id:"lock",children:"Lock"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method Lock() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Lock the project."}),"\n",(0,i.jsx)(s.h3,{id:"unlock",children:"Unlock"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method Unlock() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Unlock the project."}),"\n",(0,i.jsx)(s.h3,{id:"lockitem",children:"LockItem"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LockItem(name As %String, lock As %Boolean) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Lock a project with the name. If lock is true then it is locked and if it is false then it is unlocked."}),"\n",(0,i.jsx)(s.h3,{id:"createclone",children:"CreateClone"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method CreateClone(name As %String) As %Status [ ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Create a clone of this project and then save it with a new name. Note that if the target name already exists then it will be deleted without warning. It is the responsibility of the caller to check if it wishes to overwrite the new name or not."}),"\n",(0,i.jsx)(s.h3,{id:"additem",children:"AddItem"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method AddItem(name As %String, type As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Add an item to the project, you can just pass the full name in the name argument and nothing in the type argument and this will add the correct type information automatically."}),"\n",(0,i.jsx)(s.h3,{id:"removeitem",children:"RemoveItem"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method RemoveItem(name As %String, type As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.h3,{id:"addbreakpoint",children:"AddBreakPoint"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method AddBreakPoint(rtn As %String, offset As %Integer, condition As %String = "", label As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.h3,{id:"removebreakpoint",children:"RemoveBreakPoint"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method RemoveBreakPoint(rtn As %String, offset As %Integer, label As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.h3,{id:"removebreakpointsforroutine",children:"RemoveBreakPointsForRoutine"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveBreakPointsForRoutine(rtn As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"removeallbreakpoints",children:"RemoveAllBreakPoints"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveAllBreakPoints() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Remove all break points from a project."}),"\n",(0,i.jsx)(s.h3,{id:"addwatchpoint",children:"AddWatchPoint"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method AddWatchPoint(var As %String, condition As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.h3,{id:"removewatchpoint",children:"RemoveWatchPoint"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method RemoveWatchPoint(var As %String, condition As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.h3,{id:"removeallwatchpoints",children:"RemoveAllWatchPoints"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveAllWatchPoints() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Remove all break points from a project."}),"\n",(0,i.jsx)(s.h3,{id:"addwatchvariable",children:"AddWatchVariable"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method AddWatchVariable(variable As %String, pane As %Integer) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"removewatchvariable",children:"RemoveWatchVariable"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveWatchVariable(variable As %String, pane As %Integer) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"removeallwatchvariables",children:"RemoveAllWatchVariables"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveAllWatchVariables() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Remove all watch variables from a project."}),"\n",(0,i.jsx)(s.h3,{id:"getcurrenttimestamp",children:"GetCurrentTimeStamp"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetCurrentTimeStamp() As %TimeStamp\n"})}),"\n",(0,i.jsx)(s.p,{children:"Get the on-disk timestamp for the project."}),"\n",(0,i.jsx)(s.h3,{id:"listwebpages",children:"ListWebPages"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ListWebPages(ByRef pages As %String(MAXSTRING=""), qspec As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Return comma separated list of items in this project which can be called as web pages"}),"\n",(0,i.jsx)(s.h3,{id:"compile",children:"Compile"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method Compile(qspec As %String = "", ByRef %errorlog As %String) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Compile all the items in this project, using the qspec. The order of compilation is INT, CLS, MAC, CSR, CSP, other."}),"\n",(0,i.jsx)(s.h3,{id:"realcompile",children:"realCompile"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod realCompile(qstruct, ByRef %errorlog As %String, ByRef itemlist As %String, ByRef updatedlist As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Compile all the items in itemlist. Used by Compile and Import."}),"\n",(0,i.jsx)(s.h3,{id:"compileusertype",children:"compileUserType"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod compileUserType(name As %String, ByRef qstruct As %String) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"export",children:"Export"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method Export(ByRef filename As %String, qspec As %String, justproject As %Boolean, ByRef %errorlog As %String, Charset As %String = "", ShowFilename As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Export this project in XML format to the filename."}),"\n",(0,i.jsx)(s.p,{children:"If the justproject is true then it will only export the project definition, but not any items in this project, otherwise the default behavour is to export all the items in the project to the same XML file."}),"\n",(0,i.jsx)(s.p,{children:"The qspec are the standard cache objects qualifiers."}),"\n",(0,i.jsx)(s.h3,{id:"check",children:"Check"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method Check() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Check the project so that if any items are do not exist then we will remove them from the project"}),"\n",(0,i.jsx)(s.h3,{id:"deploytogbl",children:"DeployToGbl"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method DeployToGbl(gbl As %String, qspec As %String, removesource As %Boolean = 0) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Package up this project into a global for deployment. This can be imported using the InstallFromGbl. The qualifiers are used to determine if we should export selectivity information using the /exportselectivity qualifier. Also the /keepsource will determine if we add intermediate compilation files such as User.Test.1.int when you are creating a package containing User.Test.cls. If you pass removesource=1 then it will strip out all source code in the package including class method code, and routines."}),"\n",(0,i.jsx)(s.h3,{id:"deploytofile",children:"DeployToFile"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method DeployToFile(file As %String, qspec As %String, removesource As %Boolean = 0) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Package up this project into a global for deployment and then export this global to the file specified. This can be imported using the InstallFromFile. The qualifiers are used to determine if we should export selectivity information using the /exportselectivity qualifier. Also the /keepsource will determine if we add intermediate compilation files such as User.Test.1.int when you are creating a package containing User.Test.cls. If you pass removesource=1 then it will strip out all source code in the package including class method code, and routines. If the filename ends in .gz or .gzip it will automatically gzip the file."}),"\n",(0,i.jsx)(s.h3,{id:"deploy",children:"Deploy"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method Deploy(ByRef deploydir As %String, qspec As %String, ByRef %errorlog As %String, ShowFilename As %Boolean = 1, gbl As %String = "", removesource As %Boolean = 0) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Export this project to a DAT file or a global for deployment. The DAT file will be stored in the deploydir directory."}),"\n",(0,i.jsx)(s.p,{children:"The qspec are the standard cache objects qualifiers."}),"\n",(0,i.jsx)(s.h3,{id:"addclass",children:"addclass"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method addclass(classname As %String) [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"createdatabase",children:"createDatabase"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method createDatabase(ByRef deploydir As %String, ByRef qstruct As %String) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"deploytodatabase",children:"deployToDatabase"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method deployToDatabase(ByRef deploydir As %String, ByRef qstruct As %String, removesource As %Boolean = 0) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"deploygbl",children:"deployGbl"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method deployGbl(gbl As %String, ByRef qstruct As %String, removesource As %Boolean = 0) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"packgbls",children:"packGbls"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod packGbls(target, type, name, ByRef gbls) [ Internal ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"backupdeploycontent",children:"BackupDeployContent"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BackupDeployContent(gbl As %String, backupgbl As %String, qspec As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Backup the items that will be replaced when installing a deployed set of items to backupgbl"}),"\n",(0,i.jsx)(s.h3,{id:"installfromfile",children:"InstallFromFile"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod InstallFromFile(file As %String, qspec As %String, runinstall As %Boolean = 1, ByRef project As %Studio.Project, listonly As %Boolean = 0, backupgbl As %String = "", validatesig As %Boolean = 0, transaction As %Boolean = 1)\n'})}),"\n",(0,i.jsx)(s.p,{children:"This will install any routines, classes and globals into the current namespace from a file created with the DeployToFile. The qualifiers respects the /importselectivity item to determine of we should import selectivity information from this package. If you pass in a %Studio.Project in project then this will be returned with all the items in the deployment in gbl added to the project. If listonly is true then nothing will be actually changed in the database, so you can list items. If runinstall is false then if the deployment contains a routine called 'INSTALL' (note not in the database, but in the deployment) then we will not automatically run this after installing the items in this deployment. The default is to run the INSTALL routine if present."}),"\n",(0,i.jsx)(s.h3,{id:"installfromgbl",children:"InstallFromGbl"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod InstallFromGbl(gbl As %String, qspec As %String, runinstall As %Boolean = 1, ByRef project As %Studio.Project, listonly As %Integer = 0, backupgbl As %String = "", validatesig As %Boolean = 0, transaction As %Boolean = 1)\n'})}),"\n",(0,i.jsx)(s.p,{children:"This will install any routines, classes and globals into the current namespace from a global created with the DeployToGbl. The qualifiers respects the /importselectivity item to determine if we should import selectivity information from this package. If you pass in a %Studio.Project in project then this will be returned with all the items in the deployment in gbl added to the project. If listonly is true then nothing will be actually changed in the database, so you can list items. If runinstall is true then if the deployment contains a routine called 'INSTALL' (note not in the database, but in the deployment) then we will automatically run PRE^INSTALL before the installation and ^INSTALL after installing the items in this deployment. The default is to run the INSTALL routine if present. If backupgbl is defined then any items which will be replaced by items in the package are backed up to this global location first. Also if the deployment contains an INSTALL routine then this will be placed in the backup as UNINSTALL, and if the deployment contains an UNINSTALL routine this will be placed in the backup as INSTALL. So when the backup is installed (do you uninstall this deployment) it will run the PRE^UNINSTALL routine of the original deployment and after it is uninstalled it will run ^UNINSTALL. If transaction is false then we will not use a transaction to allow rolling back the install. If validatesig is true we will validate any code being replaced is the original version installed from InterSystems."}),"\n",(0,i.jsx)(s.h3,{id:"internalinstall",children:"internalInstall"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod internalInstall(gbl As %String, qspec As %String, runinstall As %Boolean = 1, ByRef items As %String, listonly As %Integer = 0, transaction As %Boolean = 1) [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"deploytostream",children:"DeployToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method DeployToStream(qspec As %String, ByRef %errorlog As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to Deploy which returns a binary stream in Stream rather than writing to a file."}),"\n",(0,i.jsx)(s.h3,{id:"exporttostream",children:"ExportToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ExportToStream(qspec As %String, justproject As %Boolean, ByRef %errorlog As %String, file As %String = "", Charset As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to Export which returns a stream in Stream rather than writing to a file."}),"\n",(0,i.jsx)(s.h3,{id:"setstreamname",children:"SetStreamName"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method SetStreamName(file As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"This will try and set the Stream to point to the filename file. This is used by the Studio so the Import method shows the filename the user expects."}),"\n",(0,i.jsx)(s.h3,{id:"getstreamname",children:"GetStreamName"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetStreamName() As %String\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return the name of the stream. Used by Studio because it can not access the Stream property directly"}),"\n",(0,i.jsx)(s.h3,{id:"exportlist",children:"ExportList"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ExportList(ByRef filename As %String, ByRef list As %String, qspec As %String, Charset As %String = "", ShowFilename As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Export a list of items to the filename specified. The list can either be comma delimited such as 'TEST.MAC,Example.CLS,/csp/samples/loop.csp' or a subscripted array with the first subscript being the name of the item to export. The qspec are the standard ObjectScript qualifiers, if the \"d\" is passed then it will output status information to the current device."}),"\n",(0,i.jsx)(s.h3,{id:"exportlisttostream",children:"ExportListToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ExportListToStream(ByRef list As %String, qspec As %String, file As %String = "", Charset As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to ExportList which returns a stream in Stream rather than writing to a file."}),"\n",(0,i.jsx)(s.h3,{id:"import",children:"Import"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Import(filename As %String, qspec As %String, ByRef %errorlog As %String, ByRef imported As %String, listonly As %Boolean = 0, selecteditems As %String = "", displayname As %String) As %Status [ CodeMode = expression ]\n'})}),"\n",(0,i.jsx)(s.p,{children:"Import the XML description of routines, classes, CSP files, and projects into this namespace. This returns the list of items imported in imported separated by commas. You can pass in the qspec to tell it if it should compile these imported elements as well. If listonly is true then it will just return the list of items to import and not import anything. selecteditems is an optional comma separated list of items, if present then it will only import these items and it will skip any item not in this list. The filename may be a comma separated list of files."}),"\n",(0,i.jsx)(s.h3,{id:"importfromstream",children:"ImportFromStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ImportFromStream(qspec As %String, ByRef %errorlog As %String, ByRef imported As %String, listonly As %Boolean = 0, selecteditems As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to Import which is passed a stream in Stream rather than a file."}),"\n",(0,i.jsx)(s.h3,{id:"exportcdltostream",children:"ExportCDLToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ExportCDLToStream(classname As %String = "", qspec As %String = "", file As %String = "", Charset As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to ExportCDLList^%apiOBJ which returns a stream in stream rather than writing to a file. You pass this a comma separated list of classes, or an array subscripted by the class name. The file is the filename to output this to without the directory."}),"\n",(0,i.jsx)(s.h3,{id:"exportrtntostream",children:"ExportRtnToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method ExportRtnToStream(rtnlist As %String = "", qspec As %String = "", file As %String = "", Charset As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to Export^%apiRTN which returns a stream in stream rather than writing to a file. You pass this a comma separated list of routines or an array subscripted by the routine name. The file is the filename to output this to without the directory."}),"\n",(0,i.jsx)(s.h3,{id:"exportrtn",children:"ExportRtn"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ExportRtn(rtnlist As %String = "", qspec As %String = "", file As %String = "", Charset As %String = "", ShowFilename As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Wrapper to Export^%apiRTN which returns a stream in stream rather than writing to a file. You pass this a comma separated list of routines or an array subscripted by the routine name. The file is the filename to output this to without the directory."}),"\n",(0,i.jsx)(s.h3,{id:"sloadlargelist",children:"sLoadLargeList"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod sLoadLargeList(filestream As %GlobalCharacterStream, qspec As %String, ByRef errorlog As %String, loadedliststream As %GlobalCharacterStream, listonly As %Boolean, selecteditemstream As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"sloadstreamlargelist",children:"sLoadStreamLargeList"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method sLoadStreamLargeList(qspec As %String, ByRef errorlog As %String, loadedliststream As %GlobalCharacterStream, listonly As %Boolean, selecteditemstream As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"scompilelargelist",children:"sCompileLargeList"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod sCompileLargeList(itemliststream As %GlobalCharacterStream, qspec As %String, ByRef errorlog As %String) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"streamtoarray",children:"StreamToArray"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod StreamToArray(stream As %Stream.Object, ByRef array As %String, delim As %String = ",")\n'})}),"\n",(0,i.jsx)(s.h3,{id:"arraytostream",children:"ArrayToStream"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ArrayToStream(ByRef array As %String, stream As %Stream.Object)\n"})}),"\n",(0,i.jsx)(s.h3,{id:"projectitemslistexecute",children:"ProjectItemsListExecute"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProjectItemsListExecute(ByRef QHandle As %Binary, project As %String(MAXLEN=512), noexpandpackages As %Boolean = 0) As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"List of all projects List of all items for a project"}),"\n",(0,i.jsx)(s.h3,{id:"projectitemslistclose",children:"ProjectItemsListClose"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProjectItemsListClose(QHandle As %Binary) As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"projectitemslistfetch",children:"ProjectItemsListFetch"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProjectItemsListFetch(ByRef QHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"projectitemslistfetchrows",children:"ProjectItemsListFetchRows"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ProjectItemsListFetchRows(ByRef QHandle As %Binary, FetchCount As %Integer = 0, ByRef RowSet As %List, ByRef ReturnCount As %Integer, ByRef AtEnd As %Integer) As %Status\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ProjectItemsListFetchRows"})," returns the next FetchCount rows in the query."]}),"\n",(0,i.jsx)(s.h3,{id:"findinproject",children:"FindInProject"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method FindInProject(String As %String, WholeWords As %Boolean = 0, CaseSensitive As %Boolean = 1, Max As %Integer = 200, wild As %Boolean = 1) As %Status\n"})}),"\n",(0,i.jsxs)(s.p,{children:["List of all break points for a project List of all break points for a project List of all watch variables for a project Find a particular string inside this project.",(0,i.jsx)(s.br,{}),"\nString is the string to search for. The list of matches is written to the screen. If WholeWords is true then it will only find whole words and not fragments, it defaults to false. If CaseSensitive is true (the default) then the search is case sensitive, otherwise it is case insensitive. The maximum number of matches it will find can be specified in Max which defaults to 200. If wild is false then the PatternList does not contain any wild cards and so should be treated as a string literal search even the pattern contains ?*\\ characters."]}),"\n",(0,i.jsx)(s.h3,{id:"findinfilesatelierv6",children:"FindInFilesAtelierv6"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod FindInFilesAtelierv6(pQuery As %String, pRegex As %Boolean = 0, pWholeWords As %Boolean = 0, pCaseSensitive As %Boolean = 1, pWildCards As %Boolean = 1, pMax As %Integer = 200, pProject As %String = "", pDocuments As %String(MAXLEN=512) = "", pSystem As %Boolean = 0, pGenerated As %Boolean = 0, pMapped As %Boolean = 1, pIncludeRegex As %String = "", pExcludeRegex As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(s.p,{children:"Search a list of files or a project for a string, or using a Regular Expression. Writes matches to the current device."}),"\n",(0,i.jsx)(s.p,{children:"Arguments:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pQuery"})," - The string to search for, or a Regular Expression if ",(0,i.jsx)(s.code,{children:"pRegex"})," is ",(0,i.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pRegex"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", ",(0,i.jsx)(s.code,{children:"pQuery"})," will be interpreted as a Regular Expression and ",(0,i.jsx)(s.code,{children:"pWholeWords"}),", ",(0,i.jsx)(s.code,{children:"pCaseSensitive"}),", and ",(0,i.jsx)(s.code,{children:"pWildCards"})," will be ignored. Defaults to ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pWholeWords"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", only whole word matches will be returned, not fragments. Ignored if ",(0,i.jsx)(s.code,{children:"pRegex"})," is ",(0,i.jsx)(s.code,{children:"1"}),". Defaults to ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pCaseSensitive"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", the search is case sensitive. Ignored if ",(0,i.jsx)(s.code,{children:"pRegex"})," is ",(0,i.jsx)(s.code,{children:"1"}),". Defaults to ",(0,i.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pWildCards"})," - If ",(0,i.jsx)(s.code,{children:"0"}),", wild card characters ",(0,i.jsx)(s.code,{children:"?*\\"})," will be treated as literals. Ignored if ",(0,i.jsx)(s.code,{children:"pRegex"})," is ",(0,i.jsx)(s.code,{children:"1"}),". Defaults to ",(0,i.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pMax"})," - The maximum number of matches to return. Defaults to ",(0,i.jsx)(s.code,{children:"200"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pProject"})," - The project to search in. If empty, ",(0,i.jsx)(s.code,{children:"pDocuments"}),", ",(0,i.jsx)(s.code,{children:"pSystem"}),", ",(0,i.jsx)(s.code,{children:"pGenerated"}),", and ",(0,i.jsx)(s.code,{children:"pMapped"})," will be used to specify the files to search."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pDocuments"})," - The list of files to search. See the documentation for the ",(0,i.jsx)(s.code,{children:"Spec"})," parameter of the ",(0,i.jsx)(s.code,{children:"StudioOpenDialog"})," query in %Library.RoutineMgr for allowed syntax. Ignored if ",(0,i.jsx)(s.code,{children:"pProject"})," is not empty."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pSystem"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", system files will be searched (where source is available). Ignored if ",(0,i.jsx)(s.code,{children:"pProject"})," is not empty. Defaults to ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pGenerated"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", generated files will be searched. Ignored if ",(0,i.jsx)(s.code,{children:"pProject"})," is not empty. Defaults to ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pMapped"})," - If ",(0,i.jsx)(s.code,{children:"1"}),", files mapped from other namespaces will be searched. Ignored if ",(0,i.jsx)(s.code,{children:"pProject"})," is not empty. Defaults to ",(0,i.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pIncludeRegex"})," - If a file name matches this Regular Expression, it will be included in the search. The matching is case sensitive and file names are normalized so that the first character and path separator are ",(0,i.jsx)(s.code,{children:"/"})," (for example, ",(0,i.jsx)(s.code,{children:"/%Api/Atelier/v6.cls"})," and ",(0,i.jsx)(s.code,{children:"/csp/user/menu.csp"}),"). Defaults to the empty string and no matching is done."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pExcludeRegex"})," - If a file name matches this Regular Expression, it will be excluded from the search. Follows the same rules as ",(0,i.jsx)(s.code,{children:"pIncludeRegex"}),". Defaults to the empty string and no matching is done."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"findinfiles",children:"FindInFiles"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod FindInFiles(String As %String, PatternList As %String, pSystem As %Boolean = 0, WholeWords As %Boolean = 0, CaseSensitive As %Boolean = 1, Max As %Integer = 200, Filter As %String(MAXLEN=512) = "", wild As %Boolean = 1, pGenerated As %Boolean = 1, pMapped As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Find a particular string inside a list of files.",(0,i.jsx)(s.br,{}),"\nString is the string to search for. The PatternList is the list of items to search. Typically this will be '*.*' but you can specify just MAC and INC files with '*.mac,*.inc' or a list of individual files with 'abc.mac,def.cls'. The acceptable extensions at this time are int,mac,inc,bas,cls,csp,csr,prj,mvm,bam,mvb. The list of matches is written to the screen. If pSystem is true then it also searches system routines and classes (where the source is available) when searching the entire namespace. If WholeWords is true then it will only find whole words and not fragments, it defaults to false. If CaseSensitive is true (the default) then the search is case sensitive, otherwise it is case insensitive. The maximum number of matches it will find can be specified in Max which defaults to 200. If wild is false then the String does not contain any wild cards and so should be treated as a string literal search even if it contains ?*\\ characters."]}),"\n",(0,i.jsx)(s.h3,{id:"pattern",children:"pattern"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod pattern(pattern As %String, wholewords As %Boolean = 0, ByRef wild As %Boolean) As %String [ Internal ]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"searchitem",children:"searchItem"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod searchItem(pattern As %String, Name As %String, ByRef Found As %Integer = 0, wild As %Boolean = 0, CaseSensitive As %Boolean = 1, Max As %Integer = 200, Pattern As %String, WholeWords As %Boolean = 0) As %Boolean [ Private ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Search this specific item for the string"}),"\n",(0,i.jsx)(s.h3,{id:"searchclassnode",children:"searchClassNode"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod searchClassNode(Name As %String, ref As %String, type As %String, NewName As %String, pattern As %String, ByRef Found As %Integer, Tree As %String, CaseSensitive As %Boolean = 1, Max As %Integer = 200, Wild As %Boolean = 0) [ Private ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Search this class for the string"}),"\n",(0,i.jsx)(s.h3,{id:"findinfilesregex",children:"FindInFilesRegex"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod FindInFilesRegex(Regex As %String, ItemList As %String, pSystem As %Boolean = 0, pGenerated As %Boolean = 0, Max As %Integer = 200, pMapped As %Boolean = 1) As %Status\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Search a list of files, using a Regular Expression.",(0,i.jsx)(s.br,{}),"\nRegex is the Regular Expression for the search. The ItemList is the list of items to search. Typically this will be '*.*' but you can specify just MAC and INC files with '*.mac,*.inc' or a list of individual files with 'abc.mac,def.cls'. The acceptable extensions at this time are int,mac,inc,bas,cls,csp,csr,prj,mvm,bam,mvb.",(0,i.jsx)(s.br,{}),"\nThe list of matches is written to the current device.",(0,i.jsx)(s.br,{}),"\nIf pSystem is true then it also searches system routines and classes (where the source is available). If pGenerated is true then it also searches generated items. The maximum number of matches it will find can be specified in Max which defaults to 200."]}),"\n",(0,i.jsx)(s.h3,{id:"searchitemregex",children:"searchItemRegex"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod searchItemRegex(Matcher As %Regex.Matcher, Name As %String, ByRef Found As %Integer, Max As %Integer = 200) As %Boolean [ Private ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Search this specific item for the string"}),"\n",(0,i.jsx)(s.h3,{id:"searchclassnoderegex",children:"searchClassNodeRegex"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod searchClassNodeRegex(Matcher As %Regex.Matcher, Name As %String, ref As %String, type As %String, NewName As %String, ByRef Found As %Integer, Tree As %String, Max As %Integer = 200) [ Private ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Search this class for the string"}),"\n",(0,i.jsx)(s.h3,{id:"deleteitem",children:"DeleteItem"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DeleteItem(name As %String)\n"})}),"\n",(0,i.jsx)(s.h3,{id:"normalizename",children:"NormalizeName"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod NormalizeName(ByRef name As %String, ByRef type As %String = "", skiptype As %Boolean = 0) As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Normalize the name passed in and determine its type"}),"\n",(0,i.jsx)(s.h3,{id:"normalize",children:"Normalize"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Normalize() As %Status\n"})}),"\n",(0,i.jsx)(s.h3,{id:"isuptodate",children:"IsUpToDate"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Method IsUpToDate(ByRef uptodate As %Boolean, ByRef notuptodate As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(s.p,{children:"Internal method to determine if all classes in this project are up to date. The uptodate is returned as a %Boolean value to indicate if everything is up to date or not. If some items are not up to date then the items in question are returned in a comma separated list in notuptodate."})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>r});var i=t(96540);const n={},a=i.createContext(n);function l(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);