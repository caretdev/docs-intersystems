"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[11469],{62197:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>d,default:()=>l,frontMatter:()=>t,toc:()=>i});var r=n(74848),a=n(28453);const t={pagination_prev:null,pagination_next:null},d="%Net.MIMEReader",i=[{value:"Properties",id:"properties",level:2},{value:"inputStream",id:"inputstream",level:3},{value:"buffer",id:"buffer",level:3},{value:"pos",id:"pos",level:3},{value:"previousCR",id:"previouscr",level:3},{value:"Methods",id:"methods",level:2},{value:"OpenFile",id:"openfile",level:3},{value:"OpenStream",id:"openstream",level:3},{value:"ReadMIMEMessage",id:"readmimemessage",level:3},{value:"ReadMIMEBody",id:"readmimebody",level:3},{value:"readHeader",id:"readheader",level:3},{value:"readBody",id:"readbody",level:3},{value:"getLine",id:"getline",level:3},{value:"DecodeBase64",id:"decodebase64",level:3},{value:"DecodeQP",id:"decodeqp",level:3},{value:"DecodeHeader",id:"decodeheader",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"netmimereader",children:"%Net.MIMEReader"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Net.MIMEReader Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"For information on using this class"}),", see ",(0,r.jsx)(s.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=CLASSES+%25Net.MIMEReader",children:"MIME Messages"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"%Net.MIMEReader inputs a MIME document and represents it by a top-level %Net.MIMEPart with multiple parts specified."}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"inputstream",children:"inputStream"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property inputStream As %RegisteredObject [ Private ];\n"})}),"\n",(0,r.jsx)(s.p,{children:"Stream containing the MIME message. Declared as %RegisteredObject to prevent auto create of serial object."}),"\n",(0,r.jsx)(s.h3,{id:"buffer",children:"buffer"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property buffer As %String [ Private ];\n"})}),"\n",(0,r.jsx)(s.p,{children:"Current buffer for stream input."}),"\n",(0,r.jsx)(s.h3,{id:"pos",children:"pos"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property pos As %Integer [ Private ];\n"})}),"\n",(0,r.jsx)(s.p,{children:"Position of next input to process in the stream buffer"}),"\n",(0,r.jsx)(s.h3,{id:"previouscr",children:"previousCR"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property previousCR As %Boolean [ Private ];\n"})}),"\n",(0,r.jsx)(s.p,{children:"If true, previous line ended in CR which was discarded"}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"openfile",children:"OpenFile"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method OpenFile(source As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Open file that contains the MIME message."}),"\n",(0,r.jsx)(s.h3,{id:"openstream",children:"OpenStream"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method OpenStream(source As %AbstractStream) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Open stream that contains the MIME message."}),"\n",(0,r.jsx)(s.h3,{id:"readmimemessage",children:"ReadMIMEMessage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method ReadMIMEMessage(Output message As %Net.MIMEPart) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"ReadMIMEMessage parses the MIME message in previously opened file or stream, and creates a %Net.MIMEPart based on this MIME message."}),"\n",(0,r.jsx)(s.h3,{id:"readmimebody",children:"ReadMIMEBody"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method ReadMIMEBody(message As %Net.MIMEPart) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"ReadMIMEBody parses the MIME body in previously opened file or stream and makes it the body the MIME message represented by message %Net.MIMEPart. Headers for the MIME message are assumed to have been processed and included in message."}),"\n",(0,r.jsx)(s.h3,{id:"readheader",children:"readHeader"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method readHeader(Output message As %Net.MIMEPart, isMultiPart As %Boolean) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Read the headers of the current message part and create the %Net.MIMEPart."}),"\n",(0,r.jsx)(s.h3,{id:"readbody",children:"readBody"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method readBody(message As %Net.MIMEPart, messageBoundary As %String, ByRef lastPart As %Boolean) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Read the body of the current message part."}),"\n",(0,r.jsx)(s.h3,{id:"getline",children:"getLine"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method getLine(ByRef line As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get the next header line. Return false if no more lines."}),"\n",(0,r.jsx)(s.h3,{id:"decodebase64",children:"DecodeBase64"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DecodeBase64(input As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Decode a line of the base64 encoded body. The length of the input must be a multiple of 4."}),"\n",(0,r.jsx)(s.h3,{id:"decodeqp",children:"DecodeQP"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DecodeQP(input As %String) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Decode a line of the quoted printable encoded body"}),"\n",(0,r.jsx)(s.h3,{id:"decodeheader",children:"DecodeHeader"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DecodeHeader(input As %String) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Decode and return the MIME header value passed in input argument according to RFC 2047."})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var r=n(96540);const a={},t=r.createContext(a);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);