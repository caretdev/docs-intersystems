"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[87480],{44833:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>s,toc:()=>l});var r=n(74848),a=n(28453);const s={pagination_prev:null,pagination_next:null},i="%ZEN.Report.Display.timeline",l=[{value:"Properties",id:"properties",level:2},{value:"field",id:"field",level:3},{value:"group",id:"group",level:3},{value:"removeEmpty",id:"removeempty",level:3},{value:"MinimumIntervalWidth",id:"minimumintervalwidth",level:3},{value:"StartDateNodeSet",id:"startdatenodeset",level:3},{value:"EndDateNodeSet",id:"enddatenodeset",level:3},{value:"EpisodeTypeNodeSet",id:"episodetypenodeset",level:3},{value:"PlottingColor",id:"plottingcolor",level:3},{value:"BackgroundColor",id:"backgroundcolor",level:3},{value:"OnColor",id:"oncolor",level:3},{value:"OffColor",id:"offcolor",level:3},{value:"IntervalHeight",id:"intervalheight",level:3},{value:"IntervalType",id:"intervaltype",level:3},{value:"NumberOfIntervals",id:"numberofintervals",level:3},{value:"MaxHeight",id:"maxheight",level:3},{value:"StartDate",id:"startdate",level:3},{value:"EndDate",id:"enddate",level:3},{value:"CurrentDate",id:"currentdate",level:3},{value:"GeneratedTypeCode",id:"generatedtypecode",level:3},{value:"GeneratedTypeColor",id:"generatedtypecolor",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"TimelineCommonXSL",id:"timelinecommonxsl",level:3},{value:"TimelineHTMLXSL",id:"timelinehtmlxsl",level:3},{value:"TimelineFOXSL",id:"timelinefoxsl",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawToHTML",id:"drawtohtml",level:3},{value:"%DrawToXSLFO",id:"drawtoxslfo",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"zenreportdisplaytimeline",children:"%ZEN.Report.Display.timeline"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.timeline Extends %ZEN.Report.Display.childrenNode [ Deprecated, System = 4 ]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"field",children:"field"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property field As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(t.h3,{id:"group",children:"group"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property group As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(t.h3,{id:"removeempty",children:"removeEmpty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property removeEmpty As %ZEN.Datatype.boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,r.jsx)(t.h3,{id:"minimumintervalwidth",children:"MinimumIntervalWidth"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property MinimumIntervalWidth As %ZEN.Datatype.string(XMLNAME = "minimum-interval-width");\n'})}),"\n",(0,r.jsx)(t.p,{children:"minimum-interval-width is the width of an interval in the timeline. An interval can be a day, a month, a quarter or a year This is in mm - milimeters It is an xpath expression so specified as \"'10mm'\" for instance"}),"\n",(0,r.jsx)(t.h3,{id:"startdatenodeset",children:"StartDateNodeSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property StartDateNodeSet As %ZEN.Datatype.string(XMLNAME = "start-date-node-set");\n'})}),"\n",(0,r.jsx)(t.p,{children:"start-date-node-set is the xpath expression for start-dates. It corresponds to end dates and episode types through predicate [position()=$pos]"}),"\n",(0,r.jsx)(t.h3,{id:"enddatenodeset",children:"EndDateNodeSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property EndDateNodeSet As %ZEN.Datatype.string(XMLNAME = "end-date-node-set");\n'})}),"\n",(0,r.jsx)(t.p,{children:"end-date-node-set is the xpath expression for end-dates. It corresponds to start dates and episode types through predicate [position()=$pos]"}),"\n",(0,r.jsx)(t.h3,{id:"episodetypenodeset",children:"EpisodeTypeNodeSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property EpisodeTypeNodeSet As %ZEN.Datatype.string(XMLNAME = "episode-type-node-set");\n'})}),"\n",(0,r.jsx)(t.p,{children:"episode-type-node-set is the xpath expression for episode-types. It corresponds to start dates and end dates through predicate [position()=$pos]"}),"\n",(0,r.jsx)(t.h3,{id:"plottingcolor",children:"PlottingColor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property PlottingColor As %ZEN.Datatype.string(XMLNAME = "plotting-color") [ InitialExpression = "\'black\'" ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"plotting-color: when we graph episodes - the foreground color"}),"\n",(0,r.jsx)(t.h3,{id:"backgroundcolor",children:"BackgroundColor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property BackgroundColor As %ZEN.Datatype.string(XMLNAME = "background-color") [ InitialExpression = "\'white\'" ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"background-color: when we graph episodes - the background color"}),"\n",(0,r.jsx)(t.h3,{id:"oncolor",children:"OnColor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property OnColor As %ZEN.Datatype.string(XMLNAME = "on-color") [ InitialExpression = "\'gray\'" ];\n'})}),"\n",(0,r.jsx)(t.p,{children:'on-color: In the xaxis label, the color of intervals when they are "on"'}),"\n",(0,r.jsx)(t.h3,{id:"offcolor",children:"OffColor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property OffColor As %ZEN.Datatype.string(XMLNAME = "off-color") [ InitialExpression = "\'white\'" ];\n'})}),"\n",(0,r.jsx)(t.p,{children:'off-color: In the xaxis label, the color of intervals when they are "off"'}),"\n",(0,r.jsx)(t.h3,{id:"intervalheight",children:"IntervalHeight"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property IntervalHeight As %ZEN.Datatype.string(XMLNAME = "interval-height");\n'})}),"\n",(0,r.jsx)(t.p,{children:"interval-height is the height of episode ticks and xaxis ticks"}),"\n",(0,r.jsx)(t.h3,{id:"intervaltype",children:"IntervalType"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property IntervalType As %ZEN.Datatype.string(VALUELIST = \",'year','quarter','month','day'\", XMLNAME = \"interval-type\");\n"})}),"\n",(0,r.jsx)(t.p,{children:"interval-type is the type of interval with which we are dealing, year, quarter, month or day"}),"\n",(0,r.jsx)(t.h3,{id:"numberofintervals",children:"NumberOfIntervals"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property NumberOfIntervals As %ZEN.Datatype.integer(XMLNAME = "number-of-intervals");\n'})}),"\n",(0,r.jsx)(t.p,{children:"number-of-intervals can be used to override automatic calculation from data"}),"\n",(0,r.jsx)(t.h3,{id:"maxheight",children:"MaxHeight"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property MaxHeight As %ZEN.Datatype.integer(XMLNAME = "max-height") [ InitialExpression = 5 ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"max-height specifies the maximum height of the episode graph. Unseen episodes will be indicated with an up-arrow."}),"\n",(0,r.jsx)(t.h3,{id:"startdate",children:"StartDate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property StartDate As %ZEN.Datatype.string(XMLNAME = "static-start-date");\n'})}),"\n",(0,r.jsx)(t.p,{children:"static-start-date can be used to override automatic calculation of start date from data"}),"\n",(0,r.jsx)(t.h3,{id:"enddate",children:"EndDate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property EndDate As %ZEN.Datatype.string(XMLNAME = "static-end-date");\n'})}),"\n",(0,r.jsx)(t.p,{children:"static-end-date can be used to override automatic calculation of end date from data"}),"\n",(0,r.jsx)(t.h3,{id:"currentdate",children:"CurrentDate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property CurrentDate As %ZEN.Datatype.string(XMLNAME = "current-date");\n'})}),"\n",(0,r.jsx)(t.p,{children:"current-date is by default date of generation of report and indicated by a downward pointing arrow."}),"\n",(0,r.jsx)(t.h3,{id:"generatedtypecode",children:"GeneratedTypeCode"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property GeneratedTypeCode As %ZEN.Datatype.string(XMLNAME = "generated-type-code");\n'})}),"\n",(0,r.jsx)(t.p,{children:"generated-type-code is a string or integer that indicates when an episode is generated"}),"\n",(0,r.jsx)(t.h3,{id:"generatedtypecolor",children:"GeneratedTypeColor"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property GeneratedTypeColor As %ZEN.Datatype.string(XMLNAME = "generated-type-color") [ InitialExpression = "\'gray\'" ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"generated-type-color is the color with which generated episodes will be drawn"}),"\n",(0,r.jsx)(t.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,r.jsx)(t.h3,{id:"timelinecommonxsl",children:"TimelineCommonXSL"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"XData TimelineCommonXSL\n"})}),"\n",(0,r.jsx)(t.h3,{id:"timelinehtmlxsl",children:"TimelineHTMLXSL"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"XData TimelineHTMLXSL\n"})}),"\n",(0,r.jsx)(t.h3,{id:"timelinefoxsl",children:"TimelineFOXSL"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"XData TimelineFOXSL\n"})}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"drawtohtml",children:"%DrawToHTML"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DrawToHTML(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream, incell As %Boolean = 0) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"drawtoxslfo",children:"%DrawToXSLFO"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DrawToXSLFO(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream, ByRef incell As %Boolean) As %Status\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var r=n(96540);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);