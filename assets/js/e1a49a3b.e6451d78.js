"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[41903],{14364:(e,l,s)=>{s.r(l),s.d(l,{contentTitle:()=>i,default:()=>o,frontMatter:()=>a,toc:()=>r});var t=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},i="%DeepSee.Component.pivotTable",r=[{value:"Parameters",id:"parameters",level:2},{value:"JSINCLUDES",id:"jsincludes",level:3},{value:"NAMESPACE",id:"namespace",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"DEFAULTENCLOSINGCLASS",id:"defaultenclosingclass",level:3},{value:"MAXCOLUMNS",id:"maxcolumns",level:3},{value:"MAXLISTINGROWS",id:"maxlistingrows",level:3},{value:"Properties",id:"properties",level:2},{value:"absolutePositioning",id:"absolutepositioning",level:3},{value:"dataSource",id:"datasource",level:3},{value:"singleTable",id:"singletable",level:3},{value:"staleCache",id:"stalecache",level:3},{value:"reinitialized",id:"reinitialized",level:3},{value:"dataSourceName",id:"datasourcename",level:3},{value:"mdx",id:"mdx",level:3},{value:"userMDX",id:"usermdx",level:3},{value:"kpi",id:"kpi",level:3},{value:"currentQueryText",id:"currentquerytext",level:3},{value:"resolvedQueryText",id:"resolvedquerytext",level:3},{value:"columnList",id:"columnlist",level:3},{value:"valueColumn",id:"valuecolumn",level:3},{value:"hideMeasures",id:"hidemeasures",level:3},{value:"hiddenMeasureText",id:"hiddenmeasuretext",level:3},{value:"rowCaptionList",id:"rowcaptionlist",level:3},{value:"showPlan",id:"showplan",level:3},{value:"cellWidth",id:"cellwidth",level:3},{value:"rowLabelSpan",id:"rowlabelspan",level:3},{value:"columnLabelSpan",id:"columnlabelspan",level:3},{value:"cellHeight",id:"cellheight",level:3},{value:"showEmptyRows",id:"showemptyrows",level:3},{value:"showEmptyColumns",id:"showemptycolumns",level:3},{value:"cubeName",id:"cubename",level:3},{value:"caption",id:"caption",level:3},{value:"listing",id:"listing",level:3},{value:"defaultListing",id:"defaultlisting",level:3},{value:"listingEnabled",id:"listingenabled",level:3},{value:"listingSelect",id:"listingselect",level:3},{value:"listingType",id:"listingtype",level:3},{value:"listingRows",id:"listingrows",level:3},{value:"listingPageSize",id:"listingpagesize",level:3},{value:"pivotSelect",id:"pivotselect",level:3},{value:"cubeKey",id:"cubekey",level:3},{value:"queryKey",id:"querykey",level:3},{value:"listingKey",id:"listingkey",level:3},{value:"pivotNonce",id:"pivotnonce",level:3},{value:"totalValue",id:"totalvalue",level:3},{value:"cellCount",id:"cellcount",level:3},{value:"columnsTruncated",id:"columnstruncated",level:3},{value:"queryStatus",id:"querystatus",level:3},{value:"queryComplete",id:"querycomplete",level:3},{value:"queryCalls",id:"querycalls",level:3},{value:"queryPending",id:"querypending",level:3},{value:"showStatus",id:"showstatus",level:3},{value:"showPivotStats",id:"showpivotstats",level:3},{value:"showQuery",id:"showquery",level:3},{value:"canDrillDown",id:"candrilldown",level:3},{value:"rowAxisOptions",id:"rowaxisoptions",level:3},{value:"columnAxisOptions",id:"columnaxisoptions",level:3},{value:"rowLevels",id:"rowlevels",level:3},{value:"columnLevels",id:"columnlevels",level:3},{value:"filters",id:"filters",level:3},{value:"sqlRestriction",id:"sqlrestriction",level:3},{value:"contextFilterSpec",id:"contextfilterspec",level:3},{value:"overrideColumnSpec",id:"overridecolumnspec",level:3},{value:"overrideColumnText",id:"overridecolumntext",level:3},{value:"overrideRowSpec",id:"overriderowspec",level:3},{value:"overrideRowText",id:"overriderowtext",level:3},{value:"measures",id:"measures",level:3},{value:"measureLocation",id:"measurelocation",level:3},{value:"drillLevels",id:"drilllevels",level:3},{value:"drillRowNumbers",id:"drillrownumbers",level:3},{value:"listingFilters",id:"listingfilters",level:3},{value:"listingFields",id:"listingfields",level:3},{value:"canUseListingFields",id:"canuselistingfields",level:3},{value:"pageSize",id:"pagesize",level:3},{value:"currPage",id:"currpage",level:3},{value:"sortColumn",id:"sortcolumn",level:3},{value:"sortDir",id:"sortdir",level:3},{value:"currListingPage",id:"currlistingpage",level:3},{value:"listingSortColumn",id:"listingsortcolumn",level:3},{value:"listingSortDir",id:"listingsortdir",level:3},{value:"rowCount",id:"rowcount",level:3},{value:"jsonRows",id:"jsonrows",level:3},{value:"listingRowCount",id:"listingrowcount",level:3},{value:"columnCount",id:"columncount",level:3},{value:"formatRules",id:"formatrules",level:3},{value:"calculatedMembers",id:"calculatedmembers",level:3},{value:"selectedRange",id:"selectedrange",level:3},{value:"selectedCellBackground",id:"selectedcellbackground",level:3},{value:"selectedCellColor",id:"selectedcellcolor",level:3},{value:"columnHeaderStyle",id:"columnheaderstyle",level:3},{value:"rowHeaderStyle",id:"rowheaderstyle",level:3},{value:"cellStyle",id:"cellstyle",level:3},{value:"tableStyle",id:"tablestyle",level:3},{value:"showZebra",id:"showzebra",level:3},{value:"showRowCaption",id:"showrowcaption",level:3},{value:"rowCaptionText",id:"rowcaptiontext",level:3},{value:"evenRowStyle",id:"evenrowstyle",level:3},{value:"colorScale",id:"colorscale",level:3},{value:"analyzerMode",id:"analyzermode",level:3},{value:"backgroundImage",id:"backgroundimage",level:3},{value:"backgroundOpacity",id:"backgroundopacity",level:3},{value:"isDrillThrough",id:"isdrillthrough",level:3},{value:"parameters",id:"parameters-1",level:3},{value:"%message",id:"message",level:3},{value:"progressMessage",id:"progressmessage",level:3},{value:"rowTotals",id:"rowtotals",level:3},{value:"columnTotals",id:"columntotals",level:3},{value:"rowTotalAgg",id:"rowtotalagg",level:3},{value:"columnTotalAgg",id:"columntotalagg",level:3},{value:"rowTotalSource",id:"rowtotalsource",level:3},{value:"%ResultSet",id:"resultset",level:3},{value:"%KPIController",id:"kpicontroller",level:3},{value:"data",id:"data",level:3},{value:"oncellClick",id:"oncellclick",level:3},{value:"oncellDblClick",id:"oncelldblclick",level:3},{value:"ondrill",id:"ondrill",level:3},{value:"onlistingSelect",id:"onlistingselect",level:3},{value:"isPaging",id:"ispaging",level:3},{value:"initialExecute",id:"initialexecute",level:3},{value:"autoExecute",id:"autoexecute",level:3},{value:"previewMode",id:"previewmode",level:3},{value:"allowPreviewInteraction",id:"allowpreviewinteraction",level:3},{value:"previewRowCount",id:"previewrowcount",level:3},{value:"rowsTruncated",id:"rowstruncated",level:3},{value:"changesPending",id:"changespending",level:3},{value:"selectedRowValues",id:"selectedrowvalues",level:3},{value:"printTitle",id:"printtitle",level:3},{value:"printSubtitle",id:"printsubtitle",level:3},{value:"printOrientation",id:"printorientation",level:3},{value:"printSubtitleOn",id:"printsubtitleon",level:3},{value:"showUser",id:"showuser",level:3},{value:"printPageSize",id:"printpagesize",level:3},{value:"printMarginTop",id:"printmargintop",level:3},{value:"printMarginLeft",id:"printmarginleft",level:3},{value:"printMarginRight",id:"printmarginright",level:3},{value:"printMarginBottom",id:"printmarginbottom",level:3},{value:"printLabelWidth",id:"printlabelwidth",level:3},{value:"printCellWidth",id:"printcellwidth",level:3},{value:"maxRows",id:"maxrows",level:3},{value:"borderLeftCell",id:"borderleftcell",level:3},{value:"borderRightCell",id:"borderrightcell",level:3},{value:"borderTopCell",id:"bordertopcell",level:3},{value:"borderBottomCell",id:"borderbottomcell",level:3},{value:"borderLeftCol",id:"borderleftcol",level:3},{value:"borderRightCol",id:"borderrightcol",level:3},{value:"borderTopCol",id:"bordertopcol",level:3},{value:"borderBottomCol",id:"borderbottomcol",level:3},{value:"borderLeftRow",id:"borderleftrow",level:3},{value:"borderRightRow",id:"borderrightrow",level:3},{value:"borderTopRow",id:"bordertoprow",level:3},{value:"borderBottomRow",id:"borderbottomrow",level:3},{value:"fontFamilyCell",id:"fontfamilycell",level:3},{value:"fontSizeCell",id:"fontsizecell",level:3},{value:"fontFamilyCol",id:"fontfamilycol",level:3},{value:"fontSizeCol",id:"fontsizecol",level:3},{value:"fontFamilyRow",id:"fontfamilyrow",level:3},{value:"fontSizeRow",id:"fontsizerow",level:3},{value:"showFilters",id:"showfilters",level:3},{value:"showListingFilters",id:"showlistingfilters",level:3},{value:"showDate",id:"showdate",level:3},{value:"showZebraStripes",id:"showzebrastripes",level:3},{value:"listingFontSize",id:"listingfontsize",level:3},{value:"filterTableStyle",id:"filtertablestyle",level:3},{value:"filterTableCaptionStyle",id:"filtertablecaptionstyle",level:3},{value:"filterTableItemStyle",id:"filtertableitemstyle",level:3},{value:"nowDisplayFormat",id:"nowdisplayformat",level:3},{value:"showPivot",id:"showpivot",level:3},{value:"crossJoinRowLimit",id:"crossjoinrowlimit",level:3},{value:"headFunctionAdded",id:"headfunctionadded",level:3},{value:"pivotVariables",id:"pivotvariables",level:3},{value:"maxChartSize",id:"maxchartsize",level:3},{value:"LastSessionKey",id:"lastsessionkey",level:3},{value:"LastCube",id:"lastcube",level:3},{value:"LastQueryKey",id:"lastquerykey",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"deferredExecuteQuery",id:"deferredexecutequery",level:3},{value:"executeQuery",id:"executequery",level:3},{value:"executeListing",id:"executelisting",level:3},{value:"cancelQuery",id:"cancelquery",level:3},{value:"swapRowsAndColumns",id:"swaprowsandcolumns",level:3},{value:"getSelectedRange",id:"getselectedrange",level:3},{value:"resetTable",id:"resettable",level:3},{value:"canDrillThrough",id:"candrillthrough",level:3},{value:"drillThrough",id:"drillthrough",level:3},{value:"setDrillThrough",id:"setdrillthrough",level:3},{value:"showMDXQuery",id:"showmdxquery",level:3},{value:"%LocalizeElements",id:"localizeelements",level:3},{value:"%UpdateLocalSession",id:"updatelocalsession",level:3},{value:"DeleteLastResult",id:"deletelastresult",level:3},{value:"onunloadHandler",id:"onunloadhandler",level:3},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"%DrawTable",id:"drawtable",level:3},{value:"%GetMaxRowLevelDepth",id:"getmaxrowleveldepth",level:3},{value:"%CalculateSpans",id:"calculatespans",level:3},{value:"DivMerge",id:"divmerge",level:3},{value:"%DrawNub",id:"drawnub",level:3},{value:"%Emit",id:"emit",level:3},{value:"%MergeTables",id:"mergetables",level:3},{value:"%DrawKPITable",id:"drawkpitable",level:3},{value:"%GetKPIColumns",id:"getkpicolumns",level:3},{value:"%DrawStatusArea",id:"drawstatusarea",level:3},{value:"%DrawDataTable",id:"drawdatatable",level:3},{value:"%DrawEmptyTable",id:"drawemptytable",level:3},{value:"%GetAxisSize",id:"getaxissize",level:3},{value:"%GetAxisSpecs",id:"getaxisspecs",level:3},{value:"%GetFilterInfo",id:"getfilterinfo",level:3},{value:"%CreateResultSet",id:"createresultset",level:3},{value:"%OnCreateResultSet",id:"oncreateresultset",level:3},{value:"%CountMeasures",id:"countmeasures",level:3},{value:"%CollectMeasures",id:"collectmeasures",level:3},{value:"%HideMeasures",id:"hidemeasures-1",level:3},{value:"%GetWhereClause",id:"getwhereclause",level:3},{value:"%GetAxisClauseFromLevels",id:"getaxisclausefromlevels",level:3},{value:"ProcessLevels",id:"processlevels",level:3},{value:"cellMouseDownHandler",id:"cellmousedownhandler",level:3},{value:"cellClickHandler",id:"cellclickhandler",level:3},{value:"cellDblClickHandler",id:"celldblclickhandler",level:3},{value:"columnClickHandler",id:"columnclickhandler",level:3},{value:"columnDblClickHandler",id:"columndblclickhandler",level:3},{value:"listingHeaderDblClickHandler",id:"listingheaderdblclickhandler",level:3},{value:"rowClickHandler",id:"rowclickhandler",level:3},{value:"rowDblClickHandler",id:"rowdblclickhandler",level:3},{value:"selectCellRange",id:"selectcellrange",level:3},{value:"getPageCount",id:"getpagecount",level:3},{value:"getListingPageCount",id:"getlistingpagecount",level:3},{value:"previousPage",id:"previouspage",level:3},{value:"nextPage",id:"nextpage",level:3},{value:"firstPage",id:"firstpage",level:3},{value:"lastPage",id:"lastpage",level:3},{value:"gotoPage",id:"gotopage",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"dragStartHandler",id:"dragstarthandler",level:3},{value:"callGetItemSpec",id:"callgetitemspec",level:3},{value:"callFormatValue",id:"callformatvalue",level:3},{value:"removeMeasureLabels",id:"removemeasurelabels",level:3},{value:"dropStartHandler",id:"dropstarthandler",level:3},{value:"dragFinishHandler",id:"dragfinishhandler",level:3},{value:"hideMessage",id:"hidemessage",level:3},{value:"showPendingMsg",id:"showpendingmsg",level:3},{value:"showMessage",id:"showmessage",level:3},{value:"itemMouseDown",id:"itemmousedown",level:3},{value:"itemMouseUp",id:"itemmouseup",level:3},{value:"absoluteAdjustLayout",id:"absoluteadjustlayout",level:3},{value:"adjustCellSize",id:"adjustcellsize",level:3},{value:"singleTableAdjustLayout",id:"singletableadjustlayout",level:3},{value:"adjustTableLayout",id:"adjusttablelayout",level:3},{value:"computeDivSize",id:"computedivsize",level:3},{value:"ieLayout",id:"ielayout",level:3},{value:"wheelHandler",id:"wheelhandler",level:3},{value:"cellScrollVt",id:"cellscrollvt",level:3},{value:"cellScrollHz",id:"cellscrollhz",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"onupdateHandler",id:"onupdatehandler",level:3},{value:"startQueryTimer",id:"startquerytimer",level:3},{value:"stopQueryTimer",id:"stopquerytimer",level:3},{value:"queryTimerHandler",id:"querytimerhandler",level:3},{value:"GetItemCaption",id:"getitemcaption",level:3},{value:"FormatValue",id:"formatvalue",level:3},{value:"GetItemSpec",id:"getitemspec",level:3},{value:"getFilterForCells",id:"getfilterforcells",level:3},{value:"GetSlicerSpecForCells",id:"getslicerspecforcells",level:3},{value:"GetQueryStatus",id:"getquerystatus",level:3},{value:"GetQueryText",id:"getquerytext",level:3},{value:"SetCurrentQueryText",id:"setcurrentquerytext",level:3},{value:"GetCurrentQueryText",id:"getcurrentquerytext",level:3},{value:"KillQuery",id:"killquery",level:3},{value:"showIKnowMeasureValue",id:"showiknowmeasurevalue",level:3},{value:"%MaterializeListing",id:"materializelisting",level:3},{value:"%DrawListing",id:"drawlisting",level:3},{value:"%ShowPlan",id:"showplan-1",level:3},{value:"%ShowPlanItem",id:"showplanitem",level:3},{value:"filterLabelClick",id:"filterlabelclick",level:3},{value:"pushState",id:"pushstate",level:3},{value:"popState",id:"popstate",level:3},{value:"copyState",id:"copystate",level:3},{value:"hasFormatRules",id:"hasformatrules",level:3},{value:"canGoBack",id:"cangoback",level:3},{value:"goBack",id:"goback",level:3},{value:"canGoForward",id:"cangoforward",level:3},{value:"goForward",id:"goforward",level:3},{value:"%ClearDataModified",id:"cleardatamodified",level:3},{value:"%SetDataModified",id:"setdatamodified",level:3},{value:"%OnDrawObjectProperties",id:"ondrawobjectproperties",level:3},{value:"%OnObjectSynch",id:"onobjectsynch",level:3},{value:"%DrawJSON",id:"drawjson",level:3},{value:"%OutputJSONForGeoListing",id:"outputjsonforgeolisting",level:3},{value:"%OutputJSONForKPI",id:"outputjsonforkpi",level:3},{value:"getContent",id:"getcontent",level:3},{value:"sendEventToViews",id:"sendeventtoviews",level:3},{value:"register",id:"register",level:3},{value:"unregister",id:"unregister",level:3},{value:"raiseDataChange",id:"raisedatachange",level:3},{value:"getDimensions",id:"getdimensions",level:3},{value:"getDimSize",id:"getdimsize",level:3},{value:"getDimGrouping",id:"getdimgrouping",level:3},{value:"getDataAsArrays",id:"getdataasarrays",level:3},{value:"getLabel",id:"getlabel",level:3},{value:"computeCaption",id:"computecaption",level:3},{value:"dateFromHorolog",id:"datefromhorolog",level:3},{value:"getDimName",id:"getdimname",level:3},{value:"getPropertyName",id:"getpropertyname",level:3},{value:"getValueName",id:"getvaluename",level:3},{value:"getDataSourceCaption",id:"getdatasourcecaption",level:3},{value:"getDataByName",id:"getdatabyname",level:3},{value:"getData",id:"getdata",level:3},{value:"getFilterInfo",id:"getfilterinfo-1",level:3},{value:"ParseMDXExpression",id:"parsemdxexpression",level:3},{value:"getPivotVariableInfo",id:"getpivotvariableinfo",level:3},{value:"getPivotVariablesValues",id:"getpivotvariablesvalues",level:3},{value:"addController",id:"addcontroller",level:3},{value:"removeController",id:"removecontroller",level:3},{value:"updateController",id:"updatecontroller",level:3},{value:"updateToolbar",id:"updatetoolbar",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"getDrillLevel",id:"getdrilllevel",level:3},{value:"gotoDrillLevel",id:"gotodrilllevel",level:3},{value:"removeDrillLevel",id:"removedrilllevel",level:3},{value:"removeAllDrillLevels",id:"removealldrilllevels",level:3},{value:"setListing",id:"setlisting",level:3},{value:"allClick",id:"allclick",level:3},{value:"cbClick",id:"cbclick",level:3},{value:"allClickPivot",id:"allclickpivot",level:3},{value:"cbClickPivot",id:"cbclickpivot",level:3},{value:"getSelectedItems",id:"getselecteditems",level:3},{value:"newDataHandler",id:"newdatahandler",level:3},{value:"computeTotals",id:"computetotals",level:3},{value:"%GetSummaryFromCSS",id:"getsummaryfromcss",level:3},{value:"getColumnDescriptors",id:"getcolumndescriptors",level:3},{value:"processAxisColumns",id:"processaxiscolumns",level:3},{value:"getRowDescriptors",id:"getrowdescriptors",level:3},{value:"processAxisRows",id:"processaxisrows",level:3},{value:"getPageSize",id:"getpagesize",level:3},{value:"getRecordCount",id:"getrecordcount",level:3},{value:"getCurrPage",id:"getcurrpage",level:3},{value:"setCurrPage",id:"setcurrpage",level:3},{value:"getRowCaptions",id:"getrowcaptions",level:3},{value:"showAllRows",id:"showallrows",level:3},{value:"getPropertyDim",id:"getpropertydim",level:3},{value:"GetPivotVariableData",id:"getpivotvariabledata",level:3},{value:"SynthesizeMDX",id:"synthesizemdx",level:3},{value:"addPivotCoverPane",id:"addpivotcoverpane",level:3},{value:"setPivotDisabled",id:"setpivotdisabled",level:3},{value:"exportToPDF",id:"exporttopdf",level:3},{value:"callbackExportRStoPDF",id:"callbackexportrstopdf",level:3},{value:"callbackRSPending",id:"callbackrspending",level:3}];function c(e){const l={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.header,{children:(0,t.jsx)(l.h1,{id:"deepseecomponentpivottable",children:"%DeepSee.Component.pivotTable"})}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Class %DeepSee.Component.pivotTable Extends %ZEN.Component.component [ System = 3 ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Pivot table component.",(0,t.jsx)(l.br,{}),"\nThis component gives users the ability to view and interact with a DeepSee cube or subject area.",(0,t.jsx)(l.br,{}),"\nThe data displayed by the pivot table can be supplied in various ways. This is specified using the dataSource:"]}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsx)(l.li,{children:'"manual" - Setting the value of the userMDX property to a valid MDX statement will cause the pivotTable to display the results of the query. This includes DRILLTHROUGH queries (which provide a listing of source data values).'}),"\n",(0,t.jsxs)(l.li,{children:['"automatic" - The user can drag and drop member specifications onto one of the various drop zones (supplied by the pivotController component) and the pivot table will automatically construct and execute an MDX query. In this case, you must supply a value for the cubeName property.',(0,t.jsx)(l.br,{}),"\nThis is the mode in which the DeepSee Analyzer works."]}),"\n"]}),"\n",(0,t.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(l.h3,{id:"jsincludes",children:"JSINCLUDES"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter JSINCLUDES = "DeepSee.js,dsparser.js";\n'})}),"\n",(0,t.jsx)(l.p,{children:"Pick up formula code."}),"\n",(0,t.jsx)(l.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.intersystems.com/deepsee";\n'})}),"\n",(0,t.jsx)(l.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%DeepSee";\n'})}),"\n",(0,t.jsx)(l.p,{children:"Localization domain"}),"\n",(0,t.jsx)(l.h3,{id:"defaultenclosingclass",children:"DEFAULTENCLOSINGCLASS"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DEFAULTENCLOSINGCLASS = "dsPivotEnclosingDiv";\n'})}),"\n",(0,t.jsx)(l.h3,{id:"maxcolumns",children:"MAXCOLUMNS"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter MAXCOLUMNS = 100;\n"})}),"\n",(0,t.jsx)(l.h3,{id:"maxlistingrows",children:"MAXLISTINGROWS"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter MAXLISTINGROWS = 1000;\n"})}),"\n",(0,t.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(l.h3,{id:"absolutepositioning",children:"absolutePositioning"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property absolutePositioning As %ZEN.Datatype.string [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.h3,{id:"datasource",children:"dataSource"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property dataSource As %ZEN.Datatype.string(VALUELIST = ",manual,automatic") [ InitialExpression = "automatic" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Specifies how this pivot table gets data from a DeepSee source."}),"\n",(0,t.jsx)(l.h3,{id:"singletable",children:"singleTable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property singleTable As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.h3,{id:"stalecache",children:"staleCache"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property staleCache As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.h3,{id:"reinitialized",children:"reinitialized"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property reinitialized As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.h3,{id:"datasourcename",children:"dataSourceName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property dataSourceName As %ZEN.Datatype.string [ Internal ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Name of data source associated with this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"mdx",children:"mdx"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property mdx As %ZEN.Datatype.string(ZENENCRYPT = 1, ZENSETTING = 0);\n"})}),"\n",(0,t.jsx)(l.p,{children:'If defined and dataSource is set to "manual", then this is the MDX statement used to provide the contents of the pivot table.'}),"\n",(0,t.jsx)(l.h3,{id:"usermdx",children:"userMDX"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property userMDX As %ZEN.Datatype.string(ZENSETTING = 0);\n"})}),"\n",(0,t.jsx)(l.p,{children:"If defined, then this holds the user-supplied MDX statement used to provide the contents of the pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"kpi",children:"kpi"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property kpi As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"If defined, then this is the name of the DeepSee KPI class used to provide the contents of the pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"currentquerytext",children:"currentQueryText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property currentQueryText As %ZEN.Datatype.string(ZENENCRYPT = 1, ZENSETTING = 0);\n"})}),"\n",(0,t.jsx)(l.p,{children:"Text of most recently executed query"}),"\n",(0,t.jsx)(l.h3,{id:"resolvedquerytext",children:"resolvedQueryText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property resolvedQueryText As %ZEN.Datatype.string(ZENENCRYPT = 1, ZENSETTING = 0);\n"})}),"\n",(0,t.jsx)(l.p,{children:"Resolved text of most recently executed query"}),"\n",(0,t.jsx)(l.h3,{id:"columnlist",children:"columnList"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnList As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsxs)(l.p,{children:['If defined, then this is a list of columns to display when displaying a KPI-based pivot. Each item in the list can also define a caption: "property:caption,..." as well as a format: "property:caption:format,..."',(0,t.jsx)(l.br,{}),'\n"," and ":" can be escaped with "\\," and "\\:"']}),"\n",(0,t.jsx)(l.h3,{id:"valuecolumn",children:"valueColumn"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property valueColumn As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["If defined, then this is the name of the column that provides the value for a row within this pivot. This value is used when a row is selected, and a dashboard *action* is invoked on the pivot.",(0,t.jsx)(l.br,{}),"\nThis only applies to KPI-based pivots. If not provided, then the first column is used."]}),"\n",(0,t.jsx)(l.h3,{id:"hidemeasures",children:"hideMeasures"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property hideMeasures As %ZEN.Datatype.string [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Indicates if and how measures should be displayed 0 = Always 1 = If More Than 1 Measure 2 = Never"}),"\n",(0,t.jsx)(l.h3,{id:"hiddenmeasuretext",children:"hiddenMeasureText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property hiddenMeasureText As list Of %ZEN.Datatype.string(XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"rowcaptionlist",children:"rowCaptionList"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowCaptionList As list Of %ZEN.Datatype.string(XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"showplan",children:"showPlan"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showPlan As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, execute a show plan for the query."}),"\n",(0,t.jsx)(l.h3,{id:"cellwidth",children:"cellWidth"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property cellWidth As %ZEN.Datatype.integer [ InitialExpression = 120 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is the minimum width (in pixels) used for all cells within the table. The default is 120."}),"\n",(0,t.jsx)(l.h3,{id:"rowlabelspan",children:"rowLabelSpan"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowLabelSpan As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsxs)(l.p,{children:["This specifies how parent row labels with multiple child labels are displayed.",(0,t.jsx)(l.br,{}),"\nIf true, then one parent label is displayed for each set of children. If false, then the parent row label is repeated for each child."]}),"\n",(0,t.jsx)(l.h3,{id:"columnlabelspan",children:"columnLabelSpan"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnLabelSpan As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsxs)(l.p,{children:["This specifies how parent column labels with multiple child labels are displayed.",(0,t.jsx)(l.br,{}),"\nIf true, then one parent label is displayed for each set of children. If false, then the parent row label is repeated for each child."]}),"\n",(0,t.jsx)(l.h3,{id:"cellheight",children:"cellHeight"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property cellHeight As %ZEN.Datatype.integer [ InitialExpression = 22 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is the height (in pixels) used for all cells within the table. The default is 22."}),"\n",(0,t.jsx)(l.h3,{id:"showemptyrows",children:"showEmptyRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showEmptyRows As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsxs)(l.p,{children:["If true, display rows containing only empty values.",(0,t.jsx)(l.br,{}),"\nIf mdx is specified, this is ignored."]}),"\n",(0,t.jsx)(l.h3,{id:"showemptycolumns",children:"showEmptyColumns"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showEmptyColumns As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsxs)(l.p,{children:["If true, display columns containing only empty values.",(0,t.jsx)(l.br,{}),"\nIf mdx is specified, this is ignored."]}),"\n",(0,t.jsx)(l.h3,{id:"cubename",children:"cubeName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property cubeName As %ZEN.Datatype.className(ZENEXPRESSION = 1);\n"})}),"\n",(0,t.jsx)(l.p,{children:"Name of the cube that will provide data for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"caption",children:"caption"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property caption As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Caption to display. If not specified, the caption for the cube will be used."}),"\n",(0,t.jsx)(l.h3,{id:"listing",children:"listing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property listing As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Name of listing to use for the current detail listing. If empty, the default listing is used."}),"\n",(0,t.jsx)(l.h3,{id:"defaultlisting",children:"defaultListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property defaultListing As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Name of listing to use for the default detail listing. If empty, the default listing for the cube is used."}),"\n",(0,t.jsx)(l.h3,{id:"listingenabled",children:"listingEnabled"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property listingEnabled As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, then listings are enabled for this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"listingselect",children:"listingSelect"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingSelect As %ZEN.Datatype.string(VALUELIST = ",single,multi");\n'})}),"\n",(0,t.jsx)(l.p,{children:'Specifies the select mode for a detail listing: none, "single", or "multi".'}),"\n",(0,t.jsx)(l.h3,{id:"listingtype",children:"listingType"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingType As %ZEN.Datatype.string(VALUELIST = ",table,map", XMLPROJECTION = "none") [ InitialExpression = "table", Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:'Specifies the type of detail listing to show: "table", or "map".'}),"\n",(0,t.jsx)(l.h3,{id:"listingrows",children:"listingRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property listingRows As %ZEN.Datatype.integer;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Maximum number of total rows to display within a detail listing. If empty, the default value (1000) is used."}),"\n",(0,t.jsx)(l.h3,{id:"listingpagesize",children:"listingPageSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property listingPageSize As %ZEN.Datatype.integer [ InitialExpression = 100 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Number of rows to display within one page of a detail listing. If empty, the default value (100) is used."}),"\n",(0,t.jsx)(l.h3,{id:"pivotselect",children:"pivotSelect"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property pivotSelect As %ZEN.Datatype.string(VALUELIST = ",single,multi");\n'})}),"\n",(0,t.jsxs)(l.p,{children:['Specifies the select mode for the pivot table: none, "single", or "multi". Turning this on displays check boxes for each row in the pivot table. This is different from the built-in cell range selection mechanism.',(0,t.jsx)(l.br,{}),"\nThis only applies to KPI-based pivots."]}),"\n",(0,t.jsx)(l.h3,{id:"cubekey",children:"cubeKey"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property cubeKey As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to remember the normalized cube name for this table."}),"\n",(0,t.jsx)(l.h3,{id:"querykey",children:"queryKey"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property queryKey As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to remember the query key for this table."}),"\n",(0,t.jsx)(l.h3,{id:"listingkey",children:"listingKey"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingKey As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to caching listing results for this table."}),"\n",(0,t.jsx)(l.h3,{id:"pivotnonce",children:"pivotNonce"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property pivotNonce As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = {$R(1000000000)}, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property to track this specific pivot instance. This is used to cancel query execution."}),"\n",(0,t.jsx)(l.h3,{id:"totalvalue",children:"totalValue"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property totalValue As %ZEN.Datatype.float(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track the current total of cell values."}),"\n",(0,t.jsx)(l.h3,{id:"cellcount",children:"cellCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property cellCount As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track the number of cells."}),"\n",(0,t.jsx)(l.h3,{id:"columnstruncated",children:"columnsTruncated"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnsTruncated As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track if we truncated the number of displayed columns."}),"\n",(0,t.jsx)(l.h3,{id:"querystatus",children:"queryStatus"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property queryStatus As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track the current query status."}),"\n",(0,t.jsx)(l.h3,{id:"querycomplete",children:"queryComplete"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property queryComplete As %ZEN.Datatype.float(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track the completion percentage of the current query."}),"\n",(0,t.jsx)(l.h3,{id:"querycalls",children:"queryCalls"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property queryCalls As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track number of calls to track the current query."}),"\n",(0,t.jsx)(l.h3,{id:"querypending",children:"queryPending"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property queryPending As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to track whether the current query has pending results (such as async KPIs being computed)."}),"\n",(0,t.jsx)(l.h3,{id:"showstatus",children:"showStatus"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showStatus As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, show status area along the bottom of the table."}),"\n",(0,t.jsx)(l.h3,{id:"showpivotstats",children:"showPivotStats"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showPivotStats As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, show pivot cell count and total in status area along the bottom of the table."}),"\n",(0,t.jsx)(l.h3,{id:"showquery",children:"showQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showQuery As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsxs)(l.p,{children:["If true, show the query used to get results for this table.",(0,t.jsx)(l.br,{}),"\nThis is a intended for use as a troubleshooting aid."]}),"\n",(0,t.jsx)(l.h3,{id:"candrilldown",children:"canDrillDown"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property canDrillDown As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 1, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If true, user can drill down by double-clicking on row captions. This is only enabled for queries automatically generated by the pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"rowaxisoptions",children:"rowAxisOptions"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowAxisOptions As pivotLevel;\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is used to define functions to apply to the entire row axis."}),"\n",(0,t.jsx)(l.h3,{id:"columnaxisoptions",children:"columnAxisOptions"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnAxisOptions As pivotLevel;\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is used to define functions to apply to the entire column axis."}),"\n",(0,t.jsx)(l.h3,{id:"rowlevels",children:"rowLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowLevels As list Of pivotLevel(XMLNAME = "rowLevel", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains the definition of the row dimensions for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"columnlevels",children:"columnLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnLevels As list Of pivotLevel(XMLNAME = "columnLevel", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains the definition of the column dimensions for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"filters",children:"filters"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property filters As list Of pivotLevel(XMLNAME = "filter", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains the definition of the filters for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"sqlrestriction",children:"sqlRestriction"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property sqlRestriction As %ZEN.Datatype.string(XMLNAME = "sqlRestriction", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains an SQL restriction that should be applied to this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"contextfilterspec",children:"contextFilterSpec"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property contextFilterSpec As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.p,{children:'Externally applied filter spec. This should contain a valid %FILTER clause. If it starts with "%FILTER" then it is one or more %FILTER clauses.'}),"\n",(0,t.jsx)(l.h3,{id:"overridecolumnspec",children:"overrideColumnSpec"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property overrideColumnSpec As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.p,{children:'Externally applied COLUMNS spec. This should contain a valid MDX expression (without "ON COLUMNS").'}),"\n",(0,t.jsx)(l.h3,{id:"overridecolumntext",children:"overrideColumnText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property overrideColumnText As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Text value associated with overrideColumnSpec. Used as a label."}),"\n",(0,t.jsx)(l.h3,{id:"overriderowspec",children:"overrideRowSpec"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property overrideRowSpec As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.p,{children:'Externally applied ROWS spec. This should contain a valid MDX expression (without "ON ROWS").'}),"\n",(0,t.jsx)(l.h3,{id:"overriderowtext",children:"overrideRowText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property overrideRowText As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Text value associated with overrideRowSpec. Used as a label."}),"\n",(0,t.jsx)(l.h3,{id:"measures",children:"measures"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property measures As list Of pivotLevel(XMLNAME = "measure", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:'This contains the default measure(s) (e.g., "[Measures].[Sales]") to show for this pivot table.'}),"\n",(0,t.jsx)(l.h3,{id:"measurelocation",children:"measureLocation"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property measureLocation As %ZEN.Datatype.string(VALUELIST = "rows,columns") [ InitialExpression = "columns" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:'When there are multiple measures in the measures list, speficies where to place them: "rows", or "columns".'}),"\n",(0,t.jsx)(l.h3,{id:"drilllevels",children:"drillLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property drillLevels As list Of pivotLevel(XMLNAME = "drillLevel", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:'This contains the current set of "drill into" levels for this pivot table.'}),"\n",(0,t.jsx)(l.h3,{id:"drillrownumbers",children:"drillRowNumbers"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property drillRowNumbers As list Of %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"listingfilters",children:"listingFilters"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingFilters As list Of pivotLevel(XMLNAME = "listingFilter", XMLPROJECTION = "ELEMENT") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"This is the set of filters that describe the cell(s) used for the current listing for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"listingfields",children:"listingFields"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingFields As list Of pivotLevel(XMLNAME = "listingField", XMLPROJECTION = "ELEMENT") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"This is the set of fields that describe the columnns used for the current custom listing for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"canuselistingfields",children:"canUseListingFields"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property canUseListingFields As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If true, user can select their own fields for listing."}),"\n",(0,t.jsx)(l.h3,{id:"pagesize",children:"pageSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property pageSize As %ZEN.Datatype.integer [ InitialExpression = 100 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Number of pivot result rows to show at one time."}),"\n",(0,t.jsx)(l.h3,{id:"currpage",children:"currPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property currPage As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:'This is the number (1-based) of the "page" within the query results that is currently displayed.'}),"\n",(0,t.jsx)(l.h3,{id:"sortcolumn",children:"sortColumn"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property sortColumn As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If not 0, then sort the results by the values within this column."}),"\n",(0,t.jsx)(l.h3,{id:"sortdir",children:"sortDir"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property sortDir As %ZEN.Datatype.string(VALUELIST = "ASC,DESC") [ InitialExpression = "ASC" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If column sorting is on, then this is the sort direction."}),"\n",(0,t.jsx)(l.h3,{id:"currlistingpage",children:"currListingPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property currListingPage As %ZEN.Datatype.integer [ InitialExpression = -1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:'This is the number (1-based) of the "page" within the listing that is currently displayed. If this is set to -1, then the first page will be displayed AND the listing will be recomputed.'}),"\n",(0,t.jsx)(l.h3,{id:"listingsortcolumn",children:"listingSortColumn"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property listingSortColumn As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If not 0, then sort the listing table by the values within this column."}),"\n",(0,t.jsx)(l.h3,{id:"listingsortdir",children:"listingSortDir"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingSortDir As %ZEN.Datatype.string(VALUELIST = "ASC,DESC") [ InitialExpression = "ASC" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If listing column sorting is on, then this is the sort direction."}),"\n",(0,t.jsx)(l.h3,{id:"rowcount",children:"rowCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowCount As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsx)(l.p,{children:"If present, this is the number of rows returned by the current query. This is calculated in both user query and automatic query modes."}),"\n",(0,t.jsx)(l.h3,{id:"jsonrows",children:"jsonRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property jsonRows As %ZEN.Datatype.integer [ InitialExpression = 2500 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Maximum number of data rows emitted as JSON to drive charts. If empty, the default value (2500) is used."}),"\n",(0,t.jsx)(l.h3,{id:"listingrowcount",children:"listingRowCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingRowCount As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsx)(l.p,{children:"If present, this is the total number of rows returned by the current listing."}),"\n",(0,t.jsx)(l.h3,{id:"columncount",children:"columnCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnCount As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsx)(l.p,{children:"If present, this is the number of columns returned by the current query. This is calculated in both user query and automatic query modes."}),"\n",(0,t.jsx)(l.h3,{id:"formatrules",children:"formatRules"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property formatRules As list Of pivotCondition(XMLNAME = "formatRule", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains any conditional formatting rules for the table."}),"\n",(0,t.jsx)(l.h3,{id:"calculatedmembers",children:"calculatedMembers"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property calculatedMembers As list Of calculatedMember(XMLNAME = "calculatedMember", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"This contains any local calculated members for the table."}),"\n",(0,t.jsx)(l.h3,{id:"selectedrange",children:"selectedRange"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property selectedRange As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["This specifies the current selected range of cells as a comma-separated list of integers. The list is of the form:",(0,t.jsx)(l.br,{}),"\nstartRow,startCol,endRow,endCol,allRows,allCols",(0,t.jsx)(l.br,{}),"\nAll cells numbers are 1-based and represent the ordinal position of cells as they are displayed and not their position within the underlying query (e.g., when columns are sorted, these are still 1,2,3).",(0,t.jsx)(l.br,{}),"\nIf allRows is 1, then all rows for indicated columns are selected.",(0,t.jsx)(l.br,{}),"\nIf allCols is 1, then all columns for indicated rows are selected.",(0,t.jsx)(l.br,{}),'\nIf the range is equal to "", then no cells are selected.']}),"\n",(0,t.jsx)(l.h3,{id:"selectedcellbackground",children:"selectedCellBackground"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property selectedCellBackground As %ZEN.Datatype.style [ InitialExpression = "rgb(47,98,128)" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Background color applied to the selected cell range."}),"\n",(0,t.jsx)(l.h3,{id:"selectedcellcolor",children:"selectedCellColor"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property selectedCellColor As %ZEN.Datatype.style [ InitialExpression = "white" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Color applied to the selected cell range."}),"\n",(0,t.jsx)(l.h3,{id:"columnheaderstyle",children:"columnHeaderStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnHeaderStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Optional style to apply to column headers."}),"\n",(0,t.jsx)(l.h3,{id:"rowheaderstyle",children:"rowHeaderStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowHeaderStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Optional style to apply to row headers."}),"\n",(0,t.jsx)(l.h3,{id:"cellstyle",children:"cellStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property cellStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Optional style to apply to cells."}),"\n",(0,t.jsx)(l.h3,{id:"tablestyle",children:"tableStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property tableStyle As %ZEN.Datatype.style [ InitialExpression = "background-color:white" ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Optional style to apply to entire table"}),"\n",(0,t.jsx)(l.h3,{id:"showzebra",children:"showZebra"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showZebra As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, show zebra striping."}),"\n",(0,t.jsx)(l.h3,{id:"showrowcaption",children:"showRowCaption"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showRowCaption As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, show a caption above the row headers."}),"\n",(0,t.jsx)(l.h3,{id:"rowcaptiontext",children:"rowCaptionText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowCaptionText As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Holder for row caption text."}),"\n",(0,t.jsx)(l.h3,{id:"evenrowstyle",children:"evenRowStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property evenRowStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Optional style to apply to even rows in zebra stripe mode."}),"\n",(0,t.jsx)(l.h3,{id:"colorscale",children:"colorScale"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property colorScale As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:'If set, this is the name of the color-scaling scheme to apply. red-to-black,green-to-black,blue-to-black,salmon-to-black,purple-to-black,gray-to-black or "custom:r1,g1,b1:r2,g2,b2".'}),"\n",(0,t.jsx)(l.h3,{id:"analyzermode",children:"analyzerMode"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property analyzerMode As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Special flag to indicate use of pivot within the Analyzer. For now this turns on a background image."}),"\n",(0,t.jsx)(l.h3,{id:"backgroundimage",children:"backgroundImage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property backgroundImage As %ZEN.Datatype.uri;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Optional image to show in background of pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"backgroundopacity",children:"backgroundOpacity"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property backgroundOpacity As %ZEN.Datatype.float [ InitialExpression = 0.12 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Opacity (0 to 1) of pivot table background image."}),"\n",(0,t.jsx)(l.h3,{id:"isdrillthrough",children:"isDrillThrough"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property isDrillThrough As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsxs)(l.p,{children:["When set true, the current query is executed as a DRILLTHROUGH.",(0,t.jsx)(l.br,{}),"\nIf the current data source is a KPI, then execute a listing provided by the KPI (if available)."]}),"\n",(0,t.jsx)(l.h3,{id:"parameters-1",children:"parameters"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property parameters As array Of %ZEN.Auxiliary.parameter(XMLKEYNAME = "paramName", XMLNAME = "parameter", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(l.p,{children:"User-defined set of parameters. These values are passed on to the user callback functions that provides the contents of this table. Typically this is used to hold search parameters."}),"\n",(0,t.jsx)(l.h3,{id:"message",children:"%message"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property %message As %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If set, then only one cell is displayed with this message text."}),"\n",(0,t.jsx)(l.h3,{id:"progressmessage",children:"progressMessage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property progressMessage As %ZEN.Datatype.string(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(l.p,{children:"If set this will contain the current message for display in the progress indicator."}),"\n",(0,t.jsx)(l.h3,{id:"rowtotals",children:"rowTotals"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowTotals As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If true, then display row totals."}),"\n",(0,t.jsx)(l.h3,{id:"columntotals",children:"columnTotals"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnTotals As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If true, then display column totals."}),"\n",(0,t.jsx)(l.h3,{id:"rowtotalagg",children:"rowTotalAgg"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowTotalAgg As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "sum", Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Indicate which aggregate to use for row totals: sum,min,max,count,avg,pct."}),"\n",(0,t.jsx)(l.h3,{id:"columntotalagg",children:"columnTotalAgg"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnTotalAgg As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "sum", Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Indicate which aggregate to use for column totals: sum,min,max,count,avg,pct."}),"\n",(0,t.jsx)(l.h3,{id:"rowtotalsource",children:"rowTotalSource"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowTotalSource As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "page", Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:'Indicate the source for row totals: "page" or "all".'}),"\n",(0,t.jsx)(l.h3,{id:"resultset",children:"%ResultSet"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property %ResultSet As %DeepSee.ResultSet(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Current DeepSee result set being processed."}),"\n",(0,t.jsx)(l.h3,{id:"kpicontroller",children:"%KPIController"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property %KPIController As %ZEN.Auxiliary.dataController(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Current data controller used to get KPI data."}),"\n",(0,t.jsx)(l.h3,{id:"data",children:"data"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property data As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"The client-side object graph referred to by this property contains the most recent data for this pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"oncellclick",children:"oncellClick"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property oncellClick As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["oncellClick event handler: This event handler is called by the pivot when the user clicks the mouse on a cell within the pivot table.",(0,t.jsx)(l.br,{}),"\nThe event handler is passed an argument, pivot, that is ",(0,t.jsx)(l.em,{children:"this"})," pivot table object."]}),"\n",(0,t.jsx)(l.h3,{id:"oncelldblclick",children:"oncellDblClick"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property oncellDblClick As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["oncellDblClick event handler: This event handler is called by the pivot when the user double clicks the mouse on a cell within the pivot table.",(0,t.jsx)(l.br,{}),"\nThe event handler is passed an argument, pivot, that is ",(0,t.jsx)(l.em,{children:"this"})," pivot table object."]}),"\n",(0,t.jsx)(l.h3,{id:"ondrill",children:"ondrill"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property ondrill As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["ondrill event handler: This event handler is called by the pivot whenever the drill down state of the pivot is changed.",(0,t.jsx)(l.br,{}),"\nThe event handler is passed an argument, pivot, that is ",(0,t.jsx)(l.em,{children:"this"})," pivot table object."]}),"\n",(0,t.jsx)(l.h3,{id:"onlistingselect",children:"onlistingSelect"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property onlistingSelect As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsxs)(l.p,{children:["onlistingSelect event handler: This event handler is called by the pivot when the user selects or unselected an item within a pivot listing.",(0,t.jsx)(l.br,{}),"\nThe event handler is passed an argument, pivot, that is ",(0,t.jsx)(l.em,{children:"this"})," pivot table object."]}),"\n",(0,t.jsx)(l.h3,{id:"ispaging",children:"isPaging"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property isPaging As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal flag. Set true when paging among query results."}),"\n",(0,t.jsx)(l.h3,{id:"initialexecute",children:"initialExecute"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property initialExecute As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, then automatically execute queries when this pivot is first displayed."}),"\n",(0,t.jsx)(l.h3,{id:"autoexecute",children:"autoExecute"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property autoExecute As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true then automatically execute queries when filters, rows, or columns are changed."}),"\n",(0,t.jsx)(l.h3,{id:"previewmode",children:"previewMode"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property previewMode As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Initial value of previewMode setting for the Analyzer"}),"\n",(0,t.jsx)(l.h3,{id:"allowpreviewinteraction",children:"allowPreviewInteraction"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property allowPreviewInteraction As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 1 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Allow the user to interact with the pivot even in preview mode."}),"\n",(0,t.jsx)(l.h3,{id:"previewrowcount",children:"previewRowCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property previewRowCount As %ZEN.Datatype.integer(XMLPROJECTION = "none") [ InitialExpression = 25 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"The row limit used to truncate while in SAMPLE mode."}),"\n",(0,t.jsx)(l.h3,{id:"rowstruncated",children:"rowsTruncated"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowsTruncated As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"This flag is set when the resultset has seen its rows truncated by a HEAD function."}),"\n",(0,t.jsx)(l.h3,{id:"changespending",children:"changesPending"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property changesPending As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"If autoExecute is off, then this tracks that a refresh is needed."}),"\n",(0,t.jsx)(l.h3,{id:"selectedrowvalues",children:"selectedRowValues"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property selectedRowValues As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Internal property used to remember the set of selected row values."}),"\n",(0,t.jsx)(l.h3,{id:"printtitle",children:"printTitle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printTitle As %ZEN.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Title to display when pivot is printed."}),"\n",(0,t.jsx)(l.h3,{id:"printsubtitle",children:"printSubtitle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printSubtitle As %ZEN.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Subtitle to display when pivot is printed."}),"\n",(0,t.jsx)(l.h3,{id:"printorientation",children:"printOrientation"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printOrientation As %ZEN.Datatype.string(XMLPROJECTION = "attribute") [ InitialExpression = 1 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:'Orientation when pivot is printed: "portrait" or "landscape".'}),"\n",(0,t.jsx)(l.h3,{id:"printsubtitleon",children:"printSubtitleOn"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printSubtitleOn As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Display the subtitle when exporting to PDF"}),"\n",(0,t.jsx)(l.h3,{id:"showuser",children:"showUser"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property showUser As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Display the user when exporting to PDF"}),"\n",(0,t.jsx)(l.h3,{id:"printpagesize",children:"printPageSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printPageSize As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:'Page size when pivot is printed. This takes the form "8.5x11 in" (w x h).'}),"\n",(0,t.jsx)(l.h3,{id:"printmargintop",children:"printMarginTop"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printMarginTop As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Page top margin when pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"printmarginleft",children:"printMarginLeft"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printMarginLeft As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Page left margin when pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"printmarginright",children:"printMarginRight"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printMarginRight As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Page right margin when pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"printmarginbottom",children:"printMarginBottom"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printMarginBottom As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Page bottom margin when pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"printlabelwidth",children:"printLabelWidth"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printLabelWidth As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Width of row labels when the pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"printcellwidth",children:"printCellWidth"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property printCellWidth As %ZEN.Datatype.float(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Width of data cells when the pivot is printed. This is in the same units as the page size."}),"\n",(0,t.jsx)(l.h3,{id:"maxrows",children:"maxRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property maxRows As %ZEN.Datatype.integer(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Max rows exported to PDF"}),"\n",(0,t.jsx)(l.h3,{id:"borderleftcell",children:"borderLeftCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderLeftCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Table borders"}),"\n",(0,t.jsx)(l.h3,{id:"borderrightcell",children:"borderRightCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderRightCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"bordertopcell",children:"borderTopCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderTopCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderbottomcell",children:"borderBottomCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderBottomCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderleftcol",children:"borderLeftCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderLeftCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderrightcol",children:"borderRightCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderRightCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"bordertopcol",children:"borderTopCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderTopCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderbottomcol",children:"borderBottomCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderBottomCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderleftrow",children:"borderLeftRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderLeftRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderrightrow",children:"borderRightRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderRightRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"bordertoprow",children:"borderTopRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderTopRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"borderbottomrow",children:"borderBottomRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property borderBottomRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontfamilycell",children:"fontFamilyCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontFamilyCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontsizecell",children:"fontSizeCell"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontSizeCell As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontfamilycol",children:"fontFamilyCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontFamilyCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontsizecol",children:"fontSizeCol"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontSizeCol As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontfamilyrow",children:"fontFamilyRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontFamilyRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"fontsizerow",children:"fontSizeRow"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property fontSizeRow As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.h3,{id:"showfilters",children:"showFilters"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property showFilters As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"showFilters - byTable, byTitle, off"}),"\n",(0,t.jsx)(l.h3,{id:"showlistingfilters",children:"showListingFilters"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property showListingFilters As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"showListingFilters - on, off"}),"\n",(0,t.jsx)(l.h3,{id:"showdate",children:"showDate"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property showDate As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"showDate - on, off"}),"\n",(0,t.jsx)(l.h3,{id:"showzebrastripes",children:"showZebraStripes"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property showZebraStripes As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"showZebraStripes - on, off"}),"\n",(0,t.jsx)(l.h3,{id:"listingfontsize",children:"listingFontSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property listingFontSize As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"Font fize used in listing"}),"\n",(0,t.jsx)(l.h3,{id:"filtertablestyle",children:"filterTableStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property filterTableStyle As %ZEN.Datatype.style(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"filterTableStyle"}),"\n",(0,t.jsx)(l.h3,{id:"filtertablecaptionstyle",children:"filterTableCaptionStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property filterTableCaptionStyle As %ZEN.Datatype.style(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"filterTableCaptionStyle;"}),"\n",(0,t.jsx)(l.h3,{id:"filtertableitemstyle",children:"filterTableItemStyle"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property filterTableItemStyle As %ZEN.Datatype.style(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"filterTableItemStyle;"}),"\n",(0,t.jsx)(l.h3,{id:"nowdisplayformat",children:"nowDisplayFormat"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property nowDisplayFormat As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(l.p,{children:"nowDisplayFormat"}),"\n",(0,t.jsx)(l.h3,{id:"showpivot",children:"showPivot"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property showPivot As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"If true, then write out HTML for this pivot otherwise only serve up JSON data (to drive other components)."}),"\n",(0,t.jsx)(l.h3,{id:"crossjoinrowlimit",children:"crossJoinRowLimit"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property crossJoinRowLimit As %ZEN.Datatype.integer [ InitialExpression = 2000 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Maximum number of rows to display for a CROSSJOIN."}),"\n",(0,t.jsx)(l.h3,{id:"headfunctionadded",children:"headFunctionAdded"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property headFunctionAdded As %ZEN.Datatype.boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Flag to indicate a HEAD function has been added to an axis by the Analyzer"}),"\n",(0,t.jsx)(l.h3,{id:"pivotvariables",children:"pivotVariables"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property pivotVariables As array Of %String(XMLPROJECTION = "NONE") [ Internal ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Run-time value of pivot variables used by this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"maxchartsize",children:"maxChartSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Property maxChartSize As %ZEN.Datatype.integer(XMLPROJECTION = "NONE") [ InitialExpression = 400 ];\n'})}),"\n",(0,t.jsx)(l.p,{children:"Certain chart types may have different maximum sizes that make sense."}),"\n",(0,t.jsx)(l.h3,{id:"lastsessionkey",children:"LastSessionKey"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property LastSessionKey As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(l.p,{children:"Saves the session key of the latest executed query for access and clean-up of local cache"}),"\n",(0,t.jsx)(l.h3,{id:"lastcube",children:"LastCube"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property LastCube As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Saves the cube name of the latest executed query for clean-up of local cache"}),"\n",(0,t.jsx)(l.h3,{id:"lastquerykey",children:"LastQueryKey"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Property LastQueryKey As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(l.p,{children:"Saves the query key of the latest executed query for clean-up of local cache"}),"\n",(0,t.jsx)(l.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(l.h3,{id:"style",children:"Style"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,t.jsx)(l.p,{children:"defines the style sheet used by this component."}),"\n",(0,t.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(l.h3,{id:"deferredexecutequery",children:"deferredExecuteQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod deferredExecuteQuery(force) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Execute a query after a short pause (to allow for window updates, etc."}),"\n",(0,t.jsx)(l.h3,{id:"executequery",children:"executeQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod executeQuery(force) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Execute the current query for this pivot table and update the display.",(0,t.jsx)(l.br,{}),"\nIf force is true, then force the query to be prepared."]}),"\n",(0,t.jsx)(l.h3,{id:"executelisting",children:"executeListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod executeListing() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Execute a drill through for the current selected cell."}),"\n",(0,t.jsx)(l.h3,{id:"cancelquery",children:"cancelQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cancelQuery() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Cancel the current query for this pivot table and update the display."}),"\n",(0,t.jsx)(l.h3,{id:"swaprowsandcolumns",children:"swapRowsAndColumns"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod swapRowsAndColumns() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Swap the row and column definitions for this table and refresh it."}),"\n",(0,t.jsx)(l.h3,{id:"getselectedrange",children:"getSelectedRange"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getSelectedRange() [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Return the range of selected cells or null if nothing selected.",(0,t.jsx)(l.br,{}),"\nThe range is returned as an array of startRow,startCol,endRow,endCol,allRows,allCols."]}),"\n",(0,t.jsx)(l.h3,{id:"resettable",children:"resetTable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod resetTable() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Reset this table to default settings."}),"\n",(0,t.jsx)(l.h3,{id:"candrillthrough",children:"canDrillThrough"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod canDrillThrough() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Test if this pivot supports drill through."}),"\n",(0,t.jsx)(l.h3,{id:"drillthrough",children:"drillThrough"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod drillThrough() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Toggle drill through state of this pivot. If not in drill through mode, execute a drill through: show a listing for the current selected range of cells. else restore normal view. Return true if the operation took place."}),"\n",(0,t.jsx)(l.h3,{id:"setdrillthrough",children:"setDrillThrough"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setDrillThrough(flag, force) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Set the drill through state of this pivot to flag.",(0,t.jsx)(l.br,{}),"\nIf true, execute a drill through: show a listing for the current selected range of cells. else restore normal view. Return true if the operation took place."]}),"\n",(0,t.jsx)(l.h3,{id:"showmdxquery",children:"showMDXQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showMDXQuery() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Toggle display of the current query."}),"\n",(0,t.jsx)(l.h3,{id:"localizeelements",children:"%LocalizeElements"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %LocalizeElements(pCubeClass As %String, pList As %ListOfObjects) [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Make sure any text within this list of pivot levels is localized!"}),"\n",(0,t.jsx)(l.h3,{id:"updatelocalsession",children:"%UpdateLocalSession"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %UpdateLocalSession() As %Status\n"})}),"\n",(0,t.jsx)(l.p,{children:"Updates the SessionKey, Cube, and QueryKey properties with the current session data, and deletes the previous session data from the cache"}),"\n",(0,t.jsx)(l.h3,{id:"deletelastresult",children:"DeleteLastResult"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method DeleteLastResult() As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Deletes the previous session data from the local cache. Called from the frontend"}),"\n",(0,t.jsx)(l.h3,{id:"onunloadhandler",children:"onunloadHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod onunloadHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Delete the latest query from local cache in asynchronous mode before unloading"}),"\n",(0,t.jsx)(l.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,t.jsx)(l.p,{children:"Draw HTML for this component."}),"\n",(0,t.jsx)(l.h3,{id:"drawtable",children:"%DrawTable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawTable(pAxisCount As %Integer, pColAxis As %Integer, pRowAxis As %Integer, ByRef pFilterInfo, pUseSort As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Draw the tables that make up this component.",(0,t.jsx)(l.br,{}),"\npAxisCount is the number of axes within the result.",(0,t.jsx)(l.br,{}),"\npColAxis specifies which axis should be used for columns.",(0,t.jsx)(l.br,{}),"\npRowAxis specifies which axis should be used for rows.",(0,t.jsx)(l.br,{}),"\npFilterInfo is an array of filter information.",(0,t.jsx)(l.br,{}),"\npUseSort indicates that row sorting is in play."]}),"\n",(0,t.jsx)(l.h3,{id:"getmaxrowleveldepth",children:"%GetMaxRowLevelDepth"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod %GetMaxRowLevelDepth(pRow, pDepth As %Integer = 0) As %Integer\n"})}),"\n",(0,t.jsx)(l.h3,{id:"calculatespans",children:"%CalculateSpans"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %CalculateSpans(ByRef pTopTableHTML, ByRef pSideTableHTML, Output pRowSpan, Output pColSpan, Output pFirstSpan = 0) As %Status\n"})}),"\n",(0,t.jsx)(l.h3,{id:"divmerge",children:"DivMerge"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method DivMerge(tNubTable = "", tTopTable = "", tSideTable = "", tDataTable = "", pNubTableHTML, pTopTableHTML, pSideTableHTML, pDataTableHTML)\n'})}),"\n",(0,t.jsx)(l.h3,{id:"drawnub",children:"%DrawNub"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawNub(ByRef pNub, pRowSpan As %String, pColSpan As %String, pFirstSpan As %String) As %Status\n"})}),"\n",(0,t.jsx)(l.h3,{id:"emit",children:"%Emit"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method %Emit(ByRef pTable, pTransform As %String = "", ByRef pIgnore = "", pRowSpan As %String, pColSpan As %String, pBorderWidth As %String = 1) As %Status\n'})}),"\n",(0,t.jsx)(l.h3,{id:"mergetables",children:"%MergeTables"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %MergeTables(ByRef pNubTableHTML As %String, ByRef pTopTableHTML As %String, ByRef pSideTableHTML As %String, ByRef pDataTableHTML As %String, ByRef pNubTableAttributes As %String, ByRef pTopTableAttributes As %String, ByRef pSideTableAttributes As %String, ByRef pDataTableAttributes As %String) As %Status\n"})}),"\n",(0,t.jsx)(l.h3,{id:"drawkpitable",children:"%DrawKPITable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawKPITable() As %Status\n"})}),"\n",(0,t.jsx)(l.p,{children:"Draw table using KPI class as a source."}),"\n",(0,t.jsx)(l.h3,{id:"getkpicolumns",children:"%GetKPIColumns"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'ClassMethod %GetKPIColumns(pController As %ZEN.Auxiliary.dataController, Output pColCount As %Integer, Output pColInfo, pColumnList As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(l.p,{children:["Return information on the set of columns to display for the current KPI. Returns:",(0,t.jsx)(l.br,{}),"\npColInfo(n) = property",(0,t.jsx)(l.br,{}),'\npColInfo(n,"caption") = caption (if different)',(0,t.jsx)(l.br,{}),"\nThis is a class method that is also called from Excel and PDF export.",(0,t.jsx)(l.br,{}),"\nIf pColumnList is provided, it is a csv-list that specifies the columns and column order from the KPI to display. Otherwise all columns are displayed in the order defined by the KPI."]}),"\n",(0,t.jsx)(l.h3,{id:"drawstatusarea",children:"%DrawStatusArea"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method %DrawStatusArea(pPageCount As %Integer, pMode As %String = "pivot", pTruncated As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Draw the contents of the status area. pMode indicates whether this is a pivot status or a listing status."}),"\n",(0,t.jsx)(l.h3,{id:"drawdatatable",children:"%DrawDataTable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawDataTable(pAxisCount As %Integer, pColRoot As %Integer, pRowRoot As %Integer, pStartRow As %Integer, pEndRow As %Integer, pColumnTotals As %Boolean = 0, pRowTotals As %Boolean = 0, pUseSort As %Boolean = 0, pMaxCols As %Boolean = 1000, ByRef pHTML As %String, ByRef pHTMLAttributes As %String) As %Status\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Draw the table containing the data cells.",(0,t.jsx)(l.br,{}),"\npColRoot is node number for top node along the column axis.",(0,t.jsx)(l.br,{}),"\npRowRoot is node number for top node along the row axis.",(0,t.jsx)(l.br,{}),"\npStartRow is the ordinal number of the first row to display.",(0,t.jsx)(l.br,{}),"\npEndRow is the ordinal number of the last row to display."]}),"\n",(0,t.jsx)(l.h3,{id:"drawemptytable",children:"%DrawEmptyTable"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawEmptyTable(pMessage As %String, ByRef pHTML As %String, ByRef pHTMLAttributes) As %Status\n"})}),"\n",(0,t.jsx)(l.p,{children:"Draw a one-cell data table with the given message."}),"\n",(0,t.jsx)(l.h3,{id:"getaxissize",children:"%GetAxisSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %GetAxisSize(pAxisNo As %Integer) As %Integer [ Internal ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Find the number of displayed leaf nodes in the given axis.",(0,t.jsx)(l.br,{}),"\npAxisNo is the axis number."]}),"\n",(0,t.jsx)(l.h3,{id:"getaxisspecs",children:"%GetAxisSpecs"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %GetAxisSpecs(pAxisNo As %Integer, pSpan As %Boolean, pStart As %Integer, pEnd As %Integer, Output pLevels As %Integer, Output pItems, pUseSort As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Compute information needed to draw the labels and cells of this table for the given axis.",(0,t.jsx)(l.br,{}),"\npAxisNo is the axis number.",(0,t.jsx)(l.br,{}),"\npSpan indicates whether we should span parent labels.",(0,t.jsx)(l.br,{}),"\npStart is the (ordinal) number of the first cell to show.",(0,t.jsx)(l.br,{}),"\npEnd is the (ordinal) number of the end cell to show.",(0,t.jsx)(l.br,{}),"\npLevels returns the number of levels within the axis.",(0,t.jsx)(l.br,{}),"\npItems returns an array of items to plot. This takes the form:",(0,t.jsx)(l.br,{}),"\npItems(level,index) = $LB(nodeNo,colSpan,rowSpan,hasChildren,[itemNo(presorted #)]) (along the column axis, otherwise flip the row and col spans)."]}),"\n",(0,t.jsx)(l.h3,{id:"getfilterinfo",children:"%GetFilterInfo"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %GetFilterInfo(Output pInfo, Output pAdvancedFilters, pReturnMembers = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Get information for filters.",(0,t.jsx)(l.br,{}),"\npInfo returns the list of filters in the first subscript:",(0,t.jsx)(l.br,{}),"\npInfo(i) = $LB(idx,spec,value,text,isMsr,isMember)",(0,t.jsx)(l.br,{}),"\nIf the pReturnMembers flag is set, the list of members for the filter will be returned in:",(0,t.jsx)(l.br,{}),"\npInfo(i,j) = $LB(value,name,memberId,memberKey) for the j-th member of the i-th filter.",(0,t.jsx)(l.br,{}),"\nThere may be advanced filters:",(0,t.jsx)(l.br,{}),"\npAdvancedFilters(i) = $LB(idx,spec,text)"]}),"\n",(0,t.jsx)(l.h3,{id:"createresultset",children:"%CreateResultSet"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %CreateResultSet(Output pSC As %Status, ByRef pParms, ByRef pFilterInfo, ByRef pAdvancedFilters, Output pQueryText As %String, Output pAxes, Output pDataReady As %Boolean, Output pComplexQuery As %Boolean, pExecuteBaseQuery As %Boolean = 0) As %DeepSee.ResultSet\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Create the DeepSee ResultSet needed to get data for this table.",(0,t.jsx)(l.br,{}),"\nDoes not execute the query.",(0,t.jsx)(l.br,{}),"\npSC is a status code.",(0,t.jsx)(l.br,{}),"\npParms is an array of input parameter values.",(0,t.jsx)(l.br,{}),"\npFilterInfo is an array of filter details.",(0,t.jsx)(l.br,{}),"\npAdvancedFilters is an array of advanced filter details.",(0,t.jsx)(l.br,{}),"\npAxes is an array of top nodes for each axis.",(0,t.jsx)(l.br,{}),"\npDataReady is true if the query results are in the cache.",(0,t.jsx)(l.br,{}),"\npQueryText is the text of the query.",(0,t.jsx)(l.br,{}),'\npComplexQuery is true if this is a "complex" query that should have its axes executed first.']}),"\n",(0,t.jsx)(l.h3,{id:"oncreateresultset",children:"%OnCreateResultSet"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnCreateResultSet(Output pRS As %DeepSee.ResultSet, ByRef pParms) As %Status\n"})}),"\n",(0,t.jsxs)(l.p,{children:["This callback is invoked when the pivot table is about to create a result set.",(0,t.jsx)(l.br,{}),"\nIf the callback creates a %DeepSee.ResultSet object and returns it via pRS, then the pivot table will use this result set to display results."]}),"\n",(0,t.jsx)(l.h3,{id:"countmeasures",children:"%CountMeasures"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %CountMeasures(Output pMeasures As %Integer, Output pComputedMeasures As %Integer) [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return the total number of measures and how many are computed measures."}),"\n",(0,t.jsx)(l.h3,{id:"collectmeasures",children:"%CollectMeasures"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %CollectMeasures(pQueryKey As %String, Output pCollectedMeasures As %String, pListingFilters As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(l.h3,{id:"hidemeasures-1",children:"%HideMeasures"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %HideMeasures() As %Boolean\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return true if the Measures setting stipulates the measures should be hidden from view."}),"\n",(0,t.jsx)(l.h3,{id:"getwhereclause",children:"%GetWhereClause"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %GetWhereClause(ByRef pFilterInfo) As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Construct the MDX WHERE clause for the pivot table."}),"\n",(0,t.jsx)(l.h3,{id:"getaxisclausefromlevels",children:"%GetAxisClauseFromLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method %GetAxisClauseFromLevels(pLevels As %AbstractList, pShowEmpty As %Boolean = 0, Output pComplexQuery As %Boolean, pDrillLevel As %Integer = "", pMaxItems As %Integer = "", pShowAll As %Boolean = 0) As %String [ Internal ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Convert an array of pivot levels into an MDX axis clause that will serve as part of the query executed for the pivot."}),"\n",(0,t.jsx)(l.h3,{id:"processlevels",children:"ProcessLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method ProcessLevels(pList As %AbstractList, pStart As %Integer, ByRef pTree, pParent As %Integer) [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Convert array of levels (from pStart) into a parse tree that can be handed to a query."}),"\n",(0,t.jsx)(l.h3,{id:"cellmousedownhandler",children:"cellMouseDownHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellMouseDownHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Mouse down within a cell. Try to prevent text select when selecting multiple cells."}),"\n",(0,t.jsx)(l.h3,{id:"cellclickhandler",children:"cellClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellClickHandler(evt, row, col) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Notification that a cell is clicked.",(0,t.jsx)(l.br,{}),"\nrow and col give the ordinal (logical) position of the cell."]}),"\n",(0,t.jsx)(l.h3,{id:"celldblclickhandler",children:"cellDblClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellDblClickHandler(evt, row, col) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Notification that a cell is double-clicked.",(0,t.jsx)(l.br,{}),"\nrow and col give the ordinal position of the cell."]}),"\n",(0,t.jsx)(l.h3,{id:"columnclickhandler",children:"columnClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod columnClickHandler(evt, col) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a column header is clicked."}),"\n",(0,t.jsx)(l.h3,{id:"columndblclickhandler",children:"columnDblClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod columnDblClickHandler(evt, col) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a column header is double-clicked."}),"\n",(0,t.jsx)(l.h3,{id:"listingheaderdblclickhandler",children:"listingHeaderDblClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod listingHeaderDblClickHandler(evt, col) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a listing header is double-clicked."}),"\n",(0,t.jsx)(l.h3,{id:"rowclickhandler",children:"rowClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod rowClickHandler(evt, row) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a row header is clicked."}),"\n",(0,t.jsx)(l.h3,{id:"rowdblclickhandler",children:"rowDblClickHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod rowDblClickHandler(evt, level, row) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a row header is double clicked."}),"\n",(0,t.jsx)(l.h3,{id:"selectcellrange",children:"selectCellRange"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectCellRange(startRow, startCol, endRow, endCol, allRows, allCols, selectOnly) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Set the selected cell range. Addresses are 1-based."}),"\n",(0,t.jsx)(l.h3,{id:"getpagecount",children:"getPageCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPageCount() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, calculate the number of pages."}),"\n",(0,t.jsx)(l.h3,{id:"getlistingpagecount",children:"getListingPageCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getListingPageCount() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page listing display, calculate the number of pages."}),"\n",(0,t.jsx)(l.h3,{id:"previouspage",children:"previousPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod previousPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, go to previous page, if possible."}),"\n",(0,t.jsx)(l.h3,{id:"nextpage",children:"nextPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod nextPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, go to next page, if possible."}),"\n",(0,t.jsx)(l.h3,{id:"firstpage",children:"firstPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod firstPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, go to the first page."}),"\n",(0,t.jsx)(l.h3,{id:"lastpage",children:"lastPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod lastPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, go to the last page."}),"\n",(0,t.jsx)(l.h3,{id:"gotopage",children:"gotoPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gotoPage(page) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"For multi-page display, go to specified page (1 is first page), if possible."}),"\n",(0,t.jsx)(l.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Set the value of a named property."}),"\n",(0,t.jsx)(l.h3,{id:"dragstarthandler",children:"dragStartHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dragStartHandler(dragData) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Built-in drag handler for pivot table component. Let the user drag the selected node."}),"\n",(0,t.jsx)(l.h3,{id:"callgetitemspec",children:"callGetItemSpec"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod callGetItemSpec(labelInfo, rowItem, columnItem) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Used to provide label related info when required."}),"\n",(0,t.jsx)(l.h3,{id:"callformatvalue",children:"callFormatValue"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod callFormatValue(value, formattedValue, rowItem, columnItem) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Used to provide label related info when required."}),"\n",(0,t.jsx)(l.h3,{id:"removemeasurelabels",children:"removeMeasureLabels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod removeMeasureLabels(values, measureCaption) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"dropstarthandler",children:"dropStartHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dropStartHandler(dragData) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Drop handler. This is called when an item is dropped onto the table."}),"\n",(0,t.jsx)(l.h3,{id:"dragfinishhandler",children:"dragFinishHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dragFinishHandler(dragData) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is called when a drag operation started within this component is completed."}),"\n",(0,t.jsx)(l.h3,{id:"hidemessage",children:"hideMessage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod hideMessage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Hide the message box."}),"\n",(0,t.jsx)(l.h3,{id:"showpendingmsg",children:"showPendingMsg"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showPendingMsg(flag, msg) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:'Show (or hide) the "computing..." message.'}),"\n",(0,t.jsx)(l.h3,{id:"showmessage",children:"showMessage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showMessage(msg, pct, listing) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Display the message box. This message will store the incoming msg for use as the message default for subsequent calls. If a controller with its own showMessage is present for this pivotTable, dispatch the message display to that method."}),"\n",(0,t.jsx)(l.h3,{id:"itemmousedown",children:"itemMouseDown"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod itemMouseDown(evt, idx) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Mouse down handler for nodes."}),"\n",(0,t.jsx)(l.h3,{id:"itemmouseup",children:"itemMouseUp"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod itemMouseUp(evt) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Mouse up handler for nodes."}),"\n",(0,t.jsx)(l.h3,{id:"absoluteadjustlayout",children:"absoluteAdjustLayout"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod absoluteAdjustLayout() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"adjustcellsize",children:"adjustCellSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustCellSize(cellid, height, width, top, left, offsetHeight, offsetWidth) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"singletableadjustlayout",children:"singleTableAdjustLayout"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod singleTableAdjustLayout() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"adjusttablelayout",children:"adjustTableLayout"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustTableLayout() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Adjust size and position of the layout divs that contain the table as well as the cells and headers in the table."}),"\n",(0,t.jsx)(l.h3,{id:"computedivsize",children:"computeDivSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod computeDivSize(theDiv, isWebKit) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Compute and return the size of the given html."}),"\n",(0,t.jsx)(l.h3,{id:"ielayout",children:"ieLayout"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod ieLayout() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Work-around for ie8!"}),"\n",(0,t.jsx)(l.h3,{id:"wheelhandler",children:"wheelHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod wheelHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Mouse wheel handler."}),"\n",(0,t.jsx)(l.h3,{id:"cellscrollvt",children:"cellScrollVt"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellScrollVt() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Vertical Scroll handler."}),"\n",(0,t.jsx)(l.h3,{id:"cellscrollhz",children:"cellScrollHz"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellScrollHz() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Horizontal Scroll handler.."}),"\n",(0,t.jsx)(l.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This client event, if present, is fired when the page is loaded."}),"\n",(0,t.jsx)(l.h3,{id:"onupdatehandler",children:"onupdateHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod onupdateHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This client method, if present, is fired when the object is updated from the server. This is called *after* changes have been synched."}),"\n",(0,t.jsx)(l.h3,{id:"startquerytimer",children:"startQueryTimer"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod startQueryTimer(needsRefresh) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Start the timer used to update during query calculation."}),"\n",(0,t.jsx)(l.h3,{id:"stopquerytimer",children:"stopQueryTimer"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod stopQueryTimer() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Stop the query timer."}),"\n",(0,t.jsx)(l.h3,{id:"querytimerhandler",children:"queryTimerHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod queryTimerHandler() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Internal method.",(0,t.jsx)(l.br,{}),"\nTimer event handler used by the query timer bar."]}),"\n",(0,t.jsx)(l.h3,{id:"getitemcaption",children:"GetItemCaption"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod GetItemCaption(pCubeName As %String, pSpec As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return the caption associate with given cube element."}),"\n",(0,t.jsx)(l.h3,{id:"formatvalue",children:"FormatValue"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod FormatValue(pCubeName As %String, pQueryKey As %String, pValue As %String, pFormattedValue As %ZEN.proxyObject, pRowNo As %Integer, pColNo As %Integer) As %Boolean [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"getitemspec",children:"GetItemSpec"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod GetItemSpec(pSpec As %ZEN.proxyObject, pCubeName As %String, pQueryKey As %String, pSortDir As %String, pSortColumn As %String, pAxisName As %String, pItemNo As %Integer, pItemNoSorted As %Boolean = 0) As %Boolean [ ZenMethod ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:['Get the tuple spec for the given item within the query result and place it into the proxy object. pAxisName is "row" or "col".',(0,t.jsx)(l.br,{}),"\nReturn true, if ok."]}),"\n",(0,t.jsx)(l.h3,{id:"getfilterforcells",children:"getFilterForCells"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getFilterForCells(r1, c1, r2, c2, allRows, allCols) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return the filter spec for the given cell range."}),"\n",(0,t.jsx)(l.h3,{id:"getslicerspecforcells",children:"GetSlicerSpecForCells"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'ClassMethod GetSlicerSpecForCells(pSpec As %ZEN.proxyObject, pCubeName As %String, pQueryKey As %String, pStartRow As %Integer, pStartCol As %Integer, pEndRow As %Integer = "", pEndCol As %Integer = "", pAllRows As %Boolean = 0, pAllCols As %Boolean = 0, pSortCol As %Integer = 0, pSortDir As %String = "ASC") As %Boolean [ ZenMethod ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Get the slicer spec for the given cell within the query result and place it into the proxy object. Return true, if ok."}),"\n",(0,t.jsx)(l.h3,{id:"getquerystatus",children:"GetQueryStatus"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'ClassMethod GetQueryStatus(pObject As %ZEN.proxyObject, pCubeName As %String, pQueryKey As %String, pKPI As %String = "") As %Boolean [ ZenMethod ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Check on the status of the given query. Return true, if ok."}),"\n",(0,t.jsx)(l.h3,{id:"getquerytext",children:"GetQueryText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod GetQueryText(pCubeName As %String, pQueryKey As %String, pEncrypt As %Boolean = 0) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Get the MDX text for the current query."}),"\n",(0,t.jsx)(l.h3,{id:"setcurrentquerytext",children:"SetCurrentQueryText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method SetCurrentQueryText(pWhich As %String = "current", pMDX As %String) As %Status [ ZenMethod ]\n'})}),"\n",(0,t.jsx)(l.h3,{id:"getcurrentquerytext",children:"GetCurrentQueryText"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method GetCurrentQueryText(pWhich As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"killquery",children:"KillQuery"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod KillQuery(pCubeName As %String, pQueryKey As %String, pNonce As %String) As %Boolean [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Cancel the query specified by pCubeName and pQueryKey. Return true, if ok."}),"\n",(0,t.jsx)(l.h3,{id:"showiknowmeasurevalue",children:"showIKnowMeasureValue"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showIKnowMeasureValue(cubeName, measure, objId) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"materializelisting",children:"%MaterializeListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method %MaterializeListing(pRS As %DeepSee.ResultSet, pSQLRS As %SQL.StatementResult = "") As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(l.p,{children:["Execute the listing for a drillthrough query and save it to a cache global.",(0,t.jsx)(l.br,{}),"\nIf pSQLRS is provided, use it."]}),"\n",(0,t.jsx)(l.h3,{id:"drawlisting",children:"%DrawListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawListing() As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Draw the listing table for a drillthrough query.",(0,t.jsx)(l.br,{}),"\nAssume the listing has been materialized to a listing global."]}),"\n",(0,t.jsx)(l.h3,{id:"showplan-1",children:"%ShowPlan"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %ShowPlan(pRS As %DeepSee.ResultSet) As %Status\n"})}),"\n",(0,t.jsx)(l.p,{children:"Show execution plan for the query"}),"\n",(0,t.jsx)(l.h3,{id:"showplanitem",children:"%ShowPlanItem"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %ShowPlanItem(ByRef pPlan, pNodeNo As %Integer, pLevel As %Integer = 0) As %Status\n"})}),"\n",(0,t.jsx)(l.p,{children:"Show one item in a query plan."}),"\n",(0,t.jsx)(l.h3,{id:"filterlabelclick",children:"filterLabelClick"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod filterLabelClick(evt, filterValue) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Click on an item label within the filter dropdown."}),"\n",(0,t.jsx)(l.h3,{id:"pushstate",children:"pushState"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod pushState() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:'Push the current state of the pivot onto the "history" stack.'}),"\n",(0,t.jsx)(l.h3,{id:"popstate",children:"popState"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod popState() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:'Pop the current state of the pivot from the "history" stack.'}),"\n",(0,t.jsx)(l.h3,{id:"copystate",children:"copyState"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod copyState(master) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Copy the (most of the) current state of another pivot into this one. Used by linked pivots."}),"\n",(0,t.jsx)(l.h3,{id:"hasformatrules",children:"hasFormatRules"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod hasFormatRules() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Indicate if there are any formatting rules in play."}),"\n",(0,t.jsx)(l.h3,{id:"cangoback",children:"canGoBack"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod canGoBack() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Indicate if we can go back to a prior state."}),"\n",(0,t.jsx)(l.h3,{id:"goback",children:"goBack"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod goBack(notify) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Go back to the previous state."}),"\n",(0,t.jsx)(l.h3,{id:"cangoforward",children:"canGoForward"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod canGoForward() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Indicate if we can go forward to a visited state."}),"\n",(0,t.jsx)(l.h3,{id:"goforward",children:"goForward"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod goForward() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Go forward to the next state (if there is one)."}),"\n",(0,t.jsx)(l.h3,{id:"cleardatamodified",children:"%ClearDataModified"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %ClearDataModified() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Clear the (shadow) modified bit for the data property."}),"\n",(0,t.jsx)(l.h3,{id:"setdatamodified",children:"%SetDataModified"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %SetDataModified() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Set the (shadow) modified bit for the data property."}),"\n",(0,t.jsx)(l.h3,{id:"ondrawobjectproperties",children:"%OnDrawObjectProperties"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnDrawObjectProperties() [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Render the JSON content of the target object along with the other properties of the provider."}),"\n",(0,t.jsx)(l.h3,{id:"onobjectsynch",children:"%OnObjectSynch"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnObjectSynch() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Render the JSON content of the target object along with the other properties of the provider."}),"\n",(0,t.jsx)(l.h3,{id:"drawjson",children:"%DrawJSON"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawJSON() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Draw JSON output for the current query results."}),"\n",(0,t.jsx)(l.h3,{id:"outputjsonforgeolisting",children:"%OutputJSONForGeoListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'Method %OutputJSONForGeoListing(pRS As %DeepSee.ResultSet, pSQLRS As %SQL.StatementResult = "") As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Draw JSON output for a geolisting."}),"\n",(0,t.jsx)(l.h3,{id:"outputjsonforkpi",children:"%OutputJSONForKPI"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OutputJSONForKPI() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Draw JSON output for the current KPI class."}),"\n",(0,t.jsx)(l.h3,{id:"getcontent",children:"getContent"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getContent() [ Final, Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"sendeventtoviews",children:"sendEventToViews"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod sendEventToViews(reason, source, data1, data2, data3) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Send an event to all listeners (dataViews) connected to this dataController. reason is the name of the event.",(0,t.jsx)(l.br,{}),"\nsource, if not null, if the dataView that raised the event.",(0,t.jsx)(l.br,{}),"\ndata1,data2, and data3 contain event-specific data passed along with the event."]}),"\n",(0,t.jsx)(l.h3,{id:"register",children:"register"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod register(component) [ Final, Internal, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Internal method.",(0,t.jsx)(l.br,{}),"\nEstablish a connection between this pivotTable and a chart component"]}),"\n",(0,t.jsx)(l.h3,{id:"unregister",children:"unregister"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod unregister(component) [ Final, Internal, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Internal method.",(0,t.jsx)(l.br,{}),"\nBreak the a connection between this pivotTable and a chart component"]}),"\n",(0,t.jsx)(l.h3,{id:"raisedatachange",children:"raiseDataChange"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod raiseDataChange() [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Send notification to listeners that the data associated with this pivotTable has changed."}),"\n",(0,t.jsx)(l.h3,{id:"getdimensions",children:"getDimensions"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDimensions() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return number of dimensions in this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"getdimsize",children:"getDimSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDimSize(dim) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return the number of items in the specified dimension (dim is 1,2, or 3)."}),"\n",(0,t.jsx)(l.h3,{id:"getdimgrouping",children:"getDimGrouping"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDimGrouping(dim) [ Final, Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Special method: return if the given dimension has hierarchical groupings (to indicate that a chart should display them)."}),"\n",(0,t.jsx)(l.h3,{id:"getdataasarrays",children:"getDataAsArrays"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDataAsArrays() [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This is a specialized variant of getData that return the data in this controller as an array of arrays (used by charts)."}),"\n",(0,t.jsx)(l.h3,{id:"getlabel",children:"getLabel"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getLabel(n, dim, noformat) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Get the label at position n (0-based) in the given dimension (1,2, or 3)."}),"\n",(0,t.jsx)(l.h3,{id:"computecaption",children:"computeCaption"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod computeCaption(item, noformat) [ Final, Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Resolve the caption for a given axis item. (This is used to get logical values for time axis members)."}),"\n",(0,t.jsx)(l.h3,{id:"datefromhorolog",children:"dateFromHorolog"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dateFromHorolog(val) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Convert a $H to yyyy-mm-dd date."}),"\n",(0,t.jsx)(l.h3,{id:"getdimname",children:"getDimName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDimName(dim) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return a name for the given dimension (1,2, or 3). This provides the axis label for a chart."}),"\n",(0,t.jsx)(l.h3,{id:"getpropertyname",children:"getPropertyName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPropertyName(n) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Given a 0-based index, return the corresponding property name."}),"\n",(0,t.jsx)(l.h3,{id:"getvaluename",children:"getValueName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getValueName() [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return a label for the values returned by the data source. This provides the axis label for a chart."}),"\n",(0,t.jsx)(l.h3,{id:"getdatasourcecaption",children:"getDataSourceCaption"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDataSourceCaption(which, title) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return a title to display for this data source. This provides the title for a chart."}),"\n",(0,t.jsx)(l.h3,{id:"getdatabyname",children:"getDataByName"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDataByName(property, series) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"getdata",children:"getData"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getData(d1, d2, d3) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"dataSet API Return the data contained in the specified location. Location is 0-based;"}),"\n",(0,t.jsx)(l.h3,{id:"getfilterinfo-1",children:"getFilterInfo"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getFilterInfo(fnames, fvalues, flabels) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Return information on current filters.",(0,t.jsx)(l.br,{}),"\nfnames is an array in which the filter names will be placed.",(0,t.jsx)(l.br,{}),"\nfvalues is an array in which the filter values will be placed.",(0,t.jsx)(l.br,{}),"\nflabels is an array in which the filter labels will be placed."]}),"\n",(0,t.jsx)(l.h3,{id:"parsemdxexpression",children:"ParseMDXExpression"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod ParseMDXExpression(pExpression, pCubeName) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Parse an MDX clause representing a collection of cell addresses into a $C(10)-delimited list that can be pssed back to the client. This is designed to parse contextual filters."}),"\n",(0,t.jsx)(l.h3,{id:"getpivotvariableinfo",children:"getPivotVariableInfo"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPivotVariableInfo(pnames, pvalues) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Return information on current pivot variables.",(0,t.jsx)(l.br,{}),"\npnames is an array in which the variable names will be placed.",(0,t.jsx)(l.br,{}),"\npvalues is an array in which the variable values will be placed."]}),"\n",(0,t.jsx)(l.h3,{id:"getpivotvariablesvalues",children:"getPivotVariablesValues"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPivotVariablesValues(pnames, pvalues) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(l.p,{children:["Return names and values of current pivot variables.",(0,t.jsx)(l.br,{}),"\npnames is an array in which the variable names will be placed.",(0,t.jsx)(l.br,{}),"\npvalues is an array in which the variable values will be placed."]}),"\n",(0,t.jsx)(l.h3,{id:"addcontroller",children:"addController"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod addController(ctrl) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Associate a controller component with this pivotTable. This is called by the controller component."}),"\n",(0,t.jsx)(l.h3,{id:"removecontroller",children:"removeController"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod removeController() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Remove the controller component associated with this pivotTable. This is called by the controller component."}),"\n",(0,t.jsx)(l.h3,{id:"updatecontroller",children:"updateController"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod updateController() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Update the controller component associated with this pivotTable, if any. This is called internally when the state of the pivot table changes."}),"\n",(0,t.jsx)(l.h3,{id:"updatetoolbar",children:"updateToolbar"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod updateToolbar() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Update the toolbar on the controller component associated with this pivotTable, if any. This is called internally when the state of the pivot table changes."}),"\n",(0,t.jsx)(l.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,t.jsx)(l.h3,{id:"getdrilllevel",children:"getDrillLevel"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDrillLevel() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return current drill level for this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"gotodrilllevel",children:"gotoDrillLevel"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gotoDrillLevel(idx) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Go to the given drill level."}),"\n",(0,t.jsx)(l.h3,{id:"removedrilllevel",children:"removeDrillLevel"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod removeDrillLevel(idx, evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Remove a drill level. The input parameter idx is the 0-based index of the level to remove."}),"\n",(0,t.jsx)(l.h3,{id:"removealldrilllevels",children:"removeAllDrillLevels"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod removeAllDrillLevels() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Clear all current drill levels and reset the table back to its resting state."}),"\n",(0,t.jsx)(l.h3,{id:"setlisting",children:"setListing"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setListing(listing, type) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Set the name of the listing (and listing type) to show for this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"allclick",children:"allClick"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod allClick(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Click on all check box (in detail listing)."}),"\n",(0,t.jsx)(l.h3,{id:"cbclick",children:"cbClick"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cbClick(evt, currCb) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Click on checkbox."}),"\n",(0,t.jsx)(l.h3,{id:"allclickpivot",children:"allClickPivot"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod allClickPivot(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Click on all check box (in pivot)."}),"\n",(0,t.jsx)(l.h3,{id:"cbclickpivot",children:"cbClickPivot"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cbClickPivot(evt, currCb) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Click on checkbox in pivot."}),"\n",(0,t.jsx)(l.h3,{id:"getselecteditems",children:"getSelectedItems"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getSelectedItems() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return an array of the values of the selected items in the pivot table. For listing mode, this is the set of ids for the selected rows. For pivot mode, this is the values of the value column for each selected row."}),"\n",(0,t.jsx)(l.h3,{id:"newdatahandler",children:"newDataHandler"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod newDataHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that new data is available."}),"\n",(0,t.jsx)(l.h3,{id:"computetotals",children:"computeTotals"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod computeTotals() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Compute row and columns totals, as needed."}),"\n",(0,t.jsx)(l.h3,{id:"getsummaryfromcss",children:"%GetSummaryFromCSS"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod %GetSummaryFromCSS(pStyle As %String, Output pAgg As %String) As %String\n"})}),"\n",(0,t.jsx)(l.p,{children:'Parse a CSS style directive and remove any "summary:val" directives within it.'}),"\n",(0,t.jsx)(l.h3,{id:"getcolumndescriptors",children:"getColumnDescriptors"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnDescriptors() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return an array of column descriptors for use by a dataGrid connected to this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"processaxiscolumns",children:"processAxisColumns"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod processAxisColumns(list, groups, tuples) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Convert an axis group to descriptors."}),"\n",(0,t.jsx)(l.h3,{id:"getrowdescriptors",children:"getRowDescriptors"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowDescriptors() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return an array of row descriptors for use by a dataGrid connected to this pivot."}),"\n",(0,t.jsx)(l.h3,{id:"processaxisrows",children:"processAxisRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod processAxisRows(list, groups, tuples) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Convert an axis group to descriptors."}),"\n",(0,t.jsx)(l.h3,{id:"getpagesize",children:"getPageSize"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPageSize() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return total number of pages to support dataGrid paging."}),"\n",(0,t.jsx)(l.h3,{id:"getrecordcount",children:"getRecordCount"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRecordCount() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return total number of records to support dataGrid paging."}),"\n",(0,t.jsx)(l.h3,{id:"getcurrpage",children:"getCurrPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCurrPage() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:'Number of the current "page" when paging (1-based).'}),"\n",(0,t.jsx)(l.h3,{id:"setcurrpage",children:"setCurrPage"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setCurrPage(page) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:'Set the current "page" when paging (1-based).'}),"\n",(0,t.jsx)(l.h3,{id:"getrowcaptions",children:"getRowCaptions"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowCaptions() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return an array of row captions (shown above headers)."}),"\n",(0,t.jsx)(l.h3,{id:"showallrows",children:"showAllRows"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showAllRows() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Notification that a listing header is double-clicked."}),"\n",(0,t.jsx)(l.h3,{id:"getpropertydim",children:"getPropertyDim"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPropertyDim() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Return the ordinal number of the dimension supplying property names for this controller."}),"\n",(0,t.jsx)(l.h3,{id:"getpivotvariabledata",children:"GetPivotVariableData"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:'ClassMethod GetPivotVariableData(pCubeName, pVariableName, pValue = "") As %ZEN.proxyObject [ ZenMethod ]\n'})}),"\n",(0,t.jsx)(l.p,{children:"Retrieves the meta data about the pivot variable and can convert the logical value display value."}),"\n",(0,t.jsx)(l.h3,{id:"synthesizemdx",children:"SynthesizeMDX"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"Method SynthesizeMDX(Output pSC As %Status, ByRef pRS As %DeepSee.ResultSet, ByRef pParms, ByRef pFilterInfo, ByRef pAdvancedFilters, Output pQueryText As %String, Output pAxes, Output pDataReady As %Boolean, Output pComplexQuery As %Boolean, pExecuteBaseQuery As %Boolean = 0, pShowAll As %Boolean = 0) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Build the current MDX query text from the current contents of this component"}),"\n",(0,t.jsx)(l.h3,{id:"addpivotcoverpane",children:"addPivotCoverPane"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod addPivotCoverPane(parentDiv) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"Adds a coverpane to the pivot in the DOM. This is used to disable the pivot interaction."}),"\n",(0,t.jsx)(l.h3,{id:"setpivotdisabled",children:"setPivotDisabled"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setPivotDisabled(setDisabled) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This prevents a user from interacting with the pivot by using the cover pane."}),"\n",(0,t.jsx)(l.h3,{id:"exporttopdf",children:"exportToPDF"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod exportToPDF(parms) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This entry point triggers an execution and printing of the current table in SVG format."}),"\n",(0,t.jsx)(l.h3,{id:"callbackexportrstopdf",children:"callbackExportRStoPDF"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod callbackExportRStoPDF(dc) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This method is designed to be used as a callback from the DeepSeeDataController. It takes a resultset from the supplied datacontroller and uses it to print to PDF. This method expects the printing parameters needed by the svgImageProvider are supplied in an object dc.parms."}),"\n",(0,t.jsx)(l.h3,{id:"callbackrspending",children:"callbackRSPending"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod callbackRSPending(dc) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(l.p,{children:"This method is designed to be used as a callback from the DeepSeeDataController. It reports the number of seconds the client has been waiting for the DeepSeeResultSet data to be returned from the server."})]})}function o(e={}){const{wrapper:l}={...(0,n.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,l,s)=>{s.d(l,{R:()=>i,x:()=>r});var t=s(96540);const n={},a=t.createContext(n);function i(e){const l=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:l},e.children)}}}]);