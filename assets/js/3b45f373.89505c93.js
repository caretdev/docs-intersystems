"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[90930],{25289:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>r,default:()=>c,frontMatter:()=>a,toc:()=>l});var t=n(74848),i=n(28453);const a={pagination_prev:null,pagination_next:null},r="%CSP.Session",l=[{value:"Properties",id:"properties",level:2},{value:"EndSession",id:"endsession",level:3},{value:"SessionId",id:"sessionid",level:3},{value:"GroupId",id:"groupid",level:3},{value:"ByIdGroups",id:"byidgroups",level:3},{value:"ProcessId",id:"processid",level:3},{value:"AppTimeout",id:"apptimeout",level:3},{value:"SecureSessionCookie",id:"securesessioncookie",level:3},{value:"SessionScope",id:"sessionscope",level:3},{value:"UserCookieScope",id:"usercookiescope",level:3},{value:"RunNamespace",id:"runnamespace",level:3},{value:"ErrorPage",id:"errorpage",level:3},{value:"Referrer",id:"referrer",level:3},{value:"EventClass",id:"eventclass",level:3},{value:"EventClassContext",id:"eventclasscontext",level:3},{value:"StickyLogin",id:"stickylogin",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Preserve",id:"preserve",level:3},{value:"MessageNumber",id:"messagenumber",level:3},{value:"PersistentHeaders",id:"persistentheaders",level:3},{value:"SOAPRequestCount",id:"soaprequestcount",level:3},{value:"Debug",id:"debug",level:3},{value:"NewSession",id:"newsession",level:3},{value:"CookiePath",id:"cookiepath",level:3},{value:"BrowserName",id:"browsername",level:3},{value:"BrowserPlatform",id:"browserplatform",level:3},{value:"BrowserVersion",id:"browserversion",level:3},{value:"UserAgent",id:"useragent",level:3},{value:"Key",id:"key",level:3},{value:"UseSessionCookie",id:"usesessioncookie",level:3},{value:"CSPSessionCookie",id:"cspsessioncookie",level:3},{value:"Language",id:"language",level:3},{value:"LicenseId",id:"licenseid",level:3},{value:"Username",id:"username",level:3},{value:"HttpAuthorization",id:"httpauthorization",level:3},{value:"NoLicense",id:"nolicense",level:3},{value:"KeepAlive",id:"keepalive",level:3},{value:"Application",id:"application",level:3},{value:"CreateTime",id:"createtime",level:3},{value:"LastModified",id:"lastmodified",level:3},{value:"SecurityContext",id:"securitycontext",level:3},{value:"EscalationContext",id:"escalationcontext",level:3},{value:"OldTimeout",id:"oldtimeout",level:3},{value:"Data",id:"data",level:3},{value:"nosave",id:"nosave",level:3},{value:"GetNewId",id:"getnewid",level:3},{value:"LogoutCleanup",id:"logoutcleanup",level:3},{value:"ApplicationLicenses",id:"applicationlicenses",level:3},{value:"Methods",id:"methods",level:2},{value:"EndSessionSet",id:"endsessionset",level:3},{value:"RunNamespaceSet",id:"runnamespaceset",level:3},{value:"RunNamespaceGet",id:"runnamespaceget",level:3},{value:"RunNamespaceFind",id:"runnamespacefind",level:3},{value:"ReferrerSet",id:"referrerset",level:3},{value:"EventClassSet",id:"eventclassset",level:3},{value:"EventClassGet",id:"eventclassget",level:3},{value:"EventClassAdd",id:"eventclassadd",level:3},{value:"EventClassRemove",id:"eventclassremove",level:3},{value:"EventClassExists",id:"eventclassexists",level:3},{value:"EventClassClear",id:"eventclassclear",level:3},{value:"EventClassList",id:"eventclasslist",level:3},{value:"EventClassFix",id:"eventclassfix",level:3},{value:"StickyLoginGet",id:"stickyloginget",level:3},{value:"StickyLoginSet",id:"stickyloginset",level:3},{value:"PreserveSet",id:"preserveset",level:3},{value:"MessageNumberSet",id:"messagenumberset",level:3},{value:"PersistentHeadersSet",id:"persistentheadersset",level:3},{value:"SetPersistentHeader",id:"setpersistentheader",level:3},{value:"GetPersistentHeader",id:"getpersistentheader",level:3},{value:"DeletePersistentHeader",id:"deletepersistentheader",level:3},{value:"UpdateHMAC",id:"updatehmac",level:3},{value:"DebugSet",id:"debugset",level:3},{value:"NewSessionSet",id:"newsessionset",level:3},{value:"BrowserNameGet",id:"browsernameget",level:3},{value:"BrowserPlatformGet",id:"browserplatformget",level:3},{value:"BrowserVersionGet",id:"browserversionget",level:3},{value:"KeySet",id:"keyset",level:3},{value:"LicenseIdSet",id:"licenseidset",level:3},{value:"UsernameGet",id:"usernameget",level:3},{value:"ApplicationSet",id:"applicationset",level:3},{value:"CreateTimeSet",id:"createtimeset",level:3},{value:"LastModifiedSet",id:"lastmodifiedset",level:3},{value:"SecurityContextSet",id:"securitycontextset",level:3},{value:"EscalationContextSet",id:"escalationcontextset",level:3},{value:"EscalateLogin",id:"escalatelogin",level:3},{value:"ClearEscalation",id:"clearescalation",level:3},{value:"OldTimeoutSet",id:"oldtimeoutset",level:3},{value:"Login",id:"login",level:3},{value:"CompleteTwoFactorLogin",id:"completetwofactorlogin",level:3},{value:"Get",id:"get",level:3},{value:"Set",id:"set",level:3},{value:"Next",id:"next",level:3},{value:"Kill",id:"kill",level:3},{value:"IsDefined",id:"isdefined",level:3},{value:"Unlock",id:"unlock",level:3},{value:"Lock",id:"lock",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"UpdateTimeout",id:"updatetimeout",level:3},{value:"%LoadData",id:"loaddata",level:3},{value:"%SaveData",id:"savedata",level:3},{value:"%DeleteData",id:"deletedata",level:3},{value:"endSession",id:"endsession-1",level:3},{value:"Log",id:"log",level:3},{value:"GetSession",id:"getsession",level:3},{value:"ChangeSessionId",id:"changesessionid",level:3},{value:"Reset",id:"reset",level:3},{value:"SystemRestart",id:"systemrestart",level:3},{value:"ExtentExecute",id:"extentexecute",level:3},{value:"ExtentFetch",id:"extentfetch",level:3},{value:"ExtentClose",id:"extentclose",level:3},{value:"SessionInfoExecute",id:"sessioninfoexecute",level:3},{value:"SessionInfoFetch",id:"sessioninfofetch",level:3},{value:"SessionInfoClose",id:"sessioninfoclose",level:3},{value:"ProcessRequest",id:"processrequest",level:3},{value:"SetContext",id:"setcontext",level:3},{value:"Callback",id:"callback",level:3},{value:"LogoutAll",id:"logoutall",level:3},{value:"Logout",id:"logout",level:3},{value:"GetByIdUsername",id:"getbyidusername",level:3},{value:"GetLinkTargets",id:"getlinktargets",level:3},{value:"Who is the target user?",id:"who-is-the-target-user",level:3},{value:"CheckLinkAccess Policies",id:"checklinkaccess-policies",level:3},{value:"GlobalReplace",id:"globalreplace",level:3},{value:"collate",id:"collate",level:3}];function o(e){const s={br:"br",code:"code",form:"form",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"cspsession",children:"%CSP.Session"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %CSP.Session Extends %Persistent [ StorageStrategy = custom, System = 3 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"The %CSP.Session class represents a session within a CSP application."}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"endsession",children:"EndSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property EndSession As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"A flag that you set to '1' to terminate this session upon completion of this request."}),"\n",(0,t.jsx)(s.h3,{id:"sessionid",children:"SessionId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SessionId As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"The session id value for this session."}),"\n",(0,t.jsx)(s.p,{children:"The session id is a system-assigned unique value that identifies this session."}),"\n",(0,t.jsx)(s.h3,{id:"groupid",children:"GroupId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property GroupId As %String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Group Id If an group-by-id application was opened, this will contain the groupId concatenated with the browser's id"}),"\n",(0,t.jsx)(s.h3,{id:"byidgroups",children:"ByIdGroups"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ByIdGroups As %List [ Internal ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"ByIdGroups A list of all by-id groups applications opened have been members of. Used to remove this session from groups"}),"\n",(0,t.jsx)(s.h3,{id:"processid",children:"ProcessId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ProcessId As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Process Id"}),"\n",(0,t.jsx)(s.p,{children:"If a session has Preserve=1 this contains the process id in which the session is running.>"}),"\n",(0,t.jsx)(s.h3,{id:"apptimeout",children:"AppTimeout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property AppTimeout As %Integer(MAXVAL = 31536000, MINVAL = 0) [ InitialExpression = 900 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Specifies the timeout value for the session in seconds."}),"\n",(0,t.jsx)(s.p,{children:"If no user requests are received within the specified time period, then the session will end. The default value comes from the CSP application setting for the application that the session starts in which is set in the configuration manager, this is often 900 seconds or 15 minutes. Note that if you start a session in one applicaiton and move to another application the AppTimeout will not be changed to the new applications timeout value, if you wish to modify this when the application changes you can use the session events 'OnApplicationChange' method."}),"\n",(0,t.jsx)(s.p,{children:"For no timeout, set this property to 0."}),"\n",(0,t.jsx)(s.h3,{id:"securesessioncookie",children:"SecureSessionCookie"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SecureSessionCookie As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal property to determine if we should send the 'secure' flag with the sessionId cookie"}),"\n",(0,t.jsx)(s.h3,{id:"sessionscope",children:"SessionScope"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property SessionScope As %Integer(DISPLAYLIST = ",None,Lax,Strict", VALUELIST = ",0,1,2") [ InitialExpression = 2 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Property to determine how strictly to restrict the domain of the sessionId cookie. Options are None (0), Lax (1), and Strict (2), where Strict means the cookie can only be used within the current application. Defaults to the CSP application's corresponding setting. Applications default to Strict unless otherwise configured. Note that None is invalid for insecure (HTTP) connections."}),"\n",(0,t.jsx)(s.h3,{id:"usercookiescope",children:"UserCookieScope"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property UserCookieScope As %Integer(DISPLAYLIST = ",None,Lax,Strict", VALUELIST = ",0,1,2") [ InitialExpression = 2 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Property to determine which SameSite attribute to send with user-created cookies. Options are None (0), Lax (1), and Strict (2). Defaults to the CSP application's corresponding setting. Applications default to Strict unless otherwise configured. Note that None is invalid for insecure (HTTP) connections."}),"\n",(0,t.jsx)(s.h3,{id:"runnamespace",children:"RunNamespace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property RunNamespace As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If set then run this session in the namespace given rather than the one determined by the CSP application. If the application then switches applications again it will revert to the namespace determined by the CSP application."}),"\n",(0,t.jsx)(s.h3,{id:"errorpage",children:"ErrorPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property ErrorPage As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"If set then use this page as the error page rather than the one obtained from the CSP application settings."}),"\n",(0,t.jsx)(s.h3,{id:"referrer",children:"Referrer"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property Referrer As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Original referrer when session was created, copied from the HTTP_REFERER %request value"}),"\n",(0,t.jsx)(s.h3,{id:"eventclass",children:"EventClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property EventClass As %String(MAXLEN = "") [ Calculated ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The name of the application event class to be called in response to certain CSP events. This should be a class derived from %CSP.SessionEvents. At present the events that are fired are for creation of a new session (OnStartSession), deletion of a session (OnEndSession) and the timeout of an existing session by the CSP daemon (OnTimeout). You can set the event class for a CSP application in the CSP options of the configuration manager. Note that if you set the EventClass inside a CSP page then as the session has already been created at this point it will not fire the OnStartSession event, if the EventClass is set in the CSP application settings then it will fire the start session event as it knows which event class to call before it creates the session.",(0,t.jsx)(s.br,{}),'\nNote that this adds this event class to the list unless it is already present and will not replace any existing event class. Setting this to "" will not have any effect, if you wish to remove an EventClass then call EventClassRemove']}),"\n",(0,t.jsx)(s.h3,{id:"eventclasscontext",children:"EventClassContext"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property EventClassContext As %String(MAXLEN = "") [ Internal, Private ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"stickylogin",children:"StickyLogin"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property StickyLogin As %String(MAXLEN = "") [ Internal, Private ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"The StickyLogin is a description of the user authentication most recently attempted in this session. This is for internal use of the CSP Server."}),"\n",(0,t.jsx)(s.h3,{id:"namespace",children:"Namespace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Namespace As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"The namespace this session was created from. This is set automatically when the class is created to the current namespace. It is used by the session daemon so that it can swap to the right namespace to run the timeout method on applications."}),"\n",(0,t.jsx)(s.h3,{id:"preserve",children:"Preserve"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Preserve As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"A flag specifying the level of state preservation required by this session. You can change the value of this flag at any time."}),"\n",(0,t.jsx)(s.p,{children:"This can take one of the following values:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"0"})," The only state information that is preserved is the information in the %session object."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"1"})," The entire state of the session process is preserved from one request to the next. This means that you tie up this process for just this one user. As it uses the same process all local variables, locks, etc. are preserved from one request to the next."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"messagenumber",children:"MessageNumber"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property MessageNumber As %Integer [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Counter used internally that holds the number of times this session is used."}),"\n",(0,t.jsx)(s.h3,{id:"persistentheaders",children:"PersistentHeaders"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property PersistentHeaders As %String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Any headers we wish to sent on every request for this session"}),"\n",(0,t.jsx)(s.h3,{id:"soaprequestcount",children:"SOAPRequestCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SOAPRequestCount As %Integer [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Counter of number of SOAP requests made to this Session"}),"\n",(0,t.jsx)(s.h3,{id:"debug",children:"Debug"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Debug As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is true when this CSP session is being debugged, and false otherwise. It is set automatically by the CSP dispatch engine and you should not alter its value yourself."}),"\n",(0,t.jsx)(s.h3,{id:"newsession",children:"NewSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property NewSession As %Boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Indicates whether this is the first request of the session (True) or a subsequent request (False)."}),"\n",(0,t.jsx)(s.h3,{id:"cookiepath",children:"CookiePath"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property CookiePath As %String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Record the path we sent the last session cookie with"}),"\n",(0,t.jsx)(s.h3,{id:"browsername",children:"BrowserName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property BrowserName As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:'This property contains the browser name based on parsing the HTTP_USER_AGENT CGI variable. This property is set once when the session is created. Possible values are "IE", "Mozilla", "Netscape", "Safari" and "". Not all possible browsers are suppported and the value "" is used for unknown browsers. "Mozilla" is used for all Mozilla based browsers such as Mozilla and Firefox.'}),"\n",(0,t.jsx)(s.h3,{id:"browserplatform",children:"BrowserPlatform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property BrowserPlatform As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:'This property contains the browser operating system based on parsing the HTTP_USER_AGENT CGI variable. This property is set once when the session is created. Possible values are "Windows", "Macintosh", "X11" and "". Not all possible browsers are supported and the value "" is used for unknown browsers.'}),"\n",(0,t.jsx)(s.h3,{id:"browserversion",children:"BrowserVersion"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property BrowserVersion As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:'This property contains the browser version based on parsing the HTTP_USER_AGENT CGI variable. This property is set once when the session is created. The version is "" or in the format "major.minor". Not all possible browsers are supported and the value "" is used for unknown browsers.'}),"\n",(0,t.jsx)(s.h3,{id:"useragent",children:"UserAgent"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property UserAgent As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Contains the HTTP_USER_AGENT CGI variable passed in the initial session request."}),"\n",(0,t.jsx)(s.h3,{id:"key",children:"Key"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Key As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Stores the encryption key used to validate and secure the communication with the browser. This key never leaves the server."}),"\n",(0,t.jsx)(s.h3,{id:"usesessioncookie",children:"UseSessionCookie"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property UseSessionCookie As %Integer [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Indicates whether sessions should be maintained using cookies or not. There are three possible values:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"0"})," - Never use cookies. This will pass the CSPCHD parameter around in all the url links and as hidden fields in the ",(0,t.jsx)(s.form,{children:" elements."})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"1"})," - Auto detect cookie support. This will start by trying to insert a cookie into the browser, if this fails it will switch to mode 0 and never use cookies for this session. The initial page will send both cookies to the browser and it will include the CSPCHD parameter in all links and forms."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"2"})," - Always use cookies. This will only use cookies so if the browser does not accept the cookie then the session state will not be maintained."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"cspsessioncookie",children:"CSPSessionCookie"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property CSPSessionCookie As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Used by the CSP Gateway to store the session Id on the browser. Do not alter this property."}),"\n",(0,t.jsx)(s.h3,{id:"language",children:"Language"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Language As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"The language (RFC 1766 format) in which pages in this CSP session are to be displayed. The %session Language attribute is used as the default language for csp:text, span and div tags if %response.Language is not set. If %session.Language is not set by the program, then it will default to the best fit with the HTTP_ ACCEPT_LANGUAGE CGI variable."}),"\n",(0,t.jsx)(s.h3,{id:"licenseid",children:"LicenseId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property LicenseId As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal property that hold the name of the license that this session is associated with"}),"\n",(0,t.jsx)(s.h3,{id:"username",children:"Username"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Username As %Library.Username [ Calculated ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"The username this CSP session is logged in as."}),"\n",(0,t.jsx)(s.h3,{id:"httpauthorization",children:"HttpAuthorization"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property HttpAuthorization As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"If we are passed an 'Authorization' HTTP header the value is stored here to avoid attempting to login with this multiple times, for internal use only."}),"\n",(0,t.jsx)(s.h3,{id:"nolicense",children:"NoLicense"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property NoLicense As %Boolean [ InitialExpression = 0, Internal, Private ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Record if we can not get a license for this session"}),"\n",(0,t.jsx)(s.h3,{id:"keepalive",children:"KeepAlive"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property KeepAlive As %Boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true and the CSP gateway supports this then use the HTTP keep alive support to reuse the TCP/IP connection for any additional HTTP requests. If possible you should also supply the Content-Length header otherwise the CSP gateway will have to buffer the output in order to add the length of the message to the header. The default for this property is true to keep the connection alive where possible except for HTTP/1.0 responses where we will use the default for HTTP/1.0 which is to close the connection on each request."}),"\n",(0,t.jsx)(s.h3,{id:"application",children:"Application"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property Application As %String(MAXLEN = "");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Stored the CSP application name so we can detect when the CSP application has changed. This is required so we can revalidate the user against any security permissions the other application requires that the first application does not. This is not set until the security context for this application is validated."}),"\n",(0,t.jsx)(s.h3,{id:"createtime",children:"CreateTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property CreateTime As %TimeStamp;\n"})}),"\n",(0,t.jsx)(s.p,{children:"The data/time the session was created in UTC"}),"\n",(0,t.jsx)(s.h3,{id:"lastmodified",children:"LastModified"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property LastModified As %TimeStamp;\n"})}),"\n",(0,t.jsx)(s.p,{children:"The date/time when this session was last modified in UTC"}),"\n",(0,t.jsx)(s.h3,{id:"securitycontext",children:"SecurityContext"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property SecurityContext As %String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"For internal use only. Holds a serialized form of the sessions security context"}),"\n",(0,t.jsx)(s.h3,{id:"escalationcontext",children:"EscalationContext"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property EscalationContext As %String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"For internal use only. Holds a serialized form of the session's escalated security context"}),"\n",(0,t.jsx)(s.h3,{id:"oldtimeout",children:"OldTimeout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property OldTimeout As %String [ Internal ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"For internal use only"}),"\n",(0,t.jsx)(s.h3,{id:"data",children:"Data"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Data As %String [ MultiDimensional ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The place users can preserve any data within a session. You can set values into this multidimensional property using: ",(0,t.jsx)(s.code,{children:'Set %session.Data(1,2,"string")="value" Write %session.Data("Key1","Key2"),! Merge %session.Data(5)=array'})," This is faster than using the Get and Set"]}),"\n",(0,t.jsx)(s.h3,{id:"nosave",children:"nosave"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property nosave As %Integer [ InitialExpression = 0, Internal, Transient ];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getnewid",children:"GetNewId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property GetNewId As %Boolean [ InitialExpression = 0, Internal, Transient ];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"logoutcleanup",children:"LogoutCleanup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property LogoutCleanup As %Boolean [ InitialExpression = 0, Internal, Transient ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If set, this causes the cspServer to destroy the Login Cookie, any Security Tokens associated with this session, and the Sticky-login associated with this session's browser. '1' to destory terminate this session upon completion of this request."}),"\n",(0,t.jsx)(s.h3,{id:"applicationlicenses",children:"ApplicationLicenses"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ApplicationLicenses As %List [ Internal ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Holds application licenses taken for this session.",(0,t.jsx)(s.br,{}),"\nFormat: $lb($lb(appname1,type1,type2,...),$lb(appname2,type1,type2,...),...)",(0,t.jsx)(s.br,{}),"\nControled by $SYSTEM.License.TakeApplicationLicense(AppName,FeatureKeyword,.Count) and $SYSTEM.License.ReturnApplicationLicense(AppName,FeatureKeyword,.Released)"]}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"endsessionset",children:"EndSessionSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EndSessionSet(val As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"runnamespaceset",children:"RunNamespaceSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method RunNamespaceSet(val As %String, app As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"runnamespaceget",children:"RunNamespaceGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method RunNamespaceGet() As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"runnamespacefind",children:"RunNamespaceFind"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method RunNamespaceFind(application As %String) As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"referrerset",children:"ReferrerSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ReferrerSet(val As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"eventclassset",children:"EventClassSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassSet(class As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for EventClass property."}),"\n",(0,t.jsx)(s.h3,{id:"eventclassget",children:"EventClassGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassGet() As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"eventclassadd",children:"EventClassAdd"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassAdd(class As %String, namespace As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Add an event class to the list of classes we will callback. If the class is already present we will remove it and add this at the front of the list. The namespace is optional and will default to the current namespace."}),"\n",(0,t.jsx)(s.h3,{id:"eventclassremove",children:"EventClassRemove"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassRemove(class As %String, namespace As %String) As %Boolean\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove an event class from the set of event classes we will run on session events. The namespace is optional and will default to the current namespace. Returns true if it removed the class and false if it did not. If class is null then it will remove all event classes defined in this namespace."}),"\n",(0,t.jsx)(s.h3,{id:"eventclassexists",children:"EventClassExists"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassExists(class As %String, namespace As %String) As %Boolean\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return true if this event class is present in the current session event list or false otherwise. The namespace is optional and will default to the current namespace."}),"\n",(0,t.jsx)(s.h3,{id:"eventclassclear",children:"EventClassClear"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassClear() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove all event classes from the event class list"}),"\n",(0,t.jsx)(s.h3,{id:"eventclasslist",children:"EventClassList"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassList(ByRef Array As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:'Return an array of Array(namespace,classname)="" of the currently defined event classes'}),"\n",(0,t.jsx)(s.h3,{id:"eventclassfix",children:"EventClassFix"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EventClassFix(context As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method to fix context of event class"}),"\n",(0,t.jsx)(s.h3,{id:"stickyloginget",children:"StickyLoginGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method StickyLoginGet() As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"stickyloginset",children:"StickyLoginSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method StickyLoginSet(stickyLogin As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"stickyLogin is an exported security context"}),"\n",(0,t.jsx)(s.h3,{id:"preserveset",children:"PreserveSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method PreserveSet(val As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for Preserve property."}),"\n",(0,t.jsx)(s.h3,{id:"messagenumberset",children:"MessageNumberSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method MessageNumberSet(val As %Integer) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for MessageNumber property."}),"\n",(0,t.jsx)(s.h3,{id:"persistentheadersset",children:"PersistentHeadersSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method PersistentHeadersSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"setpersistentheader",children:"SetPersistentHeader"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetPersistentHeader(name As %String, value As %String)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set a persistent HTTP header values in the %session object so it will be output for every response from this session. If there is already a header with this name then this will overwrite this prioir header."}),"\n",(0,t.jsx)(s.h3,{id:"getpersistentheader",children:"GetPersistentHeader"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetPersistentHeader(name As %String) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the value of the persistent session name header. Note that name is not case sensitive"}),"\n",(0,t.jsx)(s.h3,{id:"deletepersistentheader",children:"DeletePersistentHeader"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method DeletePersistentHeader(name As %String)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove a persistent header from the session Note that name is not case sensitive"}),"\n",(0,t.jsx)(s.h3,{id:"updatehmac",children:"UpdateHMAC"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method UpdateHMAC() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Update the HMAC portion of the session token"}),"\n",(0,t.jsx)(s.h3,{id:"debugset",children:"DebugSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method DebugSet(val As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for Debug property."}),"\n",(0,t.jsx)(s.h3,{id:"newsessionset",children:"NewSessionSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method NewSessionSet(val As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"browsernameget",children:"BrowserNameGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method BrowserNameGet() As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"browserplatformget",children:"BrowserPlatformGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method BrowserPlatformGet() As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"browserversionget",children:"BrowserVersionGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method BrowserVersionGet() As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"keyset",children:"KeySet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method KeySet(val As %Boolean) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Private accessor method"}),"\n",(0,t.jsx)(s.h3,{id:"licenseidset",children:"LicenseIdSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method LicenseIdSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for LicenseId property."}),"\n",(0,t.jsx)(s.h3,{id:"usernameget",children:"UsernameGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method UsernameGet() As %String [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get method for Username property."}),"\n",(0,t.jsx)(s.h3,{id:"applicationset",children:"ApplicationSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ApplicationSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for Application property."}),"\n",(0,t.jsx)(s.h3,{id:"createtimeset",children:"CreateTimeSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method CreateTimeSet(val As %TimeStamp) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for CreateTime property."}),"\n",(0,t.jsx)(s.h3,{id:"lastmodifiedset",children:"LastModifiedSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method LastModifiedSet(val As %TimeStamp) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for LastModified property."}),"\n",(0,t.jsx)(s.h3,{id:"securitycontextset",children:"SecurityContextSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method SecurityContextSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for SecurityContext property."}),"\n",(0,t.jsx)(s.h3,{id:"escalationcontextset",children:"EscalationContextSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EscalationContextSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set method for SecurityContext property."}),"\n",(0,t.jsx)(s.h3,{id:"escalatelogin",children:"EscalateLogin"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EscalateLogin(roleName As %String, password As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Escalate the CSP session to the specified escalation role. The role must be one of the current user's configured EscalationRoles."}),"\n",(0,t.jsx)(s.h3,{id:"clearescalation",children:"ClearEscalation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ClearEscalation() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove the escalation role added by EscalateLogin. If there is no current escalation role, this method does nothing. After this the sessions's security context will be returned to the user's initial login roles."}),"\n",(0,t.jsx)(s.h3,{id:"oldtimeoutset",children:"OldTimeoutSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method OldTimeoutSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"login",children:"Login"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method Login(username As %String, password As %String = "", type As %Integer = 0, oldpassword As %String, apperr As %Status) As %Status\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Login with this username and password, returns a status code to show if it worked or not. This method also trades license units at the same time so this CSP session will be logged in as a named user. If you pass type=1 then this will trade licenses only and not login as this user. After the login completes it also updates the property Username to match the $username value this session is logged in as. The property LicenseId is also updated to be the license identifier that this session is logged in with.",(0,t.jsx)(s.br,{}),"\nIf a login fails then the property Username and property LicenseId will remain at their previous values. If you pass oldpassword then this will attempt to change the password of username from oldpassword to password and login as this user. Note new status return values: CSP applications can be two-factor-enabled. If the current application is one such, then if Login() successfully authenticates the username/password, it does not return $$$OK, but rather $$$CSPPendingTwoFactorAuthentication. During Two-Factor Authentication, an 8-character numeric security string will be sent to the user's cellphone. You must obtain this string from the user and call CompleteTwoFactorLogin^%CSP.Session() to complete authentication of this user. Also note that if the login SUCCEEDS (status returned will be $$$OK), but you were unable to secure a license, the new apperr parameter will have the value of $$$CSPErrorTradeLicense. In such a case, you may have to call the Login function again to trade a license. If you are calling merely to trade a license (type=1), then if the license trade fails, Login will return a status of $$$CSPErrorTradeLicense."]}),"\n",(0,t.jsx)(s.h3,{id:"completetwofactorlogin",children:"CompleteTwoFactorLogin"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method CompleteTwoFactorLogin(EnteredToken As %String, apperr As %Status) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this application has a Two-Factor-Authentication enabled, when this method allows you to finish the second part of the authentication. For example, a security token was sent during the initial login attempt, Login^%CSP.Session(). You must obtain this security code (an 8-character numeric string) and call CompleteToFactorLogin() to complete authencation for this user. Note: This should only be called if Login^%CSP.Session() returns a status of $$$CSPPendingTwoFactorAuthentication Returns: $$$CSPSecondFactorLoginFailed if request's application was not Two-Factor-Authentication enabled Returns: $$$OK if login was completed Returns: $$$CSPSecurityTokenMismatch is a token was found, but did not match the entered token, else returns the error code which cause the completion to fail"}),"\n",(0,t.jsx)(s.h3,{id:"get",children:"Get"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method Get(index As %String, default As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Get the value of the user data at index. This is equivalent to: ",(0,t.jsx)(s.code,{children:"Write $Get(%session.Data(index),default)"})," It is faster to access the property directly rather than use the Get and Set methods. These are kept for backward compatibility."]}),"\n",(0,t.jsx)(s.h3,{id:"set",children:"Set"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Set(index As %String, value As %String) [ Final ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Set the value of the user data at index to value. This is equivalent to: ",(0,t.jsx)(s.code,{children:"Set %session.Data(index)=value"})," It is faster to access the property directly rather than use the Get and Set methods. These are kept for backward compatibility."]}),"\n",(0,t.jsx)(s.h3,{id:"next",children:"Next"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method Next(index As %String = "") As %String [ CodeMode = expression, Deprecated, Final ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Return the next index in the user data Data. This has been deprecated in favour of the faster syntax: ",(0,t.jsx)(s.code,{children:"Write $Order(%session.Data(index))"})]}),"\n",(0,t.jsx)(s.h3,{id:"kill",children:"Kill"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method Kill(index As %String = "") [ Final ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Remove the index from the user data Data. This has been deprecated in favour of the faster syntax: ",(0,t.jsx)(s.code,{children:'Kill %session.Data(index) ; Or if index="" Kill %session.Data'})]}),"\n",(0,t.jsx)(s.h3,{id:"isdefined",children:"IsDefined"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method IsDefined(index As %String) As %Boolean [ CodeMode = expression, Deprecated, Final ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Tests if a name-value pair name is defined in the user data. This has been deprecated in favour of the faster syntax: ",(0,t.jsx)(s.code,{children:"Write $Data(%session.Data(index))"})]}),"\n",(0,t.jsx)(s.h3,{id:"unlock",children:"Unlock"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Unlock(save As %Boolean = 1) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Unlock the ^%cspSession global so that another process can access this objects storage at the same time. Normally all accesss to the session object is serialised so that only one process can modify the session object at any time. So if you are using frames for example the same CSP user will make requests to get all frames at once, but these will be serialised on the application server side. If you know that a frame will take a while to generate but you do not wish this to hold up the generation of the other frames and you do not need to modify the session object you can call Unlock to unlock this session object so other processors can access it. This should be used with care. The save is for internal use only, by default when you call Unlock if the session is modified we will save the changes before unlocking the session."}),"\n",(0,t.jsx)(s.h3,{id:"lock",children:"Lock"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Lock(timeout As %Integer) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Lock the ^%cspSession global to prevent other InterSystems IRIS processes accessing this objects storage. By default the ^%cspSession global is locked so you only need to call this in rare cases where you use the Unlock and you wish to reaquire the lock afterwards."}),"\n",(0,t.jsx)(s.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue, lock = 1) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Initialize CSP session object."}),"\n",(0,t.jsx)(s.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Cleanup CSP session object."}),"\n",(0,t.jsx)(s.h3,{id:"updatetimeout",children:"UpdateTimeout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UpdateTimeout(id As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Update the sessionId timeout after activity, for internal use"}),"\n",(0,t.jsx)(s.h3,{id:"loaddata",children:"%LoadData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %LoadData(id As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Load saved session"}),"\n",(0,t.jsx)(s.h3,{id:"savedata",children:"%SaveData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %SaveData(id As %String, notFinalSave As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Save session"}),"\n",(0,t.jsx)(s.h3,{id:"deletedata",children:"%DeleteData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteData(id As %String, concurrency As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Delete saved session data."}),"\n",(0,t.jsx)(s.h3,{id:"endsession-1",children:"endSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method endSession(timedout, forceend, requestid = "") As %Boolean [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["End the CSP session, not for public use.",(0,t.jsx)(s.br,{}),"\ntimedout - flag set to true if this was ended because of a timeout",(0,t.jsx)(s.br,{}),"\nforceend - 0 to use the 'EndSession' property to see if the session should be ended, and 1 will end the session even if 'EndSession' is false but will not free the license, 2 will force the end of the session and free the license."]}),"\n",(0,t.jsx)(s.h3,{id:"log",children:"Log"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method Log(msg As %String, data As %Binary = "") [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"Log data to CSP session object."}),"\n",(0,t.jsx)(s.h3,{id:"getsession",children:"GetSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetSession(sessionId As %String, CSPSessionCookie As %String = "", lock As %Boolean = 1, request As %CSP.Request) As %CSP.Session [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"Retrieve session object associated with sessionId"}),"\n",(0,t.jsx)(s.h3,{id:"changesessionid",children:"ChangeSessionId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ChangeSessionId(sessionId As %String, request As %CSP.Request) [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Allow sessionId of existing session to be udpated to a brand new value"}),"\n",(0,t.jsx)(s.h3,{id:"reset",children:"Reset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Reset() [ CodeMode = generator, Final, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Resets this %CSP.Session object to its initial state"}),"\n",(0,t.jsx)(s.h3,{id:"systemrestart",children:"SystemRestart"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SystemRestart() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal function called when InterSystems IRIS restarts"}),"\n",(0,t.jsx)(s.h3,{id:"extentexecute",children:"ExtentExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExtentExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Standard extent query Execute method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"extentfetch",children:"ExtentFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExtentFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Fetch method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"extentclose",children:"ExtentClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExtentClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Close method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"sessioninfoexecute",children:"SessionInfoExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SessionInfoExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Standard extent query Execute method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"sessioninfofetch",children:"SessionInfoFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SessionInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Fetch method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"sessioninfoclose",children:"SessionInfoClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SessionInfoClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Close method for Extent query"}),"\n",(0,t.jsx)(s.h3,{id:"processrequest",children:"ProcessRequest"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ProcessRequest(request, response, ByRef preserve) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"setcontext",children:"SetContext"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetContext() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"callback",children:"Callback"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Callback(method As %String) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"logoutall",children:"LogoutAll"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method LogoutAll(username As %String = "")\n'})}),"\n",(0,t.jsx)(s.p,{children:'Logout all CSP sessions for the indicated user. Callbacks can\'t stop logout The login cookie and any pending-second-factor logins are cancelled. Note: username="" implies username=$username. Note: $Roles must have "%All" to call this Note: LogoutAll calls %SaveData on the changed sessions.'}),"\n",(0,t.jsx)(s.h3,{id:"logout",children:"Logout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Logout(force As %Integer = 0)\n"})}),"\n",(0,t.jsx)(s.p,{children:'This call logs out the current session. The EndSession is not set to 1. This call uses the stored security context from the Event Class Context to call "OnLogout" Event Class callbacks, so the caller of Logout() must have sufficient privileges to call $System.Security.Users.ImportSecurityContext() if callbacks exist. The OnLogout callback may set EndSession to 1, if desired. The Session is logged out only if there are no callbacks, the "OnLogout" callbacks return $$$OK, or \'force\' is true. If the caller has the %All role, the login cookie will also be destroyed and any pending second factor tokens for this session will be deleted. Note: Caller must do a %SaveData() on the session instance'}),"\n",(0,t.jsx)(s.h3,{id:"getbyidusername",children:"GetByIdUsername"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetByIdUsername(runtimeGroupId As %String) As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the Username from the by-id groups sticky context. This could be the empty string if no authenticated user has logged into the group yet."}),"\n",(0,t.jsx)(s.h3,{id:"getlinktargets",children:"GetLinkTargets"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetLinkTargets(link As %String, ByRef targetUsername As %String, ByRef targetAppName As %String, ByRef targetNamespace As %String) As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"CheckLinkAccess determines whether the target user is permitted to view a given CSP or Zen page based on the security requirements for the relevant target Web application, the underlying page class, and any custom resources applied to the link."}),"\n",(0,t.jsx)(s.p,{children:"Positive return values indicate that there is already enough information to determine if the link should be enabled (Target variables may be undefined.). Negative values indicate that further processing needs to be done. Checking that the Target User can be logged into the Target Application and/or checking if the link's page has target resources which the Target User must have privileges to."}),"\n",(0,t.jsx)(s.p,{children:"Returns 0 if the link is not to a csp application. (enable)"}),"\n",(0,t.jsx)(s.p,{children:"Returns 1 if the user is permitted access to the page. (enable)"}),"\n",(0,t.jsx)(s.p,{children:"Returns 2 if could not determine Target User. Clicking on link will bring up login page. (choice: enable or disable)"}),"\n",(0,t.jsx)(s.p,{children:"Returns 3 if the user doesn't have access to the CSP application.(disable)"}),"\n",(0,t.jsx)(s.p,{children:"Returns 4 if the user doesn't have resources specific to the page.(disable)"}),"\n",(0,t.jsx)(s.p,{children:"Returns -1 if check both if the Target User can log into the Target Application and check the Page's resources if any."}),"\n",(0,t.jsx)(s.p,{children:"Returns -2 just check for access to the link's Page's resources, if any."}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"It is assumed the GetLinkTargets is called from a context in which %request is available, ie, from callpage in the CSP Server"}),"\n",(0,t.jsxs)(s.li,{children:["Definitions:\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Source application - application in which the current caller is being run"}),"\n",(0,t.jsx)(s.li,{children:"Current user - ($Username) the user currently logged into the Source Application"}),"\n",(0,t.jsx)(s.li,{children:"Target Application - the application pointed to by the link"}),"\n",(0,t.jsx)(s.li,{children:"Target User - the computed username under which the user will be logged into the Target Application"}),"\n",(0,t.jsx)(s.li,{children:"Target Page: the page portion of the link, e.g., /csp/app/mypage.csp: mypage.csp"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"This method is meant to be called from the link's containing page within the context of the CSP server. The containing page is part of a session's current application."}),"\n",(0,t.jsx)(s.p,{children:"We must be able to detemine which target user will be used to check privileges. The target user cannot be determined if the source and target applications are different and the target is neither part of an active by-id group nor sharing-sessions with the source application."}),"\n",(0,t.jsx)(s.p,{children:"Applications share sessions when:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"The source and target are the same application."}),"\n",(0,t.jsx)(s.li,{children:"The link to the target page contains CSPSHARE=1."}),"\n",(0,t.jsx)(s.li,{children:"Source and target applications have the same Session Cookie Path."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"who-is-the-target-user",children:"Who is the target user?"}),"\n",(0,t.jsx)(s.p,{children:"Since this is called from with a CSP session, there are the following situations:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"The target application is a member of an authenticated by-id group. That group's authenticated user is the Target User."}),"\n",(0,t.jsxs)(s.li,{children:["If the target application will be in the current session, the CSP server has already handled logic for determing the user.\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"The session's user is not UnknownUser. The target user is $Username."}),"\n",(0,t.jsxs)(s.li,{children:["The session's user is UnknownUser\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"If the target application is the same as the source application, the Target User is UnknownUser."}),"\n",(0,t.jsx)(s.li,{children:"If the target application is different, the target user is the user from the session's Sticky-context. If the session has no sticky-context, the Target User will be UnknownUser"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"checklinkaccess-policies",children:"CheckLinkAccess Policies"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"If the Target Application is not a CSP Application, return ENABLE/UNKNOWN"}),"\n",(0,t.jsx)(s.li,{children:"If the Source and Target application are the same, return CHECK_RESOURCES_ONLY."}),"\n",(0,t.jsx)(s.li,{children:"If the Target Application is not enabled, return NO_APP_ACCESS"}),"\n",(0,t.jsx)(s.li,{children:"If the Target Application is part of an authenticated By-ID group, set Target User to group's User, return CHECK_ALL"}),"\n",(0,t.jsx)(s.li,{children:"If the Target Application is part of an authenticated By-Session group, set Target User to group's User, return CHECK_ALL"}),"\n",(0,t.jsx)(s.li,{children:"If the Target Application is neither in an authenticated by-id group nor in the Source Application's session, return ENABLE/UNKNOWN"}),"\n",(0,t.jsx)(s.li,{children:"If an exception occurs, return NO_ACCESS_TO_RESOURCE"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"globalreplace",children:"GlobalReplace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GlobalReplace(source As %String, dest As %String)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"collate",children:"collate"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod collate(source As %String, dest As %String) [ Private ]\n"})})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var t=n(96540);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);