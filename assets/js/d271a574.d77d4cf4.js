"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[74850],{42877:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>l,default:()=>c,frontMatter:()=>t,toc:()=>a});var n=r(74848),i=r(28453);const t={pagination_prev:null,pagination_next:null},l="%DeepSee.Query.memberRelationship",a=[{value:"Properties",id:"properties",level:2},{value:"%relationship",id:"relationship",level:3},{value:"%remoteSpec",id:"remotespec",level:3},{value:"%relatedCube",id:"relatedcube",level:3},{value:"%cardinality",id:"cardinality",level:3},{value:"%inverse",id:"inverse",level:3},{value:"%isNullRelation",id:"isnullrelation",level:3},{value:"%isStoredSide",id:"isstoredside",level:3},{value:"%ORList",id:"orlist",level:3},{value:"%relationshipDepth",id:"relationshipdepth",level:3},{value:"%deepCubes",id:"deepcubes",level:3},{value:"Methods",id:"methods",level:2},{value:"%ApplyRelationInfo",id:"applyrelationinfo",level:3},{value:"%MergeOR",id:"mergeor",level:3},{value:"%ProcessMembers",id:"processmembers",level:3},{value:"%GetFiltersForRelationship",id:"getfiltersforrelationship",level:3},{value:"%GetSpecForMember",id:"getspecformember",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"deepseequerymemberrelationship",children:"%DeepSee.Query.memberRelationship"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Query.memberRelationship Extends %DeepSee.Query.member [ System = 3 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Specialized version of the member provider class used for relationships.",(0,n.jsx)(s.br,{}),"\nThis providers delagates the job of providing information to the related cube by generating queries against it."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"relationship",children:"%relationship"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %relationship As %DeepSee.Datatype.entityName;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name of this relationship."}),"\n",(0,n.jsx)(s.h3,{id:"remotespec",children:"%remoteSpec"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %remoteSpec As %String(MAXLEN = 30000);\n"})}),"\n",(0,n.jsx)(s.p,{children:"Member spec to apply against the related cube."}),"\n",(0,n.jsx)(s.h3,{id:"relatedcube",children:"%relatedCube"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %relatedCube As %DeepSee.Datatype.entityName;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name of cube the relationship refers to."}),"\n",(0,n.jsx)(s.h3,{id:"cardinality",children:"%cardinality"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %cardinality As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Cardinality of the relationship."}),"\n",(0,n.jsx)(s.h3,{id:"inverse",children:"%inverse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %inverse As %DeepSee.Datatype.entityName;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Inverse of the relationship."}),"\n",(0,n.jsx)(s.h3,{id:"isnullrelation",children:"%isNullRelation"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %isNullRelation As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"True if this is the No Relation member."}),"\n",(0,n.jsx)(s.h3,{id:"isstoredside",children:"%isStoredSide"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %isStoredSide As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Is this the stored side of the relationship?"}),"\n",(0,n.jsx)(s.h3,{id:"orlist",children:"%ORList"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %ORList As %String [ MultiDimensional ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Used to hold additional values for %OR references"}),"\n",(0,n.jsx)(s.h3,{id:"relationshipdepth",children:"%relationshipDepth"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %relationshipDepth As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Depth (number of hops) of the relationship."}),"\n",(0,n.jsx)(s.h3,{id:"deepcubes",children:"%deepCubes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property %deepCubes As %List;\n"})}),"\n",(0,n.jsx)(s.p,{children:"List of additional related cubes more than one level away."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"applyrelationinfo",children:"%ApplyRelationInfo"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ApplyRelationInfo(ByRef pSpec, pRelatedCube As %String, pCardinality As %String, pInverse As %String, pIsStored As %Boolean, ByRef pMemberKey) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Apply relationship information to this provider.",(0,n.jsx)(s.br,{}),"\npSpec is an array of the tokens that make up the member specification."]}),"\n",(0,n.jsx)(s.h3,{id:"mergeor",children:"%MergeOR"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MergeOR(pMember2 As memberRelationship) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Combine the given member object into this one. This is used to combine %OR(members) into one statement."}),"\n",(0,n.jsx)(s.h3,{id:"processmembers",children:"%ProcessMembers"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessMembers(pParent As %Integer, Output pSet As %List) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Process the member name and key information for this tuple. Put the result into pSet."}),"\n",(0,n.jsx)(s.h3,{id:"getfiltersforrelationship",children:"%GetFiltersForRelationship"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetFiltersForRelationship(Output pFilters As %String, pGroup As %DeepSee.Query.node, pLevel As %Integer = 0, ByRef pOmitted) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Compute the filters to tack onto a relationship subquery."}),"\n",(0,n.jsx)(s.h3,{id:"getspecformember",children:"%GetSpecForMember"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetSpecForMember(pMember As %DeepSee.Query.memberRelationship) As %String [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Utility method. Return a spec for the given member."})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>a});var n=r(96540);const i={},t=n.createContext(i);function l(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);