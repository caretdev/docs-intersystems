"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[32628],{13627:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>r,frontMatter:()=>a,toc:()=>c});var l=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},i="%ZEN.Component.multiSelectSet",c=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTLAYOUT",id:"defaultlayout",level:3},{value:"Properties",id:"properties",level:2},{value:"titleList",id:"titlelist",level:3},{value:"emptyCaption",id:"emptycaption",level:3},{value:"captionClass",id:"captionclass",level:3},{value:"optionCount",id:"optioncount",level:3},{value:"layout",id:"layout",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"%SetDefaultValues",id:"setdefaultvalues",level:3},{value:"clickItem",id:"clickitem",level:3},{value:"setCaptionClass",id:"setcaptionclass",level:3},{value:"updateValue",id:"updatevalue",level:3},{value:"selectUniform",id:"selectuniform",level:3},{value:"selectAll",id:"selectall",level:3},{value:"selectNone",id:"selectnone",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"onupdateHandler",id:"onupdatehandler",level:3},{value:"onloadHandler",id:"onloadhandler",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"zencomponentmultiselectset",children:"%ZEN.Component.multiSelectSet"})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.multiSelectSet Extends listControl [ Deprecated, System = 3 ]\n"})}),"\n",(0,l.jsxs)(t.p,{children:["This is a specialized control that displays a set of checkBoxes based on a list of values.",(0,l.jsx)(t.br,{}),"\nThe list of values is specified by the valueList. This is a csv-list of values that the user can select. If displayList is provided, it is used to provide the displayed captions for the buttons.",(0,l.jsx)(t.br,{}),'\nIf there is an empty value ("") within the items in valueList (e.g., ",A,B,C"), then an additional button will be displayed for the empty value. The caption for this empty value is specified by the emptyCaption.',(0,l.jsx)(t.br,{}),'\nIt is assumed that every value within the set of value is distinct; A valueList containing duplicate items (e.g., "A,A,A") will lead to strange beahavior for the user.',(0,l.jsx)(t.br,{}),"\nThe nominal value of the multiSelectSet is a csv-list of all options currently checked. The order of items appearing in this list will be the same as their listings in the original valueList provided.",(0,l.jsx)(t.br,{}),"\nIt is possible to programmatically set the value of the multiSelectSet to any arbitary value using the setValue method and providing either a single value or a csv-list of values. If no values in the list provided to the multiSelectSet corresponds to an item in the set of values, then all buttons in the set will be unchecked."]}),"\n",(0,l.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(t.h3,{id:"defaultlayout",children:"DEFAULTLAYOUT"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter DEFAULTLAYOUT As STRING = "vertical";\n'})}),"\n",(0,l.jsx)(t.p,{children:"Subclasses can set this to change the the default orientation of the options"}),"\n",(0,l.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(t.h3,{id:"titlelist",children:"titleList"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Property titleList As %ZEN.Datatype.csv(ZENLOCALIZE = 1);\n"})}),"\n",(0,l.jsx)(t.p,{children:"Defines set of titles (tooltip text) for each of the choices of this multiSelectSet as a csv-list."}),"\n",(0,l.jsx)(t.h3,{id:"emptycaption",children:"emptyCaption"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'Property emptyCaption As %ZEN.Datatype.caption [ InitialExpression = "None" ];\n'})}),"\n",(0,l.jsx)(t.p,{children:'This caption is used for any radio buttons within this multiSelectSet that have an empty ("") display value.'}),"\n",(0,l.jsx)(t.h3,{id:"captionclass",children:"captionClass"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'Property captionClass As %ZEN.Datatype.cssClass [ InitialExpression = "multiSelectSetCaption" ];\n'})}),"\n",(0,l.jsx)(t.p,{children:"CSS class to apply to the control's captions."}),"\n",(0,l.jsx)(t.h3,{id:"optioncount",children:"optionCount"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Property optionCount As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,l.jsx)(t.p,{children:"Count of options within this multiSelectSet."}),"\n",(0,l.jsx)(t.h3,{id:"layout",children:"layout"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:'Property layout As %ZEN.Datatype.string(MAXLEN = 12, VALUELIST = ",horizontal,vertical") [ InitialExpression = {..#DEFAULTLAYOUT} ];\n'})}),"\n",(0,l.jsx)(t.p,{children:'Specifies how options within this group should be layed out. Valid values are "horizontal" and "vertical"'}),"\n",(0,l.jsx)(t.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,l.jsx)(t.h3,{id:"style",children:"Style"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,l.jsx)(t.p,{children:"defines style sheet used by this component"}),"\n",(0,l.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(t.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,l.jsx)(t.h3,{id:"setdefaultvalues",children:"%SetDefaultValues"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SetDefaultValues()\n"})}),"\n",(0,l.jsx)(t.p,{children:"This method fills in reasonable default values for this control. Used by tools (such as Control Tester) to dynamically create controls."}),"\n",(0,l.jsx)(t.h3,{id:"clickitem",children:"clickItem"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod clickItem(choice) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"User click on checkbox or caption for choice; select associated button and invoke callbacks."}),"\n",(0,l.jsx)(t.h3,{id:"setcaptionclass",children:"setCaptionClass"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setCaptionClass(cls) [ Internal, Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Internal method to set css class used for checkbox captions."}),"\n",(0,l.jsx)(t.h3,{id:"updatevalue",children:"updateValue"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod updateValue() [ Internal, Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Internal method to compute the list of all selected options in the valueList. This string is the nominal 'value' of the widget itself"}),"\n",(0,l.jsx)(t.h3,{id:"selectuniform",children:"selectUniform"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod selectUniform(flag) [ Internal, Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Internal method to select or unslection all options uniformly."}),"\n",(0,l.jsx)(t.h3,{id:"selectall",children:"selectAll"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod selectAll() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Selects all options in the set"}),"\n",(0,l.jsx)(t.h3,{id:"selectnone",children:"selectNone"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod selectNone() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Deselects all options in the set"}),"\n",(0,l.jsx)(t.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.p,{children:"Set the value of a named property."}),"\n",(0,l.jsx)(t.h3,{id:"onupdatehandler",children:"onupdateHandler"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod onupdateHandler() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(t.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})})]})}function r(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var l=s(96540);const n={},a=l.createContext(n);function i(e){const t=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),l.createElement(a.Provider,{value:t},e.children)}}}]);