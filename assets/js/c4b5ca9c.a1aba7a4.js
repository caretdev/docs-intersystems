"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[75545],{42036:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>o,default:()=>i,frontMatter:()=>n,toc:()=>d});var r=t(74848),a=t(28453);const n={pagination_prev:null,pagination_next:null},o="%SYSTEM.Status",d=[{value:"Methods",id:"methods",level:2},{value:"Error",id:"error",level:3},{value:"AppendStatus",id:"appendstatus",level:3},{value:"EmbedStatus",id:"embedstatus",level:3},{value:"IsError",id:"iserror",level:3},{value:"IsOK",id:"isok",level:3},{value:"DisplayError",id:"displayerror",level:3},{value:"DecomposeStatus",id:"decomposestatus",level:3},{value:"GetErrorCodes",id:"geterrorcodes",level:3},{value:"GetErrorText",id:"geterrortext",level:3},{value:"GetOneErrorText",id:"getoneerrortext",level:3},{value:"GetOneStatusText",id:"getonestatustext",level:3},{value:"Equals",id:"equals",level:3},{value:"OK",id:"ok",level:3},{value:"StatusToSQLCODE",id:"statustosqlcode",level:3}];function c(e){const s={a:"a",code:"code",crlf:"crlf",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"systemstatus",children:"%SYSTEM.Status"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %SYSTEM.Status Extends Help [ Abstract, System = 3 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"This is a helper class that is used to construct and display/decompose status codes."}),"\n",(0,r.jsxs)(s.p,{children:["Many methods in this class use the qspec argument, which is a list of flags or qualifiers. See ",(0,r.jsx)(s.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=ObjectScript+qspec",children:"System Flags and Qualifiers"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"error",children:"Error"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Error(errorcode As %Integer, message1 As %String, message2 As %String, message3 As %String) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an error status code with the error as specified by the errorcode. Some error codes accept addition parameters as embedded message in the error text."}),"\n",(0,r.jsx)(s.h3,{id:"appendstatus",children:"AppendStatus"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AppendStatus(statuscode1 As %Status, statuscode2 As %Status) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return a new status code that is the combination of the two status codes. For example, if both statuscode1 and statuscode2 contain errors, then the new status code will contain 2 error messages."}),"\n",(0,r.jsx)(s.h3,{id:"embedstatus",children:"EmbedStatus"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod EmbedStatus(statuscode1 As %Status, statuscode2 As %Status) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"iserror",children:"IsError"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsError(statuscode As %Status) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns 1 if the statuscode contains errors. Otherwise, it returns 0."}),"\n",(0,r.jsx)(s.h3,{id:"isok",children:"IsOK"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsOK(statuscode As %Status) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns 1 if the statuscode does not contain errors. Otherwise, it returns 0."}),"\n",(0,r.jsx)(s.h3,{id:"displayerror",children:"DisplayError"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DisplayError(statuscode As %Status) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Display the error text for statuscode."}),"\n",(0,r.jsx)(s.h3,{id:"decomposestatus",children:"DecomposeStatus"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DecomposeStatus(statuscode As %Status, ByRef errorlist, qspec As %String, language As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the error text and error information for statuscode; this information is returned by reference through the errorlist parameter. The errorlist parameter is a multidimensional array containing information about each error. If the errorlist array already contains values, the method appends the new values."}),"\n",(0,r.jsx)(s.p,{children:'If the qspec parameter contains the "d" flag, then the error text is also displayed to the screen.'}),"\n",(0,r.jsx)(s.p,{children:"To return the error text in a different language, pass a language code as the language parameter."}),"\n",(0,r.jsx)(s.h3,{id:"geterrorcodes",children:"GetErrorCodes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetErrorCodes(statuscode As %Status) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the error codes for statuscode as a comma-delimited list."}),"\n",(0,r.jsx)(s.h3,{id:"geterrortext",children:"GetErrorText"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetErrorText(statuscode As %Status, language As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Returns the error text for statuscode. If there is more than one error in the statuscode, then the multiple error text strings are separated by ",(0,r.jsx)(s.crlf,{children:"."})]}),"\n",(0,r.jsx)(s.p,{children:"To return the error text in a different language, pass a language code as the language parameter."}),"\n",(0,r.jsx)(s.h3,{id:"getoneerrortext",children:"GetOneErrorText"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetOneErrorText(statuscode As %Status, index As %Integer, language As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the error text for the error in the statuscode at position index."}),"\n",(0,r.jsx)(s.p,{children:"To return the error text in a different language, pass a language code as the language parameter."}),"\n",(0,r.jsx)(s.h3,{id:"getonestatustext",children:"GetOneStatusText"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetOneStatusText(statuscode As %Status, index As %Integer, language As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the inner text for the error in the statuscode at position index,. without the error domain, id or source."}),"\n",(0,r.jsx)(s.p,{children:"To return the error text in a different language, pass a language code as the language parameter."}),"\n",(0,r.jsx)(s.h3,{id:"equals",children:"Equals"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Equals(statuscode As %Status, statusids...) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return true if the domain/msgid of statuscode equals any of the following error code domain/msgid arguments"}),"\n",(0,r.jsx)(s.h3,{id:"ok",children:"OK"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OK() As %Status [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the success status code."}),"\n",(0,r.jsx)(s.h3,{id:"statustosqlcode",children:"StatusToSQLCODE"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StatusToSQLCODE(statuscode As %Status, Output message As %Library.String(MAXLEN=500), language) As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an SQLCODE equivalent to the statuscode. message contains the status text. Precise error code to SQLCODE value are only possible for SQLCODE errors - $$$SQLCode and $$$SQLError. All other error numbers translate to -400."})]})}function i(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>d});var r=t(96540);const a={},n=r.createContext(a);function o(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);