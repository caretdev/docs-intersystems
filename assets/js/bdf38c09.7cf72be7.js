"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[52790],{86793:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>a,default:()=>c,frontMatter:()=>i,toc:()=>o});var n=t(74848),r=t(28453);const i={pagination_prev:null,pagination_next:null},a="%DeepSee.Model.namedSet",o=[{value:"Properties",id:"properties",level:2},{value:"cube",id:"cube",level:3},{value:"setExpression",id:"setexpression",level:3},{value:"Methods",id:"methods",level:2},{value:"%Validate",id:"validate",level:3}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"deepseemodelnamedset",children:"%DeepSee.Model.namedSet"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Model.namedSet Extends %DeepSee.Model.node [ System = 3 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Meta-data object that represents a named set within a DeepSee cube.",(0,n.jsx)(s.br,{}),"\nAt query processing time, references to a named set are replaced with the setExpression that defines the set."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"cube",children:"cube"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship cube As %DeepSee.Model.cube(XMLPROJECTION = "none") [ Cardinality = one, Inverse = namedSets ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Cube that this named set belongs to."}),"\n",(0,n.jsx)(s.h3,{id:"setexpression",children:"setExpression"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property setExpression As %DeepSee.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,n.jsx)(s.p,{children:'MDX expression that defines the members of this named set. This expression must evaluate to a member or set of members: e.g., "[City].Members" or "[City].[Boston]".'}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"validate",children:"%Validate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %Validate() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Test if this named set's definition is valid."})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var n=t(96540);const r={},i=n.createContext(r);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);