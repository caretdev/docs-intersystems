"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[35677],{90225:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>l,frontMatter:()=>r,toc:()=>c});var a=n(74848),s=n(28453);const r={pagination_prev:null,pagination_next:null},i="%MV.PropertyParameters",c=[{value:"Parameters",id:"parameters",level:2},{value:"MVNAME",id:"mvname",level:3},{value:"MVTYPE",id:"mvtype",level:3},{value:"MVHEADING",id:"mvheading",level:3},{value:"MVASSOCIATION",id:"mvassociation",level:3},{value:"MVATTRIBUTE",id:"mvattribute",level:3},{value:"MVJUSTIFICATION",id:"mvjustification",level:3},{value:"MVFORMAT",id:"mvformat",level:3},{value:"MVWIDTH",id:"mvwidth",level:3},{value:"MVTODISPLAY",id:"mvtodisplay",level:3},{value:"MVTOLOGICAL",id:"mvtological",level:3},{value:"MVITYPE",id:"mvitype",level:3},{value:"MVPROJECTED",id:"mvprojected",level:3},{value:"MVSVASSOCIATION",id:"mvsvassociation",level:3},{value:"MVAUTO",id:"mvauto",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"mvpropertyparameters",children:"%MV.PropertyParameters"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %MV.PropertyParameters [ ServerOnly = 1, System = 3 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Privides all the parameters that a parameter needs to contain if it is to project correctly into an MV data file. An MV projection is actually the projection of the dictionary elements"}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"mvname",children:"MVNAME"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVNAME As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The name of the dictionary element in MV terms (DICT name) As the MV DICT elements can have just about any character in them, we cannot merely use the name of the property. However, if this is the empty string then the property name is assumed."}),"\n",(0,a.jsx)(t.h3,{id:"mvtype",children:"MVTYPE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter MVTYPE As STRING = "D";\n'})}),"\n",(0,a.jsx)(t.p,{children:"The Type of Dictionary element that this represents. Types are D (Uses MVITYPE if present, MVTOLOGICAL and MVCONVERSION are not allowed) A or S (Uses MVTOLOGICAL and MVCONVERSION if present. MVITYPE not allowed)"}),"\n",(0,a.jsx)(t.h3,{id:"mvheading",children:"MVHEADING"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVHEADING As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The heading string that is printed at the top of the column of a CMQL listing"}),"\n",(0,a.jsx)(t.h3,{id:"mvassociation",children:"MVASSOCIATION"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVASSOCIATION As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The ASSOC Parameter of an MV dictionary element"}),"\n",(0,a.jsx)(t.h3,{id:"mvattribute",children:"MVATTRIBUTE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVATTRIBUTE As INTEGER;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The attribute code (usually the attribute number within a record in the MV file, but can be 0 if a F correlative or A correlative is in force so you cannot rely on this as any real indicator of the value position you must calculate the value using the entire record and the $MVOCONV() function."}),"\n",(0,a.jsx)(t.h3,{id:"mvjustification",children:"MVJUSTIFICATION"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVJUSTIFICATION As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"Right or Left or other type of justification of this column"}),"\n",(0,a.jsx)(t.h3,{id:"mvformat",children:"MVFORMAT"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVFORMAT As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The format code for an MV dictionary element"}),"\n",(0,a.jsx)(t.h3,{id:"mvwidth",children:"MVWIDTH"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVWIDTH As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The display width of an MV dictionary element (width of column used in formatted output."}),"\n",(0,a.jsx)(t.h3,{id:"mvtodisplay",children:"MVTODISPLAY"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVTODISPLAY As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:'The conversion code used to generate data from the raw data of a record. This code is used in COS code as follows: Set d = $MVCONV("RawValue", MVTODISPLAY Note that if an MVITYPE is present, then neither an MVTODISPLAY nor a MVTOLOGICAL can be present. You either use an MVITYPE or you use MVTODISPLAY AND MVTOLOGICAL. The MVTYPE parameter being "D" indicates that this is the Prime/UniVerse format and uses Itypes, not MVTODISPLAY and MVTOLOGICAL'}),"\n",(0,a.jsx)(t.h3,{id:"mvtological",children:"MVTOLOGICAL"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVTOLOGICAL As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:'The code for attribute 8 of a dictionary element. This generates the data which is selected against or displayed. Note that if an MVITYPE is present, then neither an MVTODISPLAY nor a MVTOLOGICAL can be present. You either use an MVITYPE or you use MVTODISPLAY AND MVTOLOGICAL. The MVTYPE parameter being "D" indicates that this is the Prime/UniVerse format and uses Itypes, not MVTODISPLAY and MVTOLOGICAL'}),"\n",(0,a.jsx)(t.h3,{id:"mvitype",children:"MVITYPE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVITYPE As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:'The code for the I type of a dictionary element. This generates the data which is selected against or displayed. This is compiled and included in the class as the calc Method for this property. Note that if an MVITYPE is present, then neither an MVCONVERSION nor a MVTOLOGICAL can be present. You either use an MVITYPE or you use MVCONVERSION and MVTOLOGICAL. The MVTYPE parameter being "D" indicates that this is the Prime/UniVerse format and uses Itypes, not MVCONVERSION and MVTOLOGICAL'}),"\n",(0,a.jsx)(t.h3,{id:"mvprojected",children:"MVPROJECTED"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVPROJECTED As BOOLEAN = 1;\n"})}),"\n",(0,a.jsx)(t.p,{children:"Set this parameter to True if it should be projected back to the DICT of the file that the containing class projects to, ot False if this definition is used by the class (for SQL, XML etc) only."}),"\n",(0,a.jsx)(t.h3,{id:"mvsvassociation",children:"MVSVASSOCIATION"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVSVASSOCIATION As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"If set then this is the name of the subvalues SQL table projected by the compiler. Each row in the table corresponds to one subvalue. If more than one property has the same value for MVSVASSOCIATION then the SQL table will contain associated values as individual columns. MVSVASSOCIATION cannot use the same name as MVASSOCIATION."}),"\n",(0,a.jsx)(t.h3,{id:"mvauto",children:"MVAUTO"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVAUTO As STRING;\n"})}),"\n",(0,a.jsx)(t.p,{children:"This parameter is used by CREATE.INDEX and PROTOCLASS to track the creation and use of properties. It is also used by DELETE.INDEX to determine if this property should be deleted if the index is deleted. Remove this parameter if you want to take manual control of the property."})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var a=n(96540);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);