"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[78679],{51997:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>c,default:()=>o,frontMatter:()=>l,toc:()=>r});var n=t(74848),i=t(28453);const l={pagination_prev:null,pagination_next:null},c="%CSP.Apps",r=[{value:"Methods",id:"methods",level:2},{value:"CSPAppListExecute",id:"cspapplistexecute",level:3},{value:"CSPAppListClose",id:"cspapplistclose",level:3},{value:"CSPAppListFetch",id:"cspapplistfetch",level:3},{value:"CSPFileSetExecute",id:"cspfilesetexecute",level:3},{value:"CSPFileSetClose",id:"cspfilesetclose",level:3},{value:"CSPFileSetFetch",id:"cspfilesetfetch",level:3}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"cspapps",children:"%CSP.Apps"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %CSP.Apps Extends %RegisteredObject [ System = 3 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,n.jsx)(s.p,{children:"Provide two queries to enumerate the CSP applications in this namespace, and then to enumerate the files and directories for each of these applications."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"cspapplistexecute",children:"CSPAppListExecute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPAppListExecute(ByRef QHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Query to enumerate CSP applications. Execute method for query to enumerate CSP applications."}),"\n",(0,n.jsx)(s.h3,{id:"cspapplistclose",children:"CSPAppListClose"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPAppListClose(QHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Close method for query to enumerate CSP applications."}),"\n",(0,n.jsx)(s.h3,{id:"cspapplistfetch",children:"CSPAppListFetch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPAppListFetch(ByRef QHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Fetch method for query to enumerate CSP applications."}),"\n",(0,n.jsx)(s.h3,{id:"cspfilesetexecute",children:"CSPFileSetExecute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPFileSetExecute(ByRef QHandle As %Binary, url As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Query to enumerate CSP files and directories. Execute method for query to enumerate CSP files and directories."}),"\n",(0,n.jsx)(s.h3,{id:"cspfilesetclose",children:"CSPFileSetClose"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPFileSetClose(QHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Close method for query to enumerate CSP files and directories."}),"\n",(0,n.jsx)(s.h3,{id:"cspfilesetfetch",children:"CSPFileSetFetch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CSPFileSetFetch(ByRef QHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Fetch method for query to enumerate CSP files and directories."})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>r});var n=t(96540);const i={},l=n.createContext(i);function c(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);