"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[7071],{92979:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>a,frontMatter:()=>c,toc:()=>r});var o=t(74848),s=t(28453);const c={pagination_prev:null,pagination_next:null},i="%IO.ServerSocket",r=[{value:"Methods",id:"methods",level:2},{value:"Listen",id:"listen",level:3},{value:"remoteIPAllowed",id:"remoteipallowed",level:3},{value:"ListenJob",id:"listenjob",level:3},{value:"jobAttachProps",id:"jobattachprops",level:3},{value:"connectionJob",id:"connectionjob",level:3},{value:"Open",id:"open",level:3},{value:"Disconnect",id:"disconnect",level:3},{value:"Close",id:"close",level:3},{value:"IsConnectedGet",id:"isconnectedget",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"ioserversocket",children:"%IO.ServerSocket"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Class %IO.ServerSocket Extends (%IO.DeviceStream, %IO.IParts.ServerSocketIO, %IO.SocketCommon) [ Inheritance = right, System = 2 ]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(n.h3,{id:"listen",children:"Listen"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Method Listen(ByRef pTimeout As %Numeric = -1, Output pSC As %Status) As %Boolean\n"})}),"\n",(0,o.jsx)(n.p,{children:"Until pTimeout, wait for an inbound TCP connection to be received on the port specified in the prior Open() call. Note that the OS may accept up to ConnectionQueueSize connections for the port on your behalf before you call this method. If the OS has queued one or more accepted connections, this method will return immediately with one of them connected."}),"\n",(0,o.jsx)(n.h3,{id:"remoteipallowed",children:"remoteIPAllowed"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod remoteIPAllowed(pAllowedIPAddresses As %String, Output pRemote As %String, Output pStatus As %Status) As %Boolean [ Internal ]\n"})}),"\n",(0,o.jsx)(n.p,{children:"Test whether the remote TCP socket conforms to the given list of allowed IP addresses / host names. Also return a formatted string representing the remote address."}),"\n",(0,o.jsx)(n.h3,{id:"listenjob",children:"ListenJob"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:'Method ListenJob(ByRef pTimeout As %Numeric = -1, pOnConnectedClass As %String, pJobArgs As %String = "", pSocketClass As %String = "%IO.ServerSocket", pMaxJobs As %Integer = -1, pDummy As %Boolean, Output pSC As %Status) As %Integer\n'})}),"\n",(0,o.jsx)(n.p,{children:"Until pTimeout, listen for incoming connections and spawn a job for each one, up to pMaxJobs. If pMaxJobs threshold has already been reached, wait for an existing connected job to quit and then spawn a job for the new connection. When the timeout expires, this method will return but any spawned jobs will continue running until they terminate on their own. pOnConnectedClass is the classname of a customer defined class that must contain a classmethod called OnConnected(). ListenJob() will arrange for this classmethod to be called each time a new connection arrives. It will call OnConnected() with 2 arguments, a %IO.ServerSocket instance representing the connected socket, and a string that was passed in to ListenJob() in the pJobArgs argument. This allows the OnConnected() method to engage in TCP communications over the socket from within a fresh job created for the purpose. The pSocketClass argument to ListenJob() allows you to specify a subclass of %IO.ServerSocket should be instantiated in the connection jobs. This could implement additional methods for handling common protocol elements expected to be exchanged across the TCP connection. Normally you will just use %IO.ServerSocket and its Read() and Write() methods. The pDummy argument is ignored."}),"\n",(0,o.jsx)(n.h3,{id:"jobattachprops",children:"jobAttachProps"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Method jobAttachProps(pSocketProps As %String, pDevice As %String) [ Internal ]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"connectionjob",children:"connectionJob"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod connectionJob(pSubscript As %String, pOnConnectedClass As %String, pSocketClass As %String, pSocketProps As %String, pJobArgs As %String) As %Status [ Internal ]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"open",children:"Open"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:'Method Open(pPort As %String = "", ByRef pTimeout As %Numeric = -1, Output pSC As %Status) As %Boolean\n'})}),"\n",(0,o.jsx)(n.p,{children:"Open the socket for listening on the port given by pPort, waiting up to pTimeout for the port to be available to listen on."}),"\n",(0,o.jsx)(n.h3,{id:"disconnect",children:"Disconnect"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Method Disconnect(Output pSC As %Status, pIntentional As %Boolean = 1, pSCReason As %Status = {$$$OK})\n"})}),"\n",(0,o.jsx)(n.p,{children:"Disconnect the current connection but keep the socket open for listening"}),"\n",(0,o.jsx)(n.h3,{id:"close",children:"Close"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Method Close(Output pSC As %Status) As %Boolean\n"})}),"\n",(0,o.jsx)(n.p,{children:"Disconnect the current connection and close the Socket for listening. Any connections the OS may have accepted for the current port and queued for us will be disconnected as well."}),"\n",(0,o.jsx)(n.h3,{id:"isconnectedget",children:"IsConnectedGet"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-objectscript-class",children:"Method IsConnectedGet() As %Boolean [ Internal ]\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(96540);const s={},c=o.createContext(s);function i(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);