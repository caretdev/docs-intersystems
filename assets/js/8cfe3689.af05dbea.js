"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[52681],{80861:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>r,default:()=>c,frontMatter:()=>i,toc:()=>l});var t=a(74848),s=a(28453);const i={pagination_prev:null,pagination_next:null},r="%ZEN.ComponentEx.svgImageProvider",l=[{value:"Parameters",id:"parameters",level:2},{value:"INCLUDEFILES",id:"includefiles",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"GetSystemTempDir",id:"getsystemtempdir",level:3},{value:"GenerateRootName",id:"generaterootname",level:3},{value:"ScopeFileName",id:"scopefilename",level:3},{value:"ConvertXSLToPDF",id:"convertxsltopdf",level:3},{value:"ReceiveFragment",id:"receivefragment",level:3},{value:"RemoveFile",id:"removefile",level:3},{value:"saveToServer",id:"savetoserver",level:3},{value:"extractSVGSource",id:"extractsvgsource",level:3},{value:"extractXSLFOSource",id:"extractxslfosource",level:3},{value:"saveDOMToSVGStream",id:"savedomtosvgstream",level:3},{value:"saveDOMToXSLFOStream",id:"savedomtoxslfostream",level:3},{value:"saveDOMToSVGFile",id:"savedomtosvgfile",level:3},{value:"saveDOMToXSLFOFile",id:"savedomtoxslfofile",level:3},{value:"getPageSetupDefaults",id:"getpagesetupdefaults",level:3},{value:"reconcileDefaults",id:"reconciledefaults",level:3},{value:"saveDOMToXSLFile",id:"savedomtoxslfile",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"makeSVGFileName",id:"makesvgfilename",level:3},{value:"getSVGDOMRoot",id:"getsvgdomroot",level:3},{value:"saveToSVGFile",id:"savetosvgfile",level:3},{value:"saveToXSLFOSnippet",id:"savetoxslfosnippet",level:3},{value:"saveToXSLFile",id:"savetoxslfile",level:3},{value:"isWhiteSpace",id:"iswhitespace",level:3},{value:"dumpSVGNode",id:"dumpsvgnode",level:3},{value:"dumpSVGStyle",id:"dumpsvgstyle",level:3},{value:"buildFOStyleString",id:"buildfostylestring",level:3},{value:"buildFOBlock",id:"buildfoblock",level:3},{value:"buildFOTable",id:"buildfotable",level:3}];function o(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zencomponentexsvgimageprovider",children:"%ZEN.ComponentEx.svgImageProvider"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.ComponentEx.svgImageProvider Extends %ZEN.Component.component [ Deprecated, System = 3 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"SVGImageProvider These utilities are built upon the java .jar libraries in the FOP distribution included with modern releases of InterSystems IRIS"}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"includefiles",children:"INCLUDEFILES"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter INCLUDEFILES = "zenCSLM.js";\n'})}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,t.jsx)(n.p,{children:"This class does not project HTML into its containing document"}),"\n",(0,t.jsx)(n.h3,{id:"getsystemtempdir",children:"GetSystemTempDir"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetSystemTempDir() As %String\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return the temp directory for this system."}),"\n",(0,t.jsx)(n.h3,{id:"generaterootname",children:"GenerateRootName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GenerateRootName(dir As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return a random and unique name in the given directory with an 'svg' extention for the creation of temp files during processing"}),"\n",(0,t.jsx)(n.h3,{id:"scopefilename",children:"ScopeFileName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ScopeFileName(rawName As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given a user specified file name clip it to ensure that it only refers to files in the mgr/temp space"}),"\n",(0,t.jsx)(n.h3,{id:"convertxsltopdf",children:"ConvertXSLToPDF"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ConvertXSLToPDF(pInFile As %String, pOutFile As %String) [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"receivefragment",children:"ReceiveFragment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ReceiveFragment(outputFile As %String, src As %ZEN.proxyObject) As %Status [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Mechanism for receiving fragmants of large data streams headed upstream from client to server. This work in conjunction with the saveToServer() method."}),"\n",(0,t.jsx)(n.h3,{id:"removefile",children:"RemoveFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod RemoveFile(pFileName) As %Status [ ZenMethod ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Remove a file from the mgr/Temp directory"}),"\n",(0,t.jsx)(n.h3,{id:"savetoserver",children:"saveToServer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveToServer(src, fileName) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client-side utility to send large data streams up to the server for external file storage Normally small data streams can simply be sent up to the host using simple POST requests but we have encountered issues with data loss using very large packets. To avoid this issue, this method breaks large data streams into universally 'safe' packet lengths and streams the parts up to the server where they are reassembled in the external file with the given fileName"}),"\n",(0,t.jsx)(n.h3,{id:"extractsvgsource",children:"extractSVGSource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod extractSVGSource(svg, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting relavent rendering information and store the result in an array of strings"}),"\n",(0,t.jsx)(n.h3,{id:"extractxslfosource",children:"extractXSLFOSource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod extractXSLFOSource(svg, intro, coda, maxWidth, maxHeight) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting relavent rendering information and store the result in an array of strings"}),"\n",(0,t.jsx)(n.h3,{id:"savedomtosvgstream",children:"saveDOMToSVGStream"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveDOMToSVGStream(svg, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting relavent rendering information and return the result in one big string."}),"\n",(0,t.jsx)(n.h3,{id:"savedomtoxslfostream",children:"saveDOMToXSLFOStream"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveDOMToXSLFOStream(svg, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting FO rendering information and return the result in one big string."}),"\n",(0,t.jsx)(n.h3,{id:"savedomtosvgfile",children:"saveDOMToSVGFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveDOMToSVGFile(svg, fileName, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM, the name of a server side file to create/overwrite, and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting relavent rendering information and store the result in a stand-alone file on the server."}),"\n",(0,t.jsx)(n.h3,{id:"savedomtoxslfofile",children:"saveDOMToXSLFOFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveDOMToXSLFOFile(svg, fileName, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM, the name of a server side file to create/overwrite, and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting XSLFO rendering information and store the result in a stand-alone file on the server."}),"\n",(0,t.jsx)(n.h3,{id:"getpagesetupdefaults",children:"getPageSetupDefaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getPageSetupDefaults() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return a javascript object that contains the various default values for page set-up and meta data rendering. Users can get this object, modify its values as desired and then pass it to the actual renderer methods"}),"\n",(0,t.jsx)(n.h3,{id:"reconciledefaults",children:"reconcileDefaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod reconcileDefaults(metaDataJS) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set up a default page setup object, incorporating user overrides, if defined"}),"\n",(0,t.jsx)(n.h3,{id:"savedomtoxslfile",children:"saveDOMToXSLFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveDOMToXSLFile(svg, metaDataJS) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an SVG DOM, the name of a server side file to create/overwrite, and (optional) introduction and coda strings containing SVG code snippets, walk the DOM extracting XSLFO rendering information and store the result as a full XSL-FO document on the server."}),"\n",(0,t.jsx)(n.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"makesvgfilename",children:"makeSVGFileName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod makeSVGFileName(name) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getsvgdomroot",children:"getSVGDOMRoot"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getSVGDOMRoot(image) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given some form of zen SVGComponent, return a pointer to the root of the embedded SVG document model"}),"\n",(0,t.jsx)(n.h3,{id:"savetosvgfile",children:"saveToSVGFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveToSVGFile(image, name, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"savetoxslfosnippet",children:"saveToXSLFOSnippet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveToXSLFOSnippet(image, name, intro, coda) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"savetoxslfile",children:"saveToXSLFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod saveToXSLFile(image, metaDataJS) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"iswhitespace",children:"isWhiteSpace"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod isWhiteSpace(str) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Quick check to test for embedded whitespace and control characters"}),"\n",(0,t.jsx)(n.h3,{id:"dumpsvgnode",children:"dumpSVGNode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dumpSVGNode(e, svgDoc, src, intro, coda, NSPrefix, maxWidth, maxHeight) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Given an element, an active SVG DOM, a syntax buffer, and optional introduction and coda strings, recursively extract all of the descendant node information from the DOM and copy it to the syntax buffer adding appropriate lexical and syntactic elements as needed.",(0,t.jsx)(n.br,{}),"\nIf intro and coda values have been provided, inject the contents of these strings into the syntax buffer immediately after the opening of the first encountered  tag and immediately before the close of that same tag, respectively."]}),"\n",(0,t.jsx)(n.h3,{id:"dumpsvgstyle",children:"dumpSVGStyle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dumpSVGStyle(svgDoc, src, NSPrefix) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given an active SVG DOM and a syntax buffer, extract all embedded stylesheets and copy them to the buffer adding appropriate lexical and syntactic elements as needed"}),"\n",(0,t.jsx)(n.h3,{id:"buildfostylestring",children:"buildFOStyleString"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod buildFOStyleString(jsDesc) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"buildfoblock",children:"buildFOBlock"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod buildFOBlock(jsDesc) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"buildfotable",children:"buildFOTable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod buildFOTable(jsDesc) [ Language = javascript ]\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>l});var t=a(96540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);