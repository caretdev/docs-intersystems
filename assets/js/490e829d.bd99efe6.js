"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[93662],{86527:(e,s,l)=>{l.r(s),l.d(s,{contentTitle:()=>n,default:()=>c,frontMatter:()=>t,toc:()=>i});var a=l(74848),r=l(28453);const t={pagination_prev:null,pagination_next:null},n="%ZEN.Report.Display.Chart.chart",i=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"DEFAULTMARKERSVISIBLE",id:"defaultmarkersvisible",level:3},{value:"DEFAULTASPECT",id:"defaultaspect",level:3},{value:"DEFAULTVIEWBOXWIDTH",id:"defaultviewboxwidth",level:3},{value:"DEFAULTVIEWBOXHEIGHT",id:"defaultviewboxheight",level:3},{value:"Properties",id:"properties",level:2},{value:"field",id:"field",level:3},{value:"group",id:"group",level:3},{value:"removeEmpty",id:"removeempty",level:3},{value:"backgroundStyle",id:"backgroundstyle",level:3},{value:"plotAreaStyle",id:"plotareastyle",level:3},{value:"title",id:"title",level:3},{value:"titleStyle",id:"titlestyle",level:3},{value:"titleX",id:"titlex",level:3},{value:"titleY",id:"titley",level:3},{value:"dataFields",id:"datafields",level:3},{value:"seriesCount",id:"seriescount",level:3},{value:"seriesSize",id:"seriessize",level:3},{value:"seriesColors",id:"seriescolors",level:3},{value:"seriesNames",id:"seriesnames",level:3},{value:"seriesGroup",id:"seriesgroup",level:3},{value:"dataGroup",id:"datagroup",level:3},{value:"markerShapes",id:"markershapes",level:3},{value:"markerScale",id:"markerscale",level:3},{value:"gridStyle",id:"gridstyle",level:3},{value:"height",id:"height",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"axisTitleStyle",id:"axistitlestyle",level:3},{value:"legendAutoPosition",id:"legendautoposition",level:3},{value:"legendVisible",id:"legendvisible",level:3},{value:"legendX",id:"legendx",level:3},{value:"legendY",id:"legendy",level:3},{value:"legendWidth",id:"legendwidth",level:3},{value:"legendHeight",id:"legendheight",level:3},{value:"legendStyle",id:"legendstyle",level:3},{value:"legendLabelStyle",id:"legendlabelstyle",level:3},{value:"marginTop",id:"margintop",level:3},{value:"marginBottom",id:"marginbottom",level:3},{value:"marginLeft",id:"marginleft",level:3},{value:"marginRight",id:"marginright",level:3},{value:"markersVisible",id:"markersvisible",level:3},{value:"plotToEdge",id:"plottoedge",level:3},{value:"bandUpper",id:"bandupper",level:3},{value:"bandLower",id:"bandlower",level:3},{value:"bandUpperStyle",id:"bandupperstyle",level:3},{value:"bandLowerStyle",id:"bandlowerstyle",level:3},{value:"ongetLabelX",id:"ongetlabelx",level:3},{value:"ongetLabelY",id:"ongetlabely",level:3},{value:"plotStyle",id:"plotstyle",level:3},{value:"markerStyle",id:"markerstyle",level:3},{value:"children",id:"children",level:3},{value:"plot",id:"plot",level:3},{value:"xAxis",id:"xaxis",level:3},{value:"yAxis",id:"yaxis",level:3},{value:"labelsVisible",id:"labelsvisible",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"SVGStyleDefault",id:"svgstyledefault",level:3},{value:"SVGStyleDefaultNoHTML5",id:"svgstyledefaultnohtml5",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawToHTML",id:"drawtohtml",level:3},{value:"%DrawToXSLFO",id:"drawtoxslfo",level:3},{value:"render",id:"render",level:3},{value:"calcLegendArea",id:"calclegendarea",level:3},{value:"renderLegend",id:"renderlegend",level:3},{value:"getSeriesColor",id:"getseriescolor",level:3},{value:"getColorCount",id:"getcolorcount",level:3},{value:"renderTitle",id:"rendertitle",level:3},{value:"renderSeriesGroup",id:"renderseriesgroup",level:3},{value:"renderSeriesGroupLabels",id:"renderseriesgrouplabels",level:3},{value:"renderSeries",id:"renderseries",level:3},{value:"renderSeriesLabels",id:"renderserieslabels",level:3},{value:"getXAxis",id:"getxaxis",level:3},{value:"getYAxis",id:"getyaxis",level:3},{value:"getXAxisType",id:"getxaxistype",level:3},{value:"getYAxisType",id:"getyaxistype",level:3},{value:"hasAxes",id:"hasaxes",level:3},{value:"useSumForRange",id:"usesumforrange",level:3},{value:"renderPlotArea",id:"renderplotarea",level:3},{value:"renderBands",id:"renderbands",level:3},{value:"renderXLabels",id:"renderxlabels",level:3},{value:"renderYLabels",id:"renderylabels",level:3},{value:"renderAxes",id:"renderaxes",level:3},{value:"writeWithParams",id:"writewithparams",level:3},{value:"writeWithParamsNoBase",id:"writewithparamsnobase",level:3},{value:"writeLoadParams",id:"writeloadparams",level:3},{value:"writeLoadParamsNoBase",id:"writeloadparamsnobase",level:3},{value:"OnSVGAttribution",id:"onsvgattribution",level:3},{value:"SvgPrefix",id:"svgprefix",level:3}];function d(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"zenreportdisplaychartchart",children:"%ZEN.Report.Display.Chart.chart"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.Chart.chart Extends (%ZEN.Report.Display.childrenNode, %ZEN.Report.Display.tableOutput) [ Deprecated, Inheritance = right, System = 4 ]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE As BOOLEAN = 1;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default value for the plotToEdge property."}),"\n",(0,a.jsx)(s.h3,{id:"defaultmarkersvisible",children:"DEFAULTMARKERSVISIBLE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTMARKERSVISIBLE As BOOLEAN = 0;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default value for the markersVisible property."}),"\n",(0,a.jsx)(s.h3,{id:"defaultaspect",children:"DEFAULTASPECT"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DEFAULTASPECT = "none";\n'})}),"\n",(0,a.jsx)(s.p,{children:"Do not worry about preserving the aspect ratio."}),"\n",(0,a.jsx)(s.h3,{id:"defaultviewboxwidth",children:"DEFAULTVIEWBOXWIDTH"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVIEWBOXWIDTH = 100;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default viewBoxWidth of this component. This is set to 100 to provide a fixed coordinate system for meters."}),"\n",(0,a.jsx)(s.h3,{id:"defaultviewboxheight",children:"DEFAULTVIEWBOXHEIGHT"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVIEWBOXHEIGHT = 100;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default viewBoxHeight of this component. This is set to 100 to provide a fixed coordinate system for meters."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"field",children:"field"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property field As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,a.jsx)(s.h3,{id:"group",children:"group"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property group As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,a.jsx)(s.h3,{id:"removeempty",children:"removeEmpty"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property removeEmpty As %ZEN.Datatype.boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,a.jsx)(s.h3,{id:"backgroundstyle",children:"backgroundStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property backgroundStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for chart background panel."}),"\n",(0,a.jsx)(s.h3,{id:"plotareastyle",children:"plotAreaStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotAreaStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for chart plot area panel."}),"\n",(0,a.jsx)(s.h3,{id:"title",children:"title"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property title As %ZEN.Datatype.caption;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Title to display for chart."}),"\n",(0,a.jsx)(s.h3,{id:"titlestyle",children:"titleStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for title text."}),"\n",(0,a.jsx)(s.h3,{id:"titlex",children:"titleX"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleX As %ZEN.Datatype.float [ InitialExpression = 50 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a title, x-position (within the chart coordinate space) of the title."}),"\n",(0,a.jsx)(s.h3,{id:"titley",children:"titleY"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleY As %ZEN.Datatype.float [ InitialExpression = 5 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a legend, y-position (within the chart coordinate space) of the title."}),"\n",(0,a.jsx)(s.h3,{id:"datafields",children:"dataFields"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property dataFields As %ZEN.Datatype.csv;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Comma-delimited list of fields to acquire data from. If dataGroup is provided, only the first data field is used."}),"\n",(0,a.jsx)(s.h3,{id:"seriescount",children:"seriesCount"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesCount As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Number of data series to display on this chart.",(0,a.jsx)(s.br,{}),'\nIf "", then this is computed automatically from the chart\'s data source.']}),"\n",(0,a.jsx)(s.h3,{id:"seriessize",children:"seriesSize"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesSize As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Number of items within each data series to display on this chart.",(0,a.jsx)(s.br,{}),'\nIf "", then this is computed automatically from the chart\'s data source.']}),"\n",(0,a.jsx)(s.h3,{id:"seriescolors",children:"seriesColors"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property seriesColors As %ZEN.Datatype.csv [ InitialExpression = "blue,red,green,yellow,orange,plum,purple" ];\n'})}),"\n",(0,a.jsx)(s.p,{children:'Comma-delimited list of CSS color values used for data series. The colors can be acquired dynamically by using the form "!fieldname".'}),"\n",(0,a.jsx)(s.h3,{id:"seriesnames",children:"seriesNames"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesNames As %ZEN.Datatype.csv;\n"})}),"\n",(0,a.jsx)(s.p,{children:'Comma-delimited list of names used to label each data series in the legend box. The series names can be acquired dynamically by beginning them with a "!". If seriesGroup is provided, only the first series name field is considered.'}),"\n",(0,a.jsx)(s.h3,{id:"seriesgroup",children:"seriesGroup"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesGroup As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Specifies the group the group that corresponds to the list of series for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"datagroup",children:"dataGroup"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property dataGroup As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Specifies the group the group that corresponds to the data elements for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"markershapes",children:"markerShapes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property markerShapes As %ZEN.Datatype.csv [ InitialExpression = "circle,up,down,square" ];\n'})}),"\n",(0,a.jsxs)(s.p,{children:["Comma-delimited list of marker shapes used for data series markers. Possible values are 'up','down','square','circle'.",(0,a.jsx)(s.br,{}),"\nThis only applies to charts that support markers."]}),"\n",(0,a.jsx)(s.h3,{id:"markerscale",children:"markerScale"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property markerScale As %ZEN.Datatype.float [ InitialExpression = 1 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Scaling applied to chart markers: A value of 1.0 (or '') will display markers with their default size. This only applies to charts that support markers."}),"\n",(0,a.jsx)(s.h3,{id:"gridstyle",children:"gridStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property gridStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Optional: default style applied to all grid line elements for this chart.",(0,a.jsx)(s.br,{}),"\nIf defined, this style overrides any styles define in the CSS style definition for the page, but is in turn overridden by any styles defined by a specific axis element."]}),"\n",(0,a.jsx)(s.h3,{id:"height",children:"height"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property height As %ZEN.Datatype.length;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Height of the chart within the report."}),"\n",(0,a.jsx)(s.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property labelStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: default style applied to all grid label elements for this chart. If defined, this style overrides any styles define in the CSS style definition for the page, but is in turn overridden by any styles defined by a specific axis element."}),"\n",(0,a.jsx)(s.h3,{id:"axistitlestyle",children:"axisTitleStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property axisTitleStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Optional: default style applied to axis titles for this chart.",(0,a.jsx)(s.br,{}),"\nThis is applied ",(0,a.jsx)(s.em,{children:"in addition"})," to the style supplied by labelStyle."]}),"\n",(0,a.jsx)(s.h3,{id:"legendautoposition",children:"legendAutoPosition"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendAutoPosition As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, auto-position the legend"}),"\n",(0,a.jsx)(s.h3,{id:"legendvisible",children:"legendVisible"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendVisible As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, display a legend for this chart."}),"\n",(0,a.jsx)(s.h3,{id:"legendx",children:"legendX"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendX As %ZEN.Datatype.float [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a legend, x-position (within the chart coordinate space) of legend box."}),"\n",(0,a.jsx)(s.h3,{id:"legendy",children:"legendY"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendY As %ZEN.Datatype.float [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a legend, y-position (within the chart coordinate space) of legend box."}),"\n",(0,a.jsx)(s.h3,{id:"legendwidth",children:"legendWidth"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendWidth As %ZEN.Datatype.float;\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a legend, width (within the chart coordinate space) of legend box. If not specified a default width will be used."}),"\n",(0,a.jsx)(s.h3,{id:"legendheight",children:"legendHeight"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendHeight As %ZEN.Datatype.float;\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this chart has a legend, height (within the chart coordinate space) of legend box. If not specified a default height (based on number of data series) will be used."}),"\n",(0,a.jsx)(s.h3,{id:"legendstyle",children:"legendStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for background of the legend box."}),"\n",(0,a.jsx)(s.h3,{id:"legendlabelstyle",children:"legendLabelStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendLabelStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for text within the legend box."}),"\n",(0,a.jsx)(s.h3,{id:"margintop",children:"marginTop"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginTop As %ZEN.Datatype.float [ InitialExpression = 6 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Margin (within the chart coordinate space) from top edge of chart to top edge of grid (plot area)."}),"\n",(0,a.jsx)(s.h3,{id:"marginbottom",children:"marginBottom"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginBottom As %ZEN.Datatype.float [ InitialExpression = 10 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Margin (within the chart coordinate space) from bottom edge of chart to bottom edge of grid (plot area)."}),"\n",(0,a.jsx)(s.h3,{id:"marginleft",children:"marginLeft"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginLeft As %ZEN.Datatype.float [ InitialExpression = 10 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Margin (within the chart coordinate space) from left edge of chart to left edge of grid (plot area)."}),"\n",(0,a.jsx)(s.h3,{id:"marginright",children:"marginRight"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginRight As %ZEN.Datatype.float [ InitialExpression = 2 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Margin (within the chart coordinate space) from right edge of chart to right edge of grid (plot area)."}),"\n",(0,a.jsx)(s.h3,{id:"markersvisible",children:"markersVisible"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property markersVisible As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTMARKERSVISIBLE} ];\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Specifies whether markers should be displayed for the data points within the line chart.",(0,a.jsx)(s.br,{}),"\nThis only appies to charts that display markers."]}),"\n",(0,a.jsx)(s.h3,{id:"plottoedge",children:"plotToEdge"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotToEdge As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTPLOTTOEDGE} ];\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Specifies how values should be plotted along a category axis. If true, plot the first and last values on the edges of the plotArea (as in a line chart). If false, plot values in the centers of each unit (as in a bar chart).",(0,a.jsx)(s.br,{}),"\nThis is specified by subclasses."]}),"\n",(0,a.jsx)(s.h3,{id:"bandupper",children:"bandUpper"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandUpper As %ZEN.Datatype.float;\n"})}),"\n",(0,a.jsx)(s.p,{children:"If defined, then a colored band (specified by bandUpperStyle) is displayed on the plot area covering the range greater than this value;"}),"\n",(0,a.jsx)(s.h3,{id:"bandlower",children:"bandLower"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLower As %ZEN.Datatype.float;\n"})}),"\n",(0,a.jsx)(s.p,{children:"If defined, then a colored band (specified by bandLowerStyle) is displayed on the plot area covering the range lower than this value;"}),"\n",(0,a.jsx)(s.h3,{id:"bandupperstyle",children:"bandUpperStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandUpperStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for upper band on plot area."}),"\n",(0,a.jsx)(s.h3,{id:"bandlowerstyle",children:"bandLowerStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLowerStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for upper band on plot area."}),"\n",(0,a.jsx)(s.h3,{id:"ongetlabelx",children:"ongetLabelX"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetLabelX As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["ongetLabelX event handler:",(0,a.jsx)(s.br,{}),"\nThis event handler, if defined, is called by the chart to get the text for a given label on the x axis."]}),"\n",(0,a.jsx)(s.h3,{id:"ongetlabely",children:"ongetLabelY"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetLabelY As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["ongetLabelY event handler:",(0,a.jsx)(s.br,{}),"\nThis event handler, if defined, is called by the chart to get the text for a given label on the y axis."]}),"\n",(0,a.jsx)(s.h3,{id:"plotstyle",children:"plotStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: default style applied to svg elements used for plotting data by this chart (such as the line in a line chart)."}),"\n",(0,a.jsx)(s.h3,{id:"markerstyle",children:"markerStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property markerStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Optional: style used for series markers."}),"\n",(0,a.jsx)(s.h3,{id:"children",children:"children"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property children As list Of %ZEN.Report.Display.Chart.axis(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,a.jsx)(s.p,{children:"Typical children property for a childrenNode, but every child must be an axis."}),"\n",(0,a.jsx)(s.h3,{id:"plot",children:"plot"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property plot As %ZEN.Report.Display.Chart.plot(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.p,{children:"Internal property used to keep track of plot information."}),"\n",(0,a.jsx)(s.h3,{id:"xaxis",children:"xAxis"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property xAxis As %ZEN.Report.Display.Chart.axis(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.p,{children:"Internal property that references this charts xaxis object."}),"\n",(0,a.jsx)(s.h3,{id:"yaxis",children:"yAxis"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property yAxis As %ZEN.Report.Display.Chart.axis(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.p,{children:"Internal property that references this charts yaxis object."}),"\n",(0,a.jsx)(s.h3,{id:"labelsvisible",children:"labelsVisible"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property labelsVisible As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, display axis labels for this chart (or slice labels in the case of a pie chart)."}),"\n",(0,a.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,a.jsx)(s.p,{children:"Placeholder for custom SVG styling"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyledefault",children:"SVGStyleDefault"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyleDefault\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default styling for charts. To add additional style, use the SVGStyle XData block"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyledefaultnohtml5",children:"SVGStyleDefaultNoHTML5"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyleDefaultNoHTML5\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default styling for charts. To add additional style, use the SVGStyle XData block"}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"drawtohtml",children:"%DrawToHTML"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToHTML(ByRef context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,a.jsx)(s.h3,{id:"drawtoxslfo",children:"%DrawToXSLFO"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToXSLFO(ByRef context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,a.jsx)(s.h3,{id:"render",children:"render"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method render(ByRef context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream, labelValues As %String)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"calclegendarea",children:"calcLegendArea"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method calcLegendArea(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Calc Legend Area"}),"\n",(0,a.jsx)(s.h3,{id:"renderlegend",children:"renderLegend"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderLegend(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream, labelValues As %String)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the legend for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"getseriescolor",children:"getSeriesColor"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesColor(series As %Integer) As %String\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the CSS color that should be used for the given series."}),"\n",(0,a.jsx)(s.h3,{id:"getcolorcount",children:"getColorCount"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getColorCount() As %Integer\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the number of colors provided."}),"\n",(0,a.jsx)(s.h3,{id:"rendertitle",children:"renderTitle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderTitle(ByRef context As %String, ByRef XSL As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the title for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"renderseriesgroup",children:"renderSeriesGroup"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeriesGroup(ByRef context As %String, XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the data series for this chart. This method renders the container for the data series and then invokes a sub-class specific renderSeries method."}),"\n",(0,a.jsx)(s.h3,{id:"renderseriesgrouplabels",children:"renderSeriesGroupLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeriesGroupLabels(ByRef context As %String, XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the data labels for this chart. This method renders the container for the data series and then invokes a sub-class specific renderSeries method."}),"\n",(0,a.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeries(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw data series for this chart. This is implemented by subclasses. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(s.h3,{id:"renderserieslabels",children:"renderSeriesLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeriesLabels(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw data label series for this chart. This is implemented by subclasses. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(s.h3,{id:"getxaxis",children:"getXAxis"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxis() As %ZEN.Report.Display.Chart.xaxis\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the x-axis definition for this chart."}),"\n",(0,a.jsx)(s.h3,{id:"getyaxis",children:"getYAxis"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxis() As %ZEN.Report.Display.Chart.yaxis\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the y-axis definition for this chart."}),"\n",(0,a.jsx)(s.h3,{id:"getxaxistype",children:"getXAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxisType()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of x axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"getyaxistype",children:"getYAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxisType()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of y axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"hasaxes",children:"hasAxes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasAxes()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Indicates that this chart has axes and associated grids A subclass may override this to turn off axis display."}),"\n",(0,a.jsx)(s.h3,{id:"usesumforrange",children:"useSumForRange"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method useSumForRange()\n"})}),"\n",(0,a.jsx)(s.p,{children:'This method returns true if data series should be summed when calculating data range for the chart. Typically a chart will return true if it is in "stacked" mode.'}),"\n",(0,a.jsx)(s.h3,{id:"renderplotarea",children:"renderPlotArea"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderPlotArea(context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the plot area of the chart."}),"\n",(0,a.jsx)(s.h3,{id:"renderbands",children:"renderBands"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderBands(context As %String, XSL As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the upper/lower bands for the chart."}),"\n",(0,a.jsx)(s.h3,{id:"renderxlabels",children:"renderXLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderXLabels(context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the labels for the x axis."}),"\n",(0,a.jsx)(s.h3,{id:"renderylabels",children:"renderYLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderYLabels(context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the labels for the y axis."}),"\n",(0,a.jsx)(s.h3,{id:"renderaxes",children:"renderAxes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderAxes(context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw the x and y axes and grid lines."}),"\n",(0,a.jsx)(s.h3,{id:"writewithparams",children:"writeWithParams"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method writeWithParams(ByRef XSL As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"writewithparamsnobase",children:"writeWithParamsNoBase"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method writeWithParamsNoBase(ByRef XSL As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"writeloadparams",children:"writeLoadParams"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method writeLoadParams(ByRef XSL As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"writeloadparamsnobase",children:"writeLoadParamsNoBase"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method writeLoadParamsNoBase(ByRef XSL As %GlobalCharacterStream)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"onsvgattribution",children:"OnSVGAttribution"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OnSVGAttribution(ByRef context As %String)\n"})}),"\n",(0,a.jsx)(s.h3,{id:"svgprefix",children:"SvgPrefix"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method SvgPrefix()\n"})})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,s,l)=>{l.d(s,{R:()=>n,x:()=>i});var a=l(96540);const r={},t=a.createContext(r);function n(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);