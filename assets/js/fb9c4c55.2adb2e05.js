"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[11558],{37676:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>o,frontMatter:()=>r,toc:()=>i});var s=n(74848),a=n(28453);const r={pagination_prev:null,pagination_next:null},l="%XML.TextReader",i=[{value:"Properties",id:"properties",level:2},{value:"AttributeCount",id:"attributecount",level:3},{value:"Depth",id:"depth",level:3},{value:"EOF",id:"eof",level:3},{value:"HasAttributes",id:"hasattributes",level:3},{value:"HasValue",id:"hasvalue",level:3},{value:"IsEmptyElement",id:"isemptyelement",level:3},{value:"LocalName",id:"localname",level:3},{value:"Name",id:"name",level:3},{value:"NamespaceUri",id:"namespaceuri",level:3},{value:"NodeType",id:"nodetype",level:3},{value:"Path",id:"path",level:3},{value:"ReadState",id:"readstate",level:3},{value:"Value",id:"value",level:3},{value:"attrseq",id:"attrseq",level:3},{value:"hasContent",id:"hascontent",level:3},{value:"seq",id:"seq",level:3},{value:"target",id:"target",level:3},{value:"priorpath",id:"priorpath",level:3},{value:"GlobalName",id:"globalname",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnClose",id:"onclose",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"AttributeCountGet",id:"attributecountget",level:3},{value:"DepthGet",id:"depthget",level:3},{value:"EOFGet",id:"eofget",level:3},{value:"HasAttributesGet",id:"hasattributesget",level:3},{value:"HasValueGet",id:"hasvalueget",level:3},{value:"IsEmptyElementGet",id:"isemptyelementget",level:3},{value:"LocalNameGet",id:"localnameget",level:3},{value:"MoveToAttributeIndex",id:"movetoattributeindex",level:3},{value:"MoveToAttributeName",id:"movetoattributename",level:3},{value:"MoveToContent",id:"movetocontent",level:3},{value:"MoveToElement",id:"movetoelement",level:3},{value:"NameGet",id:"nameget",level:3},{value:"NamespaceUriGet",id:"namespaceuriget",level:3},{value:"NodeTypeGet",id:"nodetypeget",level:3},{value:"ParseFile",id:"parsefile",level:3},{value:"ParseStream",id:"parsestream",level:3},{value:"ParseString",id:"parsestring",level:3},{value:"ParseURL",id:"parseurl",level:3},{value:"PathGet",id:"pathget",level:3},{value:"Read",id:"read",level:3},{value:"ReadStartElement",id:"readstartelement",level:3},{value:"ReadStateGet",id:"readstateget",level:3},{value:"Rewind",id:"rewind",level:3},{value:"ValueGet",id:"valueget",level:3},{value:"hasContentGet",id:"hascontentget",level:3}];function c(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"xmltextreader",children:"%XML.TextReader"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XML.TextReader Extends %RegisteredObject [ Not ProcedureBlock, ServerOnly = 1, System = 3 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"For details on using this class"}),", see ",(0,s.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25XML.TextReader",children:"Using %XML.TextReader"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"attributecount",children:"AttributeCount"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property AttributeCount As %Integer;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, Only applicable to element nodes. Returns the number of attributes on the current node."}),"\n",(0,s.jsx)(t.h3,{id:"depth",children:"Depth"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Depth As %Integer;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, The depth of the current node in the XML document."}),"\n",(0,s.jsx)(t.h3,{id:"eof",children:"EOF"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property EOF As %Boolean;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, true if the reader is positioned at the end of the stream; otherwise, false."}),"\n",(0,s.jsx)(t.h3,{id:"hasattributes",children:"HasAttributes"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property HasAttributes As %Boolean;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, Gets a value indicating whether the current node has any attributes. true if the current node has attributes; otherwise, false."}),"\n",(0,s.jsx)(t.h3,{id:"hasvalue",children:"HasValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property HasValue As %Boolean;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, returns true if the node on which the reader is currently positioned can have a Value; otherwise, false. The following lists node types and the corresponding values:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Node Type"})," :: ",(0,s.jsx)(t.strong,{children:"Value"})]}),"\n",(0,s.jsxs)(t.p,{children:["attribute :: The value of the attribute.",(0,s.jsx)(t.br,{}),"\ncomment :: The content of the comment.",(0,s.jsx)(t.br,{}),"\nprocessinginstruction :: The entire content of the processing instruction, excluding the target.",(0,s.jsx)(t.br,{}),"\nignorablewhitespace :: The white space between markup in a mixed content model.",(0,s.jsx)(t.br,{}),"\nchars :: The content of the text node.",(0,s.jsx)(t.br,{}),"\nstartprefixmapping :: The prefix and uri of the mapping",(0,s.jsx)(t.br,{}),"\nendprefixmappping :: The prefix of the mapping"]}),"\n",(0,s.jsx)(t.h3,{id:"isemptyelement",children:"IsEmptyElement"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property IsEmptyElement As %Boolean;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, returns true if the current element is empty"}),"\n",(0,s.jsx)(t.h3,{id:"localname",children:"LocalName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property LocalName As %String;\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Public property, The name of the current node with the prefix removed. For example, LocalName is book for the element ",(0,s.jsx)(t.a,{href:"bk:book",children:"bk:book"}),". The name returned is dependent on the NodeType of the node. The following node types return the listed values. All other node types return an empty string. Name: Attribute",(0,s.jsx)(t.br,{}),"\nValue: The name of the attribute."]}),"\n",(0,s.jsxs)(t.p,{children:["Name: Element",(0,s.jsx)(t.br,{}),"\nValue: The tag name."]}),"\n",(0,s.jsx)(t.h3,{id:"name",children:"Name"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Name As %String;\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Public property,The qualified name of the current node. For example, Name is bk:book for the element ",(0,s.jsx)(t.a,{href:"bk:book",children:"bk:book"}),". The name returned is dependent on the NodeType of the node. The following node types return the listed values. All other node types return an empty string. Name: Attribute",(0,s.jsx)(t.br,{}),"\nValue: The name of the attribute."]}),"\n",(0,s.jsxs)(t.p,{children:["Name: Element",(0,s.jsx)(t.br,{}),"\nValue: The tag name."]}),"\n",(0,s.jsxs)(t.p,{children:["Name: EntityReference",(0,s.jsx)(t.br,{}),"\nValue: The name of the entity referenced."]}),"\n",(0,s.jsxs)(t.p,{children:["Name: ProcessingInstruction",(0,s.jsx)(t.br,{}),"\nValue: The target of the processing instruction."]}),"\n",(0,s.jsxs)(t.p,{children:["Name: StartPrefixMapping",(0,s.jsx)(t.br,{}),"\nValue: The prefix of the mapping and the uri mapped, delimited by a single space"]}),"\n",(0,s.jsxs)(t.p,{children:["Name: EndPrefixMapping",(0,s.jsx)(t.br,{}),"\nValue: The prefix of the mapping"]}),"\n",(0,s.jsx)(t.h3,{id:"namespaceuri",children:"NamespaceUri"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property NamespaceUri As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, The namespace URI of the current node; otherwise an empty string. This property is relevant to Element and Attribute nodes only."}),"\n",(0,s.jsx)(t.h3,{id:"nodetype",children:"NodeType"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property NodeType As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, contains the node type of the current node as indicated by the following list:"}),"\n",(0,s.jsxs)(t.p,{children:["attribute",(0,s.jsx)(t.br,{}),"\ncdata",(0,s.jsx)(t.br,{}),"\ncomment",(0,s.jsx)(t.br,{}),"\nprocessinginstruction",(0,s.jsx)(t.br,{}),"\nignorablewhitespace",(0,s.jsx)(t.br,{}),"\nchars",(0,s.jsx)(t.br,{}),"\nelement",(0,s.jsx)(t.br,{}),"\nentity",(0,s.jsx)(t.br,{}),"\nendelement"]}),"\n",(0,s.jsx)(t.h3,{id:"path",children:"Path"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Path As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, contains the current path to the containing element"}),"\n",(0,s.jsx)(t.h3,{id:"readstate",children:"ReadState"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property ReadState As %String [ InitialExpression = "Initial" ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"Public property, returns the current read state of the reader The following table lists the states and their meanings"}),"\n",(0,s.jsx)(t.p,{children:"EndOfFile: The end of the file has been reached successfully."}),"\n",(0,s.jsx)(t.p,{children:"Initial: The Read method has not been called."}),"\n",(0,s.jsx)(t.p,{children:"Interactive: The Read method has been called. Additional methods may be called on the reader."}),"\n",(0,s.jsx)(t.h3,{id:"value",children:"Value"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Value As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Public property, returns the value of the current node. The following types have a value to return:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Node Type"})," :: ",(0,s.jsx)(t.strong,{children:"Value"})]}),"\n",(0,s.jsx)(t.p,{children:"attribute :: The value of the attribute."}),"\n",(0,s.jsx)(t.p,{children:"cdata :: The content of the CDATA section."}),"\n",(0,s.jsx)(t.p,{children:"comment :: The content of the comment."}),"\n",(0,s.jsx)(t.p,{children:"processinginstruction :: The entire content of the processing instruction, excluding the target."}),"\n",(0,s.jsx)(t.p,{children:"ignorablewhitespace :: The white space between markup in a mixed content model."}),"\n",(0,s.jsx)(t.p,{children:"chars :: The content of the text node."}),"\n",(0,s.jsx)(t.p,{children:"entity :: The expanded content of the entity"}),"\n",(0,s.jsx)(t.h3,{id:"attrseq",children:"attrseq"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property attrseq As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"hascontent",children:"hasContent"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property hasContent As %String [ Private ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"seq",children:"seq"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property seq As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"target",children:"target"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property target As %Integer [ Private ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"priorpath",children:"priorpath"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property priorpath As %String [ Private ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"globalname",children:"GlobalName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GlobalName As %String;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status\n"})}),"\n",(0,s.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %OnNew(pInitval As %Integer, pGlobalName As %String = "^IRIS.Temp") As %Status\n'})}),"\n",(0,s.jsx)(t.h3,{id:"attributecountget",children:"AttributeCountGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method AttributeCountGet() As %Integer\n"})}),"\n",(0,s.jsx)(t.p,{children:"AttributeCount Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"depthget",children:"DepthGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method DepthGet() As %Integer\n"})}),"\n",(0,s.jsx)(t.p,{children:"Depth Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"eofget",children:"EOFGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method EOFGet() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"EOF Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"hasattributesget",children:"HasAttributesGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method HasAttributesGet() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"HasAttributes Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"hasvalueget",children:"HasValueGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method HasValueGet() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"HasValue Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"isemptyelementget",children:"IsEmptyElementGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsEmptyElementGet() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"IsEmptyElement Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"localnameget",children:"LocalNameGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method LocalNameGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"LocalName implementation"}),"\n",(0,s.jsx)(t.h3,{id:"movetoattributeindex",children:"MoveToAttributeIndex"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method MoveToAttributeIndex(pIndex As %String) As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Moves to the attribute with the specified index. returns true on success false otherwise"}),"\n",(0,s.jsx)(t.h3,{id:"movetoattributename",children:"MoveToAttributeName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method MoveToAttributeName(pName As %String, pUri As %String = "") As %Boolean\n'})}),"\n",(0,s.jsx)(t.h3,{id:"movetocontent",children:"MoveToContent"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method MoveToContent() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Checks whether the current node is a content (non-white space text, CDATA, Element, EndElement, EntityReference, or EndEntity) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following types: processinginstruction, comment, ignorablewhitespace,endelement"}),"\n",(0,s.jsx)(t.h3,{id:"movetoelement",children:"MoveToElement"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method MoveToElement() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Moves to the associated element when the current node is of type attribute"}),"\n",(0,s.jsx)(t.h3,{id:"nameget",children:"NameGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NameGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"Name implementation"}),"\n",(0,s.jsx)(t.h3,{id:"namespaceuriget",children:"NamespaceUriGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NamespaceUriGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"NamespaceUri Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"nodetypeget",children:"NodeTypeGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NodeTypeGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"NodeType implementation"}),"\n",(0,s.jsx)(t.h3,{id:"parsefile",children:"ParseFile"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ParseFile(Filename As %String, Output TextReader As %XML.TextReader, Resolver As %XML.SAX.EntityResolver = {$$$NULLOREF}, Flags As %Integer = {$$$SAXDEFAULTS}, Mask As %Integer = {$$$SAXCONTENTEVENTS}, SchemaSpec As %String = "", KeepWhiteSpace As %Boolean = 0, GlobalName As %String = "^||IRIS.Temp") As %Status [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method takes the name of a file to be parsed and a reference to a variable which, upon success, will be set to a new instance of an %XML.TextReader. Optionally, additional arguments specifying an Entity resolver, Flags , Mask and SchemaSpec be passed. Please see class %XML.SAX.Parser for a full description of these optional parameters."}),"\n",(0,s.jsx)(t.h3,{id:"parsestream",children:"ParseStream"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ParseStream(Stream As %AbstractStream, Output TextReader As %XML.TextReader, Resolver As %XML.SAX.EntityResolver = {$$$NULLOREF}, Flags As %Integer = {$$$SAXDEFAULTS}, Mask As %Integer = {$$$SAXCONTENTEVENTS}, SchemaSpec As %String = "", KeepWhiteSpace As %Boolean = 0, GlobalName As %String = "^||IRIS.Temp") As %Status [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method takes a Stream to be parsed and a reference to a variable which, upon success, will be set to a new instance of an %XML.TextReader. Optionally, additional arguments specifying an Entity resolver, Flags , Mask and SchemaSpec be passed. Please see class %XML.SAX.Parser for a full description of these optional parameters."}),"\n",(0,s.jsx)(t.h3,{id:"parsestring",children:"ParseString"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ParseString(String As %String, Output TextReader As %XML.TextReader, Resolver As %XML.SAX.EntityResolver = {$$$NULLOREF}, Flags As %Integer = {$$$SAXDEFAULTS}, Mask As %Integer = {$$$SAXCONTENTEVENTS}, SchemaSpec As %String = "", KeepWhiteSpace As %Boolean = 0, GlobalName As %String = "^||IRIS.Temp") As %Status [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method takes a String to be parsed and a reference to a variable which, upon success, will be set to a new instance of an %XML.TextReader. Optionally, additional arguments specifying an Entity resolver, Flags , Mask and SchemaSpec be passed. Please see class %XML.SAX.Parser for a full description of these optional parameters."}),"\n",(0,s.jsx)(t.h3,{id:"parseurl",children:"ParseURL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ParseURL(URL As %String, Output TextReader As %XML.TextReader, Resolver As %XML.SAX.EntityResolver = {$$$NULLOREF}, Flags As %Integer = {$$$SAXDEFAULTS}, Mask As %Integer = {$$$SAXCONTENTEVENTS}, SchemaSpec As %String = "", KeepWhiteSpace As %Boolean = 0, pHttpRequest As %Net.HttpRequest = {$$$NULLOREF}, GlobalName As %String = "^||IRIS.Temp") As %Status [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method takes a URL to be parsed and a reference to a variable which, upon success, will be set to a new instance of an %XML.TextReader. Optionally, additional arguments specifying an Entity resolver, Flags , Mask and SchemaSpec be passed. Please see class %XML.SAX.Parser for a full description of these optional parameters."}),"\n",(0,s.jsx)(t.h3,{id:"pathget",children:"PathGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method PathGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"Implementation of Path property."}),"\n",(0,s.jsx)(t.h3,{id:"read",children:"Read"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Read() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Reads the next node from the stream. Returns true if the next node was read successfully; false if there are no more nodes to read. When an XmlReader is first created and initialized, there is no information available. You must call Read to read the first node. Each node has a particular type. There is not necessarily a one to one correspondence between the number of nodes in a document and the number of identifiable xml components. For example,the cdata, comment and chars nodes contain textual information which corresponds to their XML equivalent in the document. However a single XML component of type chars may be spread over a number of nodes of the same type. This is entirely due to the way the XML engine processes the document. Therefore if you do a read and the node type is character, for example, then you have to continue reading until the node type changes to ensure that you have seen all the character data."}),"\n",(0,s.jsx)(t.h3,{id:"readstartelement",children:"ReadStartElement"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method ReadStartElement(pName As %String, pUri As %String = "") As %Boolean\n'})}),"\n",(0,s.jsx)(t.p,{children:"Advances to the first element that matches the provided name and (optional) namespace uri Returns true on success, false if the element could not be matched"}),"\n",(0,s.jsx)(t.h3,{id:"readstateget",children:"ReadStateGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ReadStateGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"ReadState Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"rewind",children:"Rewind"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Rewind()\n"})}),"\n",(0,s.jsx)(t.p,{children:"Resets the reader to the initial state"}),"\n",(0,s.jsx)(t.h3,{id:"valueget",children:"ValueGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ValueGet() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"Value Implementation"}),"\n",(0,s.jsx)(t.h3,{id:"hascontentget",children:"hasContentGet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method hasContentGet() As %Boolean [ Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"HasContent Implementation"})]})}function o(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(96540);const a={},r=s.createContext(a);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);