"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[91077],{88175:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>i,toc:()=>o});var s=r(74848),n=r(28453);const i={pagination_prev:null,pagination_next:null},a="%MV.Adaptor",o=[{value:"Parameters",id:"parameters",level:2},{value:"MVENABLED",id:"mvenabled",level:3},{value:"MVFILENAME",id:"mvfilename",level:3},{value:"MVCLEARDICT",id:"mvcleardict",level:3},{value:"MVREPOPULATE",id:"mvrepopulate",level:3},{value:"MVCREATE",id:"mvcreate",level:3},{value:"MVAUTOLOCK",id:"mvautolock",level:3},{value:"Properties",id:"properties",level:2},{value:"%RECORD",id:"record",level:3},{value:"Methods",id:"methods",level:2},{value:"%RECORDGetStored",id:"recordgetstored",level:3},{value:"%GetMVIndex",id:"getmvindex",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"mvadaptor",children:"%MV.Adaptor"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %MV.Adaptor [ Abstract, CompileAfter = %MV.PropertyParameters, Not ProcedureBlock, PropertyClass = %MV.PropertyParameters, ServerOnly = 1, System = 4 ]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"mvenabled",children:"MVENABLED"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVENABLED = 1;\n"})}),"\n",(0,s.jsx)(t.p,{children:"MVENABLED controls storage compiler and MV projection behavior. If MVENABLED is not true then storage will not use mv storage by default and no MV projection will be built. Generally, MVENABLED is true when inherited from %MV.Adaptor although some classes that extend %MV.Adaptor might opt to override it."}),"\n",(0,s.jsx)(t.h3,{id:"mvfilename",children:"MVFILENAME"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVFILENAME As STRING;\n"})}),"\n",(0,s.jsx)(t.p,{children:"This is the name of the file in the multvalue account/namespace where the class containing this projection should project itself. The DICTionary of this file will be populated with the dictionary elements described by the properties of the class according to their types (A,D,S) and conversions , attribute 8, itype and so on."}),"\n",(0,s.jsx)(t.h3,{id:"mvcleardict",children:"MVCLEARDICT"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVCLEARDICT As BOOLEAN = 0;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set this parameter to True if a recompile of the class that contains the projection should cause the DICT of the projected file to be cleared before it is repopulated. This parameter has no effect if the parameter REPOPULATE is set to False."}),"\n",(0,s.jsx)(t.h3,{id:"mvrepopulate",children:"MVREPOPULATE"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVREPOPULATE As BOOLEAN = 1;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set this parameter to True if the DICT of the file that this projection models should be repopulated with the dictionary elements described by the class, if that class is recompiled. The parameter CLEARDICT is only considered if this parameter is set to True. The effect of setting this parameter to True and CLEARDICT to False (the default settings) is that any existing dictionary elements that correspond to properties in the class containing this projection, will be overwritten by definitions produced from the properties of the class. Any existing entries in the DICTionary will be left in tact providing their names do not conflict with the property names (or the paramaeter MVNAME of the property if this is defined)."}),"\n",(0,s.jsx)(t.h3,{id:"mvcreate",children:"MVCREATE"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVCREATE As BOOLEAN = 1;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set this parameter to True if the file that this projection represents should be created via CREATE-FILE if it does not yet exist in the namespace defined by the MVNAMESPACE parameter."}),"\n",(0,s.jsx)(t.h3,{id:"mvautolock",children:"MVAUTOLOCK"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MVAUTOLOCK As BOOLEAN = 0;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set this parameter to True to prevent the modification of this class by the MultiValue Utilities: CREATE.INDEX, DELETE.INDEX and PROTOCLASS."}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"record",children:"%RECORD"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %RECORD As %RawString [ Private, SqlComputeCode = { set {*}=##class({%%CLASSNAME}).%RECORDGetStored({%%ID})}, SqlComputed, Transient ];\n"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"recordgetstored",children:"%RECORDGetStored"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %RECORDGetStored(id As %String) As %RawString [ CodeMode = generator ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getmvindex",children:"%GetMVIndex"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetMVIndex(indexName As %String) As %RawString [ CodeMode = generator ]\n"})})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var s=r(96540);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);