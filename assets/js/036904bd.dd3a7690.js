"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[70509],{51857:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>l,toc:()=>a});var t=n(74848),r=n(28453);const l={pagination_prev:null,pagination_next:null},i="%DeepSee.Query.constant",a=[{value:"Properties",id:"properties",level:2},{value:"label",id:"label",level:3},{value:"formatString",id:"formatstring",level:3},{value:"finalValue",id:"finalvalue",level:3},{value:"origValue",id:"origvalue",level:3},{value:"type",id:"type",level:3},{value:"Methods",id:"methods",level:2},{value:"%ResolveValue",id:"resolvevalue",level:3},{value:"%GetType",id:"gettype",level:3},{value:"%ToString",id:"tostring",level:3},{value:"%ProcessAxes",id:"processaxes",level:3},{value:"%ProcessFilter",id:"processfilter",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"deepseequeryconstant",children:"%DeepSee.Query.constant"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Query.constant Extends node [ System = 3 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This class defines a constant within a DeepSee query."}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"label",children:"label"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property label As %DeepSee.Datatype.string(XMLPROJECTION = "attribute") [ InitialExpression = "Constant" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Axis label used for this constant."}),"\n",(0,t.jsx)(s.h3,{id:"formatstring",children:"formatString"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property formatString As %String(MAXLEN = 255, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Format string to apply to this member."}),"\n",(0,t.jsx)(s.h3,{id:"finalvalue",children:"finalValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property finalValue As %Boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal flag used for subquery functions--true means that the subquery has run and this value is the result of the query."}),"\n",(0,t.jsx)(s.h3,{id:"origvalue",children:"origValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property origValue As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"If the value is a finalValue, this is used to remember the original value of the constant."}),"\n",(0,t.jsx)(s.h3,{id:"type",children:"type"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property type As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsxs)(s.p,{children:['If known, this is the type of the constant: "string" or "number".',(0,t.jsx)(s.br,{}),'\nThis is used to keep track of string numerics: "123" v 123.']}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"resolvevalue",children:"%ResolveValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ResolveValue() As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If our value is a named parameter, resolve it.",(0,t.jsx)(s.br,{}),"\nWe do this as soon as we are first asked for our value and then we hold onto the resolved value."]}),"\n",(0,t.jsx)(s.h3,{id:"gettype",children:"%GetType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetType() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the type of this node."}),"\n",(0,t.jsx)(s.h3,{id:"tostring",children:"%ToString"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ToString(Output pSC As %Status) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Convert this node to its text representation."}),"\n",(0,t.jsx)(s.h3,{id:"processaxes",children:"%ProcessAxes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessAxes(pCube As %String, pKey As %String, ByRef pNodeNo As %Integer, Output pNewNodeNo As %Integer, pParent As %Integer, pVisible As %Boolean = 1) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Execute and build the axes output for this constant."}),"\n",(0,t.jsx)(s.h3,{id:"processfilter",children:"%ProcessFilter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessFilter(ByRef pFilterTree As %List, pCube As %String, ByRef pNodeNo As %Integer, Output pNewNodeNo As %Integer, pParent As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Process the filter output for this constant."})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var t=n(96540);const r={},l=t.createContext(r);function i(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);