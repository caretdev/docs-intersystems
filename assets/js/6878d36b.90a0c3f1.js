"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[55983],{14050:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>a,default:()=>l,frontMatter:()=>o,toc:()=>c});var n=t(74848),r=t(28453);const o={pagination_prev:null,pagination_next:null},a="%XGEN.AbstractGroup",c=[{value:"Properties",id:"properties",level:2},{value:"children",id:"children",level:3},{value:"skipChildren",id:"skipchildren",level:3},{value:"Methods",id:"methods",level:2},{value:"%GenerateCode",id:"generatecode",level:3},{value:"%OnGenerateCode",id:"ongeneratecode",level:3},{value:"%OnBeforeGenerateCode",id:"onbeforegeneratecode",level:3},{value:"%OnAfterGenerateCode",id:"onaftergeneratecode",level:3}];function i(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"xgenabstractgroup",children:"%XGEN.AbstractGroup"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %XGEN.AbstractGroup [ Abstract, PropertyClass = %XGEN.PropertyParameters, System = 3 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," This class is included because it is needed by other parts of the library. You should not use this or any other class within this package within your applications as a future version will be incompatible. If you are interested in this functionality please contact InterSystems."]}),"\n",(0,n.jsxs)(s.p,{children:["This abstract class is the basis for all groups within XGEN (such as documents or sequences).",(0,n.jsx)(s.br,{}),"\nSee %XGEN.AbstractDocument for an overview of XGEN.",(0,n.jsx)(s.br,{}),"\nUser classes should not extend this class, instead they should extend either %XGEN.AbstractDocument or %XGEN.AbstractSequence."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"children",children:"children"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property children As list Of AbstractNode(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,n.jsx)(s.p,{children:"This is the set of child nodes that belong to this sequence."}),"\n",(0,n.jsx)(s.h3,{id:"skipchildren",children:"skipChildren"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property skipChildren As %Boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"If this transient property is true, then the children of the group will not be processed. This provides a way for a subclass to disable processing of a group."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"generatecode",children:"%GenerateCode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GenerateCode(pTargetClass As %Dictionary.CompiledClass, pCode As %Stream.TmpCharacter, pDocument As %XGEN.AbstractDocument) As %Status [ Final ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Loop over the members of this sequence and fire their %GenerateCode methods.",(0,n.jsx)(s.br,{}),"\nSubclasses can customize the behavior using the %OnBeforeGenerateCode and %OnAfterGenerateCode callback methods."]}),"\n",(0,n.jsx)(s.h3,{id:"ongeneratecode",children:"%OnGenerateCode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnGenerateCode(pTargetClass As %Dictionary.CompiledClass, pCode As %Stream.TmpCharacter, pDocument As %XGEN.AbstractDocument) As %Status [ Final ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback does not apply to groups, so we stub it out here."}),"\n",(0,n.jsx)(s.h3,{id:"onbeforegeneratecode",children:"%OnBeforeGenerateCode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnBeforeGenerateCode(pTargetClass As %Dictionary.CompiledClass, pCode As %Stream.TmpCharacter, pDocument As %XGEN.AbstractDocument) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is called when a class containing an XGEN document is compiled. It is called ",(0,n.jsx)(s.em,{children:"before"})," the %GenerateCode method processes its children.",(0,n.jsx)(s.br,{}),"\npTargetClass is the class that contains the XGEN document.",(0,n.jsx)(s.br,{}),"\npCode is a stream containing the generated code.",(0,n.jsx)(s.br,{}),"\npDocument is the top-level XGEN document object that contains this node.",(0,n.jsx)(s.br,{}),"\nA subclass can provide an implementation of this method that will generate specific lines of code."]}),"\n",(0,n.jsx)(s.h3,{id:"onaftergeneratecode",children:"%OnAfterGenerateCode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterGenerateCode(pTargetClass As %Dictionary.CompiledClass, pCode As %Stream.TmpCharacter, pDocument As %XGEN.AbstractDocument) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is called when a class containing an XGEN document is compiled. It is called ",(0,n.jsx)(s.em,{children:"after"})," the %GenerateCode method processes its children.",(0,n.jsx)(s.br,{}),"\npTargetClass is the class that contains the XGEN document.",(0,n.jsx)(s.br,{}),"\npCode is a stream containing the generated code.",(0,n.jsx)(s.br,{}),"\npDocument is the top-level XGEN document object that contains this node.",(0,n.jsx)(s.br,{}),"\nA subclass can provide an implementation of this method that will generate specific lines of code."]})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>c});var n=t(96540);const r={},o=n.createContext(r);function a(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);