"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[34930],{13395:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>r,default:()=>d,frontMatter:()=>a,toc:()=>l});var t=s(74848),i=s(28453);const a={pagination_prev:null,pagination_next:null},r="%ZEN.Component.object",l=[{value:"Parameters",id:"parameters",level:2},{value:"NAMESPACE",id:"namespace",level:3},{value:"XMLIGNORENULL",id:"xmlignorenull",level:3},{value:"XMLFORMAT",id:"xmlformat",level:3},{value:"XMLIGNOREINVALIDATTRIBUTE",id:"xmlignoreinvalidattribute",level:3},{value:"DEFAULTVISIBLE",id:"defaultvisible",level:3},{value:"INCLUDEFILES",id:"includefiles",level:3},{value:"SYSMODULE",id:"sysmodule",level:3},{value:"MODULE",id:"module",level:3},{value:"USECOMMONDIRECTORY",id:"usecommondirectory",level:3},{value:"POSTCOMPILEACTIONS",id:"postcompileactions",level:3},{value:"Properties",id:"properties",level:2},{value:"%page",id:"page",level:3},{value:"parent",id:"parent",level:3},{value:"window",id:"window",level:3},{value:"composite",id:"composite",level:3},{value:"tuple",id:"tuple",level:3},{value:"%condition",id:"condition",level:3},{value:"%resource",id:"resource",level:3},{value:"%import",id:"import",level:3},{value:"%includeFiles",id:"includefiles-1",level:3},{value:"index",id:"index",level:3},{value:"id",id:"id",level:3},{value:"name",id:"name",level:3},{value:"aux",id:"aux",level:3},{value:"visible",id:"visible",level:3},{value:"renderFlag",id:"renderflag",level:3},{value:"onupdate",id:"onupdate",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"SVGStyle",id:"svgstyle",level:3},{value:"SVGDef",id:"svgdef",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"%OnAddToPage",id:"onaddtopage",level:3},{value:"%OnAddToPageBefore",id:"onaddtopagebefore",level:3},{value:"%OnAddToPageAfter",id:"onaddtopageafter",level:3},{value:"%DrawStyleHTML",id:"drawstylehtml",level:3},{value:"%DrawStyleSVG",id:"drawstylesvg",level:3},{value:"%DrawSVGDef",id:"drawsvgdef",level:3},{value:"%DrawComponentHTML",id:"drawcomponenthtml",level:3},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"renderFlagSet",id:"renderflagset",level:3},{value:"renderSVG",id:"rendersvg",level:3},{value:"%ForceClientRender",id:"forceclientrender",level:3},{value:"%Attr",id:"attr",level:3},{value:"%Eval",id:"eval",level:3},{value:"%EvalC",id:"evalc",level:3},{value:"%ConstructClone",id:"constructclone",level:3},{value:"%NormalizeObject",id:"normalizeobject",level:3},{value:"%AddToSaveSet",id:"addtosaveset",level:3},{value:"%RemoveFromSaveSet",id:"removefromsaveset",level:3},{value:"%ValidateObject",id:"validateobject",level:3},{value:"%BindExport",id:"bindexport",level:3},{value:"XMLDTD",id:"xmldtd",level:3},{value:"XMLExport",id:"xmlexport",level:3},{value:"XMLExportToString",id:"xmlexporttostring",level:3},{value:"XMLExportToStream",id:"xmlexporttostream",level:3},{value:"%GetSuperClassList",id:"getsuperclasslist",level:3},{value:"%GetIncludeInfo",id:"getincludeinfo",level:3},{value:"%GetIncludeFiles",id:"getincludefiles",level:3},{value:"%GetClassDepth",id:"getclassdepth",level:3},{value:"%GetXMLName",id:"getxmlname",level:3},{value:"%DrawClassDefinition",id:"drawclassdefinition",level:3},{value:"%GetClassCRC",id:"getclasscrc",level:3},{value:"%DrawJSSerialize",id:"drawjsserialize",level:3},{value:"%DrawJSGetSettings",id:"drawjsgetsettings",level:3},{value:"%DrawObjectProperties",id:"drawobjectproperties",level:3},{value:"%ObjectSynch",id:"objectsynch",level:3},{value:"%ZENDeserialize",id:"zendeserialize",level:3},{value:"%OnZENDeserialize",id:"onzendeserialize",level:3},{value:"%OnDrawObjectProperties",id:"ondrawobjectproperties",level:3},{value:"%OnObjectSynch",id:"onobjectsynch",level:3},{value:"%GenerateCode",id:"generatecode",level:3},{value:"%QuoteValue",id:"quotevalue",level:3},{value:"%QuoteValueL10N",id:"quotevaluel10n",level:3},{value:"%MakeId",id:"makeid",level:3},{value:"%Self",id:"self",level:3},{value:"%GetEventHandlers",id:"geteventhandlers",level:3},{value:"findElement",id:"findelement",level:3},{value:"onSerialize",id:"onserialize",level:3},{value:"makeId",id:"makeid-1",level:3},{value:"getSettings",id:"getsettings",level:3},{value:"invokeSuper",id:"invokesuper",level:3},{value:"fireOnUpdateEvent",id:"fireonupdateevent",level:3},{value:"onupdateHandler",id:"onupdatehandler",level:3},{value:"onCreate",id:"oncreate",level:3},{value:"onDelete",id:"ondelete",level:3},{value:"render",id:"render",level:3},{value:"renderContents",id:"rendercontents",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"onunloadHandler",id:"onunloadhandler",level:3},{value:"getType",id:"gettype",level:3},{value:"isOfType",id:"isoftype",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"getProperty",id:"getproperty",level:3},{value:"%DrawJSStrings",id:"drawjsstrings",level:3}];function o(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zencomponentobject",children:"%ZEN.Component.object"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.object Extends (%RegisteredObject, %XML.Adaptor) [ CompileAfter = %ZEN.Generator, DependsOn = %ZEN.Generator, Deprecated, PropertyClass = %ZEN.componentParameters, ServerOnly = 1, System = 3 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Base class for all ZEN components. An object, by itself, can be used to create objects that can be shared between a server and a browser client environment. All visual component, are derived from component, which is a subclass of object."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.intersystems.com/zen";\n'})}),"\n",(0,t.jsx)(n.p,{children:"This is the XML namespace used for library components."}),"\n",(0,t.jsx)(n.h3,{id:"xmlignorenull",children:"XMLIGNORENULL"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNORENULL = 1;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"xmlformat",children:"XMLFORMAT"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter XMLFORMAT = "Literal";\n'})}),"\n",(0,t.jsx)(n.p,{children:'If XMLFORMAT="Literal", then only support for literal format import and export is generated.'}),"\n",(0,t.jsx)(n.h3,{id:"xmlignoreinvalidattribute",children:"XMLIGNOREINVALIDATTRIBUTE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNOREINVALIDATTRIBUTE = 0;\n"})}),"\n",(0,t.jsx)(n.p,{children:"By setting this to 0, we disallow use of invalid attribute names in Zen XML documents."}),"\n",(0,t.jsx)(n.h3,{id:"defaultvisible",children:"DEFAULTVISIBLE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVISIBLE As BOOLEAN = 0;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Subclasses can set this to change default visibilty for a component."}),"\n",(0,t.jsx)(n.h3,{id:"includefiles",children:"INCLUDEFILES"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter INCLUDEFILES As STRING;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["CSV list of additional include files (either .js or .css) that should be included when this component is used on a page.",(0,t.jsx)(n.br,{}),'\nBy default, the file extension (.js or .css) is used to determine whether an item in the list is a script include or a style include. You can override this behavior by adding the terms "script:" or "style:" to the beginning of the file name or names. This prefix is not used as part of the include filename.']}),"\n",(0,t.jsx)(n.h3,{id:"sysmodule",children:"SYSMODULE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter SYSMODULE As STRING [ Internal ];\n"})}),"\n",(0,t.jsxs)(n.p,{children:['If set, this indicates that this system component should be placed in the given "module". A module is a grouping of components within the same class package that share common include (js or css) files. Note that certain root classes are implicitly placed within the "core" module.',(0,t.jsx)(n.br,{}),"\nClasses outside of the Zen library should not set this, they should use the MODULE instead."]}),"\n",(0,t.jsx)(n.h3,{id:"module",children:"MODULE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter MODULE As STRING;\n"})}),"\n",(0,t.jsx)(n.p,{children:'If set, this indicates that this system component should be placed in the given "module". A module is a grouping of components within the same class package that share common include (js or css) files.'}),"\n",(0,t.jsx)(n.h3,{id:"usecommondirectory",children:"USECOMMONDIRECTORY"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter USECOMMONDIRECTORY As BOOLEAN = 0;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If true, then the include files generated for this component, are placed in the common /csp/broker directory and not the local /csp/*namespace* directory.",(0,t.jsx)(n.br,{}),"\nThis is intended for use with packages that are mapped so as to be visible to every namespace.",(0,t.jsx)(n.br,{}),"\nAll Zen classes within the same package must have the same value for this parameter. It is the developer's responsibility to ensure this."]}),"\n",(0,t.jsx)(n.h3,{id:"postcompileactions",children:"POSTCOMPILEACTIONS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter POSTCOMPILEACTIONS As STRING = "schema,HTML";\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This is a comma-delimited list of which post-compile actions this component is registered for. If this value is defined, then certain actions are carried out after this class is compiled.",(0,t.jsx)(n.br,{}),"\nThe available choices are:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"schema" - update the schema used by Studio Assist when editing page definitions.'}),"\n",(0,t.jsx)(n.li,{children:'"HTML" - Regenerate any JS or CSS files associated with this class.'}),"\n",(0,t.jsx)(n.li,{children:'"SVG" - Regenerate any JS or SVG CSS files associated with this class.'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"page",children:"%page"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property %page As %ZEN.Component.page(XMLPROJECTION = "none") [ Final ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This projection is used to keep track of when Zen components are compiled.",(0,t.jsx)(n.br,{}),"\nThis is an internal value. Link back to page that contains this component.",(0,t.jsx)(n.br,{}),"\nApplications should not set this property."]}),"\n",(0,t.jsx)(n.h3,{id:"parent",children:"parent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property parent As %ZEN.Component.object(XMLPROJECTION = "none", ZENSETTING = 0) [ Final ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Link to the component that contains this object or somehow caused this component to be placed on the page.",(0,t.jsx)(n.br,{}),"\nFor visual components, this is typically set to the group that contains the component.",(0,t.jsx)(n.br,{}),"\nFor auxiliary components, this is set to the object that referred to this component in the page definition.",(0,t.jsx)(n.br,{}),"\nApplications should not set this property."]}),"\n",(0,t.jsx)(n.h3,{id:"window",children:"window"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property window As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENCLIENTONLY = 1, ZENSETTING = 0) [ Final ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This is a client-only property that refers to the JavaScript Window object on which this object was created.",(0,t.jsx)(n.br,{}),"\nApplications should not set this property."]}),"\n",(0,t.jsx)(n.h3,{id:"composite",children:"composite"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property composite As %ZEN.Component.group(XMLPROJECTION = "none", ZENSETTING = 0) [ Final ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"For components that are created as part of a composite component, this is a link to the composite that contains this object. Applications should not set this property."}),"\n",(0,t.jsx)(n.h3,{id:"tuple",children:"tuple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property tuple As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Final ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Special property indicating which ",(0,t.jsx)(n.em,{children:"tuple"})," of a repeating group is rendering this component. This property only has meaning when a component is part of a repeating group. Applications should not set this property."]}),"\n",(0,t.jsx)(n.h3,{id:"condition",children:"%condition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property %condition As %ZEN.Datatype.expression(XMLNAME = "condition");\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Server-side expression that determines if this component should be added to the set of page components.",(0,t.jsx)(n.br,{}),"\nThis property is not available on the client."]}),"\n",(0,t.jsx)(n.h3,{id:"resource",children:"%resource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property %resource As %ZEN.Datatype.resource(XMLNAME = "resource");\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Resource name that determines if this component should be added to the set of page components. If specified, current user must hold USE privilege on this resource or the component will not be added to the set of page components.",(0,t.jsx)(n.br,{}),"\nThis property is not available on the client."]}),"\n",(0,t.jsx)(n.h3,{id:"import",children:"%import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property %import As %ZEN.Datatype.string(MAXLEN = 1000, XMLNAME = "import");\n'})}),"\n",(0,t.jsx)(n.p,{children:"CSV list of additional component classes that this components needs to have defined on the client. Use this for cases where the client will need classes that are not directly used in the original object tree. This property is not available on the client."}),"\n",(0,t.jsx)(n.h3,{id:"includefiles-1",children:"%includeFiles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property %includeFiles As %ZEN.Datatype.string(MAXLEN = 1000, XMLPROJECTION = "none") [ InitialExpression = {..#INCLUDEFILES} ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["CSV list of additional include files (either .js or .css) that should be included when this component is used on a page.",(0,t.jsx)(n.br,{}),"\nThis property is not available on the client."]}),"\n",(0,t.jsx)(n.h3,{id:"index",children:"index"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property index As %Integer(XMLPROJECTION = "none", ZENSETTING = 0) [ Final ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["System-assigned index number used internally to identify this component.",(0,t.jsx)(n.br,{}),"\nApplications can use but should not set this property."]}),"\n",(0,t.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property id As %ZEN.Datatype.id [ Final ];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is a unique identifier that is used to distinguish this object from other objects within the same Zen page.",(0,t.jsx)(n.br,{}),"\nEvery object within a Zen page must have a unique id value. You can find an object with a given id value using the page object's getComponentById method."]}),"\n",(0,t.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property name As %ZEN.Datatype.name [ Final ];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Name of this object.",(0,t.jsx)(n.br,{}),"\nThis is primarily used to specify the name used for identifying a control within a form. It is also used to identify values that are submitted by controls on a form.",(0,t.jsx)(n.br,{}),"\nIt is defined here for convenience."]}),"\n",(0,t.jsx)(n.h3,{id:"aux",children:"aux"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property aux As %ZEN.Datatype.string [ Final ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is an auxiliary property that is provided as a place to hold additional user-defined values for components. This property is not used by the ZEN framework."}),"\n",(0,t.jsx)(n.h3,{id:"visible",children:"visible"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property visible As %Boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = {..#DEFAULTVISIBLE} ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This property indicates whether a component is visible and thus layed out. This is a class-wide property set by the object constructor.",(0,t.jsx)(n.br,{}),"\nApplications should not set this property; Sub-classes can set this via the DEFAULTVISIBLE."]}),"\n",(0,t.jsx)(n.h3,{id:"renderflag",children:"renderFlag"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property renderFlag As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ Final, InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Internal property.",(0,t.jsx)(n.br,{}),"\nThis internal value is used to trigger a client-side rendering of a component when it is modified on the server."]}),"\n",(0,t.jsx)(n.h3,{id:"onupdate",children:"onupdate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property onupdate As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(n.p,{children:"onupdate event handler: This event is fired after the properties of the object have been updated from the server."}),"\n",(0,t.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defines the CSS style sheet used by an object/component."}),"\n",(0,t.jsx)(n.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defines SVG-specific CSS style sheet used by an object/component."}),"\n",(0,t.jsx)(n.h3,{id:"svgdef",children:"SVGDef"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"XData SVGDef\n"})}),"\n",(0,t.jsx)(n.p,{children:"Defines any SVG def elements used by an object/component."}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Constructor for Zen objects.",(0,t.jsx)(n.br,{}),"\nIf subclasses override %OnNew, they should make sure to invoke this using #super."]}),"\n",(0,t.jsx)(n.h3,{id:"onaddtopage",children:"%OnAddToPage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnAddToPage(Output pNotify As %Boolean) As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = (%OnAddToPageAfter, %OnAddToPageBefore), Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nThis is used to fire the add-to-page callback method. On return, pNotify will be true if this component has an %OnAddToPageAfter method."]}),"\n",(0,t.jsx)(n.h3,{id:"onaddtopagebefore",children:"%OnAddToPageBefore"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnAddToPageBefore() As %Status [ Abstract ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"If implemented, this callback method is called at page render-time when this component is added to a page but before any of its children have been created."}),"\n",(0,t.jsx)(n.h3,{id:"onaddtopageafter",children:"%OnAddToPageAfter"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnAddToPageAfter() As %Status [ Abstract ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"If implemented, this callback method is called at page render-time after this component has been added to a page and after any of its children have been created but before the %DrawHTML methods are called."}),"\n",(0,t.jsx)(n.h3,{id:"drawstylehtml",children:"%DrawStyleHTML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawStyleHTML(pLevel As %Integer = 2) [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nWrite out HTML/CSS style sheet defined for this component.",(0,t.jsx)(n.br,{}),'\npLevel indicates what level of CSS to render. If level is 2 then the XData block, "Style", is used. If level is 3 then the XData block, "CSS3Style", is used.']}),"\n",(0,t.jsx)(n.h3,{id:"drawstylesvg",children:"%DrawStyleSVG"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawStyleSVG() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nWrite out SVG/CSS style sheet defined for this component",(0,t.jsx)(n.br,{}),"\nThis is based on the XData block, SVGStyle."]}),"\n",(0,t.jsx)(n.h3,{id:"drawsvgdef",children:"%DrawSVGDef"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawSVGDef() [ CodeMode = objectgenerator, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nWrite out SVG Def elements defined for this component",(0,t.jsx)(n.br,{}),"\nThis is based on the XData block, SVGDef."]}),"\n",(0,t.jsx)(n.h3,{id:"drawcomponenthtml",children:"%DrawComponentHTML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawComponentHTML() [ Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw enclosing div element and then draw contents within it.",(0,t.jsx)(n.br,{}),"\nImplemented by subclass."]}),"\n",(0,t.jsx)(n.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Static HTML display method: draw the BODY of this component as HTML.",(0,t.jsx)(n.br,{}),"\nSubclasses implement this in order to render the static HTML contents of a component."]}),"\n",(0,t.jsx)(n.h3,{id:"renderflagset",children:"renderFlagSet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method renderFlagSet(%val) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set handler for renderFlag property."}),"\n",(0,t.jsx)(n.h3,{id:"rendersvg",children:"renderSVG"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod renderSVG(document, parent) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This method is only needed for SVG components. It is defined here so that we can detect if HTML components are used within an SVG context and throw an error."}),"\n",(0,t.jsx)(n.h3,{id:"forceclientrender",children:"%ForceClientRender"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ForceClientRender() [ Final ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Call this method to force the client to call this object's renderContents if it has one."}),"\n",(0,t.jsx)(n.h3,{id:"attr",children:"%Attr"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %Attr(pName As %String, pValue As %String) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'Utility method used when writing out HTML attribute values. Given an attribute name and value, this returns the string attr=""value"" with value HTML escaped. If value is "", then "" is returned.'}),"\n",(0,t.jsx)(n.h3,{id:"eval",children:"%Eval"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method %Eval(pExpr As %String, pEscape As %String = "") As %String\n'})}),"\n",(0,t.jsx)(n.p,{children:"Utility method; takes a property value containing a #()# expression and evaluates it. This is called by the $$$ZENVAL macro."}),"\n",(0,t.jsx)(n.h3,{id:"evalc",children:"%EvalC"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod %EvalC(pExpr As %String, pEscape As %String = "") As %String\n'})}),"\n",(0,t.jsx)(n.h3,{id:"constructclone",children:"%ConstructClone"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ConstructClone(deep As %Boolean = 0, ByRef cloned As %String, location As %String) As %RegisteredObject\n"})}),"\n",(0,t.jsx)(n.h3,{id:"normalizeobject",children:"%NormalizeObject"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %NormalizeObject() As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"addtosaveset",children:"%AddToSaveSet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method %AddToSaveSet(depth As %Integer = 3, refresh As %Integer = 0, norecurseon As %String = "") As %Status\n'})}),"\n",(0,t.jsx)(n.h3,{id:"removefromsaveset",children:"%RemoveFromSaveSet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %RemoveFromSaveSet() As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"validateobject",children:"%ValidateObject"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ValidateObject(force As %Integer = 0) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"bindexport",children:"%BindExport"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %BindExport(dev As %String, ByRef Seen As %String, RegisterOref As %Boolean, AllowedDepth As %Integer, AllowedCapacity As %Integer) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"xmldtd",children:"XMLDTD"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod XMLDTD(top As %String, format As %String, input As %Boolean, ByRef dtdlist) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"xmlexport",children:"XMLExport"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method XMLExport(top As %String, format As %String, namespaces As %XML.Namespaces, attrs, createId As %String, typeAttr As %String, ByRef oreflist, ByRef idlist, initialIndent As %String, local As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"xmlexporttostring",children:"XMLExportToString"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method XMLExportToString(ByRef export As %String, top As %String, format As %String, namespaces As %XML.Namespaces, attrs, createId As %String, typeAttr As %String, ByRef oreflist, ByRef idlist, initialIndent As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"xmlexporttostream",children:"XMLExportToStream"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method XMLExportToStream(ByRef export As %Stream.Object, top As %String, format As %String, namespaces As %XML.Namespaces, attrs, createId As %String, typeAttr As %String, ByRef oreflist, ByRef idlist, initialIndent As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getsuperclasslist",children:"%GetSuperClassList"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %GetSuperClassList(ByRef pList) As %String [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nConstruct a list of component super classes of this class as csv list (include this class as well).",(0,t.jsx)(n.br,{}),"\nThis is used at page render-time to build the list of classes needed by the client page."]}),"\n",(0,t.jsx)(n.h3,{id:"getincludeinfo",children:"%GetIncludeInfo"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %GetIncludeInfo(ByRef pModules As %String, Output pHasJS As %Boolean, Output pCSSType As %String, Output pInline As %Boolean) [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nReturns information about the generated include files for this class.",(0,t.jsx)(n.br,{}),"\npModules",(0,t.jsx)(n.br,{}),"\npHasJS indicates that a JS file needs to be generated.",(0,t.jsx)(n.br,{}),"\npCSSType indicate the type of CSS needed, if any.",(0,t.jsx)(n.br,{}),"\nThis takes one of the following values:",(0,t.jsx)(n.br,{}),'\n"HTML" - HTML CSS',(0,t.jsx)(n.br,{}),'\n"SVG" - SVG CSS',(0,t.jsx)(n.br,{}),'\n"" - No style sheet is defined for this class.',(0,t.jsx)(n.br,{}),"\npInline is set true if this component's style and js should be written inline as part of a page."]}),"\n",(0,t.jsx)(n.h3,{id:"getincludefiles",children:"%GetIncludeFiles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod %GetIncludeFiles(pMode As %String = "HTML") [ CodeMode = objectgenerator, Final, GenerateAfter = %GetIncludeInfo, Internal ]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nReturn the list of include files needed by this component.",(0,t.jsx)(n.br,{}),"\nThis is used to (1) generate include files for components, and (2) determine which files need to be included by a page using this component.",(0,t.jsx)(n.br,{}),"\nOn return, %zenIncludeJS and %zenIncludeCSS will contain the list of files in the form:",(0,t.jsx)(n.br,{}),"\npFiles(depth,order,package,filename) = $LB(type,localdepth)",(0,t.jsx)(n.br,{}),'\nWhere type can be "user" (not generated), "js","html" (css), or "svg" (css).',(0,t.jsx)(n.br,{}),'\nIf pMode is specified it indicates which kinds of files should be served: "HTML" or "SVG" (for non-inline SVG).']}),"\n",(0,t.jsx)(n.h3,{id:"getclassdepth",children:"%GetClassDepth"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %GetClassDepth() As %Integer [ CodeMode = objectgenerator, Final, GenerateAfter = %GetIncludeInfo, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nReturn the inheritance depth of this class. That is, the number of classes from this one to the root object class."]}),"\n",(0,t.jsx)(n.h3,{id:"getxmlname",children:"%GetXMLName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %GetXMLName(Output pNamespace As %String, Output pName As %String) As %Integer [ CodeMode = objectgenerator, Final ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return the XML namespace and element name for this component. These are return via the parameters pNamespace and pName respectively."}),"\n",(0,t.jsx)(n.h3,{id:"drawclassdefinition",children:"%DrawClassDefinition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawClassDefinition() As %Status [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw JavaScript needed to define client-side class for this component."]}),"\n",(0,t.jsx)(n.h3,{id:"getclasscrc",children:"%GetClassCRC"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %GetClassCRC() As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %DrawClassDefinition, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nGet the CRC for this class. This is used to test for client/server mismatch issues. This needs to be a method to avoid class compiler issues."]}),"\n",(0,t.jsx)(n.h3,{id:"drawjsserialize",children:"%DrawJSSerialize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawJSSerialize() As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %DrawClassDefinition, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw JavaScript serialize method for this component."]}),"\n",(0,t.jsx)(n.h3,{id:"drawjsgetsettings",children:"%DrawJSGetSettings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawJSGetSettings() As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %DrawClassDefinition, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw JavaScript getSettings method for this component."]}),"\n",(0,t.jsx)(n.h3,{id:"drawobjectproperties",children:"%DrawObjectProperties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawObjectProperties() As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %OnDrawObjectProperties, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw JavaScript needed to initialize properties for client side of this object"]}),"\n",(0,t.jsx)(n.h3,{id:"objectsynch",children:"%ObjectSynch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ObjectSynch() As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %OnObjectSynch, Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nDraw JavaScript needed to synchronize client object to match state of the server object.",(0,t.jsx)(n.br,{}),'\nThis is basically a specialized version of %DrawObjectProperties that is used to send a changes in a server object to a client object. It works by detecting if a property has changed and then applies the value to the client via JS. It either sets the property directly, or calls the client setProperty method if the property is marked as a "setting".']}),"\n",(0,t.jsx)(n.h3,{id:"zendeserialize",children:"%ZENDeserialize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ZENDeserialize(pState As %String, ByRef pObjSet) As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = (%OnZENDeserialize, %OnObjectSynch, %DrawClassDefinition), Internal ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nServer-side method to deserialize a serialized state into an instance of this object. This object has to be created first as this is an instance method."]}),"\n",(0,t.jsx)(n.h3,{id:"onzendeserialize",children:"%OnZENDeserialize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnZENDeserialize() As %Status [ Abstract ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"If defined, this callback is invoked by the %ZENDeserialize method."}),"\n",(0,t.jsx)(n.h3,{id:"ondrawobjectproperties",children:"%OnDrawObjectProperties"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawObjectProperties() [ Abstract ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"If defined, this callback is invoked by the %DrawObjectProperties method."}),"\n",(0,t.jsx)(n.h3,{id:"onobjectsynch",children:"%OnObjectSynch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnObjectSynch() As %Status [ Abstract ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"If defined, this callback is invoked by the %ObjectSynch method."}),"\n",(0,t.jsx)(n.h3,{id:"generatecode",children:"%GenerateCode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method %GenerateCode(pCode As %CharacterStream, pLocalize As %Boolean, ByRef pURIList, pCollection As %String, pLevel As %Integer = 1, pMode As %String = "page", pKey As %String = "", pParentVar As %String = "unknown") [ CodeMode = objectgenerator, Internal ]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Internal method.",(0,t.jsx)(n.br,{}),"\nCalled during page compilation to generate code to construct an instance of this object. If pLocalize is true, then all localizable values will use $$$Text to generate localization information. pMode indicates what type of code to generate:",(0,t.jsx)(n.br,{}),'\nIf "page", then generate contents of a page.',(0,t.jsx)(n.br,{}),'\nIf "composite", then generate contents of a composite component.',(0,t.jsx)(n.br,{}),"\npKey, if defined indicates we are inserting into a parent array usng this key. If pKey = $C(0), then we should set our instance into an object property of our parent."]}),"\n",(0,t.jsx)(n.h3,{id:"quotevalue",children:"%QuoteValue"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %QuoteValue(pValue As %String) [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Take a value string and return a quoted string."}),"\n",(0,t.jsx)(n.h3,{id:"quotevaluel10n",children:"%QuoteValueL10N"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %QuoteValueL10N(pValue As %String)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Take a value string and return a quoted string wrapped within a $$$Text macro.",(0,t.jsx)(n.br,{}),"\nIf value starts and ends with #( )#, then return an expression"]}),"\n",(0,t.jsx)(n.h3,{id:"makeid",children:"%MakeId"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %MakeId(pSubID As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Server-side utility method that constructs a component-specific id value for use in assigning ids to HTML/XML elements. If we are part of a repeating group, the tuple number is included in the id as well."}),"\n",(0,t.jsx)(n.h3,{id:"self",children:"%Self"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %Self() As %String [ CodeMode = expression ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Return a JS expression that will evaluate to *this* component. This is used when rendering HTML for a component and that HTML needs to refer back to *this* component for a JS expression (such as an event handler):",(0,t.jsx)(n.br,{}),'\nonclick="#(..%Self())#.someMethod();"']}),"\n",(0,t.jsx)(n.h3,{id:"geteventhandlers",children:"%GetEventHandlers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetEventHandlers(ByRef pIgnore) As %String [ CodeMode = objectgenerator ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This helper method returns a string of HTML/XML attributes that will define all event handler properties defined for a control.",(0,t.jsx)(n.br,{}),"\npIgnore is an array of names of events that should be ignored.",(0,t.jsx)(n.br,{}),"\nIf the properties W3CEVENT parameter is set to 0, then it will be ignored."]}),"\n",(0,t.jsx)(n.h3,{id:"findelement",children:"findElement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod findElement(subid) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client-side utility method that finds an HTML element with a component-specific id."}),"\n",(0,t.jsx)(n.h3,{id:"onserialize",children:"onSerialize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onSerialize() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This client event, if present, is fired before a component is serialized. This gives the component a chance to make sure that its client-side variables are up-to-date."}),"\n",(0,t.jsx)(n.h3,{id:"makeid-1",children:"makeId"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod makeId(subid) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["client-side utility method that constructs a component-specific id value for use in assigning ids to HTML elements.",(0,t.jsx)(n.br,{}),"\nThis is simply a client-side version of %MakeId."]}),"\n",(0,t.jsx)(n.h3,{id:"getsettings",children:"getSettings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getSettings(settings) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Client-side method that returns a list of this component's run-time settable properties. These are the properties that the page designer Inspector allows a user to edit.",(0,t.jsx)(n.br,{}),"\nThis list is returned by inserting the property names in the associative array (object) settings. Note: this method is automatically generated by DrawClassDefinition."]}),"\n",(0,t.jsx)(n.h3,{id:"invokesuper",children:"invokeSuper"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod invokeSuper(method, args) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Invoke the superclass method method of the current object with arguments args."}),"\n",(0,t.jsx)(n.h3,{id:"fireonupdateevent",children:"fireOnUpdateEvent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod fireOnUpdateEvent() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is called when an object is updated from the server. It will invoke the class-defined and user-defined onupdate event if defined."}),"\n",(0,t.jsx)(n.h3,{id:"onupdatehandler",children:"onupdateHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onupdateHandler() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This client method, if present, is fired when the object is updated from the server."}),"\n",(0,t.jsx)(n.h3,{id:"oncreate",children:"onCreate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCreate() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This client method, if present, is called when this component is instantiated. This allows for any additional client-side initialization for this object.",(0,t.jsx)(n.br,{}),"\nNote that this ",(0,t.jsx)(n.em,{children:"must"})," be a client-side method."]}),"\n",(0,t.jsx)(n.h3,{id:"ondelete",children:"onDelete"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onDelete() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This client method, if present, is called when this component is removed from the page. This allows for any additional client-side clean up for this object.",(0,t.jsx)(n.br,{}),"\nNote that this ",(0,t.jsx)(n.em,{children:"must"})," be a client-side method."]}),"\n",(0,t.jsx)(n.h3,{id:"render",children:"render"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod render() [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This causes a component that draws its contents dynamically to (re)create its contents.",(0,t.jsx)(n.br,{}),"\nThis is a wrapper for the renderContents method (if present). Applications should call render to display dynamic components, but implement renderContents to implement dynamic components."]}),"\n",(0,t.jsx)(n.h3,{id:"rendercontents",children:"renderContents"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod renderContents() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This method, if present, is called when this component is placed on a client page.",(0,t.jsx)(n.br,{}),"\nThis is used by components that render themselves using client-side, dynamic content (i.e., instead of using the %DrawHTML method)."]}),"\n",(0,t.jsx)(n.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This client event, if present, is fired when the page is loaded."}),"\n",(0,t.jsx)(n.h3,{id:"onunloadhandler",children:"onunloadHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onunloadHandler() [ Abstract, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This client event, if present, is fired when the page is unloaded. If this method returns a string value, then that is used as the return value of the HTML page's onbeforeunload handler (if more than one component returns a string, the first one encountered is used)."}),"\n",(0,t.jsx)(n.h3,{id:"gettype",children:"getType"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getType() [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'Returns the component type of this object (e.g. "form", or "control").'}),"\n",(0,t.jsx)(n.h3,{id:"isoftype",children:"isOfType"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod isOfType(type) [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'Returns true if this object is of the given component type or is subclassed from the given component type. (e.g. "form", or "control")'}),"\n",(0,t.jsx)(n.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Set the value of a named property (i.e., a setting).",(0,t.jsx)(n.br,{}),"\nSubclasses override this for cases where setting a property requires some additional side effect to happen.",(0,t.jsx)(n.br,{}),"\nThe optional value2 argument is used in cases, such as collections, where a key and a value are needed. In this case value is used as a key and value2 is the value.",(0,t.jsx)(n.br,{}),"\nReturn true if the property was explicitly handled and false for the default behavior (setting the property directly)."]}),"\n",(0,t.jsx)(n.h3,{id:"getproperty",children:"getProperty"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getProperty(property, key) As %String [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Return the value of a named property (i.e. a setting).",(0,t.jsx)(n.br,{}),"\nReturns null if this is not a property of this object.",(0,t.jsx)(n.br,{}),"\nkey is an optional argument used for properties (such as collections) that may need a key to find a specific value."]}),"\n",(0,t.jsx)(n.h3,{id:"drawjsstrings",children:"%DrawJSStrings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DrawJSStrings(ByRef pVisited As %String) As %Status [ CodeMode = objectgenerator, ForceGenerate, GenerateAfter = %DrawClassDefinition ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Render list of localized javascript strings for this object."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(96540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);