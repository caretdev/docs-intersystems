"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[18137],{19818:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>r,toc:()=>c});var i=s(74848),n=s(28453);const r={pagination_prev:null,pagination_next:null},a="%iKnow.Matching.MatchingAPI",c=[{value:"Parameters",id:"parameters",level:2},{value:"MatchSourcesEXP",id:"matchsourcesexp",level:3},{value:"MatchSourceEXP",id:"matchsourceexp",level:3},{value:"InvalidateMatchingResultsEXP",id:"invalidatematchingresultsexp",level:3},{value:"GetMatchElementsRT",id:"getmatchelementsrt",level:3},{value:"GetMatchesByEntOccRT",id:"getmatchesbyentoccrt",level:3},{value:"GetMatchesByPathRT",id:"getmatchesbypathrt",level:3},{value:"GetMatchesBySentenceRT",id:"getmatchesbysentencert",level:3},{value:"GetMatchesByCrcOccRT",id:"getmatchesbycrcoccrt",level:3},{value:"GetMatchesBySourceRT",id:"getmatchesbysourcert",level:3},{value:"GetMatchesBySourceIdRT",id:"getmatchesbysourceidrt",level:3},{value:"GetDictionaryMatchesRT",id:"getdictionarymatchesrt",level:3},{value:"GetDictionaryMatchesByIdRT",id:"getdictionarymatchesbyidrt",level:3},{value:"GetTotalDictionaryScoresBySourceRT",id:"gettotaldictionaryscoresbysourcert",level:3},{value:"GetTotalDictionaryScoresBySourceIdRT",id:"gettotaldictionaryscoresbysourceidrt",level:3},{value:"GetTotalItemScoresBySourceRT",id:"gettotalitemscoresbysourcert",level:3},{value:"GetTotalItemScoresBySourceIdRT",id:"gettotalitemscoresbysourceidrt",level:3},{value:"GetTopItemsRT",id:"gettopitemsrt",level:3},{value:"GetTopTermsByItemIdRT",id:"gettoptermsbyitemidrt",level:3},{value:"GetErrorsRT",id:"geterrorsrt",level:3},{value:"ClearLogsEXP",id:"clearlogsexp",level:3},{value:"GetMatchesByDictionaryItemURIRT",id:"getmatchesbydictionaryitemurirt",level:3},{value:"GetMatchesByDictionaryItemIdRT",id:"getmatchesbydictionaryitemidrt",level:3},{value:"GetMatchesByDictionaryTermIdRT",id:"getmatchesbydictionarytermidrt",level:3},{value:"GetTopMatchesByDictionaryItemURIRT",id:"gettopmatchesbydictionaryitemurirt",level:3},{value:"GetTopMatchesByDictionaryItemIdRT",id:"gettopmatchesbydictionaryitemidrt",level:3},{value:"GetTopSourcesByDictionaryRT",id:"gettopsourcesbydictionaryrt",level:3},{value:"Methods",id:"methods",level:2},{value:"MatchEntityUniques",id:"matchentityuniques",level:3},{value:"MatchEntityUniquesJob",id:"matchentityuniquesjob",level:3},{value:"CheckDictionaryElementMatches",id:"checkdictionaryelementmatches",level:3},{value:"MatchSources",id:"matchsources",level:3},{value:"MergeTempGlobals",id:"mergetempglobals",level:3},{value:"MatchSource",id:"matchsource",level:3},{value:"MatchSourceJob",id:"matchsourcejob",level:3},{value:"ProcessCandidates",id:"processcandidates",level:3},{value:"GetCachedElement",id:"getcachedelement",level:3},{value:"GetCachedTerm",id:"getcachedterm",level:3},{value:"GetCachedTermLength",id:"getcachedtermlength",level:3},{value:"ProcessAggregate",id:"processaggregate",level:3},{value:"UpdateBitStrings",id:"updatebitstrings",level:3},{value:"InvalidateMatchingResults",id:"invalidatematchingresults",level:3},{value:"InvalidateMatchingResultsInternal",id:"invalidatematchingresultsinternal",level:3},{value:"IndexDictionaryTerms",id:"indexdictionaryterms",level:3},{value:"IndexDictionaryTermsJob",id:"indexdictionarytermsjob",level:3},{value:"GetHighlightedSentences",id:"gethighlightedsentences",level:3},{value:"GetMatchElements",id:"getmatchelements",level:3},{value:"GetMatchesByEntOcc",id:"getmatchesbyentocc",level:3},{value:"GetMatchesByPath",id:"getmatchesbypath",level:3},{value:"GetMatchesBySentence",id:"getmatchesbysentence",level:3},{value:"GetMatchesByCrcOcc",id:"getmatchesbycrcocc",level:3},{value:"GetMatchesBySource",id:"getmatchesbysource",level:3},{value:"GetMatchesBySourceId",id:"getmatchesbysourceid",level:3},{value:"GetDictionaryMatches",id:"getdictionarymatches",level:3},{value:"GetDictionaryMatchesById",id:"getdictionarymatchesbyid",level:3},{value:"GetTotalDictionaryScoresBySource",id:"gettotaldictionaryscoresbysource",level:3},{value:"GetTotalDictionaryScoresBySourceId",id:"gettotaldictionaryscoresbysourceid",level:3},{value:"GetTotalItemScoresBySource",id:"gettotalitemscoresbysource",level:3},{value:"GetTotalItemScoresBySourceId",id:"gettotalitemscoresbysourceid",level:3},{value:"GetNonMatchedDictsForSource",id:"getnonmatcheddictsforsource",level:3},{value:"GetTopItems",id:"gettopitems",level:3},{value:"GetTopTermsByItemId",id:"gettoptermsbyitemid",level:3},{value:"BuildInvertedEntUniMatchedIndex",id:"buildinvertedentunimatchedindex",level:3},{value:"GetAllDictsAsList",id:"getalldictsaslist",level:3},{value:"GetAllDictsAsArray",id:"getalldictsasarray",level:3},{value:"GetCurrentDictElems",id:"getcurrentdictelems",level:3},{value:"IsFullyMatched",id:"isfullymatched",level:3},{value:"GetErrors",id:"geterrors",level:3},{value:"ClearLogs",id:"clearlogs",level:3},{value:"ClearTemps",id:"cleartemps",level:3},{value:"GetMatchesByDictionaryItemURI",id:"getmatchesbydictionaryitemuri",level:3},{value:"GetMatchesByDictionaryItemId",id:"getmatchesbydictionaryitemid",level:3},{value:"GetMatchesByDictionaryTermId",id:"getmatchesbydictionarytermid",level:3},{value:"GetTopMatchesByDictionaryItemURI",id:"gettopmatchesbydictionaryitemuri",level:3},{value:"GetTopMatchesByDictionaryItemId",id:"gettopmatchesbydictionaryitemid",level:3},{value:"GetSentenceIdForMatchTarget",id:"getsentenceidformatchtarget",level:3},{value:"GetSourceIdForMatchTarget",id:"getsourceidformatchtarget",level:3},{value:"StandardizedForm",id:"standardizedform",level:3},{value:"GetTopSourcesByDictionary",id:"gettopsourcesbydictionary",level:3}];function l(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"iknowmatchingmatchingapi",children:"%iKnow.Matching.MatchingAPI"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Class %iKnow.Matching.MatchingAPI Extends %iKnow.Queries.AbstractAPI [ Deprecated, System = 4 ]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The InterSystems IRIS NLP iKnow technology is now deprecated. Please see the ",(0,i.jsx)(t.a,{href:"https://docs.intersystems.com/irislatest/csp/docbook/DocBook.UI.Page.cls?KEY=GIKNOW",children:"product documentation"})," for more detail."]}),"\n",(0,i.jsx)(t.p,{children:"This is the main entry point for driving the iKnow Smart Matching mechanisms"}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"matchsourcesexp",children:"MatchSourcesEXP"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MatchSourcesEXP [ Internal ] = 1;\n"})}),"\n",(0,i.jsx)(t.h3,{id:"matchsourceexp",children:"MatchSourceEXP"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MatchSourceEXP [ Internal ] = 1;\n"})}),"\n",(0,i.jsx)(t.h3,{id:"invalidatematchingresultsexp",children:"InvalidateMatchingResultsEXP"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter InvalidateMatchingResultsEXP [ Internal ] = 1;\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchelementsrt",children:"GetMatchElementsRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchElementsRT = "position:%Integer,entOccId:%Integer,entUniId:%Integer,literal:%String,role:%Integer,matchScore:%Numeric,dictElementId:%Integer,dictElement:%String,matchedWordBits:%String,isScattered:%Boolean,formatOutput:%String,negated:%Boolean";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbyentoccrt",children:"GetMatchesByEntOccRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByEntOccRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbypathrt",children:"GetMatchesByPathRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByPathRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysentencert",children:"GetMatchesBySentenceRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesBySentenceRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbycrcoccrt",children:"GetMatchesByCrcOccRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByCrcOccRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysourcert",children:"GetMatchesBySourceRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesBySourceRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysourceidrt",children:"GetMatchesBySourceIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesBySourceIdRT = "matchId:%Integer,dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%Integer,targetType:%String,targetId:%Integer,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getdictionarymatchesrt",children:"GetDictionaryMatchesRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetDictionaryMatchesRT = "dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%String,dictTerm:%String,dictElementId:%String,type:%String,matchScore:%Numeric,matchedWordBits:%String,isScattered:%Boolean,formatOutput:%String";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getdictionarymatchesbyidrt",children:"GetDictionaryMatchesByIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetDictionaryMatchesByIdRT = "dictId:%Integer,dictItemId:%Integer,dictItemURI:%String,dictTermId:%String,dictTerm:%String,dictElementId:%String,type:%String,matchScore:%Numeric,matchedWordBits:%String,isScattered:%Boolean,formatOutput:%String";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettotaldictionaryscoresbysourcert",children:"GetTotalDictionaryScoresBySourceRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTotalDictionaryScoresBySourceRT = "dictId:%Integer,dictionary:%String,matchCount:%Integer,totalScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettotaldictionaryscoresbysourceidrt",children:"GetTotalDictionaryScoresBySourceIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTotalDictionaryScoresBySourceIdRT = "dictId:%Integer,dictionary:%String,matchCount:%Integer,totalScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettotalitemscoresbysourcert",children:"GetTotalItemScoresBySourceRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTotalItemScoresBySourceRT = "dictId:%Integer,dictionary:%String,dictItemId:%Integer,item:%String,URI:%String,matchCount:%Integer,totalScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettotalitemscoresbysourceidrt",children:"GetTotalItemScoresBySourceIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTotalItemScoresBySourceIdRT = "dictId:%Integer,dictionary:%String,dictItemId:%Integer,item:%String,URI:%String,matchCount:%Integer,totalScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettopitemsrt",children:"GetTopItemsRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTopItemsRT = "dictId:%Integer,dictItemId:%Integer,name:%String,URI:%String,frequency:%Integer,spread:%Integer,score:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettoptermsbyitemidrt",children:"GetTopTermsByItemIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTopTermsByItemIdRT = "dictTermId:%Integer,name:%String,frequency:%Integer,spread:%Integer,score:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"geterrorsrt",children:"GetErrorsRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetErrorsRT = "sourceId:%Integer,externalId:%String,errorMessage:%String,date:%Date";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"clearlogsexp",children:"ClearLogsEXP"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter ClearLogsEXP [ Internal ] = 1;\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionaryitemurirt",children:"GetMatchesByDictionaryItemURIRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByDictionaryItemURIRT = "matchId:%Integer,dictTermId:%Integer,sourceId:%Integer,externalId:%String,targetType:%String,targetId:%Integer,targetUniId:%Integer,targetValue:%String,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionaryitemidrt",children:"GetMatchesByDictionaryItemIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByDictionaryItemIdRT = "matchId:%Integer,dictTermId:%Integer,sourceId:%Integer,externalId:%String,targetType:%String,targetId:%Integer,targetUniId:%Integer,targetValue:%String,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionarytermidrt",children:"GetMatchesByDictionaryTermIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetMatchesByDictionaryTermIdRT = "matchId:%Integer,sourceId:%Integer,externalId:%String,targetType:%String,targetId:%Integer,targetUniId:%Integer,targetValue:%String,matchScore:%Numeric,matchingConceptCount:%Integer,matchingRelationCount:%Integer,partialMatchCount:%Integer,firstMatchedPosInPath:%Integer,lastMatchedPosInPath:%Integer,isOrdered:%Boolean,negatedEntityCount:%Integer";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettopmatchesbydictionaryitemurirt",children:"GetTopMatchesByDictionaryItemURIRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTopMatchesByDictionaryItemURIRT = "targetType:%Integer,targetUniId:%Integer,targetValue:%String,frequency:%Integer,spread:%Integer,bestScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettopmatchesbydictionaryitemidrt",children:"GetTopMatchesByDictionaryItemIdRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTopMatchesByDictionaryItemIdRT = "targetType:%Integer,targetUniId:%Integer,targetValue:%String,frequency:%Integer,spread:%Integer,bestScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gettopsourcesbydictionaryrt",children:"GetTopSourcesByDictionaryRT"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetTopSourcesByDictionaryRT = "srcId:%Integer,externalId:%String,matchCount:%Integer,totalScore:%Numeric";\n'})}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"matchentityuniques",children:"MatchEntityUniques"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod MatchEntityUniques(domainId As %Integer, dictIds As %List = "", vSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Match the unique entities in this domain to all Dictionary Terms and Formats in the list of Dictionaries specified through ",(0,i.jsx)(t.em,{children:"dictIds"})," that haven't been matched in earlier operations. This method is called automatically at the start of a call to MatchSource or MatchSources."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will match against all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.p,{children:"If a Virtual Source is specified, the entities of this Virtual Source will be matched."}),"\n",(0,i.jsx)(t.h3,{id:"matchentityuniquesjob",children:"MatchEntityUniquesJob"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod MatchEntityUniquesJob(domainId As %Integer, dictIds As %List, pMaxEntUniId As %Integer, procN As %Integer = 0, vSrcId As %Integer = 0, xDomDicts As %Boolean = 0, pUseStemming As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"checkdictionaryelementmatches",children:"CheckDictionaryElementMatches"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod CheckDictionaryElementMatches(domainId As %Integer, ByRef string As %String, ByRef dictIds, fullMatchOnly As %Integer = -1, skipDEs = "", append As %Boolean = 0, outVar As %String = "^||%IK.DEMatches", xDomDicts As %Boolean = 0, nGramMatches As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"Checks for a given string to which dictionary elements it matches and stores the result in ^||%IK.DEMatches(i) = $lb(dictId, dictElementId, matchScore, matchedWordBits, isScattered[, language]) Using append=1 will leave existing values in ^||%IK.DEMatches untouched. If xDomDicts = 1, we expect negative dictId indices in dictIds and skipDEs, and will output negative dictIds and dictElementIds"}),"\n",(0,i.jsx)(t.h3,{id:"matchsources",children:"MatchSources"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod MatchSources(domainId As %Integer, filter As %iKnow.Filters.Filter = "", dictIds As %List = "", overrideProfile As %iKnow.Matching.MatchingProfile = "") As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Matches all sources in the domain, optionally restricted to those satisfying the criteria of a %iKnow.Filters.Filter object provided as ",(0,i.jsx)(t.em,{children:"filter"}),", against the list of Dictionary IDs passed in ",(0,i.jsx)(t.em,{children:"dictIds"}),". Use negative numbers to mark cross-domain dictionaries."]}),"\n",(0,i.jsx)(t.p,{children:"A Matching Profile to calculate match scores can be specified either by passing in an %iKnow.Matching.MatchingProfile object, or a Matching Profile ID. When passing in the ID, a negative number is treated as a namespace-wide profile, whereas a positive ID will be looked up within the context of the domain."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will match against all Dictionaries in this domain and passing $$$ALLXDOMDICTIONARIES will match against all cross-domain dictionaries."]}),"\n",(0,i.jsx)(t.h3,{id:"mergetempglobals",children:"MergeTempGlobals"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod MergeTempGlobals(domainId As %Integer, procN As %Integer) As %Status [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Merges the temporary globals generated by the different processes into the real ones"}),"\n",(0,i.jsx)(t.h3,{id:"matchsource",children:"MatchSource"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod MatchSource(domainId As %Integer, srcId As %Integer, dictIds As %List = "", overrideProfile As %iKnow.Matching.MatchingProfile = "") As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Matches an individual source against the list of Dictionary IDs passed in ",(0,i.jsx)(t.em,{children:"dictIds"}),". Use negative numbers to identify any cross-domain dictionaries to match against. A Matching Profile to calculate match scores can be specified either by passing in an %iKnow.Matching.MatchingProfile object, or a Matching Profile ID. When passing in the ID, a negative number is treated as a namespace-wide profile, whereas a positive ID will be looked up within the context of the domain."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will match against all Dictionaries in this domain and passing $$$ALLXDOMDICTIONARIES will match against all cross-domain dictionaries."]}),"\n",(0,i.jsx)(t.p,{children:"A negative Source ID is interpreted as a Virtual Source."}),"\n",(0,i.jsx)(t.h3,{id:"matchsourcejob",children:"MatchSourceJob"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod MatchSourceJob(domainId As %Integer, filterString As %String = "", dictIds As %List = "", overrideProfile As %iKnow.Matching.MatchingProfile = "", procN As %Integer = 1, xDomDicts As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"processcandidates",children:"ProcessCandidates"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ProcessCandidates(srcId, vSrcId, ByRef matchIdGlo, ByRef matchIncGlo, ByRef dictToMatchGlo, ByRef entOccToMatchGlo, ByRef dictItemToMatchGlo, ByRef dictToSrcGlo, ByRef srcToMatchGlo, ByRef sentToMatchGlo, sentId, matchScoreMargin) As %Status [ Internal ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getcachedelement",children:"GetCachedElement"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCachedElement(domainId, deId, Output deInfo, Output dtId = "", Output diId = "", Output dictId = "") As %Status [ Internal, Private ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"domainId = 0 and deId < 0 for cross-domain dictionaries; returned ids are also <0"}),"\n",(0,i.jsx)(t.h3,{id:"getcachedterm",children:"GetCachedTerm"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCachedTerm(domainId, dtId, Output diId = "", Output dictId = "", getElems, Output elems = "", Output relCount = "") As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"domainId = 0 and dtId < 0 for cross-domain dictionaries; returned ids are also <0"}),"\n",(0,i.jsx)(t.h3,{id:"getcachedtermlength",children:"GetCachedTermLength"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetCachedTermLength(domainId, dtId, profile, Output conceptCount As %Integer = -1, Output relCount As %Integer = -1) As %Integer [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"processaggregate",children:"ProcessAggregate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ProcessAggregate(domainId, targetType, targetId, ByRef dictProfiles, srcId, vSrcId, ByRef matchIdGlo, ByRef matchIncGlo, ByRef dictToMatchGlo, ByRef entOccToMatchGlo, ByRef dictItemToMatchGlo, ByRef dictToSrcGlo, ByRef srcToMatchGlo, targetLength, ByRef sentToMatchGlo, sentId, matchScoreMargin, stdFormLangId, ikpMatSkipRelations) As %Status [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"updatebitstrings",children:"UpdateBitStrings"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod UpdateBitStrings(domainId As %Integer, currentDictElemsArray, vSrcId As %Integer = 0, xDomDicts As %Boolean = 0) As %Status [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Update the bitstrings based on IKT gobals generated in the MatchSource* methods"}),"\n",(0,i.jsx)(t.h3,{id:"invalidatematchingresults",children:"InvalidateMatchingResults"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod InvalidateMatchingResults(domainId As %Integer, dictIds As %List = "", pMode As %Integer = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Deletes all current matching results for the list of Dictionary IDs passed in dictIds."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will drop results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.p,{children:"pMode can be used to specify whether to keep intermediary (not source-related) matching results as follows:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"0: only source-related matching results are erased (default)"}),"\n",(0,i.jsx)(t.li,{children:"1: the matching results for unique entities are also erased"}),"\n",(0,i.jsx)(t.li,{children:'2: the matching results for unique entities and indexing results for dictionary terms are all erased (only available if dictIds="")\nThis parameter is mostly for internal use.'}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note: pMode=2 will not erase the indexing results for dictionary terms of cross-domain dictionaries.",(0,i.jsx)(t.br,{}),"\nNote: matching results for virtual sources are always completely dropped, regardless of the value of dictIds and with the same effect as pMode=1"]}),"\n",(0,i.jsx)(t.h3,{id:"invalidatematchingresultsinternal",children:"InvalidateMatchingResultsInternal"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod InvalidateMatchingResultsInternal(pDomainId As %Integer, pDictId As %Integer, pDictItemId As %Integer = "", pMode As %Integer = 0, pDictTermId As %Integer = 0) As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"Clears all the matching results for a particular Dictionary Item pDictItemId in Dictionary pDictId, optionally narrowed down to a Dictionary Term pDictTermId. pMode values: 0 drops source-level results, 1 drops EU mappings as well and 2 also drops the term's indexing results (dictionary elements). If dropping the results for a cross-domain item in a specific domain, all IDs passed in should be negative. This method is for internal use only, as it does not update ^IRIS.IK.Mat.DictMatchStatus!"}),"\n",(0,i.jsx)(t.h3,{id:"indexdictionaryterms",children:"IndexDictionaryTerms"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod IndexDictionaryTerms(domainId As %Integer, pDictIds As %List = "") As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"Push Dictionary Terms for the given dictionaries through the engine and generate appropriate Dictionary Elements, if the Term hadn't been processed before. If domainId = 0, terms for all cross-domain dictionaries will be processed."}),"\n",(0,i.jsx)(t.p,{children:"Internal method, not to be invoked by custom code."}),"\n",(0,i.jsx)(t.p,{children:"NOTE: pDictIds is ignored as from 2013.1! (domain version >=3)"}),"\n",(0,i.jsx)(t.h3,{id:"indexdictionarytermsjob",children:"IndexDictionaryTermsJob"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod IndexDictionaryTermsJob(pDomainId As %Integer, pDictIds As %List = "", pMaxDictTermId As %Integer, pProcN As %Integer = 0) As %Status [ Internal ]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"gethighlightedsentences",children:"GetHighlightedSentences"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetHighlightedSentences(ByRef result, domainId As %Integer, srcId As %Integer, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Matching.MatchFilter = "", displayEveryMatch = 0, entOccJSAction As %String = "", matchJSAction As %String = "", dictStyles = "", matchScoreStyles = "") As %Status [ Deprecated, Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:"This method has been deprecated. Use GetHighlighted() in %iKnow.Queries.SentenceAPI."}),"\n",(0,i.jsx)(t.p,{children:"Returns a HTML representation of the given sources sentences in which all matched elements are highlighted according to the parameters specified in this method invocation. At lower subscript levels, all composing parts, literals and matching result info is specified to enable custom highlighting as well."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Setting ",(0,i.jsx)(t.em,{children:"displayEveryMatch"})," to 1 will generate markup for every individual match, whereas 0 (the default) will display at most 1 match per entity to limit the complexity of the output"]}),"\n",(0,i.jsxs)(t.li,{children:["Through the ",(0,i.jsx)(t.em,{children:"entOccJSAction"})," and ",(0,i.jsx)(t.em,{children:"matchJSAction"})," parameters, a JavaScript method name can be provided to be rendered as onclick actions for either the entity occurrences or individual matches, taking their respective IDs as arguments."]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.em,{children:"dictStyles"})," and ",(0,i.jsx)(t.em,{children:"matchScoreStyles"})," parameters can be used to supply local arrays specifying additional style classes to apply to matches for specific dictionaries and match score windows respectively."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"If a negative Source ID is supplied, it is interpreted as a Virtual Source."}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Note:"})," if no JavaScript injection is required, the GetHighlighted() method in %iKnow.Queries.SentenceAPI is a more versatile alternative to this method, supporting simultaneously highlighting matches, attributes, entities, etc."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchelements",children:"GetMatchElements"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetMatchElements(ByRef result, domainId As %Integer, matchId As %Integer, vSrcId As %Integer = 0) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a detailed overview of all the elements in the match target, be it an entity-level, CRC-level or path-level match. The elements that are matched get annotated with the matched elements ID, value and eventually the output from a %iKnow.Matching.Formats.Format class if it was responsible for the match."}),"\n",(0,i.jsx)(t.p,{children:"If a Virtual Source ID is supplied, the query runs in the context of that virtual source."}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbyentocc",children:"GetMatchesByEntOcc"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByEntOcc(ByRef result, domainId As %Integer, entOccId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, includeCrcMatches As %Boolean = 1, includePathMatches As %Boolean = 1, includeSentenceMatches As %Boolean = 1, vSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Returns all the matches for the given Entity Occurrence. Use ",(0,i.jsx)(t.em,{children:"includeCrcMatches"}),", ",(0,i.jsx)(t.em,{children:"includePathMatches"})," and ",(0,i.jsx)(t.em,{children:"includeSentenceMatches"})," to also include any matches for the CRC, Path or Sentence in which this Entity Occurrences participates."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbypath",children:"GetMatchesByPath"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByPath(ByRef result, domainId As %Integer, pathId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, includeEntityMatches As %Boolean = 1, includeCrcMatches As %Boolean = 1, includeSentenceMatches As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Returns all the matches for the given Path. Use ",(0,i.jsx)(t.em,{children:"includeEntityMatches"}),", ",(0,i.jsx)(t.em,{children:"includeCRCMatches"})," and ",(0,i.jsx)(t.em,{children:"includeSentenceMatches"})," to also include any matches for the Entities this path is composed of and the CRCs or Sentences these Entities participate in."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysentence",children:"GetMatchesBySentence"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesBySentence(ByRef result, domainId As %Integer, sentenceId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, includeEntityMatches As %Boolean = 1, includeCrcMatches As %Boolean = 1, includePathMatches As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Returns all the matches for the given Sentence. Use ",(0,i.jsx)(t.em,{children:"includeEntityMatches"}),", ",(0,i.jsx)(t.em,{children:"includeCrcMatches"})," and ",(0,i.jsx)(t.em,{children:"includePathMatches"})," to control which (target) types of matches should be included in the result."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbycrcocc",children:"GetMatchesByCrcOcc"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByCrcOcc(ByRef result, domainId As %Integer, crcOccId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, includeEntityMatches As %Boolean = 1, includePathMatches As %Boolean = 1, includeSentenceMatches As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Returns all the matches for the given CRC Occurrence. Use ",(0,i.jsx)(t.em,{children:"includeEntityMatches"}),", ",(0,i.jsx)(t.em,{children:"includePathMatches"})," and ",(0,i.jsx)(t.em,{children:"includeSentenceMatches"})," to also include any matches for the Entities this CRC is composed of and the Paths these Entities participate in."]}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysource",children:"GetMatchesBySource"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesBySource(ByRef result, domainId As %Integer, externalId As %String, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns all the matches for the given Source, as identified by its external ID."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbysourceid",children:"GetMatchesBySourceId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesBySourceId(ByRef result, domainId As %Integer, srcId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns all the matches for the given Source, as identified by its Source ID (interpreted as a Virtual Source if a negative value is supplied)."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getdictionarymatches",children:"GetDictionaryMatches"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetDictionaryMatches(ByRef result As %Integer, domainId As %Integer, string As %String, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, fullMatchOnly As %Integer = -1, profile As %iKnow.Matching.MatchingProfile = "", language As %String = "", nGramMatches As %Integer = -1) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns all potential matches for a given string. This string is treated as if it were a single entity and matched against single-entity Dictionary Terms. To find the matches for a full sentence, first index it and then call GetMatchesBySource using the source ID corresponding to the indexed sentence."}),"\n",(0,i.jsx)(t.p,{children:"A Matching Profile to be used when calculating match scores can be specified either by passing in an %iKnow.Matching.MatchingProfile object, or a Matching Profile ID. When passing in the ID, a negative number is treated as a namespace-wide profile, whereas a positive ID will be looked up within the context of the domain. If no profile is specified, the default profile for this domain will be used."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getdictionarymatchesbyid",children:"GetDictionaryMatchesById"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetDictionaryMatchesById(ByRef result As %Integer, domainId As %Integer, entUniId As %Integer, dictIds As %List = "", page As %Integer = 1, pageSize As %Integer = 10, fullMatchOnly As %Integer = -1, profile As %iKnow.Matching.MatchingProfile = "", language As %String = "") As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns all potential matches for the given entity ID."}),"\n",(0,i.jsx)(t.p,{children:"A Matching Profile to be used when calculating match scores can be specified either by passing in an %iKnow.Matching.MatchingProfile object, or a Matching Profile ID. When passing in the ID, a negative number is treated as a namespace-wide profile, whereas a positive ID will be looked up within the context of the domain. If no profile is specified, the default profile for this domain will be used."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"gettotaldictionaryscoresbysource",children:"GetTotalDictionaryScoresBySource"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetTotalDictionaryScoresBySource(ByRef result, domainId As %Integer, externalId As %String, sortType As %Integer = {$$$SORTBYFREQUENCY}) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns summary information for all matches in a given source (identified by External ID), organized per Dictionary."}),"\n",(0,i.jsx)(t.h3,{id:"gettotaldictionaryscoresbysourceid",children:"GetTotalDictionaryScoresBySourceId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetTotalDictionaryScoresBySourceId(ByRef result, domainId As %Integer, srcId As %Integer, sortType As %Integer = {$$$SORTBYFREQUENCY}) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns summary information for all matches in a given source (identified by Source ID), organized per Dictionary."}),"\n",(0,i.jsx)(t.h3,{id:"gettotalitemscoresbysource",children:"GetTotalItemScoresBySource"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTotalItemScoresBySource(ByRef result, domainId As %Integer, externalId As %String, dictIds As %List = "", sortType As %Integer = {$$$SORTBYFREQUENCY}) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns summary information for all matches in a given source (identified by External ID), organized per Dictionary Item."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"gettotalitemscoresbysourceid",children:"GetTotalItemScoresBySourceId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTotalItemScoresBySourceId(ByRef result, domainId As %Integer, srcId As %Integer, dictIds As %List = "", sortType As %Integer = {$$$SORTBYFREQUENCY}) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns summary information for all matches in a given source (identified by Source ID), organized per Dictionary Item."}),"\n",(0,i.jsxs)(t.p,{children:['Specifying "" for ',(0,i.jsx)(t.em,{children:"dictIds"})," will return results for all Dictionaries in this domain."]}),"\n",(0,i.jsx)(t.h3,{id:"getnonmatcheddictsforsource",children:"GetNonMatchedDictsForSource"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetNonMatchedDictsForSource(domainId As %Integer, srcId As %Integer, dictIds As %List = "") As %List [ Internal ]\n'})}),"\n",(0,i.jsx)(t.p,{children:'Checks which of the supplied dictionary IDs still needs matching for this source and returns the remaining ones in a %List. If "" is supplied as the list of dictionary IDs, it will check against all dictionaries for this domain. Supports virtual sources (negative sourceId).'}),"\n",(0,i.jsx)(t.h3,{id:"gettopitems",children:"GetTopItems"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTopItems(ByRef result, domainId As %Integer, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Filters.Filter = "", dictIds As %List = "", sortType As %Integer = {$$$SORTBYFREQUENCY}, vSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"Returns the Dictionary Items for which most matches have been found in this domain (optionally narrowed down through a %iKnow.Filters.Filter object passed in through filter). Result sort order is controlled by sortType:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"$$$SORTBYFREQUENCY will sort by the number of actual matches for a Dictionary Item"}),"\n",(0,i.jsx)(t.li,{children:"$$$SORTBYSPREAD will sort by the number of distinct documents in which at least one match for the Dictionary Item occurs."}),"\n",(0,i.jsx)(t.li,{children:"$$$SORTBYSCORE will sort by the total match score of all matches for a Dictionary Item"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'Specifying "" for dictIds will return results for all Dictionaries in this domain.'}),"\n",(0,i.jsx)(t.h3,{id:"gettoptermsbyitemid",children:"GetTopTermsByItemId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTopTermsByItemId(ByRef pResult, pDomainId As %Integer, pDictItemIds As %List, pFilter As %iKnow.Filters.Filter = "", pSortType As %Integer = {$$$SORTBYFREQUENCY}, vSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"For a given Dictionary Item, returns all its Dictionary Terms sorted by the number of matches they have, optionally narrowed down through a %iKnow.Filters.Filter object passed in through pFilter). Result sort order is controlled by pSortType:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"$$$SORTBYFREQUENCY will sort by the number of actual matches for the Dictionary Term"}),"\n",(0,i.jsx)(t.li,{children:"$$$SORTBYSPREAD will sort by the number of distinct documents in which at least one match for the Dictionary Term occurs."}),"\n",(0,i.jsx)(t.li,{children:"$$$SORTBYSCORE will sort by the total match score of all matches for a Dictionary Term"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"buildinvertedentunimatchedindex",children:"BuildInvertedEntUniMatchedIndex"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod BuildInvertedEntUniMatchedIndex(domainId As %Integer, dictIds As %List, Output index) As %Status [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Builds an inverse index of the form index(entUniId) = $lb(dictIds,...) containing all dictionaries that still need to be matched to EUs for entUniId values. The index also contains a second subscript level index(entUniId, dictId) = lastDictElemId indicating that all DEs <= lastDictElemId for that dictId can be skipped while treating larger entUniId values, UP TO the next entUniId entry. For cross-domain dictionaries, dictIds are negative, but corresponding lastDictElemId are positive. Note that this will be StemUniIds when $$$IKPSTEMMING '= 0 !!!"}),"\n",(0,i.jsx)(t.h3,{id:"getalldictsaslist",children:"GetAllDictsAsList"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetAllDictsAsList(domainId As %Integer) As %List [ Internal ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getalldictsasarray",children:"GetAllDictsAsArray"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetAllDictsAsArray(pDomainId As %Integer, Output pDicts) As %Status [ Internal, Private ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"getcurrentdictelems",children:"GetCurrentDictElems"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCurrentDictElems(domainId As %Integer, dictIds As %List, Output asArray = "") As %Status [ Internal, Private ]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"isfullymatched",children:"IsFullyMatched"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod IsFullyMatched(domainId As %Integer, srcId As %Integer, dictIds As %List = "", Output details = "") As %Boolean [ Internal ]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"geterrors",children:"GetErrors"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetErrors(ByRef result, domainId As %Integer, since As %Date = 0) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns any errors registered during the Matching process"}),"\n",(0,i.jsx)(t.h3,{id:"clearlogs",children:"ClearLogs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ClearLogs(domainId As %Integer) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Clears any matching-related logfiles for the specified domain."}),"\n",(0,i.jsx)(t.h3,{id:"cleartemps",children:"ClearTemps"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ClearTemps(domainId As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Clears any temp globals used during previous runs, including aborted ones (processes finishing successfully would clean up themselves)"}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionaryitemuri",children:"GetMatchesByDictionaryItemURI"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByDictionaryItemURI(ByRef result, domainId As %Integer, dictItemURI As %String, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Filters.Filter = "", targetTypes As %List = "", xDomDicts As %Boolean = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"This query returns all the match occurrences for the Dictionary Item specified through dictItemURI."}),"\n",(0,i.jsx)(t.p,{children:"Specifying a %iKnow.Filters.Filter object as filter will restrict the search space to only those sources satisfying the filters criteria. Through targetTypes, the desired target types can be specified in a %List (defaults to all types)."}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionaryitemid",children:"GetMatchesByDictionaryItemId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByDictionaryItemId(ByRef result, domainId As %Integer, dictItemId As %Integer, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Filters.Filter = "", targetTypes As %List = "", ensureMatched As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"This query returns all the match occurrences for the Dictionary Item specified through dictItemId."}),"\n",(0,i.jsx)(t.p,{children:"Specifying a %iKnow.Filters.Filter object as filter will restrict the search space to only those sources satisfying the filters criteria. Through targetTypes, the desired target types can be specified in a %List (defaults to all types)."}),"\n",(0,i.jsx)(t.h3,{id:"getmatchesbydictionarytermid",children:"GetMatchesByDictionaryTermId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetMatchesByDictionaryTermId(ByRef pResult, pDomainId As %Integer, pDictTermId As %Integer, pPage As %Integer = 1, pPageSize As %Integer = 10, pFilter As %iKnow.Filters.Filter = "", pTargetTypes As %List = "", pEnsureMatched As %Boolean = 1) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:"This query returns all the match occurrences for the Dictionary Term specified through pDictTermId."}),"\n",(0,i.jsx)(t.p,{children:"Specifying a %iKnow.Filters.Filter object as pFilter will restrict the search space to only those sources satisfying the filters criteria. Through pTargetTypes, the desired target types can be specified in a %List (defaults to all types)."}),"\n",(0,i.jsx)(t.h3,{id:"gettopmatchesbydictionaryitemuri",children:"GetTopMatchesByDictionaryItemURI"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTopMatchesByDictionaryItemURI(ByRef result, domainId As %Integer, dictItemURI As %String, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Filters.Filter = "", targetTypes As %List = "", sortType As %Integer = {$$$SORTBYFREQUENCY}, xDomDicts As %Boolean = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:'This query returns the "best" matching results for the Dictionary Item specified through dictItemURI, aggregated by matched unique target (entity, CRC, path or sentence). The meaning of "best" is defined by sortType: if set to $$$SORTBYFREQUENCY or $$$SORTBYSPREAD, results are sorted by decreasing number of matched occurrences, whereas $$$SORTBYSCORE will rank them according to the highest match score. The first two options will yield the most relevant results for entities and CRCs, with the score ranking a better fit for paths and sentences, as they inherently have frequency and spread equal to 1.'}),"\n",(0,i.jsx)(t.p,{children:"Specifying a %iKnow.Filters.Filter object as filter will restrict the search space to only those sources satisfying the filters criteria. Through targetTypes, the desired target types can be specified in a %List (defaults to all types)."}),"\n",(0,i.jsx)(t.h3,{id:"gettopmatchesbydictionaryitemid",children:"GetTopMatchesByDictionaryItemId"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTopMatchesByDictionaryItemId(ByRef result, domainId As %Integer, dictItemId As %Integer, page As %Integer = 1, pageSize As %Integer = 10, filter As %iKnow.Filters.Filter = "", targetTypes As %List = "", sortType As %Integer = {$$$SORTBYDOMAINDEFAULT}) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:'This query returns the "best" matching results for the Dictionary Item specified through dictItemId, aggregated by matched unique target (entity, CRC, path or sentence). The meaning of "best" is defined by sortType: if set to $$$SORTBYFREQUENCY or $$$SORTBYSPREAD, results are sorted by decreasing number of matched occurrences, whereas $$$SORTBYSCORE will rank them according to the highest match score. The first two options will yield the most relevant results for entities and CRCs, with the score ranking a better fit for paths and sentences, as they inherently have frequency and spread equal to 1.'}),"\n",(0,i.jsx)(t.p,{children:"Specifying a %iKnow.Filters.Filter object as filter will restrict the search space to only those sources satisfying the filters criteria. Through targetTypes, the desired target types can be specified in a %List (defaults to all types)."}),"\n",(0,i.jsx)(t.h3,{id:"getsentenceidformatchtarget",children:"GetSentenceIdForMatchTarget"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetSentenceIdForMatchTarget(domainId As %Integer, targetType As %Integer, targetId As %Integer, vSrcId As %Integer = 0) As %Integer\n"})}),"\n",(0,i.jsx)(t.p,{children:"Utility method to retrieve the Sentence ID for a given match target, as specified by its target type (either of $$$DMTARGETENTITY, $$$DMTARGETCRC, $$$DMTARGETPATH or $$$DMTARGETSENT) and ID."}),"\n",(0,i.jsx)(t.h3,{id:"getsourceidformatchtarget",children:"GetSourceIdForMatchTarget"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetSourceIdForMatchTarget(domainId As %Integer, targetType As %Integer, targetId As %Integer) As %Integer\n"})}),"\n",(0,i.jsx)(t.p,{children:"Utility method to retrieve the Source ID for a given match target, as specified by its target type (either of $$$DMTARGETENTITY, $$$DMTARGETCRC, $$$DMTARGETPATH or $$$DMTARGETSENT) and ID."}),"\n",(0,i.jsx)(t.h3,{id:"standardizedform",children:"StandardizedForm"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod StandardizedForm(pString As %String, pLanguage As %String, pFunction As %String = {$$$IKPMATSTANDARDIZEDFORMTEXT}) As %String [ Internal ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"gettopsourcesbydictionary",children:"GetTopSourcesByDictionary"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetTopSourcesByDictionary(ByRef pResult, pDomainId As %Integer, pDictIds As %List, pPage As %Integer = 1, pPageSize As %Integer = 10, pFilter As %iKnow.Filters.Filter = "", pSortType As %Integer = {$$$SORTBYFREQUENCY}, pNormalizeLength As %Numeric = 0) As %Status\n'})}),"\n",(0,i.jsx)(t.p,{children:'Returns the sources best matching a given list of dictionaries specified through pDictIds, optionally filtered through pFilter. "Best matching" is defined as having the highest number of matches (if pSortType = $$$SORTBYFREQUENCY) or the highest total match score (if pSortType = $$$SORTBYSCORE).'}),"\n",(0,i.jsx)(t.p,{children:"If pNormalizeLength is set to a nonzero value, this number is used as the power of the sources length in entities (occurrences) to normalize the score."})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var i=s(96540);const n={},r=i.createContext(n);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);