"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[83658],{55304:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,toc:()=>l});var s=n(74848),a=n(28453);const i={pagination_prev:null,pagination_next:null},r="%CSP.Request",l=[{value:"Properties",id:"properties",level:2},{value:"URL",id:"url",level:3},{value:"store",id:"store",level:3},{value:"PageName",id:"pagename",level:3},{value:"URLPrefix",id:"urlprefix",level:3},{value:"UserAgent",id:"useragent",level:3},{value:"RequestId",id:"requestid",level:3},{value:"NoResetTimeout",id:"noresettimeout",level:3},{value:"ContentType",id:"contenttype",level:3},{value:"CharSet",id:"charset",level:3},{value:"ConvertCharSet",id:"convertcharset",level:3},{value:"Content",id:"content",level:3},{value:"Method",id:"method",level:3},{value:"Protocol",id:"protocol",level:3},{value:"Secure",id:"secure",level:3},{value:"GatewayApplication",id:"gatewayapplication",level:3},{value:"GatewayConnectionName",id:"gatewayconnectionname",level:3},{value:"GatewaySessionIdSource",id:"gatewaysessionidsource",level:3},{value:"GatewayNewId",id:"gatewaynewid",level:3},{value:"GatewayBuild",id:"gatewaybuild",level:3},{value:"GatewayFunctions",id:"gatewayfunctions",level:3},{value:"GatewaySessionCookie",id:"gatewaysessioncookie",level:3},{value:"GatewayInstanceName",id:"gatewayinstancename",level:3},{value:"RegistryMethods",id:"registrymethods",level:3},{value:"GatewayError",id:"gatewayerror",level:3},{value:"Application",id:"application",level:3},{value:"CSPGatewayRequest",id:"cspgatewayrequest",level:3},{value:"GatewayTimeout",id:"gatewaytimeout",level:3},{value:"Data",id:"data",level:3},{value:"Cookies",id:"cookies",level:3},{value:"MimeData",id:"mimedata",level:3},{value:"CgiEnvs",id:"cgienvs",level:3},{value:"AppData",id:"appdata",level:3},{value:"AppMatch",id:"appmatch",level:3},{value:"Class",id:"class",level:3},{value:"Service",id:"service",level:3},{value:"ProcessedRequestType",id:"processedrequesttype",level:3},{value:"SoapAction",id:"soapaction",level:3},{value:"Methods",id:"methods",level:2},{value:"UserAgentSet",id:"useragentset",level:3},{value:"ContentTypeSet",id:"contenttypeset",level:3},{value:"CharSetSet",id:"charsetset",level:3},{value:"ProtocolSet",id:"protocolset",level:3},{value:"SecureSet",id:"secureset",level:3},{value:"GatewayApplicationSet",id:"gatewayapplicationset",level:3},{value:"GatewayConnectionNameSet",id:"gatewayconnectionnameset",level:3},{value:"GatewaySessionIdSourceSet",id:"gatewaysessionidsourceset",level:3},{value:"GatewayBuildSet",id:"gatewaybuildset",level:3},{value:"GatewayFunctionsSet",id:"gatewayfunctionsset",level:3},{value:"GatewaySessionCookieSet",id:"gatewaysessioncookieset",level:3},{value:"GatewayInstanceNameSet",id:"gatewayinstancenameset",level:3},{value:"ApplicationSet",id:"applicationset",level:3},{value:"CSPGatewayRequestSet",id:"cspgatewayrequestset",level:3},{value:"AppDataSet",id:"appdataset",level:3},{value:"AppMatchSet",id:"appmatchset",level:3},{value:"ClassSet",id:"classset",level:3},{value:"ServiceSet",id:"serviceset",level:3},{value:"UpdateURL",id:"updateurl",level:3},{value:"Get",id:"get",level:3},{value:"Set",id:"set",level:3},{value:"Insert",id:"insert",level:3},{value:"IsDefined",id:"isdefined",level:3},{value:"Count",id:"count",level:3},{value:"Find",id:"find",level:3},{value:"NextIndex",id:"nextindex",level:3},{value:"IsEncrypted",id:"isencrypted",level:3},{value:"Decrypt",id:"decrypt",level:3},{value:"realDecrypt",id:"realdecrypt",level:3},{value:"Next",id:"next",level:3},{value:"Delete",id:"delete",level:3},{value:"GetCookie",id:"getcookie",level:3},{value:"InsertCookie",id:"insertcookie",level:3},{value:"IsDefinedCookie",id:"isdefinedcookie",level:3},{value:"CountCookie",id:"countcookie",level:3},{value:"NextCookie",id:"nextcookie",level:3},{value:"DeleteCookie",id:"deletecookie",level:3},{value:"GetMimeData",id:"getmimedata",level:3},{value:"InsertMimeData",id:"insertmimedata",level:3},{value:"IsDefinedMimeData",id:"isdefinedmimedata",level:3},{value:"CountMimeData",id:"countmimedata",level:3},{value:"NextMimeData",id:"nextmimedata",level:3},{value:"NextMimeDataIndex",id:"nextmimedataindex",level:3},{value:"DeleteMimeData",id:"deletemimedata",level:3},{value:"GetCgiEnv",id:"getcgienv",level:3},{value:"InsertCgiEnv",id:"insertcgienv",level:3},{value:"IsDefinedCgiEnv",id:"isdefinedcgienv",level:3},{value:"NextCgiEnv",id:"nextcgienv",level:3},{value:"DeleteCgiEnv",id:"deletecgienv",level:3},{value:"Reset",id:"reset",level:3},{value:"CSPGatewayReset",id:"cspgatewayreset",level:3},{value:"ProcessRequest",id:"processrequest",level:3},{value:"DetermineRequestType",id:"determinerequesttype",level:3}];function c(e){const t={a:"a",br:"br",code:"code",encrypted:"encrypted",h1:"h1",h2:"h2",h3:"h3",header:"header",index:"index",li:"li",name:"name",order:"order",p:"p",pre:"pre",ul:"ul",value:"value",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"csprequest",children:"%CSP.Request"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %CSP.Request Extends %RegisteredObject [ ServerOnly = 1, System = 3 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"The %CSP.Request class encapsulates an incoming URL and its parameters."}),"\n",(0,s.jsx)(t.p,{children:"When a csp request is received, the CSP Server creates an instance of the %CSP.Request class. This is accessible via the %request variable."}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"url",children:"URL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property URL As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A string containing the URL up to and including the page name and extension, but not including the query string."}),"\n",(0,s.jsx)(t.h3,{id:"store",children:"store"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property store As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Used to keep track of old values"}),"\n",(0,s.jsx)(t.h3,{id:"pagename",children:"PageName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property PageName As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A string containing the name of the CSP page being processed."}),"\n",(0,s.jsx)(t.h3,{id:"urlprefix",children:"URLPrefix"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property URLPrefix As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"If the url contains the configuration name of the server as the first piece then this is defined to be the correct prefix to prepend to urls so they include this config name"}),"\n",(0,s.jsx)(t.h3,{id:"useragent",children:"UserAgent"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property UserAgent As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A string indicating the type of browser from which the request originated, as determined from the HTTP_USER_AGENT header."}),"\n",(0,s.jsx)(t.h3,{id:"requestid",children:"RequestId"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property RequestId As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The Gatewway Request Id"}),"\n",(0,s.jsx)(t.h3,{id:"noresettimeout",children:"NoResetTimeout"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property NoResetTimeout As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"If set to true then do not reset the session timeout for this request. Useful if this request is checking some state on the session but does not want to reset the timeout and cause the session to last longer. This property is set automatically if you pass in query parameter 'CSPNoResetTimeout'."}),"\n",(0,s.jsx)(t.h3,{id:"contenttype",children:"ContentType"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property ContentType As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A string indicating the MIME Content-Type of the request."}),"\n",(0,s.jsx)(t.h3,{id:"charset",children:"CharSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property CharSet As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Character set this request was send in, if not specified in the HTTP headers it defaults to the character set of the page it is being submitted to."}),"\n",(0,s.jsx)(t.h3,{id:"convertcharset",children:"ConvertCharSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property ConvertCharSet As %String [ Internal, Private ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal character set to use to convert the input, will be the CharSet if specified in the HTTP headers, else we determine this from the page this is being dispatched to."}),"\n",(0,s.jsx)(t.h3,{id:"content",children:"Content"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Content As %CSP.Stream;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A %CSP.Stream containing the content submitted with this request."}),"\n",(0,s.jsx)(t.h3,{id:"method",children:"Method"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Method As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"A string indicating HTTP method used for this request. Normally one of 'GET', 'POST', or 'HEAD'."}),"\n",(0,s.jsx)(t.h3,{id:"protocol",children:"Protocol"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property Protocol As %String [ InitialExpression = "HTTP/1.1" ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"HTTP protocol version of the browser request. Normally either 'HTTP/1.0' for older browsers and 'HTTP/1.1' for newer browsers."}),"\n",(0,s.jsx)(t.h3,{id:"secure",children:"Secure"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Secure As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"True if the communication between the browser and the web server was using the secure https protocol. False for a normal http connection."}),"\n",(0,s.jsx)(t.h3,{id:"gatewayapplication",children:"GatewayApplication"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayApplication As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The section of the Url that the CSP Gateway on the web server matched against to determine which InterSystems IRIS server to send the request to. If the Url was '/csp/samples/menu.csp' and the CSP Gateway is setup to match all requests to '/csp' then this parameter would be '/csp'."}),"\n",(0,s.jsx)(t.h3,{id:"gatewayconnectionname",children:"GatewayConnectionName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayConnectionName As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The name of the connection in the CSP Gateway that this request was sent to."}),"\n",(0,s.jsx)(t.h3,{id:"gatewaysessionidsource",children:"GatewaySessionIdSource"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewaySessionIdSource As %Integer [ Internal ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"How the gateway obtained the sessionId information."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"0 - Field not defined"}),"\n",(0,s.jsx)(t.li,{children:"1 - New session generated by Gateway"}),"\n",(0,s.jsx)(t.li,{children:"2 - CSPCHD in url/form"}),"\n",(0,s.jsx)(t.li,{children:"3 - Browser cookie"}),"\n",(0,s.jsx)(t.li,{children:"4 - SOAP payload"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"gatewaynewid",children:"GatewayNewId"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayNewId As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"True if the sessionId is newly assigned by the Gateway, and false if it is provided by the browser"}),"\n",(0,s.jsx)(t.h3,{id:"gatewaybuild",children:"GatewayBuild"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayBuild As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The internal build version of the CSP Gateway talking to the server"}),"\n",(0,s.jsx)(t.h3,{id:"gatewayfunctions",children:"GatewayFunctions"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayFunctions As %String [ Internal ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal information on CSP Gateway functions"}),"\n",(0,s.jsx)(t.h3,{id:"gatewaysessioncookie",children:"GatewaySessionCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewaySessionCookie As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The session cookie that the Gateway picked as the sessionId"}),"\n",(0,s.jsx)(t.h3,{id:"gatewayinstancename",children:"GatewayInstanceName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayInstanceName As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The instance host name of the Gateway that is communicating with this process"}),"\n",(0,s.jsx)(t.h3,{id:"registrymethods",children:"RegistryMethods"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property RegistryMethods As %Integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"The status of Registry Methods [1:Enabled; 0:Disabled]"}),"\n",(0,s.jsx)(t.h3,{id:"gatewayerror",children:"GatewayError"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayError As %Status [ Internal ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal property to hold CSP Gateway originated error codes"}),"\n",(0,s.jsx)(t.h3,{id:"application",children:"Application"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Application As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"The section of the Url that has been matched against a CSP application name."}),"\n",(0,s.jsx)(t.h3,{id:"cspgatewayrequest",children:"CSPGatewayRequest"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property CSPGatewayRequest As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"True if the request came the CSP Gateway, and false if it was from the command line or the built in web server."}),"\n",(0,s.jsx)(t.h3,{id:"gatewaytimeout",children:"GatewayTimeout"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property GatewayTimeout As %Integer [ InitialExpression = 60 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"The value of the Server Response Timeout in the Gateway configuration."}),"\n",(0,s.jsx)(t.h3,{id:"data",children:"Data"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Data As %String [ MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"An array of strings containing any parameter name/value pairs associated with this request. The format of this array is:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["%request.Data(",(0,s.jsxs)(t.name,{children:[",",(0,s.jsxs)(t.index,{children:[")=",(0,s.jsx)(t.value,{})]})]})]}),"\n",(0,s.jsxs)(t.li,{children:["%request.Data(",(0,s.jsxs)(t.name,{children:[",",(0,s.jsxs)(t.index,{children:[',"encrypt")=',(0,s.jsx)(t.encrypted,{state:""})]})]})]}),"\n",(0,s.jsxs)(t.li,{children:["%request.Data(",(0,s.jsxs)(t.name,{children:[",",(0,s.jsxs)(t.index,{children:[',"O")=',(0,s.jsxs)(t.order,{number:"",item:"",was:"",added:"",children:["\nWhere ",(0,s.jsxs)(t.name,{children:[" is the name of the parameter, ",(0,s.jsxs)(t.index,{children:[" is an index number starting at 1 as you may have multiple parameters with the same name so subsequent ones will be added with a higher index number. ",(0,s.jsxs)(t.value,{children:[" is the value of this parameter. ",(0,s.jsxs)(t.encrypted,{state:"",children:[" is 1 if the value of this parameter was encrpyted and 0 otherwise.",(0,s.jsx)(t.br,{}),"\nNote that it is faster to access this multidimensional property directly rather than going through the accessor methods. For example: ",(0,s.jsx)(t.code,{children:'; Set the index number one \'Name\' to \'Value\' Set %request.Data("Name",1)="Value" ; Output the value of parameter \'Name\' for index number one (the default) Write %request.Data("Name",1) ; Insert a new value for parameter \'Name\' to \'Value\' Set %request.Data("Name",$Order(%request.Data("Name",""),-1)+1)="Value" ; Test if parameter \'Name\' at index 2 is encrypted If $Data(%request.Data("Name",2,"encrypt"))'})]})]})]})]})]})]})]})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"If InterSystems IRIS receives a value that is longer than the string length limit, it automatically creates a stream, writes the value to that stream, and places the stream OREF into the Data property in place of the actual value. This means that in any case where you might receive a very long string, your code should examine the value to see if it is an OREF, and then handle it accordingly:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'Set value=%request.Data("fieldname",1) If $isobject(value) { ; Treat this as a stream } Else { ; Treat this as a regular string }'})}),"\n",(0,s.jsx)(t.h3,{id:"cookies",children:"Cookies"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Cookies As %String [ MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"An array of strings containing any cookie values associated with this request. The format of this array is:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["request.Cookies(",(0,s.jsxs)(t.name,{children:[",",(0,s.jsxs)(t.index,{children:[")=",(0,s.jsxs)(t.value,{children:["\nWhere ",(0,s.jsxs)(t.name,{children:[" is the name of the cookie, ",(0,s.jsxs)(t.index,{children:[" is an index number starting at 1 as you may have multiple cookies with the same name so subsequent ones will be added with a higher index number. ",(0,s.jsx)(t.value,{children:" is the value of this cookie."})]})]})]})]})]})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It is suggested that you use the accessor methods rather than set/get the value of this multidimentional property directly."}),"\n",(0,s.jsx)(t.h3,{id:"mimedata",children:"MimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property MimeData As %RawString [ MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"An array of streams containing any multipart/mime data associated with this request. The format of this array is:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["request.MimeData(",(0,s.jsxs)(t.name,{children:[",",(0,s.jsxs)(t.index,{children:[")=",(0,s.jsxs)(t.value,{children:["\nWhere ",(0,s.jsxs)(t.name,{children:[" is the name of the mime data stream, ",(0,s.jsxs)(t.index,{children:[" is an index number starting at 1 as you may have multiple mime streams with the same name so subsequent ones will be added with a higher index number. ",(0,s.jsx)(t.value,{children:" is the Oref of the stream associated with this mime data."})]})]})]})]})]})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It is suggested that you use the accessor methods rather than set/get the value of this multidimentional property directly."}),"\n",(0,s.jsx)(t.h3,{id:"cgienvs",children:"CgiEnvs"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property CgiEnvs As %String [ MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"An array of strings containing any environment values associated with this request. The format of this array is:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["request.CgiEnvs(",(0,s.jsxs)(t.name,{children:[")=",(0,s.jsxs)(t.value,{children:["\nWhere ",(0,s.jsxs)(t.name,{children:[" is the name of the Cgi environment variable and ",(0,s.jsx)(t.value,{children:" is the value of this environment variable."})]})]})]})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It is suggested that you use the accessor methods rather than set/get the value of this multidimentional property directly."}),"\n",(0,s.jsx)(t.h3,{id:"appdata",children:"AppData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property AppData As %String [ Internal ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Store some CSP application specific internal data for this request"}),"\n",(0,s.jsx)(t.h3,{id:"appmatch",children:"AppMatch"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property AppMatch As %String;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Portion of the url which we matched on to determine the web application settings to use"}),"\n",(0,s.jsx)(t.h3,{id:"class",children:"Class"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property Class As %String [ Internal ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Classname we are going to call"}),"\n",(0,s.jsx)(t.h3,{id:"service",children:"Service"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property Service As %String [ InitialExpression = "CSP", Internal ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"Type of request we have"}),"\n",(0,s.jsx)(t.h3,{id:"processedrequesttype",children:"ProcessedRequestType"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property ProcessedRequestType As %Boolean [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"soapaction",children:"SoapAction"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property SoapAction As %String [ Internal, MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"useragentset",children:"UserAgentSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method UserAgentSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"contenttypeset",children:"ContentTypeSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ContentTypeSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"charsetset",children:"CharSetSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method CharSetSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"protocolset",children:"ProtocolSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ProtocolSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"secureset",children:"SecureSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SecureSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewayapplicationset",children:"GatewayApplicationSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewayApplicationSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewayconnectionnameset",children:"GatewayConnectionNameSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewayConnectionNameSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewaysessionidsourceset",children:"GatewaySessionIdSourceSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewaySessionIdSourceSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewaybuildset",children:"GatewayBuildSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewayBuildSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewayfunctionsset",children:"GatewayFunctionsSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewayFunctionsSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewaysessioncookieset",children:"GatewaySessionCookieSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewaySessionCookieSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"gatewayinstancenameset",children:"GatewayInstanceNameSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GatewayInstanceNameSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"applicationset",children:"ApplicationSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ApplicationSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"cspgatewayrequestset",children:"CSPGatewayRequestSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method CSPGatewayRequestSet(val As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"appdataset",children:"AppDataSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method AppDataSet(data As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"appmatchset",children:"AppMatchSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method AppMatchSet(data As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"classset",children:"ClassSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ClassSet(val As %String) As %Status [ Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"serviceset",children:"ServiceSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ServiceSet(val As %String) As %Status [ Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"updateurl",children:"UpdateURL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method UpdateURL(url As %String, servername As %String = "", response As %CSP.Response, update As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method Get(name As %String, default As %String = "", index As %Integer = 1) As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Returns the value of name-value pair name."}),"\n",(0,s.jsx)(t.p,{children:"If more than one value is associated with name, then the values are subscripted using index starting with 1. Note that any encrypted parameters will have lower index values than any unencrypted parameters, and so will come first when you loop through them."}),"\n",(0,s.jsx)(t.p,{children:"If the name-value pair is not defined, returns the value of default."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:"Set return=$Get(%request.Data(name,index),default)"})]}),"\n",(0,s.jsx)(t.h3,{id:"set",children:"Set"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Set(name As %String, value As %String, index As %Integer = 1) [ Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set the name-value par name to value. As more than one value can be associated with name you can specify an index which is an integer subscript starting at 1 (the default)."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:"Set %request.Data(name,index)=value"})]}),"\n",(0,s.jsx)(t.h3,{id:"insert",children:"Insert"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Insert(name As %String, value As %String) [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Insert the value of name-value pair name to value."}),"\n",(0,s.jsx)(t.p,{children:"If more than one value is associated with name, then the values are subscripted using index starting with 1."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:'Set %request.Data(name,$Order(%request.Data(name,""),-1)+1)=value'})]}),"\n",(0,s.jsx)(t.h3,{id:"isdefined",children:"IsDefined"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsDefined(name As %String, index As %Integer = 1) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Tests if a name-value pair name is defined."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:"Set return=$Data(%request.Data(name,index))"})]}),"\n",(0,s.jsx)(t.h3,{id:"count",children:"Count"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Count(name As %String) As %Integer [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the number of values associated with the name-value pair name."}),"\n",(0,s.jsx)(t.h3,{id:"find",children:"Find"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Find(name As %String, value As %String) As %Integer [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Returns the index of the name-value pair for name with value. If not found, return "".'}),"\n",(0,s.jsx)(t.h3,{id:"nextindex",children:"NextIndex"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method NextIndex(name As %String, ByRef index As %Integer = "") As %String [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Pass the index by reference and it updates it with the next index number for the name-value pair name. The method returns the value at the new index number. This is useful for looping through the index values."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:"Set index=$Order(%request.Data(name,index),1,return)"})]}),"\n",(0,s.jsx)(t.h3,{id:"isencrypted",children:"IsEncrypted"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsEncrypted(name As %String, index As %Integer = 1) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Return true if the name-value pair name at index is encrypted in the url and false if it is not. This is useful to check that a parameter value that should not be altered and so is generated and encrypted on the server has not been replaced by the user by a '",(0,s.jsx)(t.a,{href:"http://machine/url.csp?PARAM=TEST",children:"http://machine/url.csp?PARAM=TEST"}),"' rather than the encrypted string produced by the server."]}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:'Set return=$Get(%request.Data(name,index,"encrypt"),0)'})]}),"\n",(0,s.jsx)(t.h3,{id:"decrypt",children:"Decrypt"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Decrypt(data As %String, key As %String) As %Status [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Given an encrypted string that is a series of name-value pairs and a key to decrypt it with this will insert them into the request and set the encrypted flag."}),"\n",(0,s.jsx)(t.h3,{id:"realdecrypt",children:"realDecrypt"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method realDecrypt(data As %String, key As %String) As %Status [ Final, Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal utility function for decryption."}),"\n",(0,s.jsx)(t.h3,{id:"next",children:"Next"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Next(name As %String) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the next key in sequence."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:"Set return=$Order(%request.Data(name))"})]}),"\n",(0,s.jsx)(t.h3,{id:"delete",children:"Delete"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method Delete(name As %String, index As %Integer = "") As %Boolean [ Final, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Removes this key from the collection, returns true if the valued existed and false if it never existed."}),"\n",(0,s.jsxs)(t.p,{children:["It is recommended to access the Data property directly because it is faster. For example, this call is equivalent to: ",(0,s.jsx)(t.code,{children:'; If index="" Kill %request.Data(name) ; If index\'="" Kill %request.Data(name,index)'})]}),"\n",(0,s.jsx)(t.h3,{id:"getcookie",children:"GetCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetCookie(name As %String, default As %String = "", index As %Integer = 1) As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the named cookie"}),"\n",(0,s.jsx)(t.h3,{id:"insertcookie",children:"InsertCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method InsertCookie(name As %String, value As %String) [ Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Inserts a cookie name/value pair."}),"\n",(0,s.jsx)(t.h3,{id:"isdefinedcookie",children:"IsDefinedCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsDefinedCookie(name As %String, index As %Integer = 1) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns true if the named cookie exists in the cookie collection, false otherwise."}),"\n",(0,s.jsx)(t.h3,{id:"countcookie",children:"CountCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method CountCookie(name As %String) As %Integer [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the count of cookies with this name."}),"\n",(0,s.jsx)(t.h3,{id:"nextcookie",children:"NextCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NextCookie(name As %String) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the next cookie name in the sequence"}),"\n",(0,s.jsx)(t.h3,{id:"deletecookie",children:"DeleteCookie"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method DeleteCookie(name As %String, index As %Integer = "") As %Boolean [ Final, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Removes this cookie from the collection, returns true if the cookie existed and false if it never existed."}),"\n",(0,s.jsx)(t.h3,{id:"getmimedata",children:"GetMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetMimeData(name As %String, default As %Stream.Object = "", index As %Integer = 1) As %Stream.Object [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the named multipart MIME stream."}),"\n",(0,s.jsx)(t.h3,{id:"insertmimedata",children:"InsertMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method InsertMimeData(name As %String, value As %Stream.Object) [ Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Inserts a multipart MIME stream by name into the collection."}),"\n",(0,s.jsx)(t.h3,{id:"isdefinedmimedata",children:"IsDefinedMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsDefinedMimeData(name As %String, index As %Integer = 1) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns true if the named multipart MIME stream exists in the collection, false otherwise."}),"\n",(0,s.jsx)(t.h3,{id:"countmimedata",children:"CountMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method CountMimeData(name As %String) As %Integer [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the count of multipart MIME streams with this name."}),"\n",(0,s.jsx)(t.h3,{id:"nextmimedata",children:"NextMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NextMimeData(name As %String) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves name of the next multipart MIME stream stored in the request object."}),"\n",(0,s.jsx)(t.h3,{id:"nextmimedataindex",children:"NextMimeDataIndex"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method NextMimeDataIndex(name As %String, index As %Integer = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Return the index number of the next multipart MIME stream stored in the request object."}),"\n",(0,s.jsx)(t.h3,{id:"deletemimedata",children:"DeleteMimeData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method DeleteMimeData(name As %String = "", index As %Integer = "") As %Integer [ Final, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Removes this multipart MIME stream from the collection. Returns the number of nodes it has removed. If name is not defined then it will remove the entire set of MimeData, if name is defined but index is not then it will remove all items stored under name."}),"\n",(0,s.jsx)(t.h3,{id:"getcgienv",children:"GetCgiEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetCgiEnv(name As %String, default As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the named CGI environment variable."}),"\n",(0,s.jsx)(t.h3,{id:"insertcgienv",children:"InsertCgiEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method InsertCgiEnv(name As %String, value As %String) [ Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Inserts a CGI environment variable by name into the collection."}),"\n",(0,s.jsx)(t.h3,{id:"isdefinedcgienv",children:"IsDefinedCgiEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsDefinedCgiEnv(name As %String) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns true if the named CGI environment variable exists in the collection, false otherwise."}),"\n",(0,s.jsx)(t.h3,{id:"nextcgienv",children:"NextCgiEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NextCgiEnv(name As %String) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the next CGI environment variable name in the sequence"}),"\n",(0,s.jsx)(t.h3,{id:"deletecgienv",children:"DeleteCgiEnv"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method DeleteCgiEnv(name As %String) As %Boolean [ Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Removes this CGI environment variable from the collection, returns true if the item was defined and false if it was never defined."}),"\n",(0,s.jsx)(t.h3,{id:"reset",children:"Reset"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Reset() [ CodeMode = generator, Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Resets this %CSP.Request object to its initial state"}),"\n",(0,s.jsx)(t.h3,{id:"cspgatewayreset",children:"CSPGatewayReset"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method CSPGatewayReset() [ CodeMode = generator, Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal function that resets some of the values in %CSP.Request object to its initial state. Only for use by the CSP engine itself."}),"\n",(0,s.jsx)(t.h3,{id:"processrequest",children:"ProcessRequest"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method ProcessRequest(header As %String) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"determinerequesttype",children:"DetermineRequestType"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method DetermineRequestType() [ Internal ]\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(96540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);