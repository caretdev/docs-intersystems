"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[98118],{92081:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>d,default:()=>a,frontMatter:()=>i,toc:()=>l});var r=n(74848),t=n(28453);const i={pagination_prev:null,pagination_next:null},d="%DeepSee.Query.node",l=[{value:"Parameters",id:"parameters",level:2},{value:"XMLIGNORENULL",id:"xmlignorenull",level:3},{value:"XMLIGNOREINVALIDATTRIBUTE",id:"xmlignoreinvalidattribute",level:3},{value:"NAMESPACE",id:"namespace",level:3},{value:"Properties",id:"properties",level:2},{value:"parent",id:"parent",level:3},{value:"value",id:"value",level:3},{value:"%PreProcessed",id:"preprocessed",level:3},{value:"Methods",id:"methods",level:2},{value:"%PrintNode",id:"printnode",level:3},{value:"%IsEnabled",id:"isenabled",level:3},{value:"%GetType",id:"gettype",level:3},{value:"%GetValue",id:"getvalue",level:3},{value:"%ToString",id:"tostring",level:3},{value:"%GetMemberProvider",id:"getmemberprovider",level:3},{value:"%PreProcess",id:"preprocess",level:3},{value:"%ProcessAxes",id:"processaxes",level:3},{value:"%ProcessFilter",id:"processfilter",level:3},{value:"%CopyNode",id:"copynode",level:3},{value:"%DeleteNode",id:"deletenode",level:3},{value:"%HideNode",id:"hidenode",level:3},{value:"%ReduceNode",id:"reducenode",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"deepseequerynode",children:"%DeepSee.Query.node"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Query.node Extends (%RegisteredObject, %XML.Adaptor) [ Abstract, System = 3 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Base class for DeepSee RunTime objects."}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.h3,{id:"xmlignorenull",children:"XMLIGNORENULL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter XMLIGNORENULL = 1;\n"})}),"\n",(0,r.jsx)(s.h3,{id:"xmlignoreinvalidattribute",children:"XMLIGNOREINVALIDATTRIBUTE"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter XMLIGNOREINVALIDATTRIBUTE = 0;\n"})}),"\n",(0,r.jsx)(s.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.intersystems.com/deepsee/query";\n'})}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"parent",children:"parent"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship parent As %DeepSee.Query.group(XMLPROJECTION = "none") [ Cardinality = one, Inverse = children ];\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Parent of this node.",(0,r.jsx)(s.br,{}),"\nThe type of the parent depends on context."]}),"\n",(0,r.jsx)(s.h3,{id:"value",children:"value"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property value As %DeepSee.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsx)(s.p,{children:"Value of this node. This is used by nodes that provide values."}),"\n",(0,r.jsx)(s.h3,{id:"preprocessed",children:"%PreProcessed"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property %PreProcessed As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,r.jsx)(s.p,{children:"Used to note if this instance of this node has run its %PreProcess method"}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"printnode",children:"%PrintNode"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PrintNode(pLevel As %Integer = 0)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Diagnostic. Print value of this node to the console."}),"\n",(0,r.jsx)(s.h3,{id:"isenabled",children:"%IsEnabled"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Method %IsEnabled(pCube As %String = "", Output pStatus As %Status = {$$$OK}, Output pReason As %String = "") As %Boolean\n'})}),"\n",(0,r.jsx)(s.p,{children:"Test this node to make sure all data references are currently marked enabled in the cube."}),"\n",(0,r.jsx)(s.h3,{id:"gettype",children:"%GetType"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetType() As %String\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Return the type of this node.",(0,r.jsx)(s.br,{}),"\nThe type can be one of the $$$dst macros.",(0,r.jsx)(s.br,{}),"\nThis is implemented by subclasses."]}),"\n",(0,r.jsx)(s.h3,{id:"getvalue",children:"%GetValue"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetValue() As %String\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Return the current value of this node.",(0,r.jsx)(s.br,{}),"\nThis is called when a literal value is needed during query processing. This is implemented by subclasses."]}),"\n",(0,r.jsx)(s.h3,{id:"tostring",children:"%ToString"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ToString(Output pSC As %Status) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Convert this node to its text representation."}),"\n",(0,r.jsx)(s.h3,{id:"getmemberprovider",children:"%GetMemberProvider"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetMemberProvider() As %DeepSee.Query.member\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the member provider object associated with this node, if any."}),"\n",(0,r.jsx)(s.h3,{id:"preprocess",children:"%PreProcess"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PreProcess(pIsSlicer As %Boolean = 0) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Execute the pre-processing logic for this node. pIsSlicer is true if this node is part of the slicer (WHERE) clause."}),"\n",(0,r.jsx)(s.h3,{id:"processaxes",children:"%ProcessAxes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessAxes(pCube As %String, pKey As %String, ByRef pNodeNo As %Integer, Output pNewNodeNo As %Integer, pParent As %Integer, pVisible As %Boolean = 1) As %Status [ Internal ]\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Execute and build the axes output for this node.",(0,r.jsx)(s.br,{}),"\npCube and pKey identify the current query.",(0,r.jsx)(s.br,{}),"\npNodeNo is used to track the next available node number in the axis graph.",(0,r.jsx)(s.br,{}),"\npNewNodeNo is the (top-most) node created by this call.",(0,r.jsx)(s.br,{}),"\npParent is the parent node to insert into.",(0,r.jsx)(s.br,{}),"\nIf pVisible is false, then force children to not be visible."]}),"\n",(0,r.jsx)(s.h3,{id:"processfilter",children:"%ProcessFilter"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessFilter(ByRef pFilterTree As %List, pCube As %String, ByRef pNodeNo As %Integer, Output pNewNodeNo As %Integer, pParent As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Process this node within the context of the filter section of a query",(0,r.jsx)(s.br,{}),"\npFilterTree is tree containing processed results.",(0,r.jsx)(s.br,{}),"\npCube is the cube name.",(0,r.jsx)(s.br,{}),"\npNodeNo is used to track the next available node number in the axis graph.",(0,r.jsx)(s.br,{}),"\npNewNodeNo is the (top-most) node created by this call.",(0,r.jsx)(s.br,{}),"\npParent is the parent node to insert into."]}),"\n",(0,r.jsx)(s.h3,{id:"copynode",children:"%CopyNode"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %CopyNode(pCubeIndex As %String, pKey As %String, ByRef pNodeNo As %Integer, pTargetNode As %Integer, pSourceNode As %Integer, pHideParent As %Boolean = 0, pWrapType As %String = "", pWrapDepth As %Integer = {+$G(%SetOpDepth(pKey))}) As %Status [ Internal ]\n'})}),"\n",(0,r.jsx)(s.p,{children:"Make a copy of node pSourceNode and add it to target node pTargetNode."}),"\n",(0,r.jsx)(s.h3,{id:"deletenode",children:"%DeleteNode"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteNode(pCubeIndex As %String, pKey As %String, pAxisNode As %Integer, pNodeNo As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the specified node and its children."}),"\n",(0,r.jsx)(s.h3,{id:"hidenode",children:"%HideNode"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %HideNode(pCubeIndex As %String, pKey As %String, pAxisNode As %Integer, pNodeNo As %Integer, pShow As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Hide (or display if pShow is true) the specified node and its children by clearing their visible flags."}),"\n",(0,r.jsx)(s.h3,{id:"reducenode",children:"%ReduceNode"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ReduceNode(pCubeIndex As %String, pKey As %String, pNodeNo As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Reduce the given node within the node tree. This means replacing set(set) with set."})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var r=n(96540);const t={},i=r.createContext(t);function d(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);