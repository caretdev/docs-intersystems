"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[37991],{93114:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>l,default:()=>o,frontMatter:()=>a,toc:()=>c});var t=n(74848),r=n(28453);const a={pagination_prev:null,pagination_next:null},l="%Api.Atelier.v6",c=[{value:"XDatas",id:"xdatas",level:2},{value:"UrlMap",id:"urlmap",level:3},{value:"Methods",id:"methods",level:2},{value:"Query",id:"query",level:3},{value:"AppendResultSet",id:"appendresultset",level:3},{value:"QueueAsync",id:"queueasync",level:3},{value:"PollAsync",id:"pollasync",level:3},{value:"CancelAsync",id:"cancelasync",level:3},{value:"SearchOutputToJSON",id:"searchoutputtojson",level:3},{value:"ExecuteAsyncRequest",id:"executeasyncrequest",level:3},{value:"AsyncRequestBeginCapture",id:"asyncrequestbegincapture",level:3},{value:"AsyncRequestEndCapture",id:"asyncrequestendcapture",level:3},{value:"PurgeAsyncQueue",id:"purgeasyncqueue",level:3}];function i(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"apiatelierv6",children:"%Api.Atelier.v6"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Api.Atelier.v6 Extends %Api.Atelier.v5\n"})}),"\n",(0,t.jsx)(s.p,{children:"%Api.Atelier.v6 provides version 6 APIs for Atelier"}),"\n",(0,t.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(s.h3,{id:"urlmap",children:"UrlMap"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'XData UrlMap [ XMLNamespace = "http://www.intersystems.com/urlmap" ]\n'})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"query",children:"Query"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Query(pNamespace As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This method returns the results of running the specified query in the specified namespace.",(0,t.jsx)(s.br,{}),"\nThe request body is simply a JSON object which specifies the query:"]}),"\n",(0,t.jsx)(s.p,{children:'{   "query": "SELECT TOP 1 Name FROM %Dictionary.ClassDefinition",   "parameters" : [] }'}),"\n",(0,t.jsx)(s.p,{children:"The URL parameter ?max= can be passed to specify the maximum number of rows to return. The value must be a positive integer or the default behavior (return all rows) will be used."}),"\n",(0,t.jsx)(s.p,{children:"HTTP Codes returned:-"}),"\n",(0,t.jsxs)(s.p,{children:["HTTP 200 if OK",(0,t.jsx)(s.br,{}),"\nHTTP 415 if the we are not passed application/json as the content type",(0,t.jsx)(s.br,{}),"\nHTTP 500 if an error occurs (details will be in status error array)"]}),"\n",(0,t.jsx)(s.p,{children:"If the URL parameter ?positional=1 is passed, the return object key will contain an array of objects, one for each result set, that contains the column metadata and the values for each row in separate arrays:"}),"\n",(0,t.jsx)(s.p,{children:'{   "status": {     "errors": [],     "summary": ""   },   "console": [],   "result": [      {        "columns": [          {            "name": "Name",            "type": "VARCHAR(4096)"          }        ],        "content": [          [            "%Api.Atelier"          ]        ]      }   ] }'}),"\n",(0,t.jsxs)(s.p,{children:["If the positional URL parameter is not passed or the value is not 1, the return content will be an array of objects.",(0,t.jsx)(s.br,{}),"\nThe objects contain information relating to each row returned by the query:"]}),"\n",(0,t.jsx)(s.p,{children:'{   "status": {     "errors": [],     "summary": ""   },   "console": [],   "result": {     "content": [       {         "Name": "%Api.Atelier"       }     ]   } }'}),"\n",(0,t.jsx)(s.h3,{id:"appendresultset",children:"AppendResultSet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AppendResultSet(pArray As %DynamicArray, pResult As %SQL.StatementResult, pMax As %Integer = -1, pPositional As %Boolean = 0) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Helper method for Query Appends result set (%SQL.StatementResult) to an array. Largely copied from %DataModel.Document.Server.SQL.Query If pMax is -1 (the default), return all rows. Else, returns pMax rows. If pPositional is 1, create an object with column metadata and the values for each row returned as an array. Else (the default), use the same return format as versions 1-5."}),"\n",(0,t.jsx)(s.h3,{id:"queueasync",children:"QueueAsync"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod QueueAsync(pNameSpace As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This call queues an item for work. On success it returns 202 and sets the 'Location' header",(0,t.jsx)(s.br,{}),"\nto indicate where the results can be retrieved from with an HTTP GET."]}),"\n",(0,t.jsx)(s.p,{children:"HTTP Codes returned:-"}),"\n",(0,t.jsxs)(s.p,{children:["HTTP 202 if Accepted",(0,t.jsx)(s.br,{}),"\nHTTP 404 if the request type does not exist",(0,t.jsx)(s.br,{}),"\nHTTP 500 if an error occurs (details will be in status error array)"]}),"\n",(0,t.jsx)(s.h3,{id:"pollasync",children:"PollAsync"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PollAsync(pNameSpace As %String, pID As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This call polls a queued item for console output and results. On success it returns 200.",(0,t.jsx)(s.br,{}),"\nConsole output and results are found in the standard locations for Atelier REST APIs.",(0,t.jsx)(s.br,{}),"\nIf there is more output expected the server will set the 'Retry-After' header. The client",(0,t.jsx)(s.br,{}),"\nshould read this header to determine if another call should be made.",(0,t.jsx)(s.br,{}),"\nWhen the result of processing is available (or the work is finished) a GET to this API",(0,t.jsx)(s.br,{}),"\nwill return any results in the 'content' field and (crucially) will NOT set the 'Retry-After'",(0,t.jsx)(s.br,{}),"\nheader. This is an indication that processing is finished."]}),"\n",(0,t.jsx)(s.p,{children:"HTTP Codes returned:-"}),"\n",(0,t.jsxs)(s.p,{children:["HTTP 200 if Accepted",(0,t.jsx)(s.br,{}),"\nHTTP 404 if the request ID does not exist",(0,t.jsx)(s.br,{}),"\nHTTP 423 if the global node is locked",(0,t.jsx)(s.br,{}),"\nHTTP 500 if an error occurs (details will be in status error array)"]}),"\n",(0,t.jsx)(s.h3,{id:"cancelasync",children:"CancelAsync"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CancelAsync(pNameSpace As %String, pID As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This call cancels a work request that has been previously queued."}),"\n",(0,t.jsx)(s.p,{children:"HTTP Codes returned:-"}),"\n",(0,t.jsxs)(s.p,{children:["HTTP 200 if Cancelled",(0,t.jsx)(s.br,{}),"\nHTTP 404 if the request ID does not exist",(0,t.jsx)(s.br,{}),"\nHTTP 423 if the global node is locked",(0,t.jsx)(s.br,{}),"\nHTTP 500 if an error occurs (details will be in status error array)"]}),"\n",(0,t.jsx)(s.h3,{id:"searchoutputtojson",children:"SearchOutputToJSON"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SearchOutputToJSON(pMsgArray As %DynamicArray, ByRef pResult As %DynamicArray) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Convert find in files console output into a JSON array. Extracted from the end of %Api.Atelier.v2::Search()."}),"\n",(0,t.jsx)(s.h3,{id:"executeasyncrequest",children:"ExecuteAsyncRequest"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExecuteAsyncRequest(pID As %Integer) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is a background job that monitors the queue for work to do"}),"\n",(0,t.jsx)(s.h3,{id:"asyncrequestbegincapture",children:"AsyncRequestBeginCapture"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AsyncRequestBeginCapture(pID As %Integer, Output pCookie As %String) As %Status [ Internal, ProcedureBlock = 0 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"asyncrequestendcapture",children:"AsyncRequestEndCapture"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AsyncRequestEndCapture(pCookie As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"purgeasyncqueue",children:"PurgeAsyncQueue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PurgeAsyncQueue() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Purge the ^IRIS.TempAtelierAsyncQueue global of any request data that is over a day old. Theoretically there should be nothing to clean up but this is needed in case some error occurs and request data is left behind."})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var t=n(96540);const r={},a=t.createContext(r);function l(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);