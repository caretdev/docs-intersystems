"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[97931],{59424:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>c,default:()=>l,frontMatter:()=>r,toc:()=>i});var s=t(74848),o=t(28453);const r={pagination_prev:null,pagination_next:null},c="%XGEN.AbstractSequence",i=[];function a(e){const n={br:"br",code:"code",em:"em",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"xgenabstractsequence",children:"%XGEN.AbstractSequence"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %XGEN.AbstractSequence Extends (%XGEN.AbstractNode, %XGEN.AbstractGroup) [ Abstract, Inheritance = right, System = 3 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This class is included because it is needed by other parts of the library. You should not use this or any other class within this package within your applications as a future version will be incompatible. If you are interested in this functionality please contact InterSystems."]}),"\n",(0,s.jsxs)(n.p,{children:["This is the base class for sequences within an XGEN document.",(0,s.jsx)(n.br,{}),"\nSee %XGEN.AbstractDocument for an overview of XGEN.",(0,s.jsx)(n.br,{}),"\nA sequence is a container that can hold one or more nodes within an XGEN document. A sequence does the following:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"optionally"})," Generates one or more lines of code before processing its children."]}),"\n",(0,s.jsx)(n.li,{children:"Loops over the child nodes within the sequence and asks each one to generate code in turn."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"optionally"})," Generates one or more lines of code after processing its children.\nTo create a new sequence within a XGEN document, create a subclass of this class and override the %OnBeforeGenerateCode and %OnAfterGenerateCode methods to generate sequence-specific code.",(0,s.jsx)(n.br,{}),"\nNote that a subclass can prevent its child nodes from being processed by setting the skipChildren property to 1 in its %OnBeforeGenerateCode method."]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(96540);const o={},r=s.createContext(o);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);