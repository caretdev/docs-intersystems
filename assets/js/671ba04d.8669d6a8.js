"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[24688],{11779:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>l,toc:()=>i});var r=s(74848),n=s(28453);const l={pagination_prev:null,pagination_next:null},a="%Library.IProcedureContext",i=[{value:"Properties",id:"properties",level:2},{value:"CurrentResult",id:"currentresult",level:3},{value:"Error",id:"error",level:3},{value:"Methods",id:"methods",level:2},{value:"CurrentResultGet",id:"currentresultget",level:3},{value:"CurrentResultSet",id:"currentresultset",level:3},{value:"ErrorSet",id:"errorset",level:3},{value:"NextResult",id:"nextresult",level:3},{value:"CloseCurrentResult",id:"closecurrentresult",level:3},{value:"%ResultColumnCountGet",id:"resultcolumncountget",level:3},{value:"%ProcCursorGet",id:"proccursorget",level:3},{value:"%MoreResults",id:"moreresults",level:3},{value:"%Next",id:"next",level:3},{value:"%Get",id:"get",level:3},{value:"%GetData",id:"getdata",level:3},{value:"%GetMetadata",id:"getmetadata",level:3},{value:"%SendODBC",id:"sendodbc",level:3},{value:"%SendDelimitedRows",id:"senddelimitedrows",level:3},{value:"%SendObjects",id:"sendobjects",level:3},{value:"%Print",id:"print",level:3},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchSetProperty",id:"dispatchsetproperty",level:3},{value:"%Display",id:"display",level:3},{value:"%DisplayFormatted",id:"displayformatted",level:3},{value:"Parameters",id:"parameters",level:4}];function o(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"libraryiprocedurecontext",children:"%Library.IProcedureContext"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Library.IProcedureContext Extends %SQL.StatementResult [ Abstract, System = 2 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Base procedure context interface"}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"currentresult",children:"CurrentResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property CurrentResult As %RegisteredObject [ Internal ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"Holds oref of the current resultset currently bound. Deprecated - use %CurrentResult."}),"\n",(0,r.jsx)(t.h3,{id:"error",children:"Error"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property Error As %SYSTEM.Error;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"currentresultget",children:"CurrentResultGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CurrentResultGet() As %Library.RegisteredObject [ CodeMode = expression, Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"currentresultset",children:"CurrentResultSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CurrentResultSet(value As %RawString) As %Library.Status [ CodeMode = expression, Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"errorset",children:"ErrorSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ErrorSet(newvalue As %RawString) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"nextresult",children:"NextResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method NextResult() As %RegisteredObject\n"})}),"\n",(0,r.jsx)(t.p,{children:"Called to return the next resultset object. This also removes the reference to the existing object so it can cleanup and close itself"}),"\n",(0,r.jsx)(t.h3,{id:"closecurrentresult",children:"CloseCurrentResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CloseCurrentResult() As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Close the current resultset object, used to allow the cleanup code to run and the cursor to close"}),"\n",(0,r.jsx)(t.h3,{id:"resultcolumncountget",children:"%ResultColumnCountGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ResultColumnCountGet() [ CodeMode = expression, Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"proccursorget",children:"%ProcCursorGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ProcCursorGet() [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"moreresults",children:"%MoreResults"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %MoreResults() As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:'%MoreResults() will serially bind the next result set to the result object cursor (implemented as %Next()). If a result set was previously bound to the result object cursor (referred to as the "procedural cursor" by the SQL Standard) then it will be unbound and the reference to that result set removed. Under normal circumstances the previously bound result set is destructed.'}),"\n",(0,r.jsx)(t.h3,{id:"next",children:"%Next"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Next(ByRef pStatus As %Library.Status) As %Library.Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Advance the procedural result set cursor to the next row. Returns 0 if the cursor is at the end of the result set or if an error was encountered. Errors are reported in dynamic SQL using the %SQLCODE and %Message properties of the statement result. An optional argument will contain a %Status value on return. This %Status value indicates success or failure of the %Next call but it should be considered to be a secondary error reporting interface, %SQLCODE being the primary error reporting mechanism. This implementation can be overridden by classes that implement the procedural cursor interface."}),"\n",(0,r.jsx)(t.h3,{id:"get",children:"%Get"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Get(pColumnName As %String = "") As %Library.String [ CodeMode = expression ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Returns the value of the column with the name pColumnName in the current row of the result set."}),"\n",(0,r.jsx)(t.p,{children:"If pColumnName is not a valid column name, this method returns an empty string."}),"\n",(0,r.jsx)(t.h3,{id:"getdata",children:"%GetData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetData(pColumnNumber As %Integer = 0) As %Library.String [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the value of column pColumnNumber in the current row of the result set."}),"\n",(0,r.jsx)(t.h3,{id:"getmetadata",children:"%GetMetadata"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetMetadata() As %SQL.StatementMetadata [ CodeMode = expression ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Return the result set metadata as a %SQL.StatementMetadata instance."}),"\n",(0,r.jsx)(t.h3,{id:"sendodbc",children:"%SendODBC"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendODBC() As %Library.Integer [ CodeMode = expression, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Fetch and send a series of rows for the ODBC/JDBC server. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"senddelimitedrows",children:"%SendDelimitedRows"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %SendDelimitedRows(pMaxRows As %Integer = 0, pDelimiter As %String = "", ByRef pReturnCount As %Integer = 0) As %Status [ CodeMode = expression, Internal ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Fetch and send a series of rows for continuous query client. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"sendobjects",children:"%SendObjects"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendObjects(pObjectCount As %Integer = 0, pLock As %Integer = 0) As %Library.Integer [ CodeMode = expression, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"%SendObjects iterates over the rows in the result set and calls object export (quick load) on each column that is present in ..%Objects. For internal use only."}),"\n",(0,r.jsx)(t.h3,{id:"print",children:"%Print"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Print(pDelimiter As %String = " ") As %Status [ CodeMode = expression ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Print the contents of the current row on the current device."}),"\n",(0,r.jsx)(t.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(pProperty As %String(MAXLEN=255)) [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"dispatchsetproperty",children:"%DispatchSetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchSetProperty(pProperty As %String, pValue As %String) [ Internal ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Property dispatch method to catch references to virtual properties.",(0,r.jsx)(t.br,{}),"\nThis should not be called directly."]}),"\n",(0,r.jsx)(t.h3,{id:"display",children:"%Display"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Display(pDelimiter As %String = {$Char(9)})\n"})}),"\n",(0,r.jsx)(t.p,{children:"Display the contents of this object on the current device"}),"\n",(0,r.jsx)(t.h3,{id:"displayformatted",children:"%DisplayFormatted"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %DisplayFormatted(pFormat As %String = -1, ByRef pFileName As %String(MAXLEN="") = "", ByRef pMessages As %SQL.Manager.Messages = "", ByRef pFilesUsed As %String(MAXLEN="") = 0, pTranslateTable As %String(MAXLEN="") = "", pDelimiter As %String)\n'})}),"\n",(0,r.jsx)(t.p,{children:"Display the contents of the %OutputValues() multidimentional property. If formatted display is available then format the results using the requested format and, if appropriate, open the formatted results using the host OS. The output is directed to one or more files and messages are placed in a result set object. All file names used are returned in an array."}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFormat"}),(0,r.jsxs)(t.td,{children:["The format applied to the result content. This parameter is also used to determine the file name extension. Supported formats are: -1%Display() format 0XML 1HTML 2PDF (requires a renderer such as FOP) 99TXT 100CSV If pFormat is specified as any number not listed above then it will default to TXT. pFormat can also be specified as XML, HTML, PDF, TXT or CSV. ",(0,r.jsx)(t.em,{children:"NOTE: pFormat of CSV/100 is not a true comma separated value, but instead behaves the same as TXT, displaying each %OutputValues() on a numbered line."})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFileName"}),(0,r.jsx)(t.td,{children:"The base file name to be used to generate actual file names used for output. If no value is specified then a file name will be generated, using the TEMP folder defined for the InterSystems IRIS instance. This value is not expected to include an extension. An extension is added to this value to form the actual file used. Also, if nested results exist then a number is appended to the file name specified to produce a unique name for each result."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pMessages"}),(0,r.jsx)(t.td,{children:"Instance of a system result set class. If no value is passed then the system message result class is instantiated. This parameter is passed by reference. It is up to the caller to process the result set oref that is returned. pMessages.Count() returns the number of messages contained in the result set. pMessages.%Display() will display the messages on the current device. pMessages.%DisplayFormatted() is also implemented and can be used to display the messages using the selected format."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pFilesUsed"}),(0,r.jsx)(t.td,{children:"This pass-by-reference parameter will contain the number of files used to display the result content and the name of each file. pFilesUsed is the number of files and pFilesUsed(file_number) is the name of the file. The sequence of the files is the same sequence as the results are processed. For simple result objects, there is a single file. For context objects that can contain result set sequences, the results are output in the order they are returned and the files used are present in pFilesUsed in that same order."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pTranslateTable"}),(0,r.jsx)(t.td,{children:"This is the translate table used for the output files when the format is CSV or TXT. This parameter is optional."})]})]})]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var r=s(96540);const n={},l=r.createContext(n);function a(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);