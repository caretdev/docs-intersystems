"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[33940],{2688:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>o,toc:()=>l});var n=i(74848),s=i(28453);const o={pagination_prev:null,pagination_next:null},r="%SYSTEM.Config",l=[{value:"Methods",id:"methods",level:2},{value:"Modifybbsiz",id:"modifybbsiz",level:3},{value:"ModifyConsoleFile",id:"modifyconsolefile",level:3},{value:"ModifyDumpStyle",id:"modifydumpstyle",level:3},{value:"ModifyLineRecallBuffer",id:"modifylinerecallbuffer",level:3},{value:"ModifyListFormat",id:"modifylistformat",level:3},{value:"ModifyLineRecallEntries",id:"modifylinerecallentries",level:3},{value:"ModifyMaxServers",id:"modifymaxservers",level:3},{value:"Modifynetjob",id:"modifynetjob",level:3},{value:"ModifyVMSConsoleTerminal",id:"modifyvmsconsoleterminal",level:3},{value:"ModifyWIJdir",id:"modifywijdir",level:3},{value:"ModifyZFSize",id:"modifyzfsize",level:3},{value:"ModifyZFString",id:"modifyzfstring",level:3}];function a(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"systemconfig",children:"%SYSTEM.Config"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SYSTEM.Config Extends Help [ Abstract, Final, System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"The $System.Config class provides methods to activate configuration settings without restarting InterSystems IRIS. For the most part, these do not need to be called directly by customer code because configuration classes will call them when modifying configuration settings."}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"modifybbsiz",children:"Modifybbsiz"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Modifybbsiz() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.Modifybbsiz(NewSetting) sets the default maximum bbsize. This setting will apply to all new InterSystems IRIS processes. It returns the previous value of the Config.config.bbsiz setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.Modifybbsiz() with no argument returns the active value of the Config.config.bbsiz setting.",(0,n.jsx)(t.br,{}),"\nThe input value will be modified to insure that it is at least as large as the minimum permitted value, no larger than the the largest permitted value, and rounded up to an appropriate chunk size. See the configuration settings section for permitted values."]}),"\n",(0,n.jsx)(t.h3,{id:"modifyconsolefile",children:"ModifyConsoleFile"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyConsoleFile() As %String\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyConsoleFile(NewSetting) changes the console file. It returns the previous value of the Config.config.ConsoleFile setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyConsoleFile() with no argument returns the current value.",(0,n.jsx)(t.br,{}),"\nThe input value will be modified to its canonic form."]}),"\n",(0,n.jsx)(t.h3,{id:"modifydumpstyle",children:"ModifyDumpStyle"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyDumpStyle() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyDumpStyle(NewSetting) changes the dumpstyle setting specified by the [Debug] section of cache.cpf for new processes. It returns the previous value of the dumpstyle setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyDumpStyle() with no argument returns the current value.",(0,n.jsx)(t.br,{}),'\nConsult "dumpstyle" in the Configuration Parameter File Reference for valid values.']}),"\n",(0,n.jsx)(t.h3,{id:"modifylinerecallbuffer",children:"ModifyLineRecallBuffer"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyLineRecallBuffer() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyLineRecallBuffer(NewSetting) sets the default LineRecallBuffer size. This setting will apply to all new InterSystems IRIS processes which do not specify -h on the command line. It returns the previous value of the Config.config.LineRecallBuffer setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyLineRecallBuffer() with no argument returns the active value of the Config.config.LineRecallBuffer setting.",(0,n.jsx)(t.br,{}),"\nThe value of LineRecallBuffer is 1024 out of the box. The input value will be modified to insure that it is within the range of permitted values and will be rounded up to a power of 2. See the configuration settings section for permitted values."]}),"\n",(0,n.jsx)(t.h3,{id:"modifylistformat",children:"ModifyListFormat"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyListFormat() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyListFormat(NewSetting) sets the default ListFormat value. This setting will apply to all new InterSystems IRIS processes. It returns the previous value of the ListFormat setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyListFormat() with no argument returns the current value.",(0,n.jsx)(t.br,{}),'\nConsult "ListFormat" in the Configuration Parameter File Reference for valid values.']}),"\n",(0,n.jsx)(t.h3,{id:"modifylinerecallentries",children:"ModifyLineRecallEntries"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyLineRecallEntries() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyLineRecallEntries(NewSetting) sets the default LineRecallEntries size. This setting will apply to all new InterSystems IRIS processes which do not specify -h on the command line. It returns the previous value of the Config.config.LineRecallEntries setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyLineRecallEntries() with no argument returns the active value of the Config.config.LineRecallEntries setting.",(0,n.jsx)(t.br,{}),"\nThe value of LineRecallEntries is 32 out of the box. The input value will be modified to insure that it is within the range of permitted values. See the configuration settings section for permitted values."]}),"\n",(0,n.jsx)(t.h3,{id:"modifymaxservers",children:"ModifyMaxServers"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyMaxServers() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyMaxServers(NewSetting) will change the active Config.config.MaxServers setting. It returns the new active value of the Config.config.MaxServers setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyMaxServers() with no argument returns the current value.",(0,n.jsx)(t.br,{}),"\nThis API works in conjunction with the Config.config class to determine how many ECP servers the InterSystems IRIS instance can access. Sufficient client network buffer and control structures are allocated during instance startup to support connection to Config.config.MaxServers ECP database servers. If the MaxServers setting is increased, the Config.config class will call $SYSTEM.Config.ModifyMaxServers() to activate the new maximum ECP database server setting. Additional client network buffer or control structures are allocated from the shared memory heap (SMheap) at this time if available and the new active number of ECP server structures is returned. An attempt to reduce MaxServers below the number allocated at startup or below the number actually in use will be ignored. If the InterSystems IRIS instance is restarted, buffers and control structures will be statically allocated to accomodate the Config.config.MaxServers setting. The $SYSTEM.Config.ModifyMaxServers() method is intended for use by InterSystems utilities and should not be called by customer code."]}),"\n",(0,n.jsx)(t.h3,{id:"modifynetjob",children:"Modifynetjob"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Modifynetjob() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.Modifynetjob(NewSetting) sets the activate value of the Config.config.netjob setting to NewSetting. Valid values of NewSetting are 0 (disable) and 1 (enable). This method is intended for use by InterSystems IRIS utilities. It should not be called directly by customer code. It will be executed when the Config.config object is saved if the netjob setting has been modified.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.Modifynetjob() with no argument returns the active value of the Config.config.netjob setting."]}),"\n",(0,n.jsx)(t.h3,{id:"modifyvmsconsoleterminal",children:"ModifyVMSConsoleTerminal"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyVMSConsoleTerminal() As %String\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyVMSConsoleTerminal(NewSetting) changes the console file. It returns the previous value of the Config.config.VMSConsoleTerminal setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyVMSConsoleTerminal() with no argument returns the current value.",(0,n.jsx)(t.br,{}),'\nIf input value is "" no output will be made to a console terminal.']}),"\n",(0,n.jsx)(t.h3,{id:"modifywijdir",children:"ModifyWIJdir"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyWIJdir() As %String\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyWIJdir(NewDirectory) modifies the active Config.config.wijdir setting and causes the Write Daemon to create and initializes the new .WIJ image journal file. This Method does not modify the configuration file or the configuration object. It is not intended to be called from customer code. It will be called as a result of the wijdir being changed when the CONFIG.config object is saved. It returns the previous active value of the Config.config.wijdir.",(0,n.jsx)(t.br,{}),'\nIt returns "" and does not change the active wij directory if a .WIJ image journal file already exists in the target directory.',(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyWIJdir() with no argument returns the active value of the Config.config.wijdir setting."]}),"\n",(0,n.jsx)(t.h3,{id:"modifyzfsize",children:"ModifyZFSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyZFSize() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyZFSize(NewSetting) sets the default zfheap allocation for InterSystems IRIS processes. This setting will apply to all new InterSystems IRIS processes. It returns the previous value of the Config.config.ZFSize setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyZFSize() with no argument returns the current value of the Config.config.ZFSize setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyZFSize(0) sets ZFSize to the default value.",(0,n.jsx)(t.br,{}),"\nThe input value will be modified to insure that it is at least as large as the minimum permitted value, no larger than the the largest permitted value, and rounded up to an appropriate chunk size. See the configuration settings section for permitted values."]}),"\n",(0,n.jsx)(t.h3,{id:"modifyzfstring",children:"ModifyZFString"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ModifyZFString() As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["$SYSTEM.Config.ModifyZFString(NewSetting) sets the amount of space allocated for values returned by callouts to external functions using $zf() It returns the previous value of the Config.config.ZFString setting.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyZFString() with no argument returns the current value.",(0,n.jsx)(t.br,{}),"\n$SYSTEM.Config.ModifyZFString(0) sets ZFString to the default value.",(0,n.jsx)(t.br,{}),"\nThe input value will be modified to insure that it is at least as large as the minimum permitted value, no larger than the the largest permitted value, and rounded up to an appropriate chunk size. See the configuration settings section for permitted values."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>l});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);