"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[35364],{93032:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>o,default:()=>l,frontMatter:()=>a,toc:()=>i});var r=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},o="%Projection.Shard",i=[{value:"Methods",id:"methods",level:2},{value:"CreateProjection",id:"createprojection",level:3},{value:"RemoveProjection",id:"removeprojection",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"projectionshard",children:"%Projection.Shard"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Projection.Shard Extends AbstractProjection\n"})}),"\n",(0,r.jsx)(t.p,{children:"Projection class called for any sharded table"}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"createprojection",children:"CreateProjection"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateProjection(classname As %String, ByRef parameters As %String, modified As %String, qstruct) As %Status\n"})}),"\n",(0,r.jsxs)(t.p,{children:['This method is called by the Class Compiler whenever an associated class has finished compiling. classname contains the name of the associated class while parameters contains an array of the projection parameters subscripted by parameter name. Also the special parameter value parameters("%qstruct") contains a merge of the qstruct array this projection is being compiled with. The modified is always blank.',(0,r.jsx)(t.br,{}),"\nAny errors reported by this method are reported by the Class Compiler but do not effect class compilation in any way."]}),"\n",(0,r.jsx)(t.h3,{id:"removeprojection",children:"RemoveProjection"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RemoveProjection(classname As %String, ByRef parameters As %String, recompile As %Boolean, modified As %String, qstruct) As %Status\n"})}),"\n",(0,r.jsxs)(t.p,{children:['This method is called by the Class Compiler whenever an associated class is either a) about to be recompiled, or b) about to be deleted. classname contains the name of the associated class while parameters contains an array of the projection parameters subscripted by parameter name. Also the special parameter value parameters("%qstruct") contains a merge of the qstruct array this projection is being uncompiled/deleted with. recompile is true (1) if the associated class is about to be recompiled. The modified is always blank.',(0,r.jsx)(t.br,{}),"\nAny errors reported by this method are reported by the Class Compiler but do not effect class compilation in any way."]})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var r=s(96540);const n={},a=r.createContext(n);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);