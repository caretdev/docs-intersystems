"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[69814],{4427:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>i,default:()=>d,frontMatter:()=>t,toc:()=>c});var a=s(74848),l=s(28453);const t={pagination_prev:null,pagination_next:null},i="%CSP.UI.Portal.Dialog.Import",c=[{value:"Parameters",id:"parameters",level:2},{value:"APPLICATION",id:"application",level:3},{value:"CSPURL",id:"cspurl",level:3},{value:"RESOURCE",id:"resource",level:3},{value:"PAGENAME",id:"pagename",level:3},{value:"AUTONS",id:"autons",level:3},{value:"APPLYBUTTON",id:"applybutton",level:3},{value:"CheckMaxSize",id:"checkmaxsize",level:3},{value:"Properties",id:"properties",level:2},{value:"CHARSET",id:"charset",level:3},{value:"FILETYPE",id:"filetype",level:3},{value:"NAMESPACE",id:"namespace",level:3},{value:"FILEFLAG",id:"fileflag",level:3},{value:"INPUTTYPE",id:"inputtype",level:3},{value:"LOCALFILENAME",id:"localfilename",level:3},{value:"IMPORTALL",id:"importall",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Contents",id:"contents",level:3},{value:"dialogBody",id:"dialogbody",level:3},{value:"Methods",id:"methods",level:2},{value:"selectLocalFile",id:"selectlocalfile",level:3},{value:"changedImportType",id:"changedimporttype",level:3},{value:"doLocationChange",id:"dolocationchange",level:3},{value:"doImport",id:"doimport",level:3},{value:"updateState",id:"updatestate",level:3},{value:"drawDone",id:"drawdone",level:3},{value:"canGoNext",id:"cangonext",level:3},{value:"canGoBack",id:"cangoback",level:3},{value:"canFinish",id:"canfinish",level:3},{value:"hasMultiplePages",id:"hasmultiplepages",level:3},{value:"nextPage",id:"nextpage",level:3},{value:"previousPage",id:"previouspage",level:3},{value:"ondialogFinish",id:"ondialogfinish",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"getDialogValue",id:"getdialogvalue",level:3},{value:"onresizeHandler",id:"onresizehandler",level:3},{value:"browseSelect",id:"browseselect",level:3},{value:"onPopupAction",id:"onpopupaction",level:3},{value:"onstartHandler",id:"onstarthandler",level:3},{value:"getSelected",id:"getselected",level:3},{value:"toggleCheckboxes",id:"togglecheckboxes",level:3},{value:"%OnGetTitle",id:"ongettitle",level:3},{value:"%OnGetSubtitle",id:"ongetsubtitle",level:3},{value:"%OnAfterCreatePage",id:"onaftercreatepage",level:3},{value:"DrawPageTitle",id:"drawpagetitle",level:3},{value:"SaveSelection",id:"saveselection",level:3},{value:"DrawContent",id:"drawcontent",level:3},{value:"GetStatus",id:"getstatus",level:3},{value:"ValidateFile",id:"validatefile",level:3},{value:"PrepareAction",id:"prepareaction",level:3},{value:"%OnSubmit",id:"onsubmit",level:3}];function r(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cspuiportaldialogimport",children:"%CSP.UI.Portal.Dialog.Import"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Class %CSP.UI.Portal.Dialog.Import Extends %CSP.UI.Portal.Dialog.WizardTemplate [ System = 4 ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,a.jsx)(n.p,{children:"Import dialog for Management Portal"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Please do not modify any part of this dialog without COMPLETELY testing all cases!!!"}),"\n",(0,a.jsx)(n.strong,{children:"This dialog is used by Classes/Routines/Globals for Namespaces and Classes/Routines for Databases."}),"\n",(0,a.jsx)(n.strong,{children:"Please be extremely careful!!!"})]}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(n.h3,{id:"application",children:"APPLICATION"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter APPLICATION = "%CSP.UI.Portal.Application";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Class name of application this page belongs to."}),"\n",(0,a.jsx)(n.h3,{id:"cspurl",children:"CSPURL"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter CSPURL = "/csp/sys/exp/%CSP.UI.Portal.Dialog.Import.zen";\n'})}),"\n",(0,a.jsx)(n.h3,{id:"resource",children:"RESOURCE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter RESOURCE = "%Development:USE";\n'})}),"\n",(0,a.jsx)(n.h3,{id:"pagename",children:"PAGENAME"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter PAGENAME = "Import";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Displayed name of this page."}),"\n",(0,a.jsx)(n.h3,{id:"autons",children:"AUTONS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter AUTONS As BOOLEAN = 1;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"applybutton",children:"APPLYBUTTON"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter APPLYBUTTON As BOOLEAN = 0;\n"})}),"\n",(0,a.jsx)(n.p,{children:"If true, then this dialog displays an Apply button."}),"\n",(0,a.jsx)(n.h3,{id:"checkmaxsize",children:"CheckMaxSize"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter CheckMaxSize = 10000000;\n"})}),"\n",(0,a.jsx)(n.p,{children:"If greater than this size then show content will not be available."}),"\n",(0,a.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(n.h3,{id:"charset",children:"CHARSET"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property CHARSET As %String;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"filetype",children:"FILETYPE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property FILETYPE As %ZEN.Datatype.string(ZENURL = "FILETYPE");\n'})}),"\n",(0,a.jsx)(n.p,{children:"Type from where we get the selected items from: Class or Routine."}),"\n",(0,a.jsx)(n.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property NAMESPACE As %ZEN.Datatype.string(ZENURL = "$NAMESPACE");\n'})}),"\n",(0,a.jsx)(n.h3,{id:"fileflag",children:"FILEFLAG"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property FILEFLAG As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"inputtype",children:"INPUTTYPE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property INPUTTYPE As %ZEN.Datatype.string(ZENURL = "INPUTTYPE");\n'})}),"\n",(0,a.jsx)(n.h3,{id:"localfilename",children:"LOCALFILENAME"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property LOCALFILENAME As %ZEN.Datatype.string;\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is the temporary file name we saved on remote server, only saved when Input Type is LOCAL."}),"\n",(0,a.jsx)(n.h3,{id:"importall",children:"IMPORTALL"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property IMPORTALL As %Boolean [ InitialExpression = "0" ];\n'})}),"\n",(0,a.jsx)(n.p,{children:"If this is 1 then file content will not be shown and entire file will be imported in the background."}),"\n",(0,a.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,a.jsx)(n.p,{children:"This Style block contains page-specific CSS style definitions."}),"\n",(0,a.jsx)(n.h3,{id:"contents",children:"Contents"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'XData Contents [ XMLNamespace = "http://www.intersystems.com/zen" ]\n'})}),"\n",(0,a.jsx)(n.h3,{id:"dialogbody",children:"dialogBody"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'XData dialogBody [ XMLNamespace = "http://www.intersystems.com/zen" ]\n'})}),"\n",(0,a.jsx)(n.p,{children:"This XML block defines the contents of this pane."}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.h3,{id:"selectlocalfile",children:"selectLocalFile"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod selectLocalFile() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"changedimporttype",children:"changedImportType"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod changedImportType(thisObj) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"dolocationchange",children:"doLocationChange"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod doLocationChange(flag) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"User changed to pick file between Remote and Local"}),"\n",(0,a.jsx)(n.h3,{id:"doimport",children:"doImport"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod doImport() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Start the Import"}),"\n",(0,a.jsx)(n.h3,{id:"updatestate",children:"updateState"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod updateState() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Update the state of the template buttons. Subclasses should call this method when they need to update the state of the footer buttons."}),"\n",(0,a.jsx)(n.h3,{id:"drawdone",children:"drawDone"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod drawDone(tab) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This method is fired up after onDrawContent is finished. Hide progress message and display error if exists."}),"\n",(0,a.jsx)(n.h3,{id:"cangonext",children:"canGoNext"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod canGoNext() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Return true if this template can go to the next page (i.e., enable the Next button)."}),"\n",(0,a.jsx)(n.h3,{id:"cangoback",children:"canGoBack"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod canGoBack() [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Return true if this template can go to the previous page (i.e., enable the Back button).",(0,a.jsx)(n.br,{}),"\nThis is implemented by subclasses."]}),"\n",(0,a.jsx)(n.h3,{id:"canfinish",children:"canFinish"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod canFinish() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Return true if this template can Finish (i.e., enable the Finish button)."}),"\n",(0,a.jsx)(n.h3,{id:"hasmultiplepages",children:"hasMultiplePages"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod hasMultiplePages() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"nextpage",children:"nextPage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod nextPage() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Go to the next page of the template (if there is one)."}),"\n",(0,a.jsx)(n.h3,{id:"previouspage",children:"previousPage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod previousPage() [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Go to the previous page of the template (if there is one).",(0,a.jsx)(n.br,{}),"\nThis is implemented by subclasses."]}),"\n",(0,a.jsx)(n.h3,{id:"ondialogfinish",children:"ondialogFinish"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod ondialogFinish(action) As %Boolean [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This callback, if defined, is called when the user presses the OK or Apply action buttons. If this returns false, then the action is cancelled."}),"\n",(0,a.jsx)(n.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This client event, if present, is fired when the page is loaded."}),"\n",(0,a.jsx)(n.h3,{id:"getdialogvalue",children:"getDialogValue"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getDialogValue() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"onresizehandler",children:"onresizeHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onresizeHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This client event, if present, is fired when the page is resized."}),"\n",(0,a.jsx)(n.h3,{id:"browseselect",children:"browseSelect"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod browseSelect(name) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"User clicked the Browse button."}),"\n",(0,a.jsx)(n.h3,{id:"onpopupaction",children:"onPopupAction"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onPopupAction(popupName, action, value) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:'Returning from file select OR qualifers dialog and setting the value into the appropriate field. The id of the field that needs to be updated is saved in "dialogClicked".'}),"\n",(0,a.jsx)(n.h3,{id:"onstarthandler",children:"onstartHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onstartHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is called when the template is first displayed; This provides a chance to load the last filetype, etc."}),"\n",(0,a.jsx)(n.h3,{id:"getselected",children:"getSelected"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getSelected() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"togglecheckboxes",children:"toggleCheckboxes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod toggleCheckboxes(cbState) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"ongettitle",children:"%OnGetTitle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnGetTitle() As %String\n"})}),"\n",(0,a.jsx)(n.p,{children:"Get the (localized) title string for the dialog. This should be implemented in a subclass."}),"\n",(0,a.jsx)(n.h3,{id:"ongetsubtitle",children:"%OnGetSubtitle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnGetSubtitle() As %String\n"})}),"\n",(0,a.jsx)(n.p,{children:"Get the (localized) subtitle string for the dialog. This should be implemented in a subclass."}),"\n",(0,a.jsx)(n.h3,{id:"onaftercreatepage",children:"%OnAfterCreatePage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnAfterCreatePage() As %Status\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This callback is called after the server-side page object and all of its children are created.",(0,a.jsx)(n.br,{}),"\nSubclasses can override this to add, remove, or modify items within the page object model, or to provide values for controls."]}),"\n",(0,a.jsx)(n.h3,{id:"drawpagetitle",children:"DrawPageTitle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DrawPageTitle(pSeed As %String) As %Status\n"})}),"\n",(0,a.jsx)(n.h3,{id:"saveselection",children:"SaveSelection"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod SaveSelection(FILETYPE, ImportType, FileName) [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"FILTTYPE=Class/Routine/Global, ImportType=FILE/DIR"}),"\n",(0,a.jsx)(n.h3,{id:"drawcontent",children:"DrawContent"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DrawContent(pSeed) As %Status\n"})}),"\n",(0,a.jsx)(n.p,{children:"Draw content of the import file for user to select from. For Global, check size and type. Do not show file content for Sequential file larger than 10MB."}),"\n",(0,a.jsx)(n.h3,{id:"getstatus",children:"GetStatus"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetStatus(tab, FILETYPE) As %ZEN.proxyObject [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(n.p,{children:'tab = 2: Content - when DrawContent is finished, Status is "Done".'}),"\n",(0,a.jsx)(n.h3,{id:"validatefile",children:"ValidateFile"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ValidateFile(FILETYPE, ImportType, FILE) As %Integer [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Validate file name. If ImportType is DIR then check if directory exists."}),"\n",(0,a.jsx)(n.h3,{id:"prepareaction",children:"PrepareAction"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod PrepareAction(filetype, selectedRows) As %String [ ZenMethod ]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"onsubmit",children:"%OnSubmit"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %OnSubmit(pSubmit As %ZEN.Submit) As %Status\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This method is invoked only when user selects to import from Local Machine.",(0,a.jsx)(n.br,{}),"\nThe necessary parameters are passed in URL. The temp file name is saved in %session and to be used in loading content."]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var a=s(96540);const l={},t=a.createContext(l);function i(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);