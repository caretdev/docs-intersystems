"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[45751],{96927:(e,r,a)=>{a.r(r),a.d(r,{contentTitle:()=>o,default:()=>c,frontMatter:()=>s,toc:()=>l});var t=a(74848),n=a(28453);const s={pagination_prev:null,pagination_next:null},o="%ZEN.Component.abstractDragGroupMgr",l=[{value:"Parameters",id:"parameters",level:2},{value:"INCLUDEFILES",id:"includefiles",level:3},{value:"DEFAULTENCLOSINGCLASS",id:"defaultenclosingclass",level:3},{value:"Properties",id:"properties",level:2},{value:"groupName",id:"groupname",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"broadcast",id:"broadcast",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"getGroupManager",id:"getgroupmanager",level:3},{value:"bringToFront",id:"bringtofront",level:3},{value:"forceRefresh",id:"forcerefresh",level:3},{value:"getWallpaperDiv",id:"getwallpaperdiv",level:3}];function i(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"zencomponentabstractdraggroupmgr",children:"%ZEN.Component.abstractDragGroupMgr"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.abstractDragGroupMgr Extends activeGroup [ Deprecated, System = 3 ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"%ZEN.Component.abstractDragGroupMgr This is a parent class to house common functionality for all of the activeGroups that are expected to have instances of DragGroup as their only immediate children"}),"\n",(0,t.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(r.h3,{id:"includefiles",children:"INCLUDEFILES"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:'Parameter INCLUDEFILES = "zenCSLM.js";\n'})}),"\n",(0,t.jsx)(r.h3,{id:"defaultenclosingclass",children:"DEFAULTENCLOSINGCLASS"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:'Parameter DEFAULTENCLOSINGCLASS = "activeGroup";\n'})}),"\n",(0,t.jsx)(r.p,{children:"To be compatible with the static layout manager the enclosing class has to be the generic activeGroup rather than the specific type of dragGroup manager such as desktopGroup. The desktopGroup (et al.) is the one used for tuning attributes of the absolutely positioned elements."}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(r.h3,{id:"groupname",children:"groupName"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:'Property groupName As %ZEN.Datatype.string [ InitialExpression = "dragMgr" ];\n'})}),"\n",(0,t.jsx)(r.p,{children:"The logical name of the manager with respect to the external JavaScript code that actually manages the space"}),"\n",(0,t.jsx)(r.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(r.h3,{id:"style",children:"Style"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,t.jsx)(r.h3,{id:"broadcast",children:"broadcast"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod broadcast(signal, value) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(r.p,{children:['Send one of several predefined signals to each of the active DragGroup windows associated with this group. Valid signals to pass include:  "resize" - call the onresize handler (if any) for each window',(0,t.jsx)(r.br,{}),'\n"disableCoverplate" - hide the event trapper coverplate from all windows "disableResize" - remove the resize pip from the lower right corners of the windows',(0,t.jsx)(r.br,{}),'\n"disableMaxToggle" - reset mouse clicks on the header to the default (drag) behavior',(0,t.jsx)(r.br,{}),'\n"enableCoverplate" - force an invisible event trapper to cover the window to prevent contents from seeing events',(0,t.jsx)(r.br,{}),'\n"enableMaxToggle" - redefine the window header to be a maximize button rather than a drag handle',(0,t.jsx)(r.br,{}),'\n"enableResize" - restore the resize pip to the lower right corners of the windows',(0,t.jsx)(r.br,{}),'\n"removeDragHeader" - completely hide the drag handle and resize the window to use the recovered space',(0,t.jsx)(r.br,{}),'\n"restoreDragHeader" - restore the drag handle and resize the window to account for the newly used space',(0,t.jsx)(r.br,{}),'\n"setBodyStyle" - given a JSON representation of a style object in value, add the given rules to the existing style of the drag body',(0,t.jsx)(r.br,{}),'\n"setHeaderStyle" - given a JSON representation of a style object in value, add the given rules to the existing style of the drag header',(0,t.jsx)(r.br,{}),'\n"setHeaderLayout" - set the headerLayout property of all children to the given value "processAppMessage" - simply pass the value given to the dragGroup children, subclasses of dragGroup can override the default processAppMessage() method to extend the broadcast facility to address application specific signals']}),"\n",(0,t.jsx)(r.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Set the value of a named property."}),"\n",(0,t.jsx)(r.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"This forces the initial managerEngine pointer to null, subclasses should reinitialize this on page load."}),"\n",(0,t.jsx)(r.h3,{id:"getgroupmanager",children:"getGroupManager"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod getGroupManager() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Find the client-side group manager engine for this projection"}),"\n",(0,t.jsx)(r.h3,{id:"bringtofront",children:"bringToFront"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod bringToFront(dragGroup) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:'Programmatically give the "focus" to the given drag group'}),"\n",(0,t.jsx)(r.h3,{id:"forcerefresh",children:"forceRefresh"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod forceRefresh() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Force a refresh of the grid size based of the current geometries"}),"\n",(0,t.jsx)(r.h3,{id:"getwallpaperdiv",children:"getWallpaperDiv"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod getWallpaperDiv() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(r.p,{children:"Return the HTML node used as the backdrop for the snapGrid."})]})}function c(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},28453:(e,r,a)=>{a.d(r,{R:()=>o,x:()=>l});var t=a(96540);const n={},s=t.createContext(n);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);