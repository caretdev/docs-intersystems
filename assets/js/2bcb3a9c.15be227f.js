"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[78656],{96601:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>o,frontMatter:()=>n,toc:()=>a});var r=t(74848),i=t(28453);const n={pagination_prev:null,pagination_next:null},l="%CSP.Portal.Utils",a=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"Methods",id:"methods",level:2},{value:"%AddFavorite",id:"addfavorite",level:3},{value:"%GetFavoritesForUser",id:"getfavoritesforuser",level:3},{value:"%GetRecentItemsForUser",id:"getrecentitemsforuser",level:3},{value:"%RegisterRecentItem",id:"registerrecentitem",level:3},{value:"%ClearRecentItems",id:"clearrecentitems",level:3},{value:"%ClearFavoriteItems",id:"clearfavoriteitems",level:3},{value:"%RemoveRecentItem",id:"removerecentitem",level:3},{value:"%RemoveFavoriteItem",id:"removefavoriteitem",level:3},{value:"%GetNamespaceList",id:"getnamespacelist",level:3},{value:"%GetCustomResource",id:"getcustomresource",level:3},{value:"%SetCustomResource",id:"setcustomresource",level:3},{value:"%CheckCustomResource",id:"checkcustomresource",level:3},{value:"%CheckTaskResource",id:"checktaskresource",level:3},{value:"%DrawError",id:"drawerror",level:3},{value:"%GetCustomResourceList",id:"getcustomresourcelist",level:3},{value:"%IsPortalPage",id:"isportalpage",level:3},{value:"CheckLinkAccess",id:"checklinkaccess",level:3},{value:"Who is the target user?",id:"who-is-the-target-user",level:3},{value:"CheckLinkAccess Policy",id:"checklinkaccess-policy",level:3},{value:"CheckLoggedInResources",id:"checkloggedinresources",level:3},{value:"GetValidatedLink",id:"getvalidatedlink",level:3},{value:"%IsAutoRefreshEnabled",id:"isautorefreshenabled",level:3},{value:"%IsConnectivityPopupDisabled",id:"isconnectivitypopupdisabled",level:3},{value:"GetAllowedDirectories",id:"getalloweddirectories",level:3},{value:"AllowDirectory",id:"allowdirectory",level:3},{value:"RemoveDirectory",id:"removedirectory",level:3},{value:"ClearDirectories",id:"cleardirectories",level:3},{value:"RestrictDirectories",id:"restrictdirectories",level:3},{value:"IsDirectoryAllowed",id:"isdirectoryallowed",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"cspportalutils",children:"%CSP.Portal.Utils"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %CSP.Portal.Utils Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"APIs used by the System Management Portal."}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%Utility";\n'})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"addfavorite",children:"%AddFavorite"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %AddFavorite(pName As %String, pLink As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Add item to favorites list."}),"\n",(0,r.jsx)(s.h3,{id:"getfavoritesforuser",children:"%GetFavoritesForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetFavoritesForUser(Output pFavorites) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the current favorites list for the current user: pItems(n) = $LB(name,date,url)"}),"\n",(0,r.jsx)(s.h3,{id:"getrecentitemsforuser",children:"%GetRecentItemsForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetRecentItemsForUser(Output pItems) As %Status\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Return the recent items list for the current user:",(0,r.jsx)(s.br,{}),"\npItems(n) = $LB(name,date,url)",(0,r.jsx)(s.br,{}),"\nThese are reset on system restart."]}),"\n",(0,r.jsx)(s.h3,{id:"registerrecentitem",children:"%RegisterRecentItem"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %RegisterRecentItem(pName As %String, pURL As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Add this item to the recent item list."}),"\n",(0,r.jsx)(s.h3,{id:"clearrecentitems",children:"%ClearRecentItems"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ClearRecentItems(pUser As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Delete recent item list for given user. If user is not specified, delete all items."}),"\n",(0,r.jsx)(s.h3,{id:"clearfavoriteitems",children:"%ClearFavoriteItems"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ClearFavoriteItems(pUser As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Delete favorite item list for given user. If user is not specified, delete all items."}),"\n",(0,r.jsx)(s.h3,{id:"removerecentitem",children:"%RemoveRecentItem"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %RemoveRecentItem(pName As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete a recent item for the current user."}),"\n",(0,r.jsx)(s.h3,{id:"removefavoriteitem",children:"%RemoveFavoriteItem"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %RemoveFavoriteItem(pName As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete a favorite item for the current user."}),"\n",(0,r.jsx)(s.h3,{id:"getnamespacelist",children:"%GetNamespaceList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetNamespaceList(Output pNamespaces As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:'Get a list of namespaces which the current user may access. pNamespaces is returned as an array with the following structure: pNamespaces("NAMESPACE") = $lb(enabled,remote)'}),"\n",(0,r.jsx)(s.h3,{id:"getcustomresource",children:"%GetCustomResource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetCustomResource(pID As %String) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get the custom resource assigned to a given id (url). Note that pID should be URL-encoded."}),"\n",(0,r.jsx)(s.h3,{id:"setcustomresource",children:"%SetCustomResource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %SetCustomResource(pID As %String, pResource As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Set the custom resource assigned to a given id (url). Note that pID should be URL-encoded."}),"\n",(0,r.jsx)(s.h3,{id:"checkcustomresource",children:"%CheckCustomResource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %CheckCustomResource(pURL As %String) As %Boolean\n"})}),"\n",(0,r.jsx)(s.p,{children:"Check the custom resource (if any) assigned to a given URL. Note that pURL should be URL-encoded."}),"\n",(0,r.jsx)(s.h3,{id:"checktaskresource",children:"%CheckTaskResource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %CheckTaskResource() As %Boolean\n"})}),"\n",(0,r.jsx)(s.h3,{id:"drawerror",children:"%DrawError"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DrawError(pStatus As %Status) As %Status\n"})}),"\n",(0,r.jsx)(s.h3,{id:"getcustomresourcelist",children:"%GetCustomResourceList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetCustomResourceList(pList As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return a list of all currently used custom resource names."}),"\n",(0,r.jsx)(s.h3,{id:"isportalpage",children:"%IsPortalPage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %IsPortalPage(pPage As %String = "", Output pNormPage As %String) As %Boolean [ Internal ]\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Return a boolean to indicate whether a supplied URL/Link is a page in the ISC portals.",(0,r.jsx)(s.br,{}),"\npPage should be URL-encoded.",(0,r.jsx)(s.br,{}),"\nIf the URL is in the portal, then pNormPage is the classname of the class that handles requests for the URL."]}),"\n",(0,r.jsx)(s.h3,{id:"checklinkaccess",children:"CheckLinkAccess"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CheckLinkAccess(link As %String) As %Integer\n"})}),"\n",(0,r.jsx)(s.p,{children:"CheckLinkAccess determines whether the target user is permitted to view a given CSP or Zen page based on the security requirements for the relevant target Web application, the underlying page class, and any custom resources applied to the link."}),"\n",(0,r.jsx)(s.p,{children:"Returns 0 if the link is not to a csp application. (enable)"}),"\n",(0,r.jsx)(s.p,{children:"Returns 1 if the user is permitted access to the page. (enable)"}),"\n",(0,r.jsx)(s.p,{children:"Returns 2 if could not determine Target User. Clicking on link will bring up login page. (choice: enable or disable)"}),"\n",(0,r.jsx)(s.p,{children:"Returns 3 if the user doesn't have access to the CSP application.(disable)"}),"\n",(0,r.jsx)(s.p,{children:"Returns 4 if the user doesn't have resources specific to the page.(disable)"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"It is assumed the CheckLinkAccess is called from a context in which %session and %request are available, ie, from callpage in the CSP Server"}),"\n",(0,r.jsx)(s.li,{children:"In order to minimize information trolling, CheckLinkAccess will just return a bit indicating if the link should be enabled in the current calling context."}),"\n",(0,r.jsxs)(s.li,{children:["Definitions:\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Source application - application in which the current caller is being run"}),"\n",(0,r.jsx)(s.li,{children:"Current user - ($Username) the user currently logged into the Source Application"}),"\n",(0,r.jsx)(s.li,{children:"Target Application - the application pointed to by the link"}),"\n",(0,r.jsx)(s.li,{children:"Target User - the computed username under which the user will be logged into the Target Application"}),"\n",(0,r.jsx)(s.li,{children:"Target Page: the page portion of the link, e.g., /csp/app/mypage.csp: mypage.csp"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"This method is meant to be called from the link's containing page within the context of the CSP server. The containing page is part of a source application."}),"\n",(0,r.jsx)(s.p,{children:"We must be able to detemine which target user will be used to check privileges. The target user cannot be determined if the source and target applications are different and the target is neither part of an active by-id group nor sharing-sessions with the source application."}),"\n",(0,r.jsx)(s.p,{children:"Applications share sessions when:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The source and target are the same application."}),"\n",(0,r.jsx)(s.li,{children:"The link to the target page contains CSPSHARE=1."}),"\n",(0,r.jsx)(s.li,{children:"Source and target applications have the same Session Cookie Path."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"who-is-the-target-user",children:"Who is the target user?"}),"\n",(0,r.jsx)(s.p,{children:"Since this is called from with a CSP session, there are the following situations:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"The target application is a member of an authenticated by-id group. That group's authenticated user is the Target User."}),"\n",(0,r.jsxs)(s.li,{children:["The target application will be in the current session. The CSP server has already handled logic for determing the user.\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"The session's user is not UnknownUser. The target user is $Username."}),"\n",(0,r.jsxs)(s.li,{children:["The session's user is UnknownUser\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"If the target application is the source application, the Target User is UnknownUser."}),"\n",(0,r.jsx)(s.li,{children:"If the target application is different, the target user is the user from the session's Sticky-context. If the session has no sticky-context, the Target User will be UnknownUser"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"checklinkaccess-policy",children:"CheckLinkAccess Policy"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"If the Target Application is not a CSP Application, return ENABLE/UNKNOWN"}),"\n",(0,r.jsx)(s.li,{children:"If the Source and Target application are the same, skip to check resources."}),"\n",(0,r.jsx)(s.li,{children:"If the Target Application is neither in an authenticated by-id group nor in the Source Application's session, return ENABLE/UNKNOWN"}),"\n",(0,r.jsx)(s.li,{children:"Compute the Target User. See 'Who is Target User?' above."}),"\n",(0,r.jsx)(s.li,{children:"If the Target Application is two-factor enabled and the Target User is not, return NO_APP_ACCESS."}),"\n",(0,r.jsx)(s.li,{children:"Get any application-defined and user-defined resources assigned to the Target Page."}),"\n",(0,r.jsx)(s.li,{children:"If Source and Target Applications are different, check that the Target User has the right roles to enter the Target Application. If not, return NO_APP_ACCESS."}),"\n",(0,r.jsxs)(s.li,{children:["Check Resources:",(0,r.jsx)(s.br,{}),"\nIf the Target User can access the Target Page's Resources after escalating roles from the Target Application, return ENABLE/UNKNOWN. Else return NO_PAGE_ACCESS."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"checkloggedinresources",children:"CheckLoggedInResources"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CheckLoggedInResources(targetResources As %List) As %Integer\n"})}),"\n",(0,r.jsx)(s.h3,{id:"getvalidatedlink",children:"GetValidatedLink"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValidatedLink(refreshpage As %String) As %String\n"})}),"\n",(0,r.jsx)(s.h3,{id:"isautorefreshenabled",children:"%IsAutoRefreshEnabled"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %IsAutoRefreshEnabled() As %Boolean\n"})}),"\n",(0,r.jsx)(s.p,{children:"Helper method to indicate whether pages in the management portal are allowed to perform automatic refreshes that poll the server."}),"\n",(0,r.jsx)(s.h3,{id:"isconnectivitypopupdisabled",children:"%IsConnectivityPopupDisabled"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %IsConnectivityPopupDisabled() As %Boolean [ Internal ]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"getalloweddirectories",children:"GetAllowedDirectories"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAllowedDirectories(Output dirs) As %Boolean\n"})}),"\n",(0,r.jsxs)(s.p,{children:["This method will retrieve the set of root directories that are visible by the %ZEN.Dialog.fileSelect page. If the system is configured to restrict the directories that are visible the method will return 1 (true) and ",(0,r.jsx)(s.strong,{children:"dirs"})," will contain the set of root directories. Otherwise it will return 0 (false), and all directories will be visible."]}),"\n",(0,r.jsx)(s.h3,{id:"allowdirectory",children:"AllowDirectory"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AllowDirectory(dir As %String) As %Boolean\n"})}),"\n",(0,r.jsx)(s.p,{children:"This method will allow the given directory (and its descendants) to be visible by the %ZEN.Dialog.fileSelect page. If the set of directories was previously unrestricted, and if the restriction was not explicitly disabled by calling RestrictDirectories then only this directory and its descendants will be visible. If the specified directory is invalid or does not exist, this method will return 0 (false), and no change is made."}),"\n",(0,r.jsx)(s.h3,{id:"removedirectory",children:"RemoveDirectory"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveDirectory(dir As %String)\n"})}),"\n",(0,r.jsx)(s.p,{children:"This method will remove the given directory from the set of root directories that are visible by the %ZEN.Dialog.fileSelect page. If the given directory was not previously configured as an available root directory, this will have no effect."}),"\n",(0,r.jsx)(s.h3,{id:"cleardirectories",children:"ClearDirectories"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ClearDirectories()\n"})}),"\n",(0,r.jsx)(s.p,{children:"This method will clear the set of directories that are visible by the %ZEN.Dialog.fileSelect page. After this all directories available to the system will be visible in the fileSelect page."}),"\n",(0,r.jsx)(s.h3,{id:"restrictdirectories",children:"RestrictDirectories"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RestrictDirectories(flag As %Boolean) As %Boolean\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If ",(0,r.jsx)(s.strong,{children:"flag"})," is true then the %ZEN.Dialog.fileSelect page will only allow navigation to the set of directories configured by AddDirectory. If no directories are configured, then the fileSelect page will not display any files.",(0,r.jsx)(s.br,{}),"\nIf ",(0,r.jsx)(s.strong,{children:"flag"})," is false, then the fileSelect page will allow navigation to all files. The set of directories configured by AddDirectory (if any) is not removed. Return 1 (true) if we were previously configured to use restricted directories, 0 (false) otherwise."]}),"\n",(0,r.jsx)(s.h3,{id:"isdirectoryallowed",children:"IsDirectoryAllowed"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsDirectoryAllowed(dir As %String) As %Boolean\n"})}),"\n",(0,r.jsxs)(s.p,{children:["This method will allow %CSP.UI.Dialog.Import to validate an import path Return 0 (false) if directories are restricted and ",(0,r.jsx)(s.strong,{children:"dirs"})," is not found in set of root directories that are visible by the %ZEN.Dialog.fileSelect page. Return 1 (true) if ",(0,r.jsx)(s.strong,{children:"dirs"})," is an allowed root directory or if ",(0,r.jsx)(s.strong,{children:"dirs"})," is a subdirectory of an allowed root directory or if directories are not restricted"]})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>a});var r=t(96540);const i={},n=r.createContext(i);function l(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);