"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[82324],{22905:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>o,frontMatter:()=>i,toc:()=>a});var s=t(74848),r=t(28453);const i={pagination_prev:null,pagination_next:null},l="%XGEN.AbstractElement",a=[{value:"Parameters",id:"parameters",level:2},{value:"XMLIGNORENULL",id:"xmlignorenull",level:3},{value:"XMLIGNOREINVALIDATTRIBUTE",id:"xmlignoreinvalidattribute",level:3},{value:"XGENDOCUMENT",id:"xgendocument",level:3},{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"%level",id:"level",level:3},{value:"Methods",id:"methods",level:2},{value:"%GenerateCode",id:"generatecode",level:3},{value:"%Indent",id:"indent",level:3}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"xgenabstractelement",children:"%XGEN.AbstractElement"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %XGEN.AbstractElement Extends (%RegisteredObject, %XML.Adaptor) [ Abstract, Inheritance = right, PropertyClass = %XGEN.PropertyParameters, ServerOnly = 1, System = 3 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This class is included because it is needed by other parts of the library. You should not use this or any other class within this package within your applications as a future version will be incompatible. If you are interested in this functionality please contact InterSystems."]}),"\n",(0,s.jsxs)(n.p,{children:["This is the base class for all elements within an XGEN document.",(0,s.jsx)(n.br,{}),"\nThere are 3 type of element within XGEN document:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"document: a container for the entire XGEN document. These are subclasses of %XGEN.AbstractDocument."}),"\n",(0,s.jsx)(n.li,{children:"sequence: a collection of one or more elements. These are subclasses of %XGEN.AbstractSequence."}),"\n",(0,s.jsx)(n.li,{children:"node: a single activity within an XGEN document. These are subclasses of %XGEN.AbstractNode.\nSee %XGEN.AbstractDocument for an overview of XGEN."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"xmlignorenull",children:"XMLIGNORENULL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNORENULL = 1;\n"})}),"\n",(0,s.jsx)(n.p,{children:"By setting this 1, we ignore the difference between null and empty nodes within XGEN."}),"\n",(0,s.jsx)(n.h3,{id:"xmlignoreinvalidattribute",children:"XMLIGNOREINVALIDATTRIBUTE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNOREINVALIDATTRIBUTE = 0;\n"})}),"\n",(0,s.jsx)(n.p,{children:"By setting this to 0, we disallow use of invalid attribute names."}),"\n",(0,s.jsx)(n.h3,{id:"xgendocument",children:"XGENDOCUMENT"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XGENDOCUMENT As CLASSNAME;\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is the name of the XGEN document class that this node belongs to."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property name As %String(MAXLEN = "");\n'})}),"\n",(0,s.jsx)(n.p,{children:"Define a projection to clean up the Schema Global when a node is compiled. This is the logical name of this node. This provides a common way to name elements within an XGEN document."}),"\n",(0,s.jsx)(n.h3,{id:"level",children:"%level"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property %level As %Integer(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Internal property.",(0,s.jsx)(n.br,{}),"\nNumber of levels this node is nested within the document."]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"generatecode",children:"%GenerateCode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GenerateCode(pTargetClass As %Dictionary.CompiledClass, pCode As %Stream.TmpCharacter, pDocument As %XGEN.AbstractDocument) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Generate code for this node."}),"\n",(0,s.jsx)(n.h3,{id:"indent",children:"%Indent"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %Indent(pIndent As %Integer = 0) As %String [ CodeMode = expression ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Helper method.",(0,s.jsx)(n.br,{}),"\nReturns a string containing the correct number of tabs for indenting code for this node."]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);