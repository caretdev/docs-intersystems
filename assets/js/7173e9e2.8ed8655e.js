"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[25570],{10563:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>o,frontMatter:()=>i,toc:()=>s});var a=n(74848),l=n(28453);const i={pagination_prev:null,pagination_next:null},r="%DeepSee.Component.Widget.pivot",s=[{value:"Properties",id:"properties",level:2},{value:"pivotName",id:"pivotname",level:3},{value:"legendPosition",id:"legendposition",level:3},{value:"labelsVisible",id:"labelsvisible",level:3},{value:"chartToggle",id:"charttoggle",level:3},{value:"viewType",id:"viewtype",level:3},{value:"pivotView",id:"pivotview",level:3},{value:"listingView",id:"listingview",level:3},{value:"hasDimTree",id:"hasdimtree",level:3},{value:"showDimTree",id:"showdimtree",level:3},{value:"themeChartProperties",id:"themechartproperties",level:3},{value:"dataColors",id:"datacolors",level:3},{value:"hasDataColors",id:"hasdatacolors",level:3},{value:"origChartTitle",id:"origcharttitle",level:3},{value:"origChartSubtitle",id:"origchartsubtitle",level:3},{value:"origChartXAxisTitle",id:"origchartxaxistitle",level:3},{value:"origChartYAxisTitles",id:"origchartyaxistitles",level:3},{value:"Methods",id:"methods",level:2},{value:"%GetCatalogInfo",id:"getcataloginfo",level:3},{value:"%GetWidgetPropertyInfo",id:"getwidgetpropertyinfo",level:3},{value:"%OnCreateControls",id:"oncreatecontrols",level:3},{value:"%CreateExportDropdown",id:"createexportdropdown",level:3},{value:"toggleExportMenu",id:"toggleexportmenu",level:3},{value:"closeExportMenu",id:"closeexportmenu",level:3},{value:"%OnCreateWidget",id:"oncreatewidget",level:3},{value:"%LoadPivotInfo",id:"loadpivotinfo",level:3},{value:"adjustContentSize",id:"adjustcontentsize",level:3},{value:"showListing",id:"showlisting",level:3},{value:"showGeoListing",id:"showgeolisting",level:3},{value:"showDimensions",id:"showdimensions",level:3},{value:"showBreakdown",id:"showbreakdown",level:3},{value:"getDataController",id:"getdatacontroller",level:3},{value:"%GetDataController",id:"getdatacontroller-1",level:3},{value:"chartClickHandler",id:"chartclickhandler",level:3},{value:"drillHandler",id:"drillhandler",level:3},{value:"listingSelectHandler",id:"listingselecthandler",level:3},{value:"cellClickHandler",id:"cellclickhandler",level:3},{value:"realCellClickHandler",id:"realcellclickhandler",level:3},{value:"updateControlState",id:"updatecontrolstate",level:3},{value:"toggleChart",id:"togglechart",level:3},{value:"exportExcel",id:"exportexcel",level:3},{value:"exportCSV",id:"exportcsv",level:3},{value:"exportPDF",id:"exportpdf",level:3},{value:"GenerateXSLFO",id:"generatexslfo",level:3},{value:"applySetting",id:"applysetting",level:3},{value:"changeChartType",id:"changecharttype",level:3},{value:"getParameterValue",id:"getparametervalue",level:3},{value:"getPivotVariableState",id:"getpivotvariablestate",level:3},{value:"markerClicked",id:"markerclicked",level:3},{value:"onApplyFilters",id:"onapplyfilters",level:3},{value:"resetPivot",id:"resetpivot",level:3},{value:"navGetContentForLevel",id:"navgetcontentforlevel",level:3},{value:"navHeaderButtonClick",id:"navheaderbuttonclick",level:3},{value:"navCloseButtonClick",id:"navclosebuttonclick",level:3},{value:"navPopupAction",id:"navpopupaction",level:3},{value:"navDataChange",id:"navdatachange",level:3},{value:"hasOverrides",id:"hasoverrides",level:3},{value:"resetOverrides",id:"resetoverrides",level:3},{value:"getOverrides",id:"getoverrides",level:3},{value:"getSubtypeClass",id:"getsubtypeclass",level:3},{value:"chartRangeChange",id:"chartrangechange",level:3},{value:"getPivot",id:"getpivot",level:3},{value:"chartGetSeriesColor",id:"chartgetseriescolor",level:3},{value:"chartGetSeriesColorsAsString",id:"chartgetseriescolorsasstring",level:3},{value:"chartRenderHandler",id:"chartrenderhandler",level:3},{value:"executeDrillDown",id:"executedrilldown",level:3},{value:"executeDrillUp",id:"executedrillup",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"setBkgOpacity",id:"setbkgopacity",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"subtypeIsChart",id:"subtypeischart",level:3},{value:"componentSetDisabled",id:"componentsetdisabled",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"deepseecomponentwidgetpivot",children:"%DeepSee.Component.Widget.pivot"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Component.Widget.pivot Extends (%DeepSee.Component.Widget.widget, %ZEN.Auxiliary.ChartContent, %DeepSee.Component.PivotContent) [ System = 4 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"A specialized DeepSee Dashboard widget that displays a pivot table (either as a table or a chart)."}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"pivotname",children:"pivotName"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property pivotName As %ZEN.Datatype.string(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(t.p,{children:"Hold onto the name of the saved pivot (or KPI) that drives this widget."}),"\n",(0,a.jsx)(t.h3,{id:"legendposition",children:"legendPosition"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property legendPosition As %ZEN.Datatype.string(VALUELIST = "top,left,bottom,right,none", XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(t.p,{children:"Remember the legend position."}),"\n",(0,a.jsx)(t.h3,{id:"labelsvisible",children:"labelsVisible"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property labelsVisible As %ZEN.Datatype.boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(t.p,{children:"Remember if chart labels are visible. When the widget is too small, we will hide these."}),"\n",(0,a.jsx)(t.h3,{id:"charttoggle",children:"chartToggle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property chartToggle As %ZEN.Datatype.string(VALUELIST = "table,chart,none", XMLPROJECTION = "none") [ InitialExpression = "none" ];\n'})}),"\n",(0,a.jsx)(t.p,{children:'Remember the chartToggle state. If "none", show either a chart or a table. If "chart", show the current chart type initially and a button to toggle. If "table", show the table initially and a button to toggle.'}),"\n",(0,a.jsx)(t.h3,{id:"viewtype",children:"viewType"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property viewType As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "pivot", Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:'Indicates the current display of the widget: "pivot" or "listing".'}),"\n",(0,a.jsx)(t.h3,{id:"pivotview",children:"pivotView"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property pivotView As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "table", Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:'When pivot is displayed, indicates how it should be displayed: "table" or "chart".'}),"\n",(0,a.jsx)(t.h3,{id:"listingview",children:"listingView"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property listingView As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "table", Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:'When listing is displayed, indicates how it should be displayed: "table" or "map".'}),"\n",(0,a.jsx)(t.h3,{id:"hasdimtree",children:"hasDimTree"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property hasDimTree As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 1, Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"When true, there is a dimension tree on this widget."}),"\n",(0,a.jsx)(t.h3,{id:"showdimtree",children:"showDimTree"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property showDimTree As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"If there is a dimension tree, this indicates if it is visible."}),"\n",(0,a.jsx)(t.h3,{id:"themechartproperties",children:"themeChartProperties"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property themeChartProperties As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "backgroundStyle,plotAreaStyle,plotEdgeStyle,titleAlign,titleStyle,subtitleStyle,titleBoxStyle,borderStyle,stripesVisible,stripeStyle,seriesColorsOverride,seriesColorScheme,gridStyle,labelStyle,maxLabelLen,axisTitleStyle,valueLabelStyle,valueBoxStyle,plotStyle,lineStyle,markerStyle", Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"List of chart properties that are saved to a theme."}),"\n",(0,a.jsx)(t.h3,{id:"datacolors",children:"dataColors"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property dataColors As array Of %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:'Array of "data-based" colors keyed by name. Loaded from termlist.'}),"\n",(0,a.jsx)(t.h3,{id:"hasdatacolors",children:"hasDataColors"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property hasDataColors As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.h3,{id:"origcharttitle",children:"origChartTitle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property origChartTitle As %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"Original value for chart title (before localization is applied)."}),"\n",(0,a.jsx)(t.h3,{id:"origchartsubtitle",children:"origChartSubtitle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property origChartSubtitle As %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"Original value for chart subtitle (before localization is applied)."}),"\n",(0,a.jsx)(t.h3,{id:"origchartxaxistitle",children:"origChartXAxisTitle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property origChartXAxisTitle As %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"Original value for chart xAxis title (before localization is applied)."}),"\n",(0,a.jsx)(t.h3,{id:"origchartyaxistitles",children:"origChartYAxisTitles"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Property origChartYAxisTitles As list Of %ZEN.Datatype.string(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,a.jsx)(t.p,{children:"Original values for chart yAxis titles (before localization is applied)."}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"getcataloginfo",children:"%GetCatalogInfo"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCatalogInfo(Output pInfo As %List, Output pSubtypeList As %List) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:'Return information used to list this widget within the "widget catalog".'}),"\n",(0,a.jsx)(t.h3,{id:"getwidgetpropertyinfo",children:"%GetWidgetPropertyInfo"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetWidgetPropertyInfo(pSubtype As %String, Output pInfo As %List) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:'Return information on additional "properties" supported by this widget for the given subtype.'}),"\n",(0,a.jsx)(t.h3,{id:"oncreatecontrols",children:"%OnCreateControls"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnCreateControls(pGroup As %ZEN.Component.group) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:"This callback is called just before controls are added to the top of the widget. pGroup is the header in which new Zen control can be added."}),"\n",(0,a.jsx)(t.h3,{id:"createexportdropdown",children:"%CreateExportDropdown"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CreateExportDropdown(id, enabled, imgId, help, options) As %String\n"})}),"\n",(0,a.jsx)(t.p,{children:"Get html to create an icon with an Excel/CSV dropdown menu."}),"\n",(0,a.jsx)(t.h3,{id:"toggleexportmenu",children:"toggleExportMenu"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod toggleExportMenu(menuId) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Toggle the state of the target Excel/CSV export menu dropdown. When causing the menu to be displayed, the zenMouseTrap is also activated behind the menu to prevent other interactions."}),"\n",(0,a.jsx)(t.h3,{id:"closeexportmenu",children:"closeExportMenu"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod closeExportMenu(menuId) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Close the Excel/CSV export menu and remove the mouse trap.This does nothing if the target menu is not open."}),"\n",(0,a.jsx)(t.h3,{id:"oncreatewidget",children:"%OnCreateWidget"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnCreateWidget(pGroup As %ZEN.Component.group) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:"This callback is responsible for creating the contents of the widget."}),"\n",(0,a.jsx)(t.h3,{id:"loadpivotinfo",children:"%LoadPivotInfo"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %LoadPivotInfo(pPivotName As %String, pPivotTable As %DeepSee.Component.pivotTable, pOverrideString As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"Load the saved pivot information into the pivot table."}),"\n",(0,a.jsx)(t.h3,{id:"adjustcontentsize",children:"adjustContentSize"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod adjustContentSize(load, width, height) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Called when page is loaded or widget is resized."}),"\n",(0,a.jsx)(t.h3,{id:"showlisting",children:"showListing"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod showListing(listing) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform a showListing action, if supported."}),"\n",(0,a.jsx)(t.h3,{id:"showgeolisting",children:"showGeoListing"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod showGeoListing(listing) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform a showGeoListing action."}),"\n",(0,a.jsx)(t.h3,{id:"showdimensions",children:"showDimensions"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod showDimensions() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform a showDimensions action, if supported. This toggles the visibility of the dimensions tree control"}),"\n",(0,a.jsx)(t.h3,{id:"showbreakdown",children:"showBreakdown"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod showBreakdown(analysisClass) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Launch the pivot analysis dialog."}),"\n",(0,a.jsx)(t.h3,{id:"getdatacontroller",children:"getDataController"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getDataController() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"If this widget contains a data controller, return it."}),"\n",(0,a.jsx)(t.h3,{id:"getdatacontroller-1",children:"%GetDataController"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetDataController() As %ZEN.Auxiliary.abstractController\n"})}),"\n",(0,a.jsx)(t.p,{children:"If this widget contains a data controller, return it."}),"\n",(0,a.jsx)(t.h3,{id:"chartclickhandler",children:"chartClickHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod chartClickHandler(chart) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Select element handler for pivot chart."}),"\n",(0,a.jsx)(t.h3,{id:"drillhandler",children:"drillHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod drillHandler(pivot) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Drill state change handler for pivot table."}),"\n",(0,a.jsx)(t.h3,{id:"listingselecthandler",children:"listingSelectHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod listingSelectHandler(pivot) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Listing select handler for pivot table."}),"\n",(0,a.jsx)(t.h3,{id:"cellclickhandler",children:"cellClickHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod cellClickHandler(pivot) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Cell click handler for pivot table."}),"\n",(0,a.jsx)(t.h3,{id:"realcellclickhandler",children:"realCellClickHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod realCellClickHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Cell click handler for pivot table."}),"\n",(0,a.jsx)(t.h3,{id:"updatecontrolstate",children:"updateControlState"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod updateControlState() [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Update the display current controls for this widget."}),"\n",(0,a.jsx)(t.h3,{id:"togglechart",children:"toggleChart"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod toggleChart() [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Toggle between chart and table view."}),"\n",(0,a.jsx)(t.h3,{id:"exportexcel",children:"exportExcel"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod exportExcel() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Export current query to excel"}),"\n",(0,a.jsx)(t.h3,{id:"exportcsv",children:"exportCSV"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod exportCSV(simple) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Export current query to a CSV file"}),"\n",(0,a.jsx)(t.h3,{id:"exportpdf",children:"exportPDF"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod exportPDF(printMultiple, preserveTempFiles, filename) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Export current query to pdf. If we are in chart mode, export the chart."}),"\n",(0,a.jsx)(t.h3,{id:"generatexslfo",children:"GenerateXSLFO"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method GenerateXSLFO(pWidgetID, pUrl, pMode, pFileName = "") As %Status [ ZenMethod ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"Create an XSLFO file used for merging many exports into a single report."}),"\n",(0,a.jsx)(t.h3,{id:"applysetting",children:"applySetting"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod applySetting(action, value) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Apply the given setting value to this widget."}),"\n",(0,a.jsx)(t.h3,{id:"changecharttype",children:"changeChartType"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod changeChartType(value) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"getparametervalue",children:"getParameterValue"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getParameterValue(parm) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Find the value of the given parameter value."}),"\n",(0,a.jsx)(t.h3,{id:"getpivotvariablestate",children:"getPivotVariableState"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getPivotVariableState(delim1, delim2) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the current state of filters for this widget as one serialized string."}),"\n",(0,a.jsx)(t.h3,{id:"markerclicked",children:"markerClicked"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod markerClicked(marker) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Called when user clicks on a marker in a geolisting."}),"\n",(0,a.jsx)(t.h3,{id:"onapplyfilters",children:"onApplyFilters"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod onApplyFilters(refresh) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Notification to subclasses that filter has changed."}),"\n",(0,a.jsx)(t.h3,{id:"resetpivot",children:"resetPivot"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod resetPivot() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Go back to the previous pivot state."}),"\n",(0,a.jsx)(t.h3,{id:"navgetcontentforlevel",children:"navGetContentForLevel"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod navGetContentForLevel(level, key, value) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return an object describing what to display for this level within the navigator. Invoked from dashboard viewer."}),"\n",(0,a.jsx)(t.h3,{id:"navheaderbuttonclick",children:"navHeaderButtonClick"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod navHeaderButtonClick(key) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Click on header button in navigator."}),"\n",(0,a.jsx)(t.h3,{id:"navclosebuttonclick",children:"navCloseButtonClick"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod navCloseButtonClick(key) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Click on close button in navigator."}),"\n",(0,a.jsx)(t.h3,{id:"navpopupaction",children:"navPopupAction"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod navPopupAction(key, value) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Popup action in navigator."}),"\n",(0,a.jsx)(t.h3,{id:"navdatachange",children:"navDataChange"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod navDataChange(key, value, final) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Change of data value in navigator."}),"\n",(0,a.jsx)(t.h3,{id:"hasoverrides",children:"hasOverrides"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod hasOverrides() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Test if there are any style overrides for this widget."}),"\n",(0,a.jsx)(t.h3,{id:"resetoverrides",children:"resetOverrides"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod resetOverrides(themeOnly, recreate) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Reset any style overrides for this widget."}),"\n",(0,a.jsx)(t.h3,{id:"getoverrides",children:"getOverrides"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getOverrides() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return an array of current style overrides for this widget. Used to save to a theme."}),"\n",(0,a.jsx)(t.h3,{id:"getsubtypeclass",children:"getSubtypeClass"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getSubtypeClass() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:'Return the actual type used for a widget subtype (such as "barChart").'}),"\n",(0,a.jsx)(t.h3,{id:"chartrangechange",children:"chartRangeChange"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod chartRangeChange(final) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Change of time range selector control."}),"\n",(0,a.jsx)(t.h3,{id:"getpivot",children:"getPivot"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getPivot() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Find the pivot table within this widget."}),"\n",(0,a.jsx)(t.h3,{id:"chartgetseriescolor",children:"chartGetSeriesColor"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod chartGetSeriesColor(series) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"ongetSeriesColor handler for pivot chart."}),"\n",(0,a.jsx)(t.h3,{id:"chartgetseriescolorsasstring",children:"chartGetSeriesColorsAsString"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod chartGetSeriesColorsAsString(chart) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"ongetSeriesColor handler for pivot chart."}),"\n",(0,a.jsx)(t.h3,{id:"chartrenderhandler",children:"chartRenderHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod chartRenderHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"RenderData handler for pivot chart."}),"\n",(0,a.jsx)(t.h3,{id:"executedrilldown",children:"executeDrillDown"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod executeDrillDown(dataSource) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform a local drill down for a target widget."}),"\n",(0,a.jsx)(t.h3,{id:"executedrillup",children:"executeDrillUp"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod executeDrillUp() [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform a local drill up for a target widget."}),"\n",(0,a.jsx)(t.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This client event, if present, is fired when the page is loaded."}),"\n",(0,a.jsx)(t.h3,{id:"setbkgopacity",children:"setBkgOpacity"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setBkgOpacity(opacity) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Set the value of a named property."}),"\n",(0,a.jsx)(t.h3,{id:"subtypeischart",children:"subtypeIsChart"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod subtypeIsChart(subtype) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Test if this pivot widget is a chart"}),"\n",(0,a.jsx)(t.h3,{id:"componentsetdisabled",children:"componentSetDisabled"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod componentSetDisabled(componentId, flag) [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This is an API that can be called from a timer to perform a delayed disable/enable of a prticular component. The target component is referenced by componentId and if that component exists in the DOM, the method will call its",(0,a.jsx)(t.br,{}),"\nsetDisabled(flag)"]})]})}function o(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(96540);const l={},i=a.createContext(l);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);