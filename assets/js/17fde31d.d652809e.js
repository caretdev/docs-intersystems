"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[76514],{36788:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>a,default:()=>o,frontMatter:()=>i,toc:()=>r});var n=t(74848),l=t(28453);const i={pagination_prev:null,pagination_next:null},a="%Monitor.System.License",r=[{value:"Parameters",id:"parameters",level:2},{value:"APPLICATION",id:"application",level:3},{value:"Properties",id:"properties",level:2},{value:"CurrentUsedLocal",id:"currentusedlocal",level:3},{value:"MaxUsedLocal",id:"maxusedlocal",level:3},{value:"AvailableLocal",id:"availablelocal",level:3},{value:"CurrentUsedDist",id:"currentuseddist",level:3},{value:"MaxUsedDist",id:"maxuseddist",level:3},{value:"AvailableDist",id:"availabledist",level:3},{value:"Methods",id:"methods",level:2},{value:"Initialize",id:"initialize",level:3},{value:"GetSample",id:"getsample",level:3},{value:"SetAlert",id:"setalert",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"monitorsystemlicense",children:"%Monitor.System.License"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Monitor.System.License Extends %Monitor.System.Adaptor [ ProcedureBlock, System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This class can sample the status of the License Units, both local and distributed, and provide values for each Property listed."}),"\n",(0,n.jsx)(s.p,{children:"It may also be used to create an alert based on the results. The simplest way to create an alert is to set a minimum level using the SetAlert() class method. Then use %MONAPPMGR to 'activate' this class in the %SYS namespace. When the Application Manager calls the GetSample() method to sample the license counts, if they fall below the minimum level the method will generate an entry in the cconsole.log file (which may then be emailed via the System Monitor). See the SetAlert() method for more details."}),"\n",(0,n.jsx)(s.p,{children:"Users may also use this Class and the sampled Property values to create an Alert with the %Monitor.Alert Class. This allows for more complex checks and/or generating more specific alerts."}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"application",children:"APPLICATION"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter APPLICATION [ Internal ] = "CACHE";\n'})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"currentusedlocal",children:"CurrentUsedLocal"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CurrentUsedLocal As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The current number of local license units used."}),"\n",(0,n.jsx)(s.h3,{id:"maxusedlocal",children:"MaxUsedLocal"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property MaxUsedLocal As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"A highwater-mark for the maximum number of local license units used since InterSystems IRIS was started."}),"\n",(0,n.jsx)(s.h3,{id:"availablelocal",children:"AvailableLocal"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AvailableLocal As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The total number (used and unused) of local license units available."}),"\n",(0,n.jsx)(s.h3,{id:"currentuseddist",children:"CurrentUsedDist"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CurrentUsedDist As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The current number of distributed license units used."}),"\n",(0,n.jsx)(s.h3,{id:"maxuseddist",children:"MaxUsedDist"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property MaxUsedDist As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"A highwater-mark for the maximum number of distributed license units used since InterSystems IRIS was started."}),"\n",(0,n.jsx)(s.h3,{id:"availabledist",children:"AvailableDist"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AvailableDist As %Monitor.Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The total number (used and unused) of distributed license units available."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"initialize",children:"Initialize"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Initialize() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Initialize routine metrics."}),"\n",(0,n.jsx)(s.h3,{id:"getsample",children:"GetSample"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetSample() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get routine metric sample. Fetches current license unit values for each Property and may generate an entry in cconsole.log if the unused License Units fall below a minimum value (see SetValue method)."}),"\n",(0,n.jsxs)(s.p,{children:["A return code of $$$OK indicates there is a new sample instance.",(0,n.jsx)(s.br,{}),"\nA return code of 0 indicates there is no sample instance."]}),"\n",(0,n.jsx)(s.h3,{id:"setalert",children:"SetAlert"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetAlert(Minimum As %Integer) As %Integer\n"})}),"\n",(0,n.jsx)(s.p,{children:"Stores a minimum level of available license units to be checked by the GetSample() method."}),"\n",(0,n.jsx)(s.p,{children:'If the value of (AvailableLocal - CurrentUsedLocal) or (AvailableDist - CurrentUsedDist) falls below this value, then the GetSample method will log an error in the cconsole.log, which will trigger an alert by the System Monitor. Note that the %Monitor.System.License Class must be "activated" in the Application Monitor (run ^%MONAPPMGR in the %SYS namespace).'}),"\n",(0,n.jsx)(s.p,{children:'A value of "0" will disable this alert.'}),"\n",(0,n.jsx)(s.p,{children:'Returns the previous value. If Minimum="", it returns the current value but does not change it.'})]})}function o(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>r});var n=t(96540);const l={},i=n.createContext(l);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);