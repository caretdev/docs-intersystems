"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[78264],{5436:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>a,toc:()=>r});var i=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},l="%Studio.AbstractDocument",r=[{value:"Parameters",id:"parameters",level:2},{value:"Delimiter",id:"delimiter",level:3},{value:"Properties",id:"properties",level:2},{value:"Code",id:"code",level:3},{value:"Name",id:"name",level:3},{value:"TimeStamp",id:"timestamp",level:3},{value:"CompileTime",id:"compiletime",level:3},{value:"Generated",id:"generated",level:3},{value:"Locked",id:"locked",level:3},{value:"UpToDate",id:"uptodate",level:3},{value:"Methods",id:"methods",level:2},{value:"UpToDateGet",id:"uptodateget",level:3},{value:"%Load",id:"load",level:3},{value:"%DeleteData",id:"deletedata",level:3},{value:"%SaveData",id:"savedata",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"SaveStream",id:"savestream",level:3},{value:"TimeStampGet",id:"timestampget",level:3},{value:"CompileTimeGet",id:"compiletimeget",level:3},{value:"Load",id:"load-1",level:3},{value:"Save",id:"save",level:3},{value:"SaveAs",id:"saveas",level:3},{value:"Compile",id:"compile",level:3},{value:"CompileDocument",id:"compiledocument",level:3},{value:"Delete",id:"delete",level:3},{value:"Lock",id:"lock",level:3},{value:"LockName",id:"lockname",level:3},{value:"Unlock",id:"unlock",level:3},{value:"UnlockName",id:"unlockname",level:3},{value:"TimeStamp",id:"timestamp-1",level:3},{value:"CompileTime",id:"compiletime-1",level:3},{value:"IsUpToDate",id:"isuptodate",level:3},{value:"Exists",id:"exists",level:3},{value:"ItemList",id:"itemlist",level:3},{value:"GetOther",id:"getother",level:3},{value:"GetPrevious",id:"getprevious",level:3},{value:"ExportToXML",id:"exporttoxml",level:3},{value:"ImportFromXML",id:"importfromxml",level:3},{value:"escapeCData",id:"escapecdata",level:3},{value:"unescapeCData",id:"unescapecdata",level:3},{value:"escapeCDataStream",id:"escapecdatastream",level:3},{value:"AtEndGet",id:"atendget",level:3},{value:"AtEndSet",id:"atendset",level:3},{value:"Read",id:"read",level:3},{value:"ReadLine",id:"readline",level:3},{value:"Write",id:"write",level:3},{value:"WriteLine",id:"writeline",level:3},{value:"Flush",id:"flush",level:3},{value:"Rewind",id:"rewind",level:3},{value:"SizeGet",id:"sizeget",level:3},{value:"Clear",id:"clear",level:3},{value:"MoveToEnd",id:"movetoend",level:3},{value:"ListExecute",id:"listexecute",level:3},{value:"ListFetch",id:"listfetch",level:3},{value:"ListClose",id:"listclose",level:3},{value:"Search",id:"search",level:3},{value:"checkMatch",id:"checkmatch",level:3},{value:"SearchRegex",id:"searchregex",level:3},{value:"IsEnabled",id:"isenabled",level:3},{value:"LocalizeDescription",id:"localizedescription",level:3},{value:"IsGenerated",id:"isgenerated",level:3},{value:"IsMapped",id:"ismapped",level:3},{value:"TranslateExportName",id:"translateexportname",level:3}];function o(e){const t={br:"br",code:"code",crlf:"crlf",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",line:"line",match:"match",name:"name",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"studioabstractdocument",children:"%Studio.AbstractDocument"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Studio.AbstractDocument Extends %AbstractStream [ Abstract, System = 3 ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"To implement a new routine type to be used by Studio you subclass from this abstract routine class and fill in the methods to perform your own Load/Save/Compile/Delete/Lock functions."}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"delimiter",children:"Delimiter"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter Delimiter = ".";\n'})}),"\n",(0,i.jsx)(t.p,{children:"Delimiter to use when constructing directories for this document type. This only applies if you write the List query. If you override the ItemList then you must insert this into ^IRIS.Temp structure yourself. Note do not use '/' or '\\' as a delimiter as these are reserved for CSP files."}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t.h3,{id:"code",children:"Code"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property Code As %GlobalCharacterStream;\n"})}),"\n",(0,i.jsx)(t.p,{children:"The extension name, this can be a comma separated list of extensions if this class supports more than one. For details on the projection parameters see %Projection.StudioDocument. The body of the routine is held in this stream"}),"\n",(0,i.jsx)(t.h3,{id:"name",children:"Name"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property Name As %String;\n"})}),"\n",(0,i.jsx)(t.p,{children:"The name of this routine, this includes the routine extension"}),"\n",(0,i.jsx)(t.h3,{id:"timestamp",children:"TimeStamp"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property TimeStamp As %TimeStamp [ Calculated ];\n"})}),"\n",(0,i.jsx)(t.p,{children:"Timestamp of the current document"}),"\n",(0,i.jsx)(t.h3,{id:"compiletime",children:"CompileTime"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property CompileTime As %TimeStamp [ Calculated ];\n"})}),"\n",(0,i.jsx)(t.p,{children:"Timestamp of the last compile of this document"}),"\n",(0,i.jsx)(t.h3,{id:"generated",children:"Generated"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property Generated As %Boolean;\n"})}),"\n",(0,i.jsx)(t.p,{children:"True if this routine is generated from something else"}),"\n",(0,i.jsx)(t.h3,{id:"locked",children:"Locked"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property Locked As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,i.jsx)(t.p,{children:"Used to hold the number of times this document is locked. It happens to be used by the default lock implementation but you may ignore this in your subclass if you wish."}),"\n",(0,i.jsx)(t.h3,{id:"uptodate",children:"UpToDate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property UpToDate As %Boolean [ Calculated ];\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return true if the document is up to date with respect to the compiled version, i.e. if you recompiled this document then the generated compiled code would be the same. Return false if the source document is modified but not compiled or the generated code has been modified manually."}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"uptodateget",children:"UpToDateGet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method UpToDateGet() As %Boolean\n"})}),"\n",(0,i.jsx)(t.h3,{id:"load",children:"%Load"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Load(sid As %String) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"deletedata",children:"%DeleteData"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteData(soid As %String, concurrency As %Integer) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"savedata",children:"%SaveData"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SaveData(ByRef sid As %String) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnNew(name As %String) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Set the name property"}),"\n",(0,i.jsx)(t.h3,{id:"savestream",children:"SaveStream"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveStream(SupressBackup As %Boolean = 0, Output Refresh As %Boolean) As %Status\n"})}),"\n",(0,i.jsx)(t.h3,{id:"timestampget",children:"TimeStampGet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method TimeStampGet() As %TimeStamp [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"compiletimeget",children:"CompileTimeGet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method CompileTimeGet() As %TimeStamp [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"load-1",children:"Load"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Load() As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Load the routine in Name into the stream Code"}),"\n",(0,i.jsx)(t.h3,{id:"save",children:"Save"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Save() As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Save the routine stored in Code"}),"\n",(0,i.jsx)(t.h3,{id:"saveas",children:"SaveAs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveAs(name As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Save this document with a new name. You may want to modify this depending on how this implementation will work for your class."}),"\n",(0,i.jsx)(t.h3,{id:"compile",children:"Compile"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Compile(flags As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Compile the document, with source control hooks"}),"\n",(0,i.jsx)(t.h3,{id:"compiledocument",children:"CompileDocument"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method CompileDocument(ByRef qstruct As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"CompileDocument is called when the document is to be compiled. It has already called the source control hooks at this point."}),"\n",(0,i.jsx)(t.h3,{id:"delete",children:"Delete"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Delete(name As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Delete the routine 'name' which includes the routine extension"}),"\n",(0,i.jsx)(t.h3,{id:"lock",children:"Lock"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Lock(flags As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Lock the current routine. The default method just locks the ^ROUTINE global with the name of the routine. If it fails then return a status code of the error, otherise return $$$OK"}),"\n",(0,i.jsx)(t.h3,{id:"lockname",children:"LockName"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LockName(name As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Lock a document by name. The default method just locks the ^ROUTINE global with the name of the document."}),"\n",(0,i.jsx)(t.h3,{id:"unlock",children:"Unlock"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Unlock(flags As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Unlock the current routine. The default method just unlocks the ^ROUTINE global with the name of the routine."}),"\n",(0,i.jsx)(t.h3,{id:"unlockname",children:"UnlockName"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod UnlockName(name As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Unlock a document by name. The default method just unlocks the ^ROUTINE global with the name of the document."}),"\n",(0,i.jsx)(t.h3,{id:"timestamp-1",children:"TimeStamp"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod TimeStamp(name As %String) As %TimeStamp\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return the timestamp of routine 'name' in %TimeStamp format. This is used to determine if the routine has been updated on the server and so needs reloading from Studio. So the format should be $zdatetime($horolog,3), or \"\" if the routine does not exist."}),"\n",(0,i.jsx)(t.h3,{id:"compiletime-1",children:"CompileTime"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CompileTime(name As %String) As %TimeStamp\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return the compile time of routine 'name' in %TimeStamp format. The format should be $zdatetime($horolog,3), or \"\" if the routine does not exist."}),"\n",(0,i.jsx)(t.h3,{id:"isuptodate",children:"IsUpToDate"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsUpToDate(name As %String) As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return true if the document is up to date with respect to the compiled version, i.e. if you recompiled this document then the generated compiled code would be the same. Return false if the source document is modified but not compiled or the generated code has been modified manually."}),"\n",(0,i.jsx)(t.h3,{id:"exists",children:"Exists"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Exists(name As %String) As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return 1 if the routine 'name' exists and 0 if it does not."}),"\n",(0,i.jsx)(t.h3,{id:"itemlist",children:"ItemList"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ItemList(Idx As %Integer, Ext As %String, ByRef Work As %String, Start As %String, End As %String, Directory As %String, Sort As %Integer, System As %Boolean, Flat As %Boolean, ShowGenerated As %Boolean, ByRef NewFormat As %Boolean) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"This method ties into the open dialog in Studio. It is passed a list of information based on the search criteria from the user and it should populate the ^||%RoutineList(Idx) global with the items it wishes to show in the following format:"}),"\n",(0,i.jsx)(t.p,{children:"^||%RoutineList(Idx,dirtype,order_$char(0)_index)=$listbuild(name,dirsymbol,type,size,date/time,description)"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Idx - The index provided in the 'Idx' parameter"}),"\n",(0,i.jsx)(t.li,{children:"dirtype - This is 1 if this is a regular openable item and 0 if this is a directory so that directories show up before the other items in the open dialog"}),"\n",(0,i.jsx)(t.li,{children:"order - The value based on the sorting order of items, e.g. size or date/time last modified, more information on this below"}),"\n",(0,i.jsx)(t.li,{children:"index - An integer index to prevent multiple items with for example the same size from over writing each other."}),"\n",(0,i.jsx)(t.li,{children:"name - The name to display in the open dialog"}),"\n",(0,i.jsx)(t.li,{children:"dirsymbol - The symbol to use to navigate directories, for regular items this is \"\" but for directories this should be the character to append to the directory in order to browse into this directory. Do not use '/' or '\\' as these are reserved for CSP files"}),"\n",(0,i.jsx)(t.li,{children:"type - This is an integer version of the type of the item, see the list below for details"}),"\n",(0,i.jsx)(t.li,{children:"size - The size of this item as an integer"}),"\n",(0,i.jsx)(t.li,{children:'date/time - The date/time this item was last modified in %TimeStamp format, or "" if not known'}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The type of the item which can be one of:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"0 - MAC file, a routine containing macros"}),"\n",(0,i.jsx)(t.li,{children:"1 - INT file, a standard routine"}),"\n",(0,i.jsx)(t.li,{children:"2 - INC file, an include file"}),"\n",(0,i.jsx)(t.li,{children:"3 - BAS file, a Cache Basic routine"}),"\n",(0,i.jsx)(t.li,{children:"4 - CLS, a class"}),"\n",(0,i.jsx)(t.li,{children:"5 - CSP, a Cache Server Page or another file in this directory"}),"\n",(0,i.jsx)(t.li,{children:"7 - GBL, a Global"}),"\n",(0,i.jsx)(t.li,{children:"8 - PRJ, a Project"}),"\n",(0,i.jsx)(t.li,{children:"9 - a Package"}),"\n",(0,i.jsx)(t.li,{children:"10 - a CSP application\nFurther numbers are reserved for future use. User defined items should start at 100."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"order is one of:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"1 - Name of the file non case sensitive (the default)"}),"\n",(0,i.jsx)(t.li,{children:"2 - Date/Time the file was saved"}),"\n",(0,i.jsx)(t.li,{children:"3 - Size of the file"}),"\n",(0,i.jsx)(t.li,{children:"4 - Type of the file i.e. the number from the 'type' list"}),"\n",(0,i.jsx)(t.li,{children:"5 - Name of the file case sensitive\n."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The arguments to this method are:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Idx - Index into ^||%RoutineList to write data"}),"\n",(0,i.jsx)(t.li,{children:"Ext - Extension name we are processing"}),"\n",(0,i.jsx)(t.li,{children:"Work - Array of pattern match information that we test each item against, root node is $listbuild(mapped) so you can see if we want to return mapped items"}),"\n",(0,i.jsx)(t.li,{children:"Start - First possible match, can be used to optimise the query"}),"\n",(0,i.jsx)(t.li,{children:"End - Last possible match, can be used to optimise the query"}),"\n",(0,i.jsx)(t.li,{children:"Directory - The directory name we are searching"}),"\n",(0,i.jsx)(t.li,{children:"Sort - The entry to sort by, same as the list for 'order'"}),"\n",(0,i.jsx)(t.li,{children:"System - If true then include the '%' routines/classes"}),"\n",(0,i.jsx)(t.li,{children:"Flat - If true then flatten directories to return items inside them, this is used by the 'Namespace' tab in Studio to display all items in the system"}),"\n",(0,i.jsx)(t.li,{children:"ShowGenerated - If false then do not show items generated from something else, e.g. do not show TEST.INT if this is compiled from TEST.MAC"}),"\n",(0,i.jsx)(t.li,{children:"NewFormat - Returned by reference, if set to true use the new ^||%RoutineList format, else caller will convert output to the new format"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"getother",children:"GetOther"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetOther(Name As %String) As %String\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return other document types that this is related to. Passed a name and you return a comma separated list of the other documents it is related to or \"\" if it is not related to anything. Note that this can be passed a document of another type for example if your 'test.XXX' document creates a 'test.INT' routine then it will also be called with 'test.INT' so you can return 'test.XXX' to complete the cycle."}),"\n",(0,i.jsx)(t.h3,{id:"getprevious",children:"GetPrevious"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetPrevious(Name As %String) As %String\n"})}),"\n",(0,i.jsx)(t.p,{children:'Return other document types that this is related to. Passed a name and you return a comma separated list of the other documents it is related to or "" if it is not related to anything. This goes in opposite direction to GetOther function. It can be called with documents that are not of this document type as with GetOther.'}),"\n",(0,i.jsx)(t.h3,{id:"exporttoxml",children:"ExportToXML"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExportToXML(flags As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Export this document to the current device in XML format"}),"\n",(0,i.jsx)(t.h3,{id:"importfromxml",children:"ImportFromXML"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method ImportFromXML(stream As %RegisteredObject, flags As %String) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"Passed a stream containing the XML document, this method should insert this into the current document. Once this is done the importer will call Save on the document. This default handler in assumes the export ExportToXML just wrote the data in a CDATA structure"}),"\n",(0,i.jsx)(t.h3,{id:"escapecdata",children:"escapeCData"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod escapeCData(data As %String) As %String [ Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Utility method to quote any ']]>' inside the code as these end the CDATA section"}),"\n",(0,i.jsx)(t.h3,{id:"unescapecdata",children:"unescapeCData"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod unescapeCData(data As %String) As %String [ Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Utility method to quote any ']]>' inside the code as these end the CDATA section"}),"\n",(0,i.jsx)(t.h3,{id:"escapecdatastream",children:"escapeCDataStream"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod escapeCDataStream(stream As %Stream.Object) [ Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Utility method to escape any ']]>' inside a CDATA section"}),"\n",(0,i.jsx)(t.h3,{id:"atendget",children:"AtEndGet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method AtEndGet() As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"atendset",children:"AtEndSet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method AtEndSet(val As %Boolean) As %Status [ Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"read",children:"Read"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Read(ByRef len As %Integer = 32000, ByRef sc As %Status) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"readline",children:"ReadLine"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method ReadLine(ByRef len As %Integer = 32000, ByRef sc As %Status, ByRef eol As %Boolean) As %String [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"write",children:"Write"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Write(data As %String) As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"writeline",children:"WriteLine"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method WriteLine(data As %String) As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"flush",children:"Flush"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Flush() As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"rewind",children:"Rewind"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Rewind() As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"sizeget",children:"SizeGet"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method SizeGet() As %Integer [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"clear",children:"Clear"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method Clear() As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Clear the contents of this Stream from permanent storage. This will remove the permanent stream storage and any temporary stream and initialise the stream to its initial state, including removing all the stream attributes."}),"\n",(0,i.jsx)(t.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,i.jsx)(t.h3,{id:"movetoend",children:"MoveToEnd"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method MoveToEnd() As %Status [ CodeMode = expression, Final ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Move to the end of the stream so the next Write will be appended to the end. This allows you to read from a stream, then MoveToEnd() and append new data, where just calling Write after a read will clear the stream before writing new data."}),"\n",(0,i.jsx)(t.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,i.jsx)(t.h3,{id:"listexecute",children:"ListExecute"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ListExecute(ByRef qHandle As %Binary, Directory As %String, Flat As %Boolean, System As %Boolean) As %Status\n"})}),"\n",(0,i.jsx)(t.p,{children:"This query scans over the documents for the Studio open dialog. The arguments are defined in ItemList."}),"\n",(0,i.jsxs)(t.p,{children:["This should return a row formed by:",(0,i.jsx)(t.br,{}),"\n$listbuild(name,date/time modified,size,directory delimiter)"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"name - The name to display in the open dialog"}),"\n",(0,i.jsx)(t.li,{children:"date/time modified - In %TimeStamp format the date/time this item was last modified"}),"\n",(0,i.jsx)(t.li,{children:"size - The size of this item"}),"\n",(0,i.jsx)(t.li,{children:'directory delimiter - If this is not a directory then return "" here, if it is a directory then return the type of delimiter to use when they double click on this directory'}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"listfetch",children:"ListFetch"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ListFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = ListExecute ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"listclose",children:"ListClose"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ListClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = ListExecute ]\n"})}),"\n",(0,i.jsx)(t.h3,{id:"search",children:"Search"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Search(Name As %String, Pattern As %String, WholeWords As %Boolean, CaseSensitive As %Boolean, Max As %Integer, ByRef Found As %Integer)\n"})}),"\n",(0,i.jsx)(t.p,{children:"Override this to support searching inside your document type. By default it will open the document and search the Code."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Name - Name of document to search"}),"\n",(0,i.jsx)(t.li,{children:"Pattern - String to search for"}),"\n",(0,i.jsx)(t.li,{children:"WholeWords - True if we only want to find whole words, false otherwise"}),"\n",(0,i.jsx)(t.li,{children:"CaseSensitive - True if this is a case sensitive search"}),"\n",(0,i.jsx)(t.li,{children:"Max - The maximum number of items to find, if we get to this limit stop outputting results and return"}),"\n",(0,i.jsx)(t.li,{children:"Found - Passed by reference, contains a count of the number of matches we find. Increment by one for each match\nWhen a match is found write out the match to the current device using the format"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.crlf,{children:(0,i.jsxs)(t.name,{children:["(",(0,i.jsxs)(t.line,{offset:"",children:["): ",(0,i.jsx)(t.match,{line:""})]})]})})}),"\n",(0,i.jsx)(t.h3,{id:"checkmatch",children:"checkMatch"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod checkMatch(value As %String, Pattern As %String, WholeWords As %Boolean, CaseSensitive As %Boolean) As %Boolean [ Private ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Helper method for Search. Check if this really matches the item we are searching for."}),"\n",(0,i.jsx)(t.h3,{id:"searchregex",children:"SearchRegex"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SearchRegex(Name As %String, Matcher As %Regex.Matcher, Max As %Integer, ByRef Found As %Integer)\n"})}),"\n",(0,i.jsx)(t.p,{children:"Override this to support searching inside your document type with a regular expression. By default it will open the document and search the Code."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Name - Name of document to search"}),"\n",(0,i.jsx)(t.li,{children:"Matcher - A %Regex.Matcher object initialised with the search expression"}),"\n",(0,i.jsx)(t.li,{children:"Max - The maximum number of items to find, if we get to this limit stop outputting results and return"}),"\n",(0,i.jsx)(t.li,{children:"Found - Passed by reference, contains a count of the number of matches we find. Increment by one for each match\nWhen a match is found write out the match to the current device using the format"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.crlf,{children:(0,i.jsxs)(t.name,{children:["(",(0,i.jsxs)(t.line,{offset:"",children:["): ",(0,i.jsx)(t.match,{line:""})]})]})})}),"\n",(0,i.jsx)(t.h3,{id:"isenabled",children:"IsEnabled"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsEnabled() As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns true if this document type is enabled, and false to disable it"}),"\n",(0,i.jsx)(t.h3,{id:"localizedescription",children:"LocalizeDescription"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod LocalizeDescription(ext As %String, ByRef Description As %String(MAXLEN=500)) As %Status\n"})}),"\n",(0,i.jsx)(t.h3,{id:"isgenerated",children:"IsGenerated"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsGenerated(name As %String) As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return true if this is generated and zero otherwise. Default implementation opens instance to find the property value, it is much more efficient to override this to provide a better implementation."}),"\n",(0,i.jsx)(t.h3,{id:"ismapped",children:"IsMapped"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsMapped(name As %String, ByRef sourcedb As %String) As %Boolean\n"})}),"\n",(0,i.jsx)(t.p,{children:"Return true if this is mapped from a database other than the default routine database and zero otherwise. Also set the source database in sourcedb."}),"\n",(0,i.jsx)(t.h3,{id:"translateexportname",children:"TranslateExportName"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod TranslateExportName(name As %String, ByRef items As %String) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Can be used to translate the type of document to be exported to XML. For example if asked to export 'abc.tst' it can: ",(0,i.jsx)(t.code,{children:'Set items("User.abc.cls")=""'})," Which will cause the XML export to export the class User.abc instead of this abc.tst document. Default behavior is to export the regular document."]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>r});var i=s(96540);const n={},a=i.createContext(n);function l(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);