"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[26384],{56138:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>n,default:()=>o,frontMatter:()=>a,toc:()=>i});var l=r(74848),t=r(28453);const a={pagination_prev:null,pagination_next:null},n="%ZEN.Report.group",i=[{value:"Properties",id:"properties",level:2},{value:"children",id:"children",level:3},{value:"name",id:"name",level:3},{value:"removeEmpty",id:"removeempty",level:3},{value:"parameters",id:"parameters",level:3},{value:"queryClass",id:"queryclass",level:3},{value:"queryName",id:"queryname",level:3},{value:"runonce",id:"runonce",level:3},{value:"sql",id:"sql",level:3},{value:"sqlexpression",id:"sqlexpression",level:3},{value:"top",id:"top",level:3},{value:"filter",id:"filter",level:3},{value:"%hasquery",id:"hasquery",level:3},{value:"runtimeMode",id:"runtimemode",level:3},{value:"orderby",id:"orderby",level:3},{value:"OnCreateResultSet",id:"oncreateresultset",level:3},{value:"breakOnField",id:"breakonfield",level:3},{value:"ifexpression",id:"ifexpression",level:3},{value:"breakOnExpression",id:"breakonexpression",level:3},{value:"groupNumber",id:"groupnumber",level:3},{value:"%level",id:"level",level:3},{value:"%leftSibling",id:"leftsibling",level:3},{value:"%rightSibling",id:"rightsibling",level:3},{value:"%leftMost",id:"leftmost",level:3},{value:"%rightMost",id:"rightmost",level:3},{value:"%parent",id:"parent",level:3},{value:"%groupStack",id:"groupstack",level:3},{value:"%groupdepth",id:"groupdepth",level:3},{value:"%xmlnamespace",id:"xmlnamespace",level:3},{value:"%xmlnamespaceprefix",id:"xmlnamespaceprefix",level:3},{value:"%sqlcache",id:"sqlcache",level:3},{value:"fields",id:"fields",level:3},{value:"call",id:"call",level:3},{value:"callClass",id:"callclass",level:3},{value:"callArgument",id:"callargument",level:3},{value:"AggregateTag",id:"aggregatetag",level:3},{value:"suppressExcelHeaders",id:"suppressexcelheaders",level:3},{value:"excelSheetName",id:"excelsheetname",level:3},{value:"Methods",id:"methods",level:2},{value:"%GenerateCode",id:"generatecode",level:3},{value:"dumpElementStore",id:"dumpelementstore",level:3},{value:"%AncestorHasRightSibling",id:"ancestorhasrightsibling",level:3},{value:"%MakeTag",id:"maketag",level:3},{value:"%MakeGroupTag",id:"makegrouptag",level:3},{value:"%MakeId",id:"makeid",level:3},{value:"%SortChildren",id:"sortchildren",level:3},{value:"%GenerateOpenTag",id:"generateopentag",level:3},{value:"%GenerateCloseTag",id:"generateclosetag",level:3},{value:"%StoreElements",id:"storeelements",level:3},{value:"%StoreCallElements",id:"storecallelements",level:3},{value:"%StoreRowPosition",id:"storerowposition",level:3},{value:"%GenerateAggregates",id:"generateaggregates",level:3},{value:"%ProcessAggregates",id:"processaggregates",level:3},{value:"%GetNodeField",id:"getnodefield",level:3},{value:"%GetField",id:"getfield",level:3},{value:"%GetField1",id:"getfield1",level:3},{value:"%GetNodeExpr",id:"getnodeexpr",level:3},{value:"%hasQueryDefined",id:"hasquerydefined",level:3},{value:"%hasBreakDefined",id:"hasbreakdefined",level:3},{value:"%NormalizeParamList",id:"normalizeparamlist",level:3},{value:"%LookForRightSibling",id:"lookforrightsibling",level:3},{value:"CalcQuery",id:"calcquery",level:3},{value:"getAgg",id:"getagg",level:3},{value:"getCount",id:"getcount",level:3},{value:"getCountForAvg",id:"getcountforavg",level:3},{value:"Qualify",id:"qualify",level:3},{value:"setAggValueArray",id:"setaggvaluearray",level:3},{value:"setTnodeValueArray",id:"settnodevaluearray",level:3},{value:"SetFieldsValueArray",id:"setfieldsvaluearray",level:3},{value:"%MakeLabel",id:"makelabel",level:3},{value:"DumpIncludes",id:"dumpincludes",level:3},{value:"IncludeXdata",id:"includexdata",level:3},{value:"DumpGets",id:"dumpgets",level:3},{value:"GetXML",id:"getxml",level:3},{value:"DumpCalls",id:"dumpcalls",level:3},{value:"DumpCallElements",id:"dumpcallelements",level:3},{value:"GetXMLFromCall",id:"getxmlfromcall",level:3},{value:"getClassName",id:"getclassname",level:3},{value:"HorlogToExcelDateTime",id:"horlogtoexceldatetime",level:3},{value:"TimeToExcelTime",id:"timetoexceltime",level:3},{value:"%QuoteValue",id:"quotevalue",level:3},{value:"%QuoteValueL10N",id:"quotevaluel10n",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"zenreportgroup",children:"%ZEN.Report.group"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.group Extends reportNode [ Deprecated, System = 3 ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Defines a group within a ZEN Report."}),"\n",(0,l.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(s.h3,{id:"children",children:"children"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property children As list Of reportNode(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,l.jsx)(s.p,{children:"Set of nodes contained within this group."}),"\n",(0,l.jsx)(s.h3,{id:"name",children:"name"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property name As %ZEN.Datatype.string [ InitialExpression = {..%ClassName(0)}, Required ];\n"})}),"\n",(0,l.jsxs)(s.p,{children:["XML element name used for this group.",(0,l.jsx)(s.br,{}),"\nIf not provided a default will be supplied."]}),"\n",(0,l.jsx)(s.h3,{id:"removeempty",children:"removeEmpty"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property removeEmpty As %ZEN.Datatype.boolean [ InitialExpression = -1 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Remove empty XML elments If not provided a default of -1 (inherit from parent) will be supplied."}),"\n",(0,l.jsx)(s.h3,{id:"parameters",children:"parameters"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property parameters As list Of %ZEN.Report.parameter(XMLNAME = "parameter", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,l.jsx)(s.p,{children:"User-defined list of query parameters. These are used to supply parameter values for the query associated with this group."}),"\n",(0,l.jsx)(s.h3,{id:"queryclass",children:"queryClass"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property queryClass As %ZEN.Datatype.className;\n"})}),"\n",(0,l.jsxs)(s.p,{children:["(optional) Name of the class containing the class query that will be used to create a %ResultSet object.",(0,l.jsx)(s.br,{}),"\nThis property is only used if queryName is defined. If this property is not defined, then it is assumed that the current report class contains the specified query."]}),"\n",(0,l.jsx)(s.h3,{id:"queryname",children:"queryName"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property queryName As %ZEN.Datatype.classMember(MEMBERTYPE = "QUERY");\n'})}),"\n",(0,l.jsx)(s.p,{children:"(optional) Name of the class query that will be used to create a %ResultSet object."}),"\n",(0,l.jsx)(s.h3,{id:"runonce",children:"runonce"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property runonce As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Execute elements with report or group once, causes sql, query and resultset to be ignored"}),"\n",(0,l.jsx)(s.h3,{id:"sql",children:"sql"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property sql As %ZEN.Datatype.sql;\n"})}),"\n",(0,l.jsxs)(s.p,{children:["(optional) SQL statement that, if present, will be used to create a %ResultSet object.",(0,l.jsx)(s.br,{}),"\nIf defined, this takes precedence over queryClass and queryName and sqlexpression."]}),"\n",(0,l.jsx)(s.h3,{id:"sqlexpression",children:"sqlexpression"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property sqlexpression As %ZEN.Datatype.string(MAXLEN = "");\n'})}),"\n",(0,l.jsx)(s.p,{children:"(optional) SQL statement in expression form that, if present, will be used to create a %ResultSet object."}),"\n",(0,l.jsx)(s.h3,{id:"top",children:"top"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property top As %ZEN.Datatype.integer;\n"})}),"\n",(0,l.jsx)(s.p,{children:'When a query is present this induces effect of "SELECT TOP ..top Query"'}),"\n",(0,l.jsx)(s.h3,{id:"filter",children:"filter"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property filter As %ZEN.Datatype.integer;\n"})}),"\n",(0,l.jsx)(s.p,{children:"When a query is present and expression filter is 0, row is skipped"}),"\n",(0,l.jsx)(s.h3,{id:"hasquery",children:"%hasquery"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %hasquery As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,l.jsx)(s.h3,{id:"runtimemode",children:"runtimeMode"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property runtimeMode As %ZEN.Datatype.integer(VALUELIST = ",0,1,2") [ InitialExpression = 2 ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"(optional) Runtime mode applied to the %ResultSet object used to fetch results for this report."}),"\n",(0,l.jsx)(s.h3,{id:"orderby",children:"orderby"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property orderby As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(s.p,{children:"comma separated list of fields by which the group will be sorted"}),"\n",(0,l.jsx)(s.h3,{id:"oncreateresultset",children:"OnCreateResultSet"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property OnCreateResultSet As %ZEN.Datatype.delegator(FORMALSPEC = "*tSC:%Status,*pParameters:%String", RETURNTYPE = "%ResultSet");\n'})}),"\n",(0,l.jsxs)(s.p,{children:["Name of callback method to call to create a %ResultSet object. This must be the name of an instance method within the report class.",(0,l.jsx)(s.br,{}),"\nAn example callback would look something like this: ",(0,l.jsx)(s.code,{children:'ClassMethod RS1(ByRef pSC As %Status, ByRef pParms) As %ResultSet { Set pSC = $$$OK Set tRS = ##class(%ResultSet.SQL).%Prepare("SELECT Name FROM Sample.Person WHERE Home_City = ? ORDER BY Name",.tError,"",pParms(1)) If ($IsObject(tError)) { Set pSC = tError.Status } Quit tRS }'})]}),"\n",(0,l.jsx)(s.h3,{id:"breakonfield",children:"breakOnField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property breakOnField As %ZEN.Datatype.classMember(MEMBERTYPE = "SQLCOLUMN");\n'})}),"\n",(0,l.jsx)(s.p,{children:"Name of field (column) in the base query for this report that supply the value for collecting members of this group."}),"\n",(0,l.jsx)(s.h3,{id:"ifexpression",children:"ifexpression"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property ifexpression As %ZEN.Datatype.string [ InitialExpression = 1 ];\n"})}),"\n",(0,l.jsx)(s.h3,{id:"breakonexpression",children:"breakOnExpression"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property breakOnExpression As %ZEN.Datatype.expression;\n"})}),"\n",(0,l.jsx)(s.p,{children:"Optional ObjectScript expression that can either be applied to the grouping value of this group (as %val), or to provide an arbitrary value."}),"\n",(0,l.jsx)(s.h3,{id:"groupnumber",children:"groupNumber"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property groupNumber As %ZEN.Datatype.integer(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"Internal property used to disambiguate multiple groups at the same level."}),"\n",(0,l.jsx)(s.h3,{id:"level",children:"%level"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %level As %ZEN.Datatype.integer(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"Internal property used to get level of group"}),"\n",(0,l.jsx)(s.h3,{id:"leftsibling",children:"%leftSibling"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property %leftSibling As %ZEN.Report.group [ Internal ];\n"})}),"\n",(0,l.jsx)(s.h3,{id:"rightsibling",children:"%rightSibling"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property %rightSibling As %ZEN.Report.group [ Internal ];\n"})}),"\n",(0,l.jsx)(s.h3,{id:"leftmost",children:"%leftMost"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property %leftMost As %ZEN.Report.group [ Internal ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"first child (left most) of group of children if any"}),"\n",(0,l.jsx)(s.h3,{id:"rightmost",children:"%rightMost"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property %rightMost As %ZEN.Report.group [ Internal ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"last child (right most) of group of children if any"}),"\n",(0,l.jsx)(s.h3,{id:"parent",children:"%parent"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property %parent As %ZEN.Report.group [ Internal ];\n"})}),"\n",(0,l.jsx)(s.h3,{id:"groupstack",children:"%groupStack"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %groupStack As %Integer(XMLPROJECTION = "none") [ Internal, MultiDimensional ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"This array, subcripted by level, is used to track the current set of parent groups as each child group is proccessed."}),"\n",(0,l.jsx)(s.h3,{id:"groupdepth",children:"%groupdepth"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %groupdepth As %Integer(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"depth of group"}),"\n",(0,l.jsx)(s.h3,{id:"xmlnamespace",children:"%xmlnamespace"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xmlnamespace As %String(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.p,{children:"We use these to record namespace and namespace prefix for qualified name"}),"\n",(0,l.jsx)(s.h3,{id:"xmlnamespaceprefix",children:"%xmlnamespaceprefix"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xmlnamespaceprefix As %String(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.h3,{id:"sqlcache",children:"%sqlcache"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property %sqlcache As %String(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.h3,{id:"fields",children:"fields"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property fields As %ZEN.Datatype.string(MAXLEN = 500);\n"})}),"\n",(0,l.jsx)(s.p,{children:"Name of fields (columns) in the base query for this report that will supply the values for this item."}),"\n",(0,l.jsx)(s.h3,{id:"call",children:"call"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property call As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(s.p,{children:"call that will supply XML"}),"\n",(0,l.jsx)(s.h3,{id:"callclass",children:"callClass"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property callClass As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(s.p,{children:"class for call that will supply XML, can be blank in which case current class used if set to 0, call is called as instance method"}),"\n",(0,l.jsx)(s.h3,{id:"callargument",children:"callArgument"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property callArgument As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(s.p,{children:"If non-null will provide an argument passed to call"}),"\n",(0,l.jsx)(s.h3,{id:"aggregatetag",children:"AggregateTag"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Property AggregateTag As %String(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,l.jsx)(s.h3,{id:"suppressexcelheaders",children:"suppressExcelHeaders"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property suppressExcelHeaders As %ZEN.Datatype.boolean;\n"})}),"\n",(0,l.jsx)(s.p,{children:"True if ExcelHeaders are to be suppressed on group or report"}),"\n",(0,l.jsx)(s.h3,{id:"excelsheetname",children:"excelSheetName"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property excelSheetName As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(s.p,{children:"name of worksheet when group represents an Excel worksheet"}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h3,{id:"generatecode",children:"%GenerateCode"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GenerateCode(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, pLevel As %Integer, xmlns As %String, xmlprefix As %String, sqlcache As %Boolean, pAggregateTag As %String, removeNulls As %Boolean, SetProcessWideRunTimeMode As %Boolean, pAggregatesIgnoreNLS As %Boolean, pDomain As %String) As %Status [ Internal, ProcedureBlock = 0 ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"dumpelementstore",children:"dumpElementStore"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method dumpElementStore(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, pLevel As %Integer)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"ancestorhasrightsibling",children:"%AncestorHasRightSibling"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %AncestorHasRightSibling()\n"})}),"\n",(0,l.jsx)(s.h3,{id:"maketag",children:"%MakeTag"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeTag(pReport As %ZEN.Report.reportNode, pTag As %String, pLevel As %Integer) As %String [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Given a tag name, return a string that can be used a routine label."}),"\n",(0,l.jsx)(s.h3,{id:"makegrouptag",children:"%MakeGroupTag"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeGroupTag(pTag As %String, pLevel As %Integer) As %String [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"makeid",children:"%MakeId"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeId(pExt As %String) As %String [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"sortchildren",children:"%SortChildren"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %SortChildren(Output tSubGroups, Output tAttributes, Output tElements, Output tAggregates, Output tGets, Output tIncludes, Output tCalls, Output tCallElements) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Loop over child and sorts them into groups, elements, and attributes."}),"\n",(0,l.jsx)(s.h3,{id:"generateopentag",children:"%GenerateOpenTag"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GenerateOpenTag(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, ByRef tAttributes, pLevel As %Integer, pClose As %Boolean = 0, ByRef tElements, removeNulls As %Boolean, pDomain As %String) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code that writes opening tag (plus attributes)."}),"\n",(0,l.jsx)(s.h3,{id:"generateclosetag",children:"%GenerateCloseTag"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GenerateCloseTag(pCode As %CharacterStream, pLevel As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code that writes opening tag."}),"\n",(0,l.jsx)(s.h3,{id:"storeelements",children:"%StoreElements"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %StoreElements(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, ByRef tElements, pLevel As %Integer, pSiblingNo As %Integer, pAggregateTag As %String, removeNulls As %Boolean, pDomain As %String) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code to write out non-group elements of this group."}),"\n",(0,l.jsx)(s.h3,{id:"storecallelements",children:"%StoreCallElements"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %StoreCallElements(pCode As %CharacterStream, ByRef tCalls, pLevel As %Integer, pAggregateTag As %String) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code to write out non-group elements of this group."}),"\n",(0,l.jsx)(s.h3,{id:"storerowposition",children:"%StoreRowPosition"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %StoreRowPosition(pCode As %CharacterStream, pLevel As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"generateaggregates",children:"%GenerateAggregates"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GenerateAggregates(pCode As %CharacterStream, pLevel As %Integer, ByRef tAggregates, pAggregateTag As %String, pAggregatesIgnoreNLS As %Boolean, pDomain As %String) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code to write out aggregate elements of this group."}),"\n",(0,l.jsx)(s.h3,{id:"processaggregates",children:"%ProcessAggregates"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessAggregates(pCode As %CharacterStream, pLevel As %Integer, pMode As %String, ByRef tAggregates, pBottomLevel As %Integer, pAggregatesIgnoreNLS As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate code to start/accum/end aggregates."}),"\n",(0,l.jsx)(s.h3,{id:"getnodefield",children:"%GetNodeField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetNodeField(tNode As valueNode, Output pExpr, pLevel As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Compile-time method that returns an expression that processes the field property of a value node."}),"\n",(0,l.jsx)(s.h3,{id:"getfield",children:"%GetField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetField(field As %String, Output pExpr, pLevel As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Compile-time method that returns an expression that processes the field property of a value node."}),"\n",(0,l.jsx)(s.h3,{id:"getfield1",children:"%GetField1"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetField1(field As %String, Output pExpr, pLevel As %Integer = 0, pQuote As %Boolean = 1) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Compile-time method that returns an expression that processes the field property of a value node."}),"\n",(0,l.jsx)(s.h3,{id:"getnodeexpr",children:"%GetNodeExpr"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %GetNodeExpr(tNode As valueNode, Output pExpr) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Compile-time method to get the expression needed to supply the value of a valueNode."}),"\n",(0,l.jsx)(s.h3,{id:"hasquerydefined",children:"%hasQueryDefined"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %hasQueryDefined() As %Boolean\n"})}),"\n",(0,l.jsx)(s.p,{children:"Test if this group has a query defined."}),"\n",(0,l.jsx)(s.h3,{id:"hasbreakdefined",children:"%hasBreakDefined"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %hasBreakDefined() As %Boolean\n"})}),"\n",(0,l.jsx)(s.p,{children:"Test if this group has a break defined"}),"\n",(0,l.jsx)(s.h3,{id:"normalizeparamlist",children:"%NormalizeParamList"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'Method %NormalizeParamList(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, pParameters As %ListOfObjects, pLevel As %Integer, setBreaks As %Boolean, pArray As %String = "") As %String [ Internal ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"This internal method converts the parameter list for this group into a run-time expression used to execute the query. If pArray is defined, then it the expression will fill in elements of an array named pArray."}),"\n",(0,l.jsx)(s.h3,{id:"lookforrightsibling",children:"%LookForRightSibling"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %LookForRightSibling(parent As %ZEN.Report.group, pCode As %CharacterStream, pLevel As %Integer, sqlcache As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"calcquery",children:"CalcQuery"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method CalcQuery(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, pLevel As %Integer, SetProcessWideRunTimeMode As %Boolean) As %Integer [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getagg",children:"getAgg"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method getAgg(pLevel As %Integer, n As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getcount",children:"getCount"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method getCount(pLevel As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getcountforavg",children:"getCountForAvg"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method getCountForAvg(pLevel As %Integer, n As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"qualify",children:"Qualify"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Qualify(xpath As %String, prefix As %String)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"setaggvaluearray",children:"setAggValueArray"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method setAggValueArray(tNode, pCode As %CharacterStream, pLevel As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"settnodevaluearray",children:"setTnodeValueArray"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method setTnodeValueArray(tNode, pCode As %CharacterStream, pLevel As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"setfieldsvaluearray",children:"SetFieldsValueArray"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetFieldsValueArray(fields As %String, pCode As %CharacterStream, pLevel As %Integer) [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"makelabel",children:"%MakeLabel"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeLabel(pLevel As %Integer)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"dumpincludes",children:"DumpIncludes"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DumpIncludes(pCode As %CharacterStream, ByRef pIncludes As %ZEN.Report.include) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"includexdata",children:"IncludeXdata"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IncludeXdata(pCode As %CharacterStream, ClassName As %String, XdataName As %String) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"dumpgets",children:"DumpGets"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DumpGets(pCode As %CharacterStream, ByRef pGets As %ZEN.Report.include) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getxml",children:"GetXML"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetXML(pCode As %CharacterStream, host As %String, port As %String, url As %String) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"dumpcalls",children:"DumpCalls"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method DumpCalls(pReport As %ZEN.Report.reportNode, pCode As %CharacterStream, ByRef pCalls As %ZEN.Report.call, pLevel As %Integer) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"dumpcallelements",children:"DumpCallElements"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method DumpCallElements(pCode As %CharacterStream, ByRef pCalls As %ZEN.Report.call, pLevel As %Integer) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getxmlfromcall",children:"GetXMLFromCall"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetXMLFromCall(pCode As %CharacterStream, method As %String, parmName As %String, hasStatus As %Boolean) As %Status\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getclassname",children:"getClassName"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod getClassName(tNode)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"horlogtoexceldatetime",children:"HorlogToExcelDateTime"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method HorlogToExcelDateTime(pReport, pCode, pNode, pNodeExpr, pLevel)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"timetoexceltime",children:"TimeToExcelTime"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method TimeToExcelTime(pReport, pCode, pNode, pNodeExpr, pLevel)\n"})}),"\n",(0,l.jsx)(s.h3,{id:"quotevalue",children:"%QuoteValue"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %QuoteValue(pValue As %String) [ CodeMode = expression ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Take a value string and return a quoted string."}),"\n",(0,l.jsx)(s.h3,{id:"quotevaluel10n",children:"%QuoteValueL10N"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %QuoteValueL10N(pValue As %String, pDomain As %String)\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Take a value string and return a quoted string wrapped within a $$$Text macro.",(0,l.jsx)(s.br,{}),"\nIf value starts and ends with #( )#, then return an expression"]})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>n,x:()=>i});var l=r(96540);const t={},a=l.createContext(t);function n(e){const s=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),l.createElement(a.Provider,{value:s},e.children)}}}]);