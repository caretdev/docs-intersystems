"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[313],{9240:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,toc:()=>d});var r=t(74848),s=t(28453);const a={pagination_prev:null,pagination_next:null},i="%Net.JSON.JOSE",d=[{value:"Parameters",id:"parameters",level:2},{value:"JOSESupportedParams",id:"josesupportedparams",level:3},{value:"JOSESupportedExtensions",id:"josesupportedextensions",level:3},{value:"Methods",id:"methods",level:2},{value:"ValidateHeaderParams",id:"validateheaderparams",level:3},{value:"CombineHeaderObjects",id:"combineheaderobjects",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"netjsonjose",children:"%Net.JSON.JOSE"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Net.JSON.JOSE Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"This class provides methods to work with JSON Object Signing and Encryption Headers, as defined in RFC 7515 (and extended in RFC 7516). It also defines the JOSE header parameters that are understood and supported by all JSON Web classes (JWS, JWE, JWK, etc.). This class is intended for internal use by InterSystems IRIS only."}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"josesupportedparams",children:"JOSESupportedParams"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter JOSESupportedParams [ Internal ] = ",alg,enc,kid,zip,typ,cty,crit,";\n'})}),"\n",(0,r.jsx)(n.p,{children:"The registered JOSE header parameters that the JWS/JWE/etc. classes can understand"}),"\n",(0,r.jsx)(n.h3,{id:"josesupportedextensions",children:"JOSESupportedExtensions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter JOSESupportedExtensions [ Internal ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The extension JOSE header parameters that the JWS/JWE/etc. classes can understand"}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"validateheaderparams",children:"ValidateHeaderParams"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ValidateHeaderParams(header As %DynamicObject, JWKS As %String, serialization As %String, structure As %String, Output algInfo As %DynamicObject, Output encInfo As %DynamicObject, Output JWK As %DynamicObject) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"This internal helper method ensures that the JOSE header parameters in the provided header object conform to the specs laid out in RFC 7515 section 4 and (if applicable) RFC 7516 section 4. It also retrieves the key from the provided JSON Web Key Set that matches the provided header parameters."}),"\n",(0,r.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"header - The header object whose parameters are being checked."}),"\n",(0,r.jsx)(n.li,{children:"JWKS - The JSON Web Key Set that contains the key that corresponds to this header's parameters."}),"\n",(0,r.jsx)(n.li,{children:'serialization - The JWS or JWE Serialization format used by the JWS or JWE the provided header is for. Accepted serialization formats are "compact" and "json".'}),"\n",(0,r.jsx)(n.li,{children:'structure - The JSON web data structure this header is for. Accepted values are "jws" and "jwe".'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Output parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'algInfo - An object containing information about the algorithm in the header\'s "alg" field.'}),"\n",(0,r.jsx)(n.li,{children:'encInfo - An object containing information about the algorithm in the header\'s "enc" field.'}),"\n",(0,r.jsx)(n.li,{children:'JWK - An object representing the JSON Web Key from the provided JWKS that matches the header\'s "alg" and "kid" fields.'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Return value:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A status indicating if the provided header conforms to the specs and the provided JWKS contains a key that can be used with the algorithm defined in the header's alg field. Success means that the header conforms to the specs and an appropriate key was found in the given JWKS."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The provided header should be the combination of all of the protected and unprotected headers for a given JWS/JWE."}),"\n",(0,r.jsx)(n.li,{children:"If no header is provided, this method will fail."}),"\n",(0,r.jsx)(n.li,{children:'If no JWKS is provided this validation will fail unless the header\'s "alg" value is "none".'}),"\n",(0,r.jsx)(n.li,{children:"See %Net.JSON.JWA:GetAlgInfo for a description of what the algInfo and encInfo objects contain."}),"\n",(0,r.jsx)(n.li,{children:"For a JWS, algInfo will contain information about the algorithm used to sign the JWS. For a JWE, algInfo will contain information about the algorithm used to create or encrypt the CEK."}),"\n",(0,r.jsx)(n.li,{children:"For a JWS, encInfo will be empty. For a JWE, encInfo will contain information about the algorithm used to encrypt the content of the JWE."}),"\n",(0,r.jsx)(n.li,{children:"For a JWS, JWK will be the key used for signing the JWS. For a JWE, JWK will be the key used for creating or encrypting the CEK."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"combineheaderobjects",children:"CombineHeaderObjects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod CombineHeaderObjects(protectedHeader As %DynamicObject = "", unprotectedHeader1 As %DynamicObject = "", unprotectedHeader2 As %DynamicObject = "", Output header As %DynamicObject) As %Status [ Internal ]\n'})}),"\n",(0,r.jsx)(n.p,{children:"This internal helper method combines a protected header and up to two unprotected headers into one object."}),"\n",(0,r.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"protectedHeader - The protected header to combine."}),"\n",(0,r.jsx)(n.li,{children:"unprotectedHeader1 - The first unprotected header to combine."}),"\n",(0,r.jsx)(n.li,{children:"unprotectedHeader2 - The second unprotected header to combine."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Output parameters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"header - The combined header object."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Return value:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A status indicating whether or not the headers were successfully combined into one object. Success means that the headers were successfully combined and that no parameters were present in more than one header."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This method returns an error if it finds a header parameter that is present in more than one of the headers, as specified in RFC 7515 section 7.2.1 and RFC 7516 section 7.2.1."}),"\n",(0,r.jsx)(n.li,{children:"This method can actually take any number of headers. If passed only one header, it will just return that header."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(96540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);