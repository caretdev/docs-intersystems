"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[36324],{8600:(e,n,i)=>{i.r(n),i.d(n,{contentTitle:()=>l,default:()=>d,frontMatter:()=>t,toc:()=>r});var s=i(74848),a=i(28453);const t={pagination_prev:null,pagination_next:null},l="%SYSTEM.iKnow",r=[{value:"Methods",id:"methods",level:2},{value:"ListDomains",id:"listdomains",level:3},{value:"ListConfigurations",id:"listconfigurations",level:3},{value:"ListMetadata",id:"listmetadata",level:3},{value:"ListErrors",id:"listerrors",level:3},{value:"GetDomainId",id:"getdomainid",level:3},{value:"GetDomainName",id:"getdomainname",level:3},{value:"DropData",id:"dropdata",level:3},{value:"IndexFile",id:"indexfile",level:3},{value:"IndexDirectory",id:"indexdirectory",level:3},{value:"IndexTable",id:"indextable",level:3},{value:"IndexString",id:"indexstring",level:3},{value:"GetSourceId",id:"getsourceid",level:3},{value:"GetExternalId",id:"getexternalid",level:3},{value:"IsResourceAcquired",id:"isresourceacquired",level:3},{value:"CreateDomainForTableColumn",id:"createdomainfortablecolumn",level:3},{value:"GetDomainParameterName",id:"getdomainparametername",level:3},{value:"mapToUMLS",id:"maptoumls",level:3},{value:"CreateDomainTables",id:"createdomaintables",level:3},{value:"Shell",id:"shell",level:3},{value:"Highlight",id:"highlight",level:3},{value:"DeleteSource",id:"deletesource",level:3},{value:"DeleteVirtualSource",id:"deletevirtualsource",level:3},{value:"Normalize",id:"normalize",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"systemiknow",children:"%SYSTEM.iKnow"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %SYSTEM.iKnow Extends %SYSTEM.Help [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:'iKnow utility methods, available through the $system syntax from the command line. For example: "do $system.iKnow.ListDomains()"'}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"listdomains",children:"ListDomains"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ListDomains(currentNamespaceOnly As %Boolean = 1) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Print a list of all the domains within this namespace."}),"\n",(0,s.jsx)(n.h3,{id:"listconfigurations",children:"ListConfigurations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ListConfigurations() As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Print a list of all the configurations within this namespace."}),"\n",(0,s.jsx)(n.h3,{id:"listmetadata",children:"ListMetadata"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ListMetadata(pDomainName As %String, pIncludeHidden As %Boolean = 0) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Print a list of all metadata fields for a given namespace."}),"\n",(0,s.jsx)(n.h3,{id:"listerrors",children:"ListErrors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod ListErrors(pDomainName As %String, pLimit As %Integer = 5) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Prints the first pLimit load errors, failures and warnings for domain pDomainName. Use pLimit=0 to display all errors."}),"\n",(0,s.jsx)(n.h3,{id:"getdomainid",children:"GetDomainId"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod GetDomainId(pDomainName As %String = "") As %Integer\n'})}),"\n",(0,s.jsx)(n.p,{children:'Returns the ID corresponding to the supplied domain name in pDomainName or "" if none found in this namespace.'}),"\n",(0,s.jsx)(n.h3,{id:"getdomainname",children:"GetDomainName"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetDomainName(pDomainId As %Integer) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:'Returns the name corresponding to the supplied domain ID or "" if none found in this namespace.'}),"\n",(0,s.jsx)(n.h3,{id:"dropdata",children:"DropData"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DropData(pDomainName As %String, pDropMetadataFields As %Boolean = 1, pDropDictionaries As %Boolean = 1) As %Integer\n"})}),"\n",(0,s.jsx)(n.p,{children:"Drops all of a Domain's contents"}),"\n",(0,s.jsx)(n.h3,{id:"indexfile",children:"IndexFile"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod IndexFile(pDomainName As %String, pPath As %String, pConfig As %String = "", pEncoding As %String = "UTF-8", Output pSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,s.jsx)(n.p,{children:"Indexes the supplied file and stores the indexing results in domain pDomainName, returning the generated source ID as pSrcId. The full path of the files indexed will be used to build the External ID (cf %iKnow.Source.File.Lister)"}),"\n",(0,s.jsx)(n.h3,{id:"indexdirectory",children:"IndexDirectory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod IndexDirectory(pDomainName As %String, pPath As %String, pRecurse As %Boolean = 0, pConfig As %String = "", pEncoding As %String = "UTF-8", pExtensions As %List = "") As %Status\n'})}),"\n",(0,s.jsx)(n.p,{children:"Indexes the supplied file and stores the indexing results in domain pDomainName. The full path of the files indexed will be used to build the External ID (cf %iKnow.Source.File.Lister)"}),"\n",(0,s.jsx)(n.h3,{id:"indextable",children:"IndexTable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod IndexTable(pDomainName As %String, pTableName As %String, pIdField As %String, pGroupField As %String, pDataField As %String, pMetaFields As %List = "", pWhereClause As %String = "", pConfig As %String = "") As %Status\n'})}),"\n",(0,s.jsx)(n.p,{children:"Indexes the contents of the pDataField column in table pTableName, using the pIdField and pGroupField columns to build the external ID for this record (cf %iKnow.Source.SQL.Lister). pDomainName can be a (SQL) constant, such as \"'MyGroup'\". The results are stored in the domain pDomainName."}),"\n",(0,s.jsx)(n.p,{children:"Optionally, specify a %List of table field names through pMetaFields that should be loaded as metadata for the table records."}),"\n",(0,s.jsx)(n.h3,{id:"indexstring",children:"IndexString"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod IndexString(pDomainName As %String, pIdentifier As %String, pString As %String, pConfig As %String = "", pVirtual As %Boolean = 0, Output pSrcId As %Integer = 0) As %Status\n'})}),"\n",(0,s.jsx)(n.p,{children:"Indexes the supplied pString and stores the results into the domain pDomainName, using pIdentifier to construct the External ID (cf %iKnow.Source.Temp.Lister). The generated sources ID will be returned through pSrcId."}),"\n",(0,s.jsx)(n.h3,{id:"getsourceid",children:"GetSourceId"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetSourceId(pDomainName As %String, pExternalId As %String) As %Integer\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns the Source ID for a given pExternalId in domain pDomainName, or the empty string if no source exists with that External ID."}),"\n",(0,s.jsx)(n.h3,{id:"getexternalid",children:"GetExternalId"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetExternalId(pDomainName As %String, pSourceId As %Integer) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns the External ID for a given pSourceId in domain pDomainName, or the empty string if no source exists with that Source ID."}),"\n",(0,s.jsx)(n.h3,{id:"isresourceacquired",children:"IsResourceAcquired"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod IsResourceAcquired() As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns true if the iKnow kernel resource is current held, false otherwise"}),"\n",(0,s.jsx)(n.h3,{id:"createdomainfortablecolumn",children:"CreateDomainForTableColumn"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod CreateDomainForTableColumn(pTableName As %String, pColumnName As %String, ByRef pDomainName As %String = "", Output pDomainId As %Integer, pObjectsPackage As %String = "", pDropExisting As %Boolean = 1, ByRef pDomainParams = "", pIdColumn As %String = "ID") As %Status [ Deprecated, Internal ]\n'})}),"\n",(0,s.jsx)(n.p,{children:'Creates an iKnow domain named pDomainName representing the textual contents of column pColumnName in table pTableName, returning the domain ID in pDomainId. If pDomainName is left blank, a default name will be generated as follows: "SQL@pTableName@pColumnName"'}),"\n",(0,s.jsx)(n.p,{children:"If pObjectsPackage is non-null, wrapper objects for the generated elements will be generated in that package."}),"\n",(0,s.jsx)(n.p,{children:"This method is deprecated. See CreateDomainTables"}),"\n",(0,s.jsx)(n.h3,{id:"getdomainparametername",children:"GetDomainParameterName"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetDomainParameterName(pMacroName As %String) As %String [ Internal ]\n"})}),"\n",(0,s.jsx)(n.p,{children:'Returns the name of the domain parameter whose macro name was passed in. For example, translates $$$IKPDEFAULTCONFIG into "DefaultConfig"'}),"\n",(0,s.jsx)(n.h3,{id:"maptoumls",children:"mapToUMLS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod mapToUMLS(domainId As %Integer, sourceMatchLevel As %Integer = 0, buildTfIdfTable As %Boolean = 1) As %Status [ Deprecated, Internal ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"For an iTables domain creates UMLS mapping between domain entities, sources and UMLS concepts."}),"\n",(0,s.jsx)(n.h3,{id:"createdomaintables",children:"CreateDomainTables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod CreateDomainTables(pTableName As %String, pColumnName As %String, ByRef pDomainName As %String = "", ByRef pDomainId As %Integer = "", pIdColumn As %String = "ID", lang As %String = "", silent As %Boolean = 0, turnOffJournal As %Boolean = 1, noindex As %Boolean = 1, createWordContextTable As %List = "", createITablesIndices As %Boolean = 1) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(n.p,{children:'Creates an iKnow domain containing the data in the pColumnName column of table pTableName through a domain definition (%iKnow.DomainDefinition) named "Domain" in the same package as pTableName. In addition, customizable table projections for accessing the iKnow domain data through SQL will be generated by invoking %iKnow.Tables.Utils. If an existing domain ID is supplied through pDomainId, no domain definition is generated and only the projection classes will be generated.'}),"\n",(0,s.jsx)(n.p,{children:"Depending on the value of createITablesIndices, a number of additional index structures and properties will be created to complement the system-supplied ones on the table projections."}),"\n",(0,s.jsx)(n.h3,{id:"shell",children:"Shell"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Shell()\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the iKnow shell. See also %iKnow.Shell."}),"\n",(0,s.jsx)(n.h3,{id:"highlight",children:"Highlight"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Highlight(pText As %String, ByRef pHighlight, pConfig As %String = {$$$DEFAULTCONFIG}, pEscapeHTML As %Boolean = 1, Output pSC As %Status = {$$$OK}) As %String\n"})}),"\n",(0,s.jsx)(n.p,{children:"Highlights the supplied text pText using the highlight information specified through pHighlight. See GetHighlighted in %iKnow.Queries.SentenceAPI for more details on possible input to pHighlight."}),"\n",(0,s.jsx)(n.h3,{id:"deletesource",children:"DeleteSource"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DeleteSource(pDomainName As %String, pSrcId As %Integer) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Deletes the source with internal ID pSrcId from domain pDomainName"}),"\n",(0,s.jsx)(n.h3,{id:"deletevirtualsource",children:"DeleteVirtualSource"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DeleteVirtualSource(pDomainName As %String, vSrcId As %Integer) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Deletes the virtual source with ID vSrcId from domain pDomainName"}),"\n",(0,s.jsx)(n.h3,{id:"normalize",children:"Normalize"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod Normalize(pString As %String, pDomainId As %Integer = "", pConfig As %String = "", pLanguage As %String = "", Output pSC As %Status = {$$$OK}, pCleanPunctuation As %Boolean = 1) As %String\n'})}),"\n",(0,s.jsx)(n.p,{children:"Applies relevant iKnow normalization logic. By default, this implies removing whitespace from the front and back of the string, removing duplicate whitespace, and lowercase. For specific configurations or languages such as Japanese, normalization behaviour is more refined and described in the documentation."}),"\n",(0,s.jsx)(n.p,{children:"If a domain ID is specified through pDomainId, its default configuration will be used (if specified). Otherwise, the configuration named pConfig will be used."})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(96540);const a={},t=s.createContext(a);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);