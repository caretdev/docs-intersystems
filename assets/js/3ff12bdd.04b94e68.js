"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[14999],{7722:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>l,default:()=>o,frontMatter:()=>a,toc:()=>r});var i=s(74848),t=s(28453);const a={pagination_prev:null,pagination_next:null},l="%Stream.FileBinary",r=[{value:"Parameters",id:"parameters",level:2},{value:"STORAGE",id:"storage",level:3},{value:"FILEEXT",id:"fileext",level:3},{value:"OPENREAD",id:"openread",level:3},{value:"OPENWRITE",id:"openwrite",level:3},{value:"OPENAPPEND",id:"openappend",level:3},{value:"OPENREADTERM",id:"openreadterm",level:3},{value:"GZIP",id:"gzip",level:3},{value:"Properties",id:"properties",level:2},{value:"StoreFile",id:"storefile",level:3},{value:"MakePermLoc",id:"makepermloc",level:3},{value:"Filename",id:"filename",level:3},{value:"CanonicalFilename",id:"canonicalfilename",level:3},{value:"Mode",id:"mode",level:3},{value:"NormalizedDirectory",id:"normalizeddirectory",level:3},{value:"TempFile",id:"tempfile",level:3},{value:"CurrFile",id:"currfile",level:3},{value:"RemoveOnClose",id:"removeonclose",level:3},{value:"ReadMode",id:"readmode",level:3},{value:"ReadSize",id:"readsize",level:3},{value:"LineTerminator",id:"lineterminator",level:3},{value:"Methods",id:"methods",level:2},{value:"%IsNull",id:"isnull",level:3},{value:"IdSet",id:"idset",level:3},{value:"%LocationSet",id:"locationset",level:3},{value:"FilenameSet",id:"filenameset",level:3},{value:"FilenameGet",id:"filenameget",level:3},{value:"CanonicalFilenameGet",id:"canonicalfilenameget",level:3},{value:"LineTerminatorSet",id:"lineterminatorset",level:3},{value:"%OnConstructClone",id:"onconstructclone",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"DefaultStreamDir",id:"defaultstreamdir",level:3},{value:"%LoadData",id:"loaddata",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"Rewind",id:"rewind",level:3},{value:"Flush",id:"flush",level:3},{value:"SizeGet",id:"sizeget",level:3},{value:"FileBinarySize",id:"filebinarysize",level:3},{value:"LinkToFile",id:"linktofile",level:3},{value:"%SaveData",id:"savedata",level:3},{value:"%DeleteData",id:"deletedata",level:3},{value:"NewFileName",id:"newfilename",level:3},{value:"Read",id:"read",level:3},{value:"MoveTo",id:"moveto",level:3},{value:"SetupRead",id:"setupread",level:3},{value:"Write",id:"write",level:3},{value:"WriteLine",id:"writeline",level:3},{value:"MoveToEnd",id:"movetoend",level:3},{value:"CopyFrom",id:"copyfrom",level:3},{value:"OutputToDevice",id:"outputtodevice",level:3},{value:"Clear",id:"clear",level:3},{value:"LastModifiedGet",id:"lastmodifiedget",level:3},{value:"OpenDevice",id:"opendevice",level:3},{value:"GetWriteOpenParameter",id:"getwriteopenparameter",level:3},{value:"ReadLine",id:"readline",level:3},{value:"ReadLineIntoStream",id:"readlineintostream",level:3},{value:"%NormalizeObject",id:"normalizeobject",level:3},{value:"%ValidateObject",id:"validateobject",level:3},{value:"%Exists",id:"exists",level:3},{value:"%ObjectModified",id:"objectmodified",level:3},{value:"%IsModified",id:"ismodified",level:3},{value:"%ObjectIsNull",id:"objectisnull",level:3}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"streamfilebinary",children:"%Stream.FileBinary"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Stream.FileBinary Extends %Stream.Object [ ClientDataType = BINARYSTREAM, OdbcType = LONGVARBINARY, System = 2 ]\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"For information on this class"}),", see ",(0,i.jsx)(n.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25Stream.FileBinary",children:"Working with Streams"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Stream class that stores binary data in files. For example, the following code opens a file binary stream, points it at a particular file on the filesystem, and then reads it in chunks of 32,000 bytes: ",(0,i.jsx)(n.code,{children:'Set stream=##class(%Stream.FileBinary).%New() Set sc=stream.LinkToFile("c:\\myfile.txt") While \'stream.AtEnd { Set line=stream.Read() ; Process the chunk here }'})]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"storage",children:"STORAGE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter STORAGE = "OTHER";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"fileext",children:"FILEEXT"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter FILEEXT = "stream";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"openread",children:"OPENREAD"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter OPENREAD = "RUK\\RAW\\";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"openwrite",children:"OPENWRITE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter OPENWRITE = "WUNK\\RAW\\";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"openappend",children:"OPENAPPEND"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter OPENAPPEND = "AWUK\\RAW\\";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"openreadterm",children:"OPENREADTERM"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter OPENREADTERM = "RSK\\RAW\\";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"gzip",children:"GZIP"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter GZIP = 0;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"storefile",children:"StoreFile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property StoreFile As %String [ Internal, Private, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"Hold the filename part of the permanent storage location"}),"\n",(0,i.jsx)(n.h3,{id:"makepermloc",children:"MakePermLoc"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property MakePermLoc As %Boolean [ InitialExpression = 0, Private, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"If true then when saving this file we need to move it to the default permanent location"}),"\n",(0,i.jsx)(n.h3,{id:"filename",children:"Filename"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property Filename As %String(MAXLEN = 5000) [ Calculated ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"The filename that this stream is currently using"}),"\n",(0,i.jsx)(n.p,{children:"If you set this property to update the file we will write to/read from this operation can fail if for example the directory specified does not exist. To detect this failure either check the %Status return code of the FilenameSet or if using 'Set stream.Filename=newname' then check %objlasterror after the call to see if it reported an error."}),"\n",(0,i.jsx)(n.h3,{id:"canonicalfilename",children:"CanonicalFilename"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property CanonicalFilename As %String(MAXLEN = 5000) [ Calculated ];\n"})}),"\n",(0,i.jsx)(n.p,{children:'Read only property that returns the canonical filename if the file is open and "" if the file is not open.'}),"\n",(0,i.jsx)(n.h3,{id:"mode",children:"Mode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property Mode As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,i.jsx)(n.h3,{id:"normalizeddirectory",children:"NormalizedDirectory"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property NormalizedDirectory As %String(MAXLEN = 5000) [ Private ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"Normalized form of the directory. This is used for access to the file (as it adds the extra '/' if needed), but it stores the %Location in the Id as this may be a relative path."}),"\n",(0,i.jsx)(n.h3,{id:"tempfile",children:"TempFile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property TempFile As %String(MAXLEN = 5000) [ Private, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"Name of file (without directory) containing temporary stream."}),"\n",(0,i.jsx)(n.h3,{id:"currfile",children:"CurrFile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property CurrFile As %String(MAXLEN = 5000) [ Private, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:'Full path name of currently opened file. Equal to "" if no file is open.'}),"\n",(0,i.jsx)(n.h3,{id:"removeonclose",children:"RemoveOnClose"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property RemoveOnClose As %Boolean [ InitialExpression = 0, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"If true then remove the permanent file as well as any temp file when this object is closed. If you call %Save on a stream where RemoveOnClose is true it will set this to false as if you explicitly save the stream you no longer want it to be removed when the object is closed. In order to make sure %Save always runs the logic to reset the flag setting this to true causes %IsModified/%ObjectModified to return true."}),"\n",(0,i.jsx)(n.h3,{id:"readmode",children:"ReadMode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property ReadMode As %Integer [ InitialExpression = {$$$modeREADNORMAL}, Private, Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"Mode the device is opened in, either with terminators as delimitors or not."}),"\n",(0,i.jsx)(n.h3,{id:"readsize",children:"ReadSize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Property ReadSize As %Integer [ Transient ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"While reading this holds the file size"}),"\n",(0,i.jsx)(n.h3,{id:"lineterminator",children:"LineTerminator"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property LineTerminator As %String(MAXLEN = 10) [ InitialExpression = {$get(^%SYS("Stream","LineTerminator"),$select($$$isUNIX:$char(10),1:$char(13,10)))}, Transient ];\n'})}),"\n",(0,i.jsxs)(n.p,{children:["For file streams the line will terminate on any of the characters set in the LineTerminator, it does not support multi-character line terminators because it uses the ObjectScript file behavior which terminates on any of the characters.",(0,i.jsx)(n.br,{}),"\nAlso for %FileCharacterStream even if you set this when you call WriteLine as the file was opened in 'S' mode it will normalize the line terminator as the data is being written, so for example if you set LineTerminator to $char(13,10) on Unix systems when you call WriteLine it will only write $char(10) to the file."]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"isnull",children:"%IsNull"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %IsNull() As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"idset",children:"IdSet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method IdSet(id As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"locationset",children:"%LocationSet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %LocationSet(dir As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Note that setting the %Location will cause a few things to happen. It will delete any temporary file that may have been created. It will not touch any permanent file that this object was associated with, if you wish to delete this pre-existing permanent file then call Clear passing '1' as the argument before setting the %Location. It then marks this object as pointing to a null stream in the new directory you specified."}),"\n",(0,i.jsx)(n.h3,{id:"filenameset",children:"FilenameSet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method FilenameSet(file As %String) As %Status [ CodeMode = call ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"filenameget",children:"FilenameGet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method FilenameGet() As %String [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"canonicalfilenameget",children:"CanonicalFilenameGet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method CanonicalFilenameGet() As %String [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"lineterminatorset",children:"LineTerminatorSet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method LineTerminatorSet(terminator As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"onconstructclone",children:"%OnConstructClone"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnConstructClone(object As %RegisteredObject, deep As %Boolean = 0, ByRef cloned As %String) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Method %OnNew(initval As %String = "") As %Status [ Private ]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"defaultstreamdir",children:"DefaultStreamDir"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DefaultStreamDir(skip As %Boolean = 0) As %String\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the default directory to use for streams if none specified"}),"\n",(0,i.jsx)(n.h3,{id:"loaddata",children:"%LoadData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %LoadData(id As %String) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"rewind",children:"Rewind"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method Rewind() As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"flush",children:"Flush"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method Flush() As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sizeget",children:"SizeGet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method SizeGet() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the current size of the data stream."}),"\n",(0,i.jsx)(n.h3,{id:"filebinarysize",children:"FileBinarySize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method FileBinarySize() As %Integer\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the current size of the file in bytes."}),"\n",(0,i.jsx)(n.h3,{id:"linktofile",children:"LinkToFile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method LinkToFile(filename As %String) As %Status\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This method lets you connect a file stream to a file called filename without making a copy of it. If the file does not already exist it will still allow you to link to this file, and %IsNull() will return true until you write to this file. ",(0,i.jsx)(n.code,{children:'Do object.Image.LinkToFile("\\temp\\image.jpg") Do object.%Save()'})," The method as its name suggests creates a LINK to an EXISTING file. So this is a 'shared public' file, as it can be shared by several instances of a class, or even several classes. Using the CopyFrom method, on the contrary, creates a 'private' image, not sharable by other instances/classes, so these two methods are really different."]}),"\n",(0,i.jsx)(n.p,{children:"The problems with shared public images are that several instances are all allowed to update and even delete the image, causing problems for other instances."}),"\n",(0,i.jsx)(n.p,{children:"For example, if dog #2 has image 'test.gif', I can also assign that image to dog #5 or even person #24 If I change the image for dog #5, then the image is changed in place to another image, thus upsetting dog#2 and person#24. If I delete dog#5, the image is also deleted and thus dog#2 and person#24 are changed."}),"\n",(0,i.jsx)(n.p,{children:"Also note that if there is currently some temporary data in the old stream when the LinkToFile is called this temporary data will be removed before the stream is linked to this filename."}),"\n",(0,i.jsx)(n.h3,{id:"savedata",children:"%SaveData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SaveData(ByRef sid As %String) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"deletedata",children:"%DeleteData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteData(streamvalue As %String, concurrency As %Integer) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"newfilename",children:"NewFileName"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod NewFileName(ext As %String = "", directory As %String = "") As %String\n'})}),"\n",(0,i.jsx)(n.h3,{id:"read",children:"Read"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method Read(ByRef len As %Integer = 32000, ByRef sc As %Status) As %RawString\n"})}),"\n",(0,i.jsx)(n.h3,{id:"moveto",children:"MoveTo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method MoveTo(position As %Integer) As %Boolean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Move to this position in the stream. If this suceeds then return true, else return false. Note that moving to position 1 will be at the start of the stream, position 2 will be at the second character of the stream, etc."}),"\n",(0,i.jsx)(n.h3,{id:"setupread",children:"SetupRead"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method SetupRead(newMode As %Integer, pos As %Integer = 0) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"write",children:"Write"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Method Write(data As %RawString = "") As %Status\n'})}),"\n",(0,i.jsx)(n.h3,{id:"writeline",children:"WriteLine"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Method WriteLine(data As %RawString = "") As %Status\n'})}),"\n",(0,i.jsx)(n.p,{children:"Appends the string data along with a line terminator to the stream and advances the current stream position by the number of characters in data plus the line terminator."}),"\n",(0,i.jsx)(n.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,i.jsx)(n.h3,{id:"movetoend",children:"MoveToEnd"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method MoveToEnd() As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"copyfrom",children:"CopyFrom"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method CopyFrom(source As %AbstractStream) As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"outputtodevice",children:"OutputToDevice"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method OutputToDevice(ByRef len As %Integer = -1) As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"clear",children:"Clear"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method Clear(permanent As %Boolean = 1) As %Status\n"})}),"\n",(0,i.jsx)(n.h3,{id:"lastmodifiedget",children:"LastModifiedGet"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method LastModifiedGet() As %TimeStamp\n"})}),"\n",(0,i.jsx)(n.h3,{id:"opendevice",children:"OpenDevice"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method OpenDevice(filename As %String, mode As %Integer, nocheck As %Boolean = 0) As %Status [ Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getwriteopenparameter",children:"GetWriteOpenParameter"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetWriteOpenParameter(filename As %String, mode As %Integer) As %String [ CodeMode = expression, Private ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"readline",children:"ReadLine"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method ReadLine(ByRef len As %Integer = 32000, ByRef sc As %Status, ByRef eol As %Boolean, ByRef term As %String) As %RawString\n"})}),"\n",(0,i.jsx)(n.p,{children:"Read a line from the file. Note that besides the normal ReadLine arguments this can also be passed a term which will return the terminator that completed the line if we read in a whole line."}),"\n",(0,i.jsx)(n.h3,{id:"readlineintostream",children:"ReadLineIntoStream"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method ReadLineIntoStream(ByRef sc As %Status) As %AbstractStream\n"})}),"\n",(0,i.jsx)(n.h3,{id:"normalizeobject",children:"%NormalizeObject"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %NormalizeObject() As %Status [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"validateobject",children:"%ValidateObject"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ValidateObject(force As %Integer = 0) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"exists",children:"%Exists"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %Exists(soid As %ObjectIdentity) As %Boolean\n"})}),"\n",(0,i.jsx)(n.h3,{id:"objectmodified",children:"%ObjectModified"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %ObjectModified() As %Integer [ ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ismodified",children:"%IsModified"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %IsModified() As %Integer\n"})}),"\n",(0,i.jsx)(n.h3,{id:"objectisnull",children:"%ObjectIsNull"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod %ObjectIsNull(soid As %ObjectIdentity) As %Boolean\n"})})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const t={},a=i.createContext(t);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);