"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[20905],{9321:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>a,default:()=>o,frontMatter:()=>i,toc:()=>l});var n=t(74848),r=t(28453);const i={pagination_prev:null,pagination_next:null},a="%Storage.Persistent",l=[{value:"Parameters",id:"parameters",level:2},{value:"STORAGECOMPILERCLASS",id:"storagecompilerclass",level:3},{value:"STORAGEINTERFACE",id:"storageinterface",level:3},{value:"Methods",id:"methods",level:2},{value:"&quot;%%CLASSNAMEStorageToLogical&quot;",id:"classnamestoragetological",level:3},{value:"&quot;%%CLASSNAMELogicalToStorage&quot;",id:"classnamelogicaltostorage",level:3},{value:"%BMEBuilt",id:"bmebuilt",level:3},{value:"%BuildIndices",id:"buildindices",level:3},{value:"%BuildDeferredIndices",id:"builddeferredindices",level:3},{value:"%BuildIndicesSegment",id:"buildindicessegment",level:3},{value:"%BuildDeferredSegment",id:"builddeferredsegment",level:3},{value:"%DeleteData",id:"deletedata",level:3},{value:"%Exists",id:"exists",level:3},{value:"%ExistsId",id:"existsid",level:3},{value:"%FileIndices",id:"fileindices",level:3},{value:"%FileIndicesBuffered",id:"fileindicesbuffered",level:3},{value:"%InitExtentData",id:"initextentdata",level:3},{value:"%KillExtentData",id:"killextentdata",level:3},{value:"%LoadData",id:"loaddata",level:3},{value:"%LoadFromMemory",id:"loadfrommemory",level:3},{value:"%LoadDataFromMemory",id:"loaddatafrommemory",level:3},{value:"%PhysicalAddress",id:"physicaladdress",level:3},{value:"%OnDetermineClass",id:"ondetermineclass",level:3},{value:"%PurgeIndices",id:"purgeindices",level:3},{value:"%LockExtent",id:"lockextent",level:3},{value:"%UnlockExtent",id:"unlockextent",level:3},{value:"%LockId",id:"lockid",level:3},{value:"%UnlockId",id:"unlockid",level:3},{value:"%SaveData",id:"savedata",level:3},{value:"%InsertBatch",id:"insertbatch",level:3},{value:"%SaveDirect",id:"savedirect",level:3},{value:"%SaveIndices",id:"saveindices",level:3},{value:"%SortBegin",id:"sortbegin",level:3},{value:"%SortEnd",id:"sortend",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"storagepersistent",children:"%Storage.Persistent"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Storage.Persistent Extends %Storage [ Abstract, Not ProcedureBlock, System = 2 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This class contains the storage interface methods for the default storage structure. The storage interface methods, which are implemented as method generators, work in conjunction with the persistent interface methods of the %Persistent class to provide persistent behavior for objects."}),"\n",(0,n.jsx)(s.p,{children:"The methods of this class are not meant to be called directly. Use the methods of the %Persistent class which, in turn, call the appropriate method."}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"storagecompilerclass",children:"STORAGECOMPILERCLASS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter STORAGECOMPILERCLASS = "%Compiler.Storage.Persistent";\n'})}),"\n",(0,n.jsx)(s.h3,{id:"storageinterface",children:"STORAGEINTERFACE"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter STORAGEINTERFACE As STRING [ Constraint = ",persistent,serial", Flags = ENUM ] = "persistent";\n'})}),"\n",(0,n.jsx)(s.p,{children:"STORAGEINTERFACE defines the type of serialization implemented by this class. The value has to match the classtype of the class that is inheriting the serialization interface."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"classnamestoragetological",children:'"%%CLASSNAMEStorageToLogical"'}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod "%%CLASSNAMEStorageToLogical"(%val) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%AncestryStorageToLogical"}),"\n",(0,n.jsx)(s.h3,{id:"classnamelogicaltostorage",children:'"%%CLASSNAMELogicalToStorage"'}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod "%%CLASSNAMELogicalToStorage"(%val) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%AncestryLogicalToStorage"}),"\n",(0,n.jsx)(s.h3,{id:"bmebuilt",children:"%BMEBuilt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %BMEBuilt(ByRef bmeName As %String) As %Boolean [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"buildindices",children:"%BuildIndices"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %BuildIndices(pIndexList As %RawString = "", pAutoPurge As %Integer = 1, pLockFlag As %Integer = 0, pJournalFlag As %Integer = "", pStartID As %RawString = "", pEndID As %RawString = "", pIgnoreIndexList As %RawString = "", pKeepSelectability As %Integer = 0, pNumberJobs As %Integer = "") As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"This method will build the indexes requested for the range of ID's requested. If it is prudent to do this work in the background using multiple processes then it will be done using $system.WorkMgr. If doing the work in the background then the extent will be partitioned using one of four different algorithms. 1) Integer ID, no bitmap extent index present - compute the difference between the first ID and the last, divide by partition size; 2) Integer ID, bitmap extent index present - chunk up using bitmap chunk size and the bitmap extent; 3) Single non-integer property - 4) Composite ID on non-integer property -"}),"\n",(0,n.jsx)(s.h3,{id:"builddeferredindices",children:"%BuildDeferredIndices"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %BuildDeferredIndices(lockFlag As %Integer = 0, journalFlag As %Integer = 1) As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1 ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"buildindicessegment",children:"%BuildIndicesSegment"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %BuildIndicesSegment(pStartID As %Integer, pEndID As %Integer, ByRef pIndexHandle As %Binary = 0, pLockFlag As %Integer = 1, pFirstRange As %Boolean = 0, pJob As %RawString = "") As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"This function generates the code to iterate over a range of ID values, invoking the index filer for each ID."}),"\n",(0,n.jsx)(s.h3,{id:"builddeferredsegment",children:"%BuildDeferredSegment"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %BuildDeferredSegment(chunkPtr As %Integer, chunk As %Binary, pLockFlag As %Integer = 1, pJob As %RawString = "") As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.h3,{id:"deletedata",children:"%DeleteData"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteData(id As %String, concurrency As %Integer) As %Status [ CodeMode = generator, Final, Private, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%DeleteData() Delete object from persistent storage The caller is responsible for calling %IdSet() Don't include class name with id in input parameter"}),"\n",(0,n.jsx)(s.h3,{id:"exists",children:"%Exists"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %Exists(oid As %ObjectIdentity = "") As %Boolean [ Final, ProcedureBlock = 1, ServerOnly = 0 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%Exists() Check to see if an OID exists in the extent of this class..."}),"\n",(0,n.jsx)(s.h3,{id:"existsid",children:"%ExistsId"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ExistsId(id As %String) As %Boolean [ CodeMode = generator, Final, ProcedureBlock = 1, ServerOnly = 0 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%ExistsId() Check to see if an ID exists in the extent of this class..."}),"\n",(0,n.jsx)(s.h3,{id:"fileindices",children:"%FileIndices"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %FileIndices(id As %String(MAXLEN=""), ByRef pIndexHandle As %Binary = 0, ByRef pVectorBuffer As %RawString) As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Files each index for the object identified by id. pIndexHandle is for internal use only."}),"\n",(0,n.jsx)(s.p,{children:"Returns a %Status value indicating success or failure. This method is normally generated by the storage class for persistent classes using %Storage.Persistent or %Storage.SQL."}),"\n",(0,n.jsx)(s.h3,{id:"fileindicesbuffered",children:"%FileIndicesBuffered"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %FileIndicesBuffered(id As %String(MAXLEN=""), ByRef pIndexHandle As %Binary = 0, ByRef pIndexBuffer As %RawString = "", ByRef pVectorBuffer As %RawString) As %Status [ CodeMode = generator, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.h3,{id:"initextentdata",children:"%InitExtentData"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %InitExtentData() As %Status [ CodeMode = generator, Final, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Initialize the data global for extent root classes. Return an error if the class is not the extent root class."}),"\n",(0,n.jsx)(s.h3,{id:"killextentdata",children:"%KillExtentData"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %KillExtentData(killstreams As %Boolean = 0, reinitialize As %Boolean = 0) As %Status [ CodeMode = generator, Final, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Kill the data, index, and idlocations for extent root classes. Return an error if the class is not the extent root class. If killstreams is true (default is false) it will also kill the default stream storage global. If reinitialize is true (default is false) it will also call %InitExtent to re-define the globals."}),"\n",(0,n.jsx)(s.h3,{id:"loaddata",children:"%LoadData"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %LoadData(id As %String) As %Status [ CodeMode = generator, Final, Private, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Load object from persistent storage into memory. The caller is responsible for calling %IdSet() Don't include class name with id in input parameter"}),"\n",(0,n.jsx)(s.h3,{id:"loadfrommemory",children:"%LoadFromMemory"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %LoadFromMemory(id As %String, ByRef objstate As %String, ByRef obj As %String) As %Status [ Final, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Load object from persistent storage into memory. The caller is responsible for calling %IdSet() Don't include class name with id in input parameter state is the physical data where the structure of state mirrors the structure of the object on disk obj is an array, subscripted by property name where each array element is equal to the property value named as the subscript."}),"\n",(0,n.jsx)(s.h3,{id:"loaddatafrommemory",children:"%LoadDataFromMemory"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %LoadDataFromMemory(id As %String, ByRef objstate As %String, ByRef obj As %String) As %Status [ CodeMode = generator, Final, Internal, Private, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"physicaladdress",children:"%PhysicalAddress"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %PhysicalAddress(id As %String, ByRef paddr As %String) As %Status [ CodeMode = generator, Final, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Load object from persistent storage into memory. The caller is responsible for calling %IdSet() Don't include class name with id in input parameter"}),"\n",(0,n.jsx)(s.h3,{id:"ondetermineclass",children:"%OnDetermineClass"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnDetermineClass(oid As %ObjectIdentity, ByRef class As %String) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%OnDetermineClass - find the most-specific-type-class for the given OID."}),"\n",(0,n.jsx)(s.h3,{id:"purgeindices",children:"%PurgeIndices"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %PurgeIndices(idxlist As %List = "", lockExtent As %Boolean = 0, pIgnoreIndexList As %RawString = "", pJournalFlag As %Library.Integer = "") As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.h3,{id:"lockextent",children:"%LockExtent"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %LockExtent(shared As %Boolean = 0) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Acquire (s)hared or (e)xclusive locks based on locktype parameter"}),"\n",(0,n.jsx)(s.h3,{id:"unlockextent",children:"%UnlockExtent"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %UnlockExtent(shared As %Boolean = 0, immediate As %Boolean = 0) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Release (s)hared or (e)xclusive locks based on locktype parameter"}),"\n",(0,n.jsx)(s.h3,{id:"lockid",children:"%LockId"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %LockId(id As %String, shared As %Boolean = 0, timeout As %Integer = {$$$LockTimeout}) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 0 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%LockId() - Obtain an exclusive or shared lock on the object identified by id. The type of lock obtained is determined by shared. This method overrides the implementation from %Library.Persistent."}),"\n",(0,n.jsx)(s.h3,{id:"unlockid",children:"%UnlockId"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %UnlockId(id As %String, shared As %Boolean = 0, immediate As %Boolean = 0) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 0 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%UnlockId() - Release an exclusive or shared lock on the object identified by id. The type of lock released is determined by shared. This method overrides the implementation from %Library.Persistent."}),"\n",(0,n.jsx)(s.h3,{id:"savedata",children:"%SaveData"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %SaveData(id As %String) As %Status [ CodeMode = generator, Final, Private, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'%SaveData() - Save the object to a persistent state (e.g. store it on disk). Returns: oid or "" if save fails'}),"\n",(0,n.jsx)(s.h3,{id:"insertbatch",children:"%InsertBatch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %InsertBatch(objects As %List, concurrency As %Integer = 0, useTransactions As %Boolean = 0) As %List [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"savedirect",children:"%SaveDirect"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SaveDirect(ByRef id As %String = "", idList As %List = "", ByRef data As %Binary, concurrency As %Integer = -1) As %Status [ CodeMode = generator, Final, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%SaveDirect() - saves an object to disk, checks uniqueness and referential integrity constraints, and maintains index structures. This method is implemented by the storage class."}),"\n",(0,n.jsx)(s.h3,{id:"saveindices",children:"%SaveIndices"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SaveIndices(pStartId As %String(MAXLEN="") = "", pEndId As %String(MAXLEN="") = "", lockExtent As %Boolean = 0) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 0 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Files the indices for all objects whose ID is in the range defined by pStartId and pEndId. If pEndID is null then it defaults to pStartId. If pStartId is null then the range is empty and no filing will occur. If lockExtent is true then an extent lock will be acquired before the indices are built. If the lock cannot be acquired then an error is returned. The lock is released after the index filing is completed."}),"\n",(0,n.jsx)(s.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,n.jsx)(s.h3,{id:"sortbegin",children:"%SortBegin"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SortBegin(idxlist As %List = "", excludeunique As %Integer = 0) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%SortBegin() This method will start a system merge sort for all indices (idxlist is null) or for specified indices"}),"\n",(0,n.jsx)(s.h3,{id:"sortend",children:"%SortEnd"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SortEnd(idxlist As %List = "", commit As %Integer = 1, excludeunique As %Integer = 0) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"%SortEnd() This method will end a system merge sort for all indices (idxlist is null) or for specified indices"})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>l});var n=t(96540);const r={},i=n.createContext(r);function a(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);