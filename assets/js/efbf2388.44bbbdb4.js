"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[75827],{31614:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>n,toc:()=>d});var l=t(74848),a=t(28453);const n={pagination_prev:null,pagination_next:null},i="%iKnow.Queries.MetadataQAPI",d=[{value:"Methods",id:"methods",level:2},{value:"AddField",id:"addfield",level:3},{value:"AddListOfValues",id:"addlistofvalues",level:3},{value:"AddLovValue",id:"addlovvalue",level:3},{value:"CreateFilter",id:"createfilter",level:3},{value:"GetFieldId",id:"getfieldid",level:3},{value:"GetFieldValuesExecute",id:"getfieldvaluesexecute",level:3},{value:"GetFieldValuesFetch",id:"getfieldvaluesfetch",level:3},{value:"GetFieldValuesClose",id:"getfieldvaluesclose",level:3},{value:"GetFieldValuesByIdExecute",id:"getfieldvaluesbyidexecute",level:3},{value:"GetFieldValuesByIdFetch",id:"getfieldvaluesbyidfetch",level:3},{value:"GetFieldValuesByIdClose",id:"getfieldvaluesbyidclose",level:3},{value:"GetFieldsExecute",id:"getfieldsexecute",level:3},{value:"GetFieldsFetch",id:"getfieldsfetch",level:3},{value:"GetFieldsClose",id:"getfieldsclose",level:3},{value:"GetLovValuesExecute",id:"getlovvaluesexecute",level:3},{value:"GetLovValuesFetch",id:"getlovvaluesfetch",level:3},{value:"GetLovValuesClose",id:"getlovvaluesclose",level:3},{value:"GetLovsExecute",id:"getlovsexecute",level:3},{value:"GetLovsFetch",id:"getlovsfetch",level:3},{value:"GetLovsClose",id:"getlovsclose",level:3},{value:"GetMetaSpreadByEntities",id:"getmetaspreadbyentities",level:3},{value:"GetMetaSpreadByEntityIds",id:"getmetaspreadbyentityids",level:3},{value:"GetMetaSpreadInternal",id:"getmetaspreadinternal",level:3},{value:"GetUniValue",id:"getunivalue",level:3},{value:"GetUniqueValueCount",id:"getuniquevaluecount",level:3},{value:"GetUniqueValuesExecute",id:"getuniquevaluesexecute",level:3},{value:"GetUniqueValuesFetch",id:"getuniquevaluesfetch",level:3},{value:"GetUniqueValuesClose",id:"getuniquevaluesclose",level:3},{value:"GetUniqueValuesByIdExecute",id:"getuniquevaluesbyidexecute",level:3},{value:"GetUniqueValuesByIdFetch",id:"getuniquevaluesbyidfetch",level:3},{value:"GetUniqueValuesByIdClose",id:"getuniquevaluesbyidclose",level:3},{value:"GetValue",id:"getvalue",level:3},{value:"GetValueById",id:"getvaluebyid",level:3},{value:"GetValuesExecute",id:"getvaluesexecute",level:3},{value:"GetValuesFetch",id:"getvaluesfetch",level:3},{value:"GetValuesClose",id:"getvaluesclose",level:3},{value:"GetValuesByIdExecute",id:"getvaluesbyidexecute",level:3},{value:"GetValuesByIdFetch",id:"getvaluesbyidfetch",level:3},{value:"GetValuesByIdClose",id:"getvaluesbyidclose",level:3},{value:"RemoveField",id:"removefield",level:3},{value:"RemoveFieldById",id:"removefieldbyid",level:3},{value:"SetValue",id:"setvalue",level:3},{value:"SetValueById",id:"setvaluebyid",level:3},{value:"UpdateField",id:"updatefield",level:3},{value:"UpdateFieldById",id:"updatefieldbyid",level:3}];function r(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"iknowqueriesmetadataqapi",children:"%iKnow.Queries.MetadataQAPI"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Class %iKnow.Queries.MetadataQAPI Extends %iKnow.Queries.AbstractQAPI [ Deprecated, System = 4 ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"This is an automatically generated class, offering a functionally equivalent set of methods and queries as %iKnow.Queries.MetadataAPI, exposed as SqlProc methods."}),"\n",(0,l.jsx)(s.p,{children:"See the classdocs for %iKnow.Queries.MetadataAPI for more information."}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h3,{id:"addfield",children:"AddField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddField(domainId As %Integer, fieldName As %String(MAXLEN=32767), supportedOperators As %String(MAXLEN=32767) = {$lb($$$MDOPEQUAL)}, dataType As %String(MAXLEN=32767) = {$$$MDDTSTRING}, storage As %Integer = {$$$MDSTNORMAL}, caseSensitive As %Boolean = 0, lovId As %Integer = -1, validateLov As %Boolean = 1, hidden As %Boolean = 0, Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Adds a field definition with the given name and properties."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"The supportedOperators parameter specifies which operations (such as $$$MDOPEQUAL) will be available for filtering criteria"}),"\n",(0,l.jsx)(s.li,{children:"For dataType, choose either $$$MDDTSTRING, $$$MDDTNUMBER or $$$MDDTDATE ($horolog format)"}),"\n",(0,l.jsx)(s.li,{children:"Use storage to control how values are stored: $$$MDSTNORMAL for cases where you would use a normal index, $$$MDSTBITMAP where you would use a bitmap index (few different metadata values compared to total # of records)"}),"\n",(0,l.jsx)(s.li,{children:"If dataType is $$$MDDTSTRING, caseSensitive controls whether or not string values should be treated as case-sensitive."}),"\n",(0,l.jsx)(s.li,{children:"The lovId and validateLov parameters define whether a List Of Values is available for this metadata field and whether input values should be verified against this list. See also AddListOfValues."}),"\n",(0,l.jsx)(s.li,{children:"If hidden is set to true, the field will by default not appear in metadata field and value lists."}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"addlistofvalues",children:"AddListOfValues"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddListOfValues(domainId As %Integer, lovName As %String(MAXLEN=32767), autoExtend As %Boolean = 1, Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Adds a List Of Values to the domain, which can then be used as a list of allowable values for one or more metadata fields."}),"\n",(0,l.jsx)(s.h3,{id:"addlovvalue",children:"AddLovValue"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AddLovValue(domainId As %Integer, lovId As %Integer, value As %String(MAXLEN=32767), ByRef rank As %Integer = -1) As %Boolean [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Adds a new value to an existing List Of Values"}),"\n",(0,l.jsx)(s.h3,{id:"createfilter",children:"CreateFilter"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CreateFilter(pDomainId As %Integer, pFieldName As %String(MAXLEN=32767), pOperator As %String(MAXLEN=32767), pValue As %String(MAXLEN=32767), Output scText As %String = "") As %iKnow.Filters.Filter [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Create a %iKnow.Filters.Filter instance that filters sources according to the given criteria, using the filter class compatible with this %iKnow.Queries.MetadataI implementation."}),"\n",(0,l.jsx)(s.p,{children:"For the default MetadataAPI, this is a %iKnow.Filters.SimpleMetadataFilter instance."}),"\n",(0,l.jsx)(s.h3,{id:"getfieldid",children:"GetFieldId"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetFieldId(domainId As %Integer, fieldName As %String(MAXLEN=32767), Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:'Returns the metadata field ID corresponding to the supplied name, or "" if none exists in this domain.'}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesexecute",children:"GetFieldValuesExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesExecute(ByRef qHandle As %Binary,  domainId As %Integer, fieldName As %String(MAXLEN=32767), page As %Integer = 1, pageSize As %Integer = 10) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns all the distinct values currently in use for a given metadata field (by name). See also GetUniqueValues for a version returning the number of sources with this metadata value and sorting options."}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesfetch",children:"GetFieldValuesFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetFieldValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesclose",children:"GetFieldValuesClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetFieldValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesbyidexecute",children:"GetFieldValuesByIdExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesByIdExecute(ByRef qHandle As %Binary,  domainId As %Integer, mdFieldId As %Integer, page As %Integer = 1, pageSize As %Integer = 10) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns all the distinct values currently in use for a given metadata field (by ID)."}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesbyidfetch",children:"GetFieldValuesByIdFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesByIdFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetFieldValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getfieldvaluesbyidclose",children:"GetFieldValuesByIdClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldValuesByIdClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetFieldValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getfieldsexecute",children:"GetFieldsExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldsExecute(ByRef qHandle As %Binary,  domainId As %Integer, includeHidden As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns all field definitions (including their properties) for the given domain."}),"\n",(0,l.jsx)(s.p,{children:"Setting includeHidden to true will also return any metadata fields marked as 'hidden'."}),"\n",(0,l.jsx)(s.h3,{id:"getfieldsfetch",children:"GetFieldsFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldsFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetFieldsExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getfieldsclose",children:"GetFieldsClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetFieldsClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetFieldsExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getlovvaluesexecute",children:"GetLovValuesExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovValuesExecute(ByRef qHandle As %Binary,  domainId As %Integer, lovId As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns all the allowed values for a given metadata LOV."}),"\n",(0,l.jsx)(s.h3,{id:"getlovvaluesfetch",children:"GetLovValuesFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovValuesFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetLovValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getlovvaluesclose",children:"GetLovValuesClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovValuesClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetLovValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getlovsexecute",children:"GetLovsExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovsExecute(ByRef qHandle As %Binary,  domainId As %Integer, page As %Integer = 1, pageSize As %Integer = 10) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns all LOVs (List of Values) registered for this domain."}),"\n",(0,l.jsx)(s.h3,{id:"getlovsfetch",children:"GetLovsFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovsFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetLovsExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getlovsclose",children:"GetLovsClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLovsClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetLovsExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getmetaspreadbyentities",children:"GetMetaSpreadByEntities"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetMetaSpreadByEntities(pDomainId As %Integer, pFieldName As %String(MAXLEN=32767), pEntityList As %String(MAXLEN=32767), pFilter As %String(MAXLEN=32767) = "", pSetOp As %Integer = {$$$UNION}, Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:'Returns the "spread" of metadata values (number of distinct values) for field pFieldName for the entities in pEntityList, in the sources satisfying pFilter. When specifying multiple entities, sources (and their metadata values) are included based on the value of pSetOp: if pSetOp = $$$UNION, only one entity has to be present (default), if pSetOp = $$$INTERSECT, all of them need to be present.'}),"\n",(0,l.jsx)(s.h3,{id:"getmetaspreadbyentityids",children:"GetMetaSpreadByEntityIds"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetMetaSpreadByEntityIds(pDomainId As %Integer, pFieldName As %String(MAXLEN=32767), pEntityIdList As %String(MAXLEN=32767), pFilter As %String(MAXLEN=32767) = "", pSetOp As %Integer = {$$$UNION}, Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:'Returns the "spread" of metadata values (number of distinct values) for field pFieldName for the entities in pEntityIdList, in the sources satisfying pFilter. When specifying multiple entities, sources (and their metadata values) are included based on the value of pSetOp: if pSetOp = $$$UNION, only one entity has to be present (default), if pSetOp = $$$INTERSECT, all of them need to be present.'}),"\n",(0,l.jsx)(s.h3,{id:"getmetaspreadinternal",children:"GetMetaSpreadInternal"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetMetaSpreadInternal(pDomainId As %Integer, pFieldId As %Integer, pType As %String(MAXLEN=32767) = "ENTITY", pFilter As %String(MAXLEN=32767) = "", pSetOp As %Integer = {$$$UNION}, Output scText As %String = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.h3,{id:"getunivalue",children:"GetUniValue"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetUniValue(pDomainId As %Integer, pUniValueId As %Integer) As %Library.String [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns the unique metadata value corresponding to the supplied pUniValueId."}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluecount",children:"GetUniqueValueCount"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetUniqueValueCount(pDomainId As %Integer, pFieldName As %String(MAXLEN=32767), pFilter As %String(MAXLEN=32767) = "") As %Library.Integer [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Returns the number of unique metadata values for a given field pFieldName in the sources satisfying the supplied filter, after normalization based on the field specifications such as case sensitivity and data type."}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesexecute",children:"GetUniqueValuesExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetUniqueValuesExecute(ByRef qHandle As %Binary,  pDomainId As %Integer, pFieldName As %String(MAXLEN=32767), pPage As %Integer = 1, pPageSize As %Integer = 10, pFilter As %String(MAXLEN=32767) = "", pSortType As %String(MAXLEN=32767) = "") As %Status [ Internal ]\n'})}),"\n",(0,l.jsx)(s.p,{children:'Returns all the unique metadata values for field pFieldName in sources satisfying the supplied filter, optionally sorted by value (pSortType = "VALUE") or frequency (pSortType = "FREQUENCY"). The returned frequency represents the number of sources with this metadata value (satisfying the filter).'}),"\n",(0,l.jsx)(s.p,{children:"NOTE: sorting by value is only precise up to the 150 first characters"}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesfetch",children:"GetUniqueValuesFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetUniqueValuesFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetUniqueValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesclose",children:"GetUniqueValuesClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetUniqueValuesClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetUniqueValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesbyidexecute",children:"GetUniqueValuesByIdExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetUniqueValuesByIdExecute(ByRef qHandle As %Binary,  pDomainId As %Integer, pFieldId As %Integer, pPage As %Integer = 1, pPageSize As %Integer = 10, pFilter As %String(MAXLEN=32767) = "", pSortType As %String(MAXLEN=32767) = "") As %Status [ Internal ]\n'})}),"\n",(0,l.jsx)(s.p,{children:'Returns all the unique metadata values for field pFieldId in sources satisfying the supplied filter, optionally sorted by value (pSortType = "VALUE") or frequency (pSortType = "FREQUENCY"). The returned frequency represents the number of sources with this metadata value (satisfying the filter).'}),"\n",(0,l.jsx)(s.p,{children:"NOTE: sorting by value is only precise up to the 150 first characters"}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesbyidfetch",children:"GetUniqueValuesByIdFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetUniqueValuesByIdFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetUniqueValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getuniquevaluesbyidclose",children:"GetUniqueValuesByIdClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetUniqueValuesByIdClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetUniqueValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getvalue",children:"GetValue"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetValue(domainId As %Integer, fieldName As %String(MAXLEN=32767), externalId As %String(MAXLEN=32767), Output scText As %String = "") As %Library.String [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Returns the actual value for a given metadata field (by name) and source (by External ID)."}),"\n",(0,l.jsx)(s.h3,{id:"getvaluebyid",children:"GetValueById"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetValueById(domainId As %Integer, fieldId As %Integer, srcId As %Integer, Output scText As %String = "") As %Library.String [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Returns the actual value for a given metadata field (by ID) and source (by Source ID)."}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesexecute",children:"GetValuesExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesExecute(ByRef qHandle As %Binary,  domainId As %Integer, externalId As %String(MAXLEN=32767), includeHidden As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns the actual metadata values for the given source (by External ID)."}),"\n",(0,l.jsx)(s.p,{children:"Setting includeHidden to true will also return the values for hidden metadata fields."}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesfetch",children:"GetValuesFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesclose",children:"GetValuesClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetValuesExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesbyidexecute",children:"GetValuesByIdExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesByIdExecute(ByRef qHandle As %Binary,  domainId As %Integer, srcId As %Integer, includeHidden As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Returns the actual metadata values for the given source (by Source ID)."}),"\n",(0,l.jsx)(s.p,{children:"Setting includeHidden to true will also return the values for hidden metadata fields."}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesbyidfetch",children:"GetValuesByIdFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesByIdFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getvaluesbyidclose",children:"GetValuesByIdClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetValuesByIdClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetValuesByIdExecute ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"removefield",children:"RemoveField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveField(domainId As %Integer, fieldName As %String(MAXLEN=32767)) As %Boolean [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Removes a metadata field (by name) from the domain, including all references by existing sources."}),"\n",(0,l.jsx)(s.h3,{id:"removefieldbyid",children:"RemoveFieldById"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveFieldById(domainId As %Integer, fieldId As %Integer) As %Boolean [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Removes a metadata field (by ID) from the domain, including all references by existing sources."}),"\n",(0,l.jsx)(s.h3,{id:"setvalue",children:"SetValue"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetValue(domainId As %Integer, fieldName As %String(MAXLEN=32767), externalId As %String(MAXLEN=32767), value As %String(MAXLEN=32767)) As %Boolean [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Sets (or replaces if it exists) the value for a given metadata field (by name) for a given source (by External ID)."}),"\n",(0,l.jsx)(s.p,{children:"Values for fields of type $$$MDDTSTRING are normalized and stripped of whitespace and control characters at the beginning and end of the string."}),"\n",(0,l.jsx)(s.h3,{id:"setvaluebyid",children:"SetValueById"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetValueById(domainId As %Integer, fieldId As %Integer, srcId As %Integer, value As %String(MAXLEN=32767)) As %Boolean [ SqlProc ]\n"})}),"\n",(0,l.jsx)(s.p,{children:'Sets (or replaces if it exists) the value for a given metadata field (by ID) for a given source (by Source ID). Explicitly setting a value to "" (null/empty string) will erase the current value.'}),"\n",(0,l.jsx)(s.p,{children:"Values for fields of type $$$MDDTSTRING are normalized and stripped of whitespace and control characters at the beginning and end of the string."}),"\n",(0,l.jsx)(s.h3,{id:"updatefield",children:"UpdateField"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod UpdateField(domainId As %Integer, fieldName As %String(MAXLEN=32767), supportedOperators As %String(MAXLEN=32767) = "", storage As %Integer = -1, hidden As %Integer = -1, lovId As %Integer = -2, validateLov As %Integer = -1) As %Boolean [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Updates the properties for a given metadata field (by name). See also AddField."}),"\n",(0,l.jsx)(s.p,{children:'Specifying a "" for the supportedOperators will leave the current value for that property. Similarly, specifying -1 for storage, hidden and validateLov or -2 for lovId will leave their respective values unmodified. Setting lovId to -1 will unset the LOV for this field.'}),"\n",(0,l.jsx)(s.h3,{id:"updatefieldbyid",children:"UpdateFieldById"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod UpdateFieldById(domainId As %Integer, fieldId As %Integer, supportedOperators As %String(MAXLEN=32767) = "", storage As %Integer = -1, hidden As %Integer = -1, lovId As %Integer = -2, validateLov As %Integer = -1) As %Boolean [ SqlProc ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Updates the properties for a given metadata field (by ID). See also AddField."}),"\n",(0,l.jsx)(s.p,{children:'Specifying a "" for the supportedOperators will leave the current value for that property. Similarly, specifying -1 for storage, hidden and validateLov or -2 for lovId will leave their respective values unmodified. Setting lovId to -1 will unset the LOV for this field.'})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(r,{...e})}):r(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>d});var l=t(96540);const a={},n=l.createContext(a);function i(e){const s=l.useContext(n);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),l.createElement(n.Provider,{value:s},e.children)}}}]);