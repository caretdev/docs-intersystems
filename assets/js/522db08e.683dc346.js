"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[96507],{87122:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>a,frontMatter:()=>r,toc:()=>h});var i=t(74848),s=t(28453);const r={pagination_prev:null,pagination_next:null},l="%Net.JSON.JWKS",h=[{value:"Methods",id:"methods",level:2},{value:"InitializeJWKS",id:"initializejwks",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"PutJWK",id:"putjwk",level:3},{value:"GetJWK",id:"getjwk",level:3},{value:"RemoveJWK",id:"removejwk",level:3}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"netjsonjwks",children:"%Net.JSON.JWKS"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Net.JSON.JWKS Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This class provides methods to create and manage JSON Web Key Sets, as defined in RFC 7517."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"initializejwks",children:"InitializeJWKS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod InitializeJWKS(Output JWKS As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"This method creates a new JSON Web Key Set (JWKS)."}),"\n",(0,i.jsx)(n.p,{children:"Output parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWKS - An empty JWKS."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A status value indicating whether or not the JWKS was created, where errors indicate that it wasn't created and describe why."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This simply creates an empty JWKS."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod IsValid(JWKS As %String, Output JWKSObj As %DynamicObject) As %Status [ Internal ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This internal helper method checks that the provided JSON Web Key Set (JWKS) conforms to the specs laid out in RFC 7517 section 5."}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWKS - The JWKS to check for validity."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Output parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWKSObj - The provided JWKS in object form."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A status indicating whether or not the provided JWKS is valid, where error values indicate that the JWKS is not valid and describe the reason why."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'This method checks that the given JWKS exists, is non-null, is in valid JSON format, and contains a "keys" parameter that is an array.'}),"\n",(0,i.jsx)(n.li,{children:'This method does not check that the contents of the "keys" array are valid JWKs.'}),"\n",(0,i.jsx)(n.li,{children:"If the provided JWKS is not valid, then JWKSObj will be null."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"putjwk",children:"PutJWK"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod PutJWK(JWK As %DynamicObject, ByRef JWKS As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"This methods adds a JSON Web Key (JWK) to a JSON Web Key Set (JWKS)."}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWK - The JWK to add to the JWKS."}),"\n",(0,i.jsx)(n.li,{children:"JWKS - The JWKS to add the JWK into."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A status indicating whether or not the provided JWK was added to the JWKS, where error values indicate that it was not added and describe the reason why."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If JWKS is null, then a new JWKS will be created and the key will be added to it."}),"\n",(0,i.jsxs)(n.li,{children:["This method does not add a kid to keys when it puts them in the JWKS. In order to use kids, they must be added before the key is added to the JWKS. For example:",(0,i.jsx)(n.br,{}),"\nSet JWK.kid=1 Do ##class(%Net.JSON.JWKS).PutJWK(JWK,.JWKS)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"getjwk",children:"GetJWK"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetJWK(alg As %String, kid As %String, JWKS As %String, Output JWK As %DynamicObject) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"This method returns a JSON Web Key (JWK) that matches the provided algorithm and/or key ID from the given JSON Web Key Set (JWKS)."}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"alg - The algorithm of the desired JWK."}),"\n",(0,i.jsx)(n.li,{children:"kid - The key ID of the desired JWK."}),"\n",(0,i.jsx)(n.li,{children:"JWKS - The JWKS to search for the desired key."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Output parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWK - The JWK that matches the provided algorithm and/or key ID."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A status indicating whether or not the method was able to use the provided inputs to search the given JWKS, where error values indicate that it was unable to search and describe the reason why."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This method uses the following criteria, listed in order of priority, to determine which key to return:\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"alg/kid combination exact match"}),"\n",(0,i.jsx)(n.li,{children:"alg (but not kid) match"}),"\n",(0,i.jsx)(n.li,{children:"kid match and the key is for an algorithm with the same key type as alg"}),"\n",(0,i.jsx)(n.li,{children:"kid match"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"If more than one key is found for a given criterium, then the last key that meets that criterium is returned."}),"\n",(0,i.jsx)(n.li,{children:"This method will return an error if it finds a key in the JWKS that is not a valid JWK."}),"\n",(0,i.jsx)(n.li,{children:"This method will succeed if no key is found for the given alg/kid, but the JWK output value will be emtpy."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"removejwk",children:"RemoveJWK"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod RemoveJWK(alg As %String, kid As %String, ByRef JWKS As %String) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"This method removes JSON Web Keys (JWK) that match the provided algorithm and/or key ID from a JSON Web Key Set (JWKS)."}),"\n",(0,i.jsx)(n.p,{children:"Input parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"alg - The algorithm of the JWKs that are to be removed from the JWKS."}),"\n",(0,i.jsx)(n.li,{children:"kid - The key ID of the JWKs that are to be removed from the JWKS."}),"\n",(0,i.jsx)(n.li,{children:"JWKS - The JWKS to remove keys from."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return value:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A status indicating whether or not the method was able to use the provided inputs to search the given JWKS to attempt to remove keys, where error values indicate that it was unable to search and describe the reason why."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If both alg and kid are defined, this method will remove only those keys that match both alg and kid."}),"\n",(0,i.jsx)(n.li,{children:"If only alg is defined, this method will remove all keys for that algorithm."}),"\n",(0,i.jsx)(n.li,{children:"If only kid is defined, this method will remove all keys with that key ID."}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>h});var i=t(96540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);