"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[54057],{78674:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>c,default:()=>d,frontMatter:()=>i,toc:()=>a});var t=s(74848),l=s(28453);const i={pagination_prev:null,pagination_next:null},c="%DeepSee.PlugIn.Distinct",a=[{value:"Parameters",id:"parameters",level:2},{value:"BASECUBE",id:"basecube",level:3},{value:"CACHEABLE",id:"cacheable",level:3},{value:"LISTINGSOURCE",id:"listingsource",level:3},{value:"PLUGINTYPE",id:"plugintype",level:3},{value:"ASYNC",id:"async",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"KPI",id:"kpi",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnGetMDX",id:"ongetmdx",level:3},{value:"%OnGetListingFields",id:"ongetlistingfields",level:3},{value:"%OnCompute",id:"oncompute",level:3}];function r(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"deepseeplugindistinct",children:"%DeepSee.PlugIn.Distinct"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %DeepSee.PlugIn.Distinct Extends %DeepSee.KPIPlugIn [ System = 4 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'%DeepSee.PlugIn.Distinct This plugin can be used to get the count of distinct values for a given level in a given cell. For example: %KPI("%DeepSee.Distinct","DISTINCT",1,"%level","[DocD].[H1].[Doctor]","%CONTEXT") The above returns the number of unique doctors contained in the set of fact for a cell. Use the "%level" parameter to tell the plugin which level you are interested in -- use [].[].[]'}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"basecube",children:"BASECUBE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter BASECUBE = "*";\n'})}),"\n",(0,t.jsx)(n.p,{children:"Cube(s) that this plug-in is based on."}),"\n",(0,t.jsx)(n.h3,{id:"cacheable",children:"CACHEABLE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter CACHEABLE = 1;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"listingsource",children:"LISTINGSOURCE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter LISTINGSOURCE = "FactTable";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"plugintype",children:"PLUGINTYPE"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter PLUGINTYPE = "Aggregate";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"async",children:"ASYNC"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter ASYNC = 1;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(n.h3,{id:"kpi",children:"KPI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'XData KPI [ XMLNamespace = "http://www.intersystems.com/deepsee/kpi" ]\n'})}),"\n",(0,t.jsx)(n.p,{children:"This XData definition defines the KPI."}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"ongetmdx",children:"%OnGetMDX"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnGetMDX(ByRef pMDX As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get the base query for this plug-in."}),"\n",(0,t.jsx)(n.h3,{id:"ongetlistingfields",children:"%OnGetListingFields"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnGetListingFields() As %String\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the field list (RETURN clause) of the listing used to supply data for this plug-in. In this case, determine which measure we need."}),"\n",(0,t.jsx)(n.h3,{id:"oncompute",children:"%OnCompute"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnCompute(pSQLRS As %SQL.StatementResult, pFactCount As %Integer) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"This is where we actually do work in the PlugIn. We are given an SQL result set of all the facts included in this cell. We can loop over the facts and exclude doubles from the count"})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(96540);const l={},i=t.createContext(l);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);