"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[57327],{81789:(e,t,l)=>{l.r(t),l.d(t,{contentTitle:()=>r,default:()=>o,frontMatter:()=>a,toc:()=>i});var s=l(74848),n=l(28453);const a={pagination_prev:null,pagination_next:null},r="%DeepSee.PMML.ModelOutput",i=[{value:"Properties",id:"properties",level:2},{value:"%Trace",id:"trace",level:3},{value:"%AllClassProbs",id:"allclassprobs",level:3},{value:"Methods",id:"methods",level:2},{value:"%GetFields",id:"getfields",level:3},{value:"%GetFeatureValue",id:"getfeaturevalue",level:3},{value:"%GetTracingInfo",id:"gettracinginfo",level:3},{value:"%GetAllClassProbabilities",id:"getallclassprobabilities",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"deepseepmmlmodeloutput",children:"%DeepSee.PMML.ModelOutput"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.PMML.ModelOutput Extends %SerialObject [ Abstract, System = 4 ]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"trace",children:"%Trace"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %Trace [ Internal, MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.h3,{id:"allclassprobs",children:"%AllClassProbs"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %AllClassProbs [ Internal, MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"getfields",children:"%GetFields"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetFields(Output pFields) As %Status [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"pArray(fieldName) = $lb(feature, targetFieldName, displayName)"}),"\n",(0,s.jsx)(t.h3,{id:"getfeaturevalue",children:"%GetFeatureValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %GetFeatureValue(pFeature As %String = "predictedValue", pTargetField As %String = "", Output pAllValues) As %String\n'})}),"\n",(0,s.jsx)(t.p,{children:'Returns the feature value of predicted field pTargetField. If pTargetField is left blank, the feature value for the "last" field is returned (generally safe for models predicting a single field value). Note that pTargetField is the name of the field in the data class, not in this output class. pAllValues contains the feature values for all fields, indexed by field name'}),"\n",(0,s.jsx)(t.h3,{id:"gettracinginfo",children:"%GetTracingInfo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetTracingInfo(Output pTrace) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns tracing information (if available) about the contribution of the input values to the model's outcome. Format: pTrace(n) = $lb($lb(inputs), $lb(values), rank, [weight], [info])"}),"\n",(0,s.jsx)(t.h3,{id:"getallclassprobabilities",children:"%GetAllClassProbabilities"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetAllClassProbabilities(Output pClassProbs) As %Status [ Internal ]\n"})})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,l)=>{l.d(t,{R:()=>r,x:()=>i});var s=l(96540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);