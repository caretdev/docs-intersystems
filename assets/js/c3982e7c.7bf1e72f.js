"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[33571],{43151:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>o,frontMatter:()=>a,toc:()=>l});var s=n(74848),i=n(28453);const a={pagination_prev:null,pagination_next:null},r="%DeepSee.SubjectArea",l=[{value:"XDatas",id:"xdatas",level:2},{value:"SubjectArea",id:"subjectarea",level:3},{value:"Methods",id:"methods",level:2},{value:"%Generate",id:"generate",level:3},{value:"%GetCubeName",id:"getcubename",level:3},{value:"%GetFactCount",id:"getfactcount",level:3},{value:"%OnExecuteListing",id:"onexecutelisting",level:3},{value:"%GetFactClass",id:"getfactclass",level:3},{value:"%GetCubeCaption",id:"getcubecaption",level:3},{value:"%GetMemberCaption",id:"getmembercaption",level:3},{value:"%GetMemberDescription",id:"getmemberdescription",level:3},{value:"%GetFilterSpec",id:"getfilterspec",level:3},{value:"%OnGetFilterSpec",id:"ongetfilterspec",level:3},{value:"%GetDefaultListing",id:"getdefaultlisting",level:3},{value:"%OnGetDefaultListing",id:"ongetdefaultlisting",level:3},{value:"%CanDrillThrough",id:"candrillthrough",level:3},{value:"%IsAbstract",id:"isabstract",level:3},{value:"%IsCompound",id:"iscompound",level:3},{value:"%GetCountCaption",id:"getcountcaption",level:3},{value:"%GetCountName",id:"getcountname",level:3},{value:"%GetActionList",id:"getactionlist",level:3},{value:"%GetListingCaption",id:"getlistingcaption",level:3},{value:"%GetListingDescription",id:"getlistingdescription",level:3},{value:"%GetListingFieldCaption",id:"getlistingfieldcaption",level:3},{value:"%GetListingFieldDescription",id:"getlistingfielddescription",level:3},{value:"%GetLevelMemberCaption",id:"getlevelmembercaption",level:3},{value:"%OnGetComputedMembers",id:"ongetcomputedmembers",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"deepseesubjectarea",children:"%DeepSee.SubjectArea"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.SubjectArea Extends (%RegisteredObject, %XML.Adaptor) [ CompileAfter = (%DeepSee.Model.SubjectArea.subjectArea, %DeepSee.Generator), System = 4 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This class is used to define DeepSee Subject Areas.",(0,s.jsx)(t.br,{}),"\nEach subclass of this class defines an active Subject Area. A Subject Area is analogous to an SQL view; it is based on an actual DeepSee Cube data model and can serve as the target of queries as if it were an actual cube model.",(0,s.jsx)(t.br,{}),"\nA Subject Area cannot define additional dimensions or measures but it can define:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"What dimensions and measures can be used in queries."}),"\n",(0,s.jsx)(t.li,{children:"What permissions are needed to query a cube"}),"\n",(0,s.jsx)(t.li,{children:"How the data within a cube should be filtered."}),"\n",(0,s.jsx)(t.li,{children:"The default listing for this subject area."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(t.h3,{id:"subjectarea",children:"SubjectArea"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'XData SubjectArea [ XMLNamespace = "http://www.intersystems.com/deepsee/subjectarea" ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This projection is used to keep track of when Subject areas are compiled or deleted. This XData definition defines the SubjectArea."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"generate",children:"%Generate"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %Generate() As %Status [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Process the model for this Subject Area and generate meta data."}),"\n",(0,s.jsx)(t.h3,{id:"getcubename",children:"%GetCubeName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCubeName() As %String [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the logical name of the MDX cube defined by this subject area."}),"\n",(0,s.jsx)(t.h3,{id:"getfactcount",children:"%GetFactCount"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetFactCount() As %Integer [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return number of facts in the base cube's fact table."}),"\n",(0,s.jsx)(t.h3,{id:"onexecutelisting",children:"%OnExecuteListing"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnExecuteListing(pSQL As %String) As %Status [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Notification that a listing (drillthrough) query is about to be executed.",(0,s.jsx)(t.br,{}),"\nThis is called immediately before a listing query is executed. This is useful for cases where additional setup work is required before a listing query can run.",(0,s.jsx)(t.br,{}),"\npSQL is the listing query that will be executed."]}),"\n",(0,s.jsx)(t.h3,{id:"getfactclass",children:"%GetFactClass"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetFactClass() As %String [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return name of the fact class used by the base cube."}),"\n",(0,s.jsx)(t.h3,{id:"getcubecaption",children:"%GetCubeCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCubeCaption() As %String [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the caption of the subject area defined by this class. If not defined, the subject area name is returned."}),"\n",(0,s.jsx)(t.h3,{id:"getmembercaption",children:"%GetMemberCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %GetMemberCaption(pDimName As %String, pHierName As %String = "", pLevelName As %String = "", pPropName As %String = "") As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"For a given dimenions, hierarchy, and level return its localized caption."}),"\n",(0,s.jsx)(t.h3,{id:"getmemberdescription",children:"%GetMemberDescription"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %GetMemberDescription(pDimName As %String, pHierName As %String = "", pLevelName As %String = "", pPropName As %String = "") As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"For a given dimenions, hierarchy, and level return its localized caption."}),"\n",(0,s.jsx)(t.h3,{id:"getfilterspec",children:"%GetFilterSpec"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetFilterSpec() As %String [ Final ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the filter spec for this subject area."}),"\n",(0,s.jsx)(t.h3,{id:"ongetfilterspec",children:"%OnGetFilterSpec"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnGetFilterSpec(pFilterSpec As %String) As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:"This callback gives a SubjectArea a chance to programmatically define its filter spec."}),"\n",(0,s.jsx)(t.h3,{id:"getdefaultlisting",children:"%GetDefaultListing"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetDefaultListing() As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the name of the default listing for this SubjectArea, if any."}),"\n",(0,s.jsx)(t.h3,{id:"ongetdefaultlisting",children:"%OnGetDefaultListing"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnGetDefaultListing() As %String\n"})}),"\n",(0,s.jsx)(t.p,{children:'This callback gives a SubjectArea a chance to programmatically return the name of the listing to use as its default listing. This must be the name of a defined listing within the SubjectArea. Return "" to use the pre-defined default listing.'}),"\n",(0,s.jsx)(t.h3,{id:"candrillthrough",children:"%CanDrillThrough"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %CanDrillThrough() As %Boolean\n"})}),"\n",(0,s.jsx)(t.p,{children:"Test if this cube supports drill through (listing) queries."}),"\n",(0,s.jsx)(t.h3,{id:"isabstract",children:"%IsAbstract"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %IsAbstract() As %Boolean [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Test whether this subject area is abstract or not."}),"\n",(0,s.jsx)(t.h3,{id:"iscompound",children:"%IsCompound"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %IsCompound(Output pJoinList As %String) As %Boolean [ CodeMode = objectgenerator, GenerateAfter = %Generate ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Test whether this subject area is compound or not."}),"\n",(0,s.jsx)(t.h3,{id:"getcountcaption",children:"%GetCountCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCountCaption() As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Return the (localized) caption for the %COUNT measure used by this cube. Returns "" if this has not been overridden by the cube.'}),"\n",(0,s.jsx)(t.h3,{id:"getcountname",children:"%GetCountName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCountName() As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the logical name for the %COUNT measure used by this cube."}),"\n",(0,s.jsx)(t.h3,{id:"getactionlist",children:"%GetActionList"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetActionList(ByRef pActions As %List) As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return list of possible actions for this Subject Area. This simply dispatches to the base cube's method."}),"\n",(0,s.jsx)(t.h3,{id:"getlistingcaption",children:"%GetListingCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetListingCaption(pListing As %String) As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the (localized) caption for a given listing within this cube."}),"\n",(0,s.jsx)(t.h3,{id:"getlistingdescription",children:"%GetListingDescription"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetListingDescription(pListing As %String) As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the (localized) description for a given listing within this cube."}),"\n",(0,s.jsx)(t.h3,{id:"getlistingfieldcaption",children:"%GetListingFieldCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetListingFieldCaption(pField As %String) As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the (localized) caption for a given listing field within this cube."}),"\n",(0,s.jsx)(t.h3,{id:"getlistingfielddescription",children:"%GetListingFieldDescription"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetListingFieldDescription(pField As %String) As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the (localized) description for a given listing field within this cube."}),"\n",(0,s.jsx)(t.h3,{id:"getlevelmembercaption",children:"%GetLevelMemberCaption"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetLevelMemberCaption(pDimNo As %Integer, pHierNo As %Integer, pLevelNo As %Integer, pName As %String) As %String [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"For a pre-defined member within a given level in this cube, return its (localized) caption (display name)."}),"\n",(0,s.jsx)(t.h3,{id:"ongetcomputedmembers",children:"%OnGetComputedMembers"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %OnGetComputedMembers(pDimName As %String, pHierName As %String, pLevelName As %String, ByRef pMemberList, pRollupKey As %String = "", ByRef pRange As %String = "") As %Status [ CodeMode = objectgenerator, Final, GenerateAfter = %Generate, Internal ]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This callback gives a Cube a chance to programmatically provide a set of members for a computed dimension.",(0,s.jsx)(t.br,{}),"\nThis simply dispatches to the base cube's method."]})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(96540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);