"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[22683],{83291:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,toc:()=>i});var t=s(74848),r=s(28453);const l={pagination_prev:null,pagination_next:null},a="%XML.Reader",i=[{value:"Properties",id:"properties",level:2},{value:"Format",id:"format",level:3},{value:"IgnoreNull",id:"ignorenull",level:3},{value:"Summary",id:"summary",level:3},{value:"CheckRequired",id:"checkrequired",level:3},{value:"SAXFlags",id:"saxflags",level:3},{value:"SAXMask",id:"saxmask",level:3},{value:"SAXSchemaSpec",id:"saxschemaspec",level:3},{value:"EntityResolver",id:"entityresolver",level:3},{value:"SSLConfiguration",id:"sslconfiguration",level:3},{value:"IgnoreSAXWarnings",id:"ignoresaxwarnings",level:3},{value:"UsePPGHandler",id:"useppghandler",level:3},{value:"Node",id:"node",level:3},{value:"Childlist",id:"childlist",level:3},{value:"Descriptor",id:"descriptor",level:3},{value:"ParentNodeId",id:"parentnodeid",level:3},{value:"ParentChildlist",id:"parentchildlist",level:3},{value:"ParentDescriptor",id:"parentdescriptor",level:3},{value:"NodeIsCurrent",id:"nodeiscurrent",level:3},{value:"OpenFormat",id:"openformat",level:3},{value:"Document",id:"document",level:3},{value:"KeepWhitespace",id:"keepwhitespace",level:3},{value:"Idlist",id:"idlist",level:3},{value:"CorrelationTable",id:"correlationtable",level:3},{value:"Methods",id:"methods",level:2},{value:"NodeSet",id:"nodeset",level:3},{value:"DocumentSet",id:"documentset",level:3},{value:"Close",id:"close",level:3},{value:"Rewind",id:"rewind",level:3},{value:"Correlate",id:"correlate",level:3},{value:"CorrelateRoot",id:"correlateroot",level:3},{value:"Next",id:"next",level:3},{value:"GetNewDocument",id:"getnewdocument",level:3},{value:"Open",id:"open",level:3},{value:"OpenFile",id:"openfile",level:3},{value:"OpenStream",id:"openstream",level:3},{value:"OpenString",id:"openstring",level:3},{value:"OpenURL",id:"openurl",level:3},{value:"OpenBuffer",id:"openbuffer",level:3},{value:"ResolveElement",id:"resolveelement",level:3}];function o(e){const n={a:"a",br:"br",classname:"classname",code:"code",elementname:"elementname",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"xmlreader",children:"%XML.Reader"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %XML.Reader Extends %RegisteredObject [ System = 2 ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"For details on using this class"}),", see ",(0,t.jsx)(n.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25XML.Reader",children:"Importing XML into Objects"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The sample class mentioned here (Sample.Person) is part of ",(0,t.jsx)(n.a,{href:"https://github.com/intersystems/Samples-Data",children:"https://github.com/intersystems/Samples-Data."})," See ",(0,t.jsx)(n.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=landing+githubsamples",children:"Downloading Samples"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["XML Objects Reader class. A usage example follows: ",(0,t.jsx)(n.code,{children:'#include %occStatus // Create a new XML Reader class Set reader = ##class(%XML.Reader).%New() // Begin processing of the XML input Set sc=reader.OpenFile(filename) If $$$ISERR(sc) Do $system.OBJ.DisplayError(sc) Quit // Associate a class name with the XML element name Do reader.Correlate("Person","Sample.Person") // read Sample.Person objects from xml file Set Count=0 While reader.Next(.person,.sc) { Write person.Name_" imported.",! Set Count=Count+1 Set sc=person.%Save() If $$$ISERR(sc) Do $system.OBJ.DisplayError(sc) Quit } If $$$ISERR(sc) Do $system.OBJ.DisplayError(sc) Quit Write Count_" Sample.Person instances found."'})]}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"format",children:"Format"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Format As %String;\n"})}),"\n",(0,t.jsx)(n.p,{children:'The format of the XML document: "literal", "encoded" or "encoded12". This parameter may be overriden by the Open... format parameter.'}),"\n",(0,t.jsx)(n.h3,{id:"ignorenull",children:"IgnoreNull"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property IgnoreNull As %String [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:'The runtime specification of the XMLIGNORENULL parameter to %XML.Adaptor. IgnoreNull specifies the value of XMLIGNORENULL at runtime as either 0, 1 or inputonly. IgnoreNull="inputonly" is equivalent to IgnoreNull=1.'}),"\n",(0,t.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Summary As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"If true (1), then only the summary fields should be imported by the %XML.Adaptor."}),"\n",(0,t.jsx)(n.h3,{id:"checkrequired",children:"CheckRequired"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property CheckRequired As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Checking the existence of REQUIRED properties is off by default in %XML.Reader. To turn on REQUIRED property checking. set the CheckRequired property to 1 (default is 0)."}),"\n",(0,t.jsx)(n.h3,{id:"saxflags",children:"SAXFlags"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SAXFlags As %Integer [ InitialExpression = {$$$SAXFULLDEFAULT} ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"This property should be set to a combination of flags (see %occSAX.inc for details) if the default behavior of the parser is required to be modified"}),"\n",(0,t.jsx)(n.h3,{id:"saxmask",children:"SAXMask"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SAXMask As %Integer [ InitialExpression = {$$$SAXCONTENTEVENTS} ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"The SAXMask property is kept for compatibility only. The best mask is now computed and this property ignored."}),"\n",(0,t.jsx)(n.h3,{id:"saxschemaspec",children:"SAXSchemaSpec"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SAXSchemaSpec As %String;\n"})}),"\n",(0,t.jsx)(n.p,{children:"This property specifies the schema specifications that should be used when validating the document. See %XML.SAX.Parser for a full description of this property."}),"\n",(0,t.jsx)(n.h3,{id:"entityresolver",children:"EntityResolver"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property EntityResolver As %XML.SAX.EntityResolver;\n"})}),"\n",(0,t.jsx)(n.p,{children:"This property should be set to an instance of %XML.SAX.EntityResolver OR a user-defined subclass IF the default EntityResolver is not required"}),"\n",(0,t.jsx)(n.h3,{id:"sslconfiguration",children:"SSLConfiguration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SSLConfiguration As %String;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The name of the activated TLS/SSL configuration to use for https requests by the entity resolver."}),"\n",(0,t.jsx)(n.h3,{id:"ignoresaxwarnings",children:"IgnoreSAXWarnings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property IgnoreSAXWarnings As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"If true (1), then any warnings from the SAX parser will be not be reported and ignored."}),"\n",(0,t.jsx)(n.h3,{id:"useppghandler",children:"UsePPGHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property UsePPGHandler As %Boolean;\n"})}),"\n",(0,t.jsx)(n.p,{children:'If UsePPGHandler is true (1), then force document parsing to use PPG memory. If UsePPGHandler is false (0), then force document parsing to use local array memory. If UsePPGHandler is not set ( or = ""), then use default memory -- usually local array memory.'}),"\n",(0,t.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Node As %String [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Current node in tree representation of XML document. Note that 0 means the document itself, i.e. the parent of the root element."}),"\n",(0,t.jsx)(n.h3,{id:"childlist",children:"Childlist"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Childlist As %String [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Childlist associated with current element node"}),"\n",(0,t.jsx)(n.h3,{id:"descriptor",children:"Descriptor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Descriptor As %String [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Descriptor associated with current node"}),"\n",(0,t.jsx)(n.h3,{id:"parentnodeid",children:"ParentNodeId"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ParentNodeId As %String [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"NodeId of parent"}),"\n",(0,t.jsx)(n.h3,{id:"parentchildlist",children:"ParentChildlist"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ParentChildlist As %String [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Childlist of parent"}),"\n",(0,t.jsx)(n.h3,{id:"parentdescriptor",children:"ParentDescriptor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ParentDescriptor As %String [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Descriptor of parent"}),"\n",(0,t.jsx)(n.h3,{id:"nodeiscurrent",children:"NodeIsCurrent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property NodeIsCurrent As %Boolean [ Internal, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"NodeisCurrent is true if the current node value has just been set to the next node to process."}),"\n",(0,t.jsx)(n.h3,{id:"openformat",children:"OpenFormat"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property OpenFormat As %String [ Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"The internal format to be used for XMLImport. This property is set during Open."}),"\n",(0,t.jsx)(n.h3,{id:"document",children:"Document"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Document As %XML.Document;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The %XML.Document that holds the parsed XML document."}),"\n",(0,t.jsx)(n.h3,{id:"keepwhitespace",children:"KeepWhitespace"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property KeepWhitespace As %Boolean [ InitialExpression = 1, Internal ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Flag to keep whitespace. Used only when HandlerType is set to $$$IntHandler Default is true as required by XMLImport processing."}),"\n",(0,t.jsx)(n.h3,{id:"idlist",children:"Idlist"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Idlist As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"The list of nodes that have already imported with id attribute."}),"\n",(0,t.jsx)(n.h3,{id:"correlationtable",children:"CorrelationTable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property CorrelationTable As %String [ Internal, MultiDimensional ];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This is the class to XML element correlation. To correlate a class to an element, call ..Correlate(",(0,t.jsxs)(n.elementname,{children:[",",(0,t.jsx)(n.classname,{children:"). Element names are unique but you can correlate more than one element to the same class. On import, if an element is not correlated to a class then it will be skipped by ..Next(). This property is for internal use only. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this property."})]})]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"nodeset",children:"NodeSet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method NodeSet(value As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"documentset",children:"DocumentSet"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method DocumentSet(document As %XML.Document) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"close",children:"Close"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method Close()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Close and cleanup the %XML.Document. This method is included for backward compatibility. The %XML.Document will be cleaned up anyway during object cleanup."}),"\n",(0,t.jsx)(n.h3,{id:"rewind",children:"Rewind"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method Rewind()\n"})}),"\n",(0,t.jsx)(n.p,{children:"Restart reading at the beginning of the XML document. All correlations are cleared and Correlate must be called again for the required elements."}),"\n",(0,t.jsx)(n.h3,{id:"correlate",children:"Correlate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method Correlate(element As %String, class As %String, namespace As %String)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Correlate() defines an XML Element to class correlation. Any elements encountered by Next() that are in the correlation table will cause the correlated class to be instantiated and its XMLImport method to be called with the current XML node passed as a parameter. Further examination of child nodes is skipped for correlated elements."}),"\n",(0,t.jsx)(n.p,{children:"Matching of elements is based on the element name that is specified in the element argument. If the namespace argument is also specified, then the XML namespace of the element must also match."}),"\n",(0,t.jsx)(n.h3,{id:"correlateroot",children:"CorrelateRoot"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method CorrelateRoot(class As %String)\n"})}),"\n",(0,t.jsx)(n.p,{children:"CorrelateRoot defines the root element to be correlated to the specified class. The root element when encountered by Next() will cause the correlated class to be instantiated and its XMLImport method to be called with the root XML node passed as a parameter. Further examination of child nodes is skipped for correlated elements."}),"\n",(0,t.jsx)(n.h3,{id:"next",children:"Next"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method Next(ByRef oref As %ObjectHandle, ByRef sc As %Status, namespace As %String = "") As %Integer\n'})}),"\n",(0,t.jsx)(n.p,{children:"Get and return the next object."}),"\n",(0,t.jsxs)(n.p,{children:["Next returns 1 (true), if the next object matching one of the Correlate criteria is found and successfully imported.",(0,t.jsx)(n.br,{}),"\nNext returns 0 (false) and a %Status of $$$OK in sc after all objects have been imported.",(0,t.jsx)(n.br,{}),"\nNext returns 0 (false) and an error %Status in sc, if an error has occurred importing this object."]}),"\n",(0,t.jsx)(n.p,{children:"The namespace argument indicates the default namespace for this XML file."}),"\n",(0,t.jsx)(n.h3,{id:"getnewdocument",children:"GetNewDocument"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetNewDocument(usePPGHandler As %Boolean) As %XML.Document [ Internal ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Internal method to get the appropriate document handler base on the UsePPGHandler property."}),"\n",(0,t.jsx)(n.h3,{id:"open",children:"Open"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method Open(xmlsource, method As %String, format As %String, httprequest As %Net.HttpRequest) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'Import XML source from a file (method="ParseFile"), stream (method="ParseStream") or string (method="ParseString"). Open() invokes the SAX parser to construct the XML tree using the %XML.Document, and initializes the iterator. We assume that elements have been already correlated to class names.'}),"\n",(0,t.jsx)(n.h3,{id:"openfile",children:"OpenFile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method OpenFile(xmlsource As %String, format As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"Import XML source from a file using %XML.Document."}),"\n",(0,t.jsx)(n.h3,{id:"openstream",children:"OpenStream"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method OpenStream(xmlsource As %AbstractStream, format As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"Import XML source from a stream object using %XML.Document."}),"\n",(0,t.jsx)(n.h3,{id:"openstring",children:"OpenString"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method OpenString(xmlsource As %String, format As %String) As %Status\n"})}),"\n",(0,t.jsx)(n.p,{children:"Import XML source from a string using %XML.Document."}),"\n",(0,t.jsx)(n.h3,{id:"openurl",children:"OpenURL"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Method OpenURL(xmlsource As %String, format As %String, httprequest As %Net.HttpRequest = "") As %Status\n'})}),"\n",(0,t.jsx)(n.p,{children:"Import XML source from a URL using %XML.Document. If httprequest argument is specified, then this will be used as the %Net.HttpRequest object to open the URL."}),"\n",(0,t.jsxs)(n.p,{children:['To open https URLs: \t\tset reader=##class(%XML.Reader).%New() \t\tset httprequest=##class(%Net.HttpRequest).%New() \t\tset httprequest.SSLConfiguration="...." \t\tset status=reader.OpenURL("',(0,t.jsx)(n.a,{href:"https://.....%22,,httprequest",children:'https://.....",,httprequest'}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"openbuffer",children:"OpenBuffer"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method OpenBuffer(xmlsource As %List, format As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"NOTE: For InterSystems internal use only!!!"}),"\n",(0,t.jsx)(n.h3,{id:"resolveelement",children:"ResolveElement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method ResolveElement(element As %String, defaultNamespace As %String) As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"ResolveElement() returns the class name corresponding to an element name within the current XMLReader context."})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const r={},l=t.createContext(r);function a(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);