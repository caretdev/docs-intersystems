"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[95612],{23983:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>i,toc:()=>c});var s=n(74848),r=n(28453);const i={pagination_prev:null,pagination_next:null},a="%Net.JSON.JWK",c=[{value:"Methods",id:"methods",level:2},{value:"Create",id:"create",level:3},{value:"CreateX509",id:"createx509",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"JWKtoASN1",id:"jwktoasn1",level:3},{value:"CreateOct",id:"createoct",level:3},{value:"CreateRSA",id:"creatersa",level:3},{value:"CreateEC",id:"createec",level:3},{value:"RSAASN1toJWK",id:"rsaasn1tojwk",level:3},{value:"RSAJWKtoASN1",id:"rsajwktoasn1",level:3},{value:"ECJWKtoASN1",id:"ecjwktoasn1",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"netjsonjwk",children:"%Net.JSON.JWK"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Net.JSON.JWK Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This class provides methods to create JSON Web Keys, as defined in RFC 7517, and convert between the JSON Web Key format and other key representation formats."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"create",children:"Create"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Create(alg As %String, secret As %String = "", Output privJWK As %DynamicObject, Output pubJWK As %DynamicObject) As %Status\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method creates a new public/private JSON Web Key (JWK) pair for the given algorithm."}),"\n",(0,s.jsx)(t.p,{children:"Input parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"alg - The algorithm for which to create the JWK."}),"\n",(0,s.jsx)(t.li,{children:"secret - An optional shared secret to be used as the key. If this is omitted, a new secret will be generated. This defaults to a null string."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Output parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"privJWK - The private JSON Web Key that is created."}),"\n",(0,s.jsx)(t.li,{children:"pubJWK - The public JSON Web key that is created."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Return value:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A status indicating if a JWK pair (or individual JWK for symmetric key algorithms) was successfully created for the given algorithm and (optionally) secret. If no JWK was created, this method will return an error describing why not."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Notes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["This method does not add a kid to the keys it creates. In order to use kids, they must be added after the keys are created. For example:",(0,s.jsx)(t.br,{}),'\nSet sc=##class(%Net.JSON.JWK).Create("ES256",,.privJWK,.pubJWK) If $$$ISOK(sc) { \tSet privJWK.kid=1 \tSet pubJWK.kid=1 }']}),"\n",(0,s.jsxs)(t.li,{children:["This method does not encrypt the keys it creates. In order to create encrypted JWKs, convert the JWKs created by this method into strings and then pass them through %Net.JSON.JWE:Encrypt() as the plaintext. For example:",(0,s.jsx)(t.br,{}),'\nSet sc=##class(%Net.JSON.JWK).Create("ES256",,.privJWK,.pubJWK) If $$$ISOK(sc) { \tSet privJWK=privJWK.%ToJSON() \tSet pubJWK=pubJWK.%ToJSON() \tDo ##class(%Net.JSON.JWE).Encrypt({"alg":"RSA1_5","enc":"A256CBC-HS512"},,,privJWK,,,JWKS,.encryptedPrivJWK) \tDo ##class(%Net.JSON.JWE).Encrypt({"alg":"RSA1_5","enc":"A256CBC-HS512"},,,pubJWK,,,JWKS,.encryptedPubJWK) }']}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Where JWKS is a JWKS that contains a key for RSA1_5."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This method will return an error if an unrecognized algorithm is used."}),"\n",(0,s.jsx)(t.li,{children:"Assuming creation was successful, privJWK will always have a non-null value."}),"\n",(0,s.jsx)(t.li,{children:"If the algorithm is symmetric, then pubJWK will be null even if creation succeeded."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"createx509",children:"CreateX509"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateX509(alg As %String, x509 As %SYS.X509Credentials, Output privJWK As %DynamicObject, Output pubJWK As %DynamicObject) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method creates a new JSON Web Key (JWK) pair for the given algorithm based on the RSA key(s) contained in the given %SYS.X509Credentials object."}),"\n",(0,s.jsx)(t.p,{children:"Input parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"alg - The algorithm for which to create the JWK."}),"\n",(0,s.jsx)(t.li,{children:"x509 - a %SYS.X509Credentials object containing the RSA keys to use. If this object contains a private key, then a public and private JWK will be returned. Otherwise, only the pubkc JWK will be returned."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Output parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"privJWK - The private JSON Web Key that is created."}),"\n",(0,s.jsx)(t.li,{children:"pubJWK - The public JSON Web key that is created."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Return value:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A status indicating if a JWK pair (or just a public JWK) was successfully created for the given algorithm. If no JWK was created, this method will return an error describing why not."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Notes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["This method does not add a kid to the keys it creates. In order to use kids, they must be added after the keys are created. For example:",(0,s.jsx)(t.br,{}),'\nSet sc=##class(%Net.JSON.JWK).CreateX509("RS256",x509,.privJWK,.pubJWK) If $$$ISOK(sc) { \tSet privJWK.kid=1 \tSet pubJWK.kid=1 }']}),"\n",(0,s.jsxs)(t.li,{children:["This method does not encrypt the keys it creates. In order to create encrypted JWKs, convert the JWKs created by this method into strings and then pass them through %Net.JSON.JWE:Encrypt() as the plaintext. For example:",(0,s.jsx)(t.br,{}),'\nSet sc=##class(%Net.JSON.JWK).CreateX509("RS256",x509,.privJWK,.pubJWK) If $$$ISOK(sc) { \tSet privJWK=privJWK.%ToJSON() \tSet pubJWK=pubJWK.%ToJSON() \tDo ##class(%Net.JSON.JWE).Encrypt({"alg":"RSA1_5","enc":"A256CBC-HS512"},,,privJWK,,,JWKS,.encryptedPrivJWK) \tDo ##class(%Net.JSON.JWE).Encrypt({"alg":"RSA1_5","enc":"A256CBC-HS512"},,,pubJWK,,,JWKS,.encryptedPubJWK) }']}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Where JWKS is a JWKS that contains a key for RSA1_5."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"This method will return an error if an unrecognized algorithm is used."}),"\n",(0,s.jsx)(t.li,{children:"Assuming creation was successful, pubJWK will always have a non-null value."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsValid(JWK As %DynamicObject) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This internal helper method checks that the provided JSON Web Key (JWK) conforms to the specs laid out in RFC 7517 section 4."}),"\n",(0,s.jsx)(t.p,{children:"Input parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"JWK - The JWK to check for validity."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Return value:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A status indicating whether or not the provided JWK is valid, where error values indicate that the JWK is not valid and describe the reason why."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Notes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'This method checks that the given JWK exists, is non-null, is in valid JSON format, and contains a "kty" parameter. If the "kty" parameter is one of the three known values defined in RFC 7517, it then checks that the JWK contains the corresponding parameters laid out for each key type in RFC 7518 section 6.'}),"\n",(0,s.jsx)(t.li,{children:'This method does not check that the "kty" parameter is a valid key type (as there might be types in private use not known to IRIS).'}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"jwktoasn1",children:"JWKtoASN1"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod JWKtoASN1(JWK As %DynamicObject, Output ASN1 As %String) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method converts a key in JSON Web Key (JWK) format to PEM-encoded DER ASN.1 format."}),"\n",(0,s.jsx)(t.p,{children:"Input parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"JWK - JSON Web Key representation of a private or public key."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Output parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"ASN1 - PEM-encoded DER ASN.1 representation of the private or public key."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Return value:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A status indicating whether or not the JWK was successfully converted to ASN.1 format, where error values indicate that the conversion failed and describe the reason why."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Notes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Currently this method only supports RSA and elliptic curve keys."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"createoct",children:"CreateOct"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateOct(algInfo As %DynamicObject, secret As %String, Output privJWK As %DynamicObject) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This private method creates a private JWK for a symmetric algorithm. It is a helper method for Create() above and should never be called on its own."}),"\n",(0,s.jsx)(t.h3,{id:"creatersa",children:"CreateRSA"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateRSA(algInfo As %DynamicObject, Output privJWK As %DynamicObject, Output pubJWK As %DynamicObject) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This private method creates a private and public JWK pair for an RSA algorithm. It is a helper method for Create() above and should never be called on its own."}),"\n",(0,s.jsx)(t.h3,{id:"createec",children:"CreateEC"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateEC(algInfo As %DynamicObject, Output privJWK As %DynamicObject, Output pubJWK As %DynamicObject) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This private method creates a private and public JWK pair for an elliptic curve algorithm. It is a helper method for Create() above and should never be called on its own."}),"\n",(0,s.jsx)(t.h3,{id:"rsaasn1tojwk",children:"RSAASN1toJWK"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod RSAASN1toJWK(ASN1 As %String, Password As %String = "", Output JWK As %DynamicObject) As %Status [ Internal, Private ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This private method converts a PEM-encoded DER ASN.1 RSA key to JSON Web Key (JWK) format. It is a helper method for CreateX509() above and should never be called on its own."}),"\n",(0,s.jsx)(t.h3,{id:"rsajwktoasn1",children:"RSAJWKtoASN1"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RSAJWKtoASN1(JWK As %DynamicObject, Output ASN1 As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This private method converts an RSA key in JSON Web Key (JWK) format to PEM-encoded DER ASN.1 format. It is a helper method for JWKtoASN1() above and should never be called on its own."}),"\n",(0,s.jsx)(t.h3,{id:"ecjwktoasn1",children:"ECJWKtoASN1"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ECJWKtoASN1(JWK As %DynamicObject, Output ASN1 As %String) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This private method converts an elliptic curve key in JSON Web Key (JWK) format to PEM-encoded DER ASN.1 format. It is a helper method for JWKtoASN1() above and should never be called on its own."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);