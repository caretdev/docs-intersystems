"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[56492],{16013:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>c,default:()=>d,frontMatter:()=>a,toc:()=>o});var n=t(74848),r=t(28453);const a={pagination_prev:null,pagination_next:null},c="%OAuth2.Server.JWT",o=[{value:"Methods",id:"methods",level:2},{value:"IsJWT",id:"isjwt",level:3},{value:"GenerateAccessToken",id:"generateaccesstoken",level:3},{value:"CreateJWT",id:"createjwt",level:3},{value:"AddClaims",id:"addclaims",level:3}];function i(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"oauth2serverjwt",children:"%OAuth2.Server.JWT"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %OAuth2.Server.JWT Extends %OAuth2.Server.Generate [ System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"The %OAuth2.Server.JWT is the GenerateTokenClass which creates a JWT which is included with the server. The GenerateTokenClass is specified in the Authorization Server Configuration. It must contain a GenerateAccessToken method will be used to generate an access token based on the array of properties that is returned by the ValidateUser method."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"isjwt",children:"IsJWT"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsJWT() As %Boolean\n"})}),"\n",(0,n.jsx)(s.p,{children:"The IsJWT method returns true if the GenerateAccessToken method returns a JWT. IsJWT is used to determine inclusion of algorithms for access token in server metadata."}),"\n",(0,n.jsx)(s.h3,{id:"generateaccesstoken",children:"GenerateAccessToken"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GenerateAccessToken(properties As %OAuth2.Server.Properties, Output sc As %Status) As %String\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The GenerateAccessToken method returns an optionally signed and/or encryypted JWT to be used as an access token. The access token may be based on the properties argument. In addition values for claims to be added to the JSON response object may be returned in the properties.ResponseProperties array.",(0,n.jsx)(s.br,{}),"\nHowever the method in this default class just returns a JWT which is optionally signed and/or encrypted."]}),"\n",(0,n.jsx)(s.h3,{id:"createjwt",children:"CreateJWT"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateJWT(token As OAuth2.Server.AccessToken, json As %RegisteredObject, jwtType As %String, Output sc As %Status, ByRef header As %DynamicObject = {$$$NULLOREF}) As %String [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The CreateJWT method acts as specified for OAuth 2.0 and OpenID Connect usage and should not be overridden in a user subclass.",(0,n.jsx)(s.br,{}),"\nCreate JWT based on JSON object containing the claims. Any signing an encryption takes place here."]}),"\n",(0,n.jsx)(s.h3,{id:"addclaims",children:"AddClaims"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AddClaims(claims As %ArrayOfObjects, properties As %OAuth2.Server.Properties, json As %DynamicObject)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Add requested claims to the JWT"})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>o});var n=t(96540);const r={},a=n.createContext(r);function c(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);