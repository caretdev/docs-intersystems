"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[92005],{30683:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>r,default:()=>c,frontMatter:()=>n,toc:()=>l});var i=t(74848),a=t(28453);const n={pagination_prev:null,pagination_next:null},r="%DeepSee.Model.QualityMeasure.qualityMeasure",l=[{value:"Properties",id:"properties",level:2},{value:"catalog",id:"catalog",level:3},{value:"set",id:"set",level:3},{value:"id",id:"id",level:3},{value:"linkedTo",id:"linkedto",level:3},{value:"subjectArea",id:"subjectarea",level:3},{value:"expression",id:"expression",level:3},{value:"href",id:"href",level:3},{value:"published",id:"published",level:3},{value:"format",id:"format",level:3},{value:"groups",id:"groups",level:3},{value:"metas",id:"metas",level:3},{value:"description",id:"description",level:3},{value:"Methods",id:"methods",level:2},{value:"nameGet",id:"nameget",level:3},{value:"%Validate",id:"validate",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"deepseemodelqualitymeasurequalitymeasure",children:"%DeepSee.Model.QualityMeasure.qualityMeasure"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Model.QualityMeasure.qualityMeasure Extends (node, %CSP.Portal.AbstractPortalModel) [ System = 3 ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Meta-data object for a DeepSee Quality Measure."}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"catalog",children:"catalog"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property catalog As %DeepSee.Datatype.string(MAXLEN = 250, XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Name of catalog this quality measure belongs to."}),"\n",(0,i.jsx)(s.h3,{id:"set",children:"set"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property set As %DeepSee.Datatype.string(MAXLEN = 250, XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Name of the measure set (within a catalog) this quality measure belongs to."}),"\n",(0,i.jsx)(s.h3,{id:"id",children:"id"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property id As %DeepSee.Datatype.string(MAXLEN = 250, XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Id of this quality measure belongs to. Must be unique within the catalog and set."}),"\n",(0,i.jsx)(s.h3,{id:"linkedto",children:"linkedTo"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property linkedTo As %DeepSee.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Optional. If this is defined, then this is the full name (with no extension) of a master quality measure that this measure is ",(0,i.jsx)(s.strong,{children:"linked"})," to. In this case, the definition of this measure is completely specified by the definition of the master quality measure."]}),"\n",(0,i.jsx)(s.h3,{id:"subjectarea",children:"subjectArea"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property subjectArea As %DeepSee.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Name of SubjectArea this quality measure is based on."}),"\n",(0,i.jsx)(s.h3,{id:"expression",children:"expression"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property expression As %DeepSee.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Expression used to compute this measure. This is an abstract expression based on groups within this quality measure."}),"\n",(0,i.jsx)(s.h3,{id:"href",children:"href"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property href As %ZEN.Datatype.uri(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Optional URL of site with additional information."}),"\n",(0,i.jsx)(s.h3,{id:"published",children:"published"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property published As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 1 ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"True if this quality measure is published (visible to DeepSee)."}),"\n",(0,i.jsx)(s.h3,{id:"format",children:"format"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property format As %String(XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Format string to apply to this measure."}),"\n",(0,i.jsx)(s.h3,{id:"groups",children:"groups"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship groups As %DeepSee.Model.QualityMeasure.group(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = qualityMeasure ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Set of groups defined for this quality measure. These are used within the general expression computed by this measure."}),"\n",(0,i.jsx)(s.h3,{id:"metas",children:"metas"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship metas As %DeepSee.Model.QualityMeasure.meta(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = qualityMeasure ];\n'})}),"\n",(0,i.jsx)(s.p,{children:"Set of meta-data elements defined for this quality measure. These provide documentation for the measure."}),"\n",(0,i.jsx)(s.h3,{id:"description",children:"description"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'Property description As %ZEN.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,i.jsx)(s.p,{children:"Brief description of the quality measure."}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"nameget",children:"nameGet"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method nameGet() As %String\n"})}),"\n",(0,i.jsx)(s.p,{children:"Override name property"}),"\n",(0,i.jsx)(s.h3,{id:"validate",children:"%Validate"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Method %Validate() As %Status\n"})}),"\n",(0,i.jsx)(s.p,{children:"Validate this model for logical errors."})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>l});var i=t(96540);const a={},n=i.createContext(a);function r(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);