"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[77334],{93507:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>a,default:()=>c,frontMatter:()=>n,toc:()=>l});var r=t(74848),i=t(28453);const n={pagination_prev:null,pagination_next:null},a="SYS.History.Database",l=[{value:"Properties",id:"properties",level:2},{value:"FileSize",id:"filesize",level:3},{value:"FreeSpace",id:"freespace",level:3},{value:"Methods",id:"methods",level:2},{value:"PropList",id:"proplist",level:3},{value:"SetSummary",id:"setsummary",level:3}];function o(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"syshistorydatabase",children:"SYS.History.Database"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class SYS.History.Database Extends %SerialObject [ System = 3 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"A list of Database properties for the SysData interval collection class"}),"\n",(0,r.jsxs)(s.p,{children:["For details, see ",(0,r.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+SYS.History.Database",children:"History Monitor"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"filesize",children:"FileSize"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property FileSize As %Numeric;\n"})}),"\n",(0,r.jsx)(s.p,{children:"Size of each database file (in MB)"}),"\n",(0,r.jsx)(s.h3,{id:"freespace",children:"FreeSpace"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property FreeSpace As %Numeric;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Freespace available in each database file (in MB)",(0,r.jsx)(s.br,{}),'\nNOTE: this value is fetched from the %Monitor.System.Freespace class samples, so that must be "active" or this will be blank.']}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"proplist",children:"PropList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PropList() As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Fetch a list of detail properties for this class for Hourly and Daily summaries"}),"\n",(0,r.jsx)(s.h3,{id:"setsummary",children:"SetSummary"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetSummary(ByRef Function As %String, Period As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:'Configure the summary methods for this class for either the Hourly or Daily summaries. This is a comma-delimited list of functions to use for the summary. The available functions are Average, Maximum (high-water mark), Minimum (lowest value), Standard Deviation, Median, and Total. These are abbreviated in the \'Function\' argument as "Avg", "Max", "Min", StDev", Med", and "Tot". If nothing is specified, the default is "Avg,Max,StDev". You may also specify the string "None" for a summary period to disable that summary.'}),"\n",(0,r.jsx)(s.p,{children:"A null 'Function' argument will return the current summary setting in the 'Function' variable."}),"\n",(0,r.jsx)(s.p,{children:'The \'Period\' argument can be either "Hourly" or "Daily".'})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>l});var r=t(96540);const i={},n=r.createContext(i);function a(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);