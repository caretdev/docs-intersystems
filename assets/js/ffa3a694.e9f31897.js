"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[70217],{68605:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>i,default:()=>h,frontMatter:()=>r,toc:()=>c});var t=n(74848),a=n(28453);const r={pagination_prev:null,pagination_next:null},i="%SYS.Task.DeepSeeSynchronize",c=[{value:"Parameters",id:"parameters",level:2},{value:"TaskName",id:"taskname",level:3},{value:"Methods",id:"methods",level:2},{value:"OnTask",id:"ontask",level:3},{value:"Schedule",id:"schedule",level:3}];function l(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"systaskdeepseesynchronize",children:"%SYS.Task.DeepSeeSynchronize"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %SYS.Task.DeepSeeSynchronize Extends %SYS.Task.Definition [ System = 4 ]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"taskname",children:"TaskName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter TaskName = "Cube Manager Synch";\n'})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"ontask",children:"OnTask"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method OnTask() As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This method is responsible for executing the task.",(0,t.jsx)(s.br,{}),'\nAt the scheduled time, the Task Manager creates an instance of this object, sets any property values using the stored "settings" for the task, and then invokes this method to execute the task.',(0,t.jsx)(s.br,{}),"\nIn order to execute a real task, override this method in a subclass."]}),"\n",(0,t.jsx)(s.h3,{id:"schedule",children:"Schedule"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Schedule(pSuspend = 0, pDailyFrequency = 1, pDailyFrequencyTime = 0, pDailyIncrement = 60, pStartTime = 0, pEndTime = 0) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method will make sure the task is registered with the Task Manager to run on the schedule defined by the arguments."}),"\n",(0,t.jsx)(s.p,{children:"If there is currently no task scheduled, this will create one, otherwise it will modify any pre-existing task. The default settings will run the synch task every 60 minutes."})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const a={},r=t.createContext(a);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);