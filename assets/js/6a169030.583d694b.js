"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[63695],{94122:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,toc:()=>i});var r=n(74848),s=n(28453);const l={pagination_prev:null,pagination_next:null},a="%Compiler.Type.Literal",i=[{value:"Parameters",id:"parameters",level:2},{value:"CAPTION;",id:"caption",level:3},{value:"EXTERNALSQLNAME",id:"externalsqlname",level:3},{value:"EXTERNALSQLTYPE",id:"externalsqltype",level:3},{value:"CALCSELECTIVITY",id:"calcselectivity",level:3},{value:"JAVATYPE;",id:"javatype",level:3},{value:"STORAGEDEFAULT",id:"storagedefault",level:3},{value:"Methods",id:"methods",level:2},{value:"Get",id:"get",level:3},{value:"SetT",id:"sett",level:3},{value:"Set",id:"set",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"Compute",id:"compute",level:3},{value:"SQLCompute",id:"sqlcompute",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"compilertypeliteral",children:"%Compiler.Type.Literal"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Compiler.Type.Literal [ NoContext, System = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Property class for literal values, for internal use only."}),"\n",(0,r.jsx)(t.p,{children:"The property interface consists of several accessor methods. For literals, the following methods are defined: Get Set IsValid"}),"\n",(0,r.jsx)(t.p,{children:"For complex types, the following methods are defined in subclasses of this class. Refer to %Compiler.Type.Object for object types."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"caption",children:"CAPTION;"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter CAPTION;\n"})}),"\n",(0,r.jsx)(t.p,{children:"A caption for the property usually used by client applications."}),"\n",(0,r.jsx)(t.h3,{id:"externalsqlname",children:"EXTERNALSQLNAME"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter EXTERNALSQLNAME As STRING;\n"})}),"\n",(0,r.jsx)(t.p,{children:"The name of the column in an external SQL table (gateway) to which this property is linked."}),"\n",(0,r.jsx)(t.h3,{id:"externalsqltype",children:"EXTERNALSQLTYPE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter EXTERNALSQLTYPE As STRING;\n"})}),"\n",(0,r.jsx)(t.p,{children:"The original type of the column in an external SQL table (gateway) to which this property is linked."}),"\n",(0,r.jsx)(t.h3,{id:"calcselectivity",children:"CALCSELECTIVITY"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter CALCSELECTIVITY As BOOLEAN = 1;\n"})}),"\n",(0,r.jsx)(t.p,{children:"This parameter controls whether the SELECTIVITY of this property is calculated during TuneTable 1 means TuneTable will calculate the SELECTIVITY of the property/field. 0 means it will be skipped by TuneTable."}),"\n",(0,r.jsx)(t.h3,{id:"javatype",children:"JAVATYPE;"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter JAVATYPE;\n"})}),"\n",(0,r.jsx)(t.p,{children:"The Java type to be used when exported."}),"\n",(0,r.jsx)(t.h3,{id:"storagedefault",children:"STORAGEDEFAULT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter STORAGEDEFAULT As STRING [ Constraint = ",columnar,row,globalnode", Flags = ENUM ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"STORAGEDEFAULT is the type of storage used for the property if it is not already allocated in a DATA definition in the active STORAGE definition. Used to define a property as being stored as columnar in a hybrid row/column table. globalnode is used to store long data in its own global."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Get() As %RawString [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"sett",children:"SetT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetT() As %Status [ CodeMode = generator, Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:'SetT() is the "triggered set" method generated solely for READONLY properties that are SQLCOMPUTED and are triggered by a non-null set of properties defined in SQLCOMPUTEONCHANGE. Not to be called by user code.'}),"\n",(0,r.jsx)(t.h3,{id:"set",children:"Set"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Set(newvalue As %RawString) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Set the property to newvalue if is different from the current value."}),"\n",(0,r.jsx)(t.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsValid(value As %RawString) As %Status [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"compute",children:"Compute"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Compute(%id As %RawString) As %String [ CodeMode = generator, Internal, ProcedureBlock = 0, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This internal method is generated for properties with SQLCOMPUTED = true. It contains code to compute a value for the property as defined in SQLCOMPUTECODE. SQLCOMPUTECODE is scanned for {} references and those references are replaced by a formal argument. Do not attempt to call this method from user code."}),"\n",(0,r.jsx)(t.h3,{id:"sqlcompute",children:"SQLCompute"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SQLCompute() [ CodeMode = generator, Internal, ProcedureBlock = 0, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This internal method is generated for properties with SQLCOMPUTED = true. It contains code to compute a value for the property as defined in SQLCOMPUTECODE for the SQL Filer. Not to be called by user code."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const s={},l=r.createContext(s);function a(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);