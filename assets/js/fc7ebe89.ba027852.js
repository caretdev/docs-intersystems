"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[84212],{97405:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>o,frontMatter:()=>s,toc:()=>l});var a=n(74848),r=n(28453);const s={pagination_prev:null,pagination_next:null},i="%DeepSee.Component.deepseeSvgImageProvider",l=[{value:"Parameters",id:"parameters",level:2},{value:"NAMESPACE",id:"namespace",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"Properties",id:"properties",level:2},{value:"printParameters;",id:"printparameters",level:3},{value:"Methods",id:"methods",level:2},{value:"createTempSvgContainer",id:"createtempsvgcontainer",level:3},{value:"getTempSvgContainer",id:"gettempsvgcontainer",level:3},{value:"destroyTempSvgContainer",id:"destroytempsvgcontainer",level:3},{value:"createSVGTableFromZenComponent",id:"createsvgtablefromzencomponent",level:3},{value:"addSVGLegendToChart",id:"addsvglegendtochart",level:3},{value:"removeSVGLegendFromChart",id:"removesvglegendfromchart",level:3},{value:"convertHTMLTableToSVG",id:"converthtmltabletosvg",level:3},{value:"createSVGTableFromResultSet",id:"createsvgtablefromresultset",level:3},{value:"convertHTMLCellToSVGRect",id:"converthtmlcelltosvgrect",level:3},{value:"createSVGTextCell",id:"createsvgtextcell",level:3},{value:"createSVGTextNode",id:"createsvgtextnode",level:3},{value:"wrapSvgText",id:"wrapsvgtext",level:3},{value:"applyHTMLStyleToSVG",id:"applyhtmlstyletosvg",level:3},{value:"setPrintParameters",id:"setprintparameters",level:3},{value:"getPrintParameters",id:"getprintparameters",level:3},{value:"dumpDOMTreeGeometry",id:"dumpdomtreegeometry",level:3},{value:"dumpDOMNodeGeometry",id:"dumpdomnodegeometry",level:3},{value:"prepareFilterTable",id:"preparefiltertable",level:3},{value:"calculateMaxImageWidth",id:"calculatemaximagewidth",level:3},{value:"calculateMaxImageHeight",id:"calculatemaximageheight",level:3},{value:"parseSize",id:"parsesize",level:3},{value:"convertSizeToPoint",id:"convertsizetopoint",level:3},{value:"parseCssStyleString",id:"parsecssstylestring",level:3},{value:"getPPI",id:"getppi",level:3},{value:"MergeXSLFiles",id:"mergexslfiles",level:3},{value:"printSVGContent",id:"printsvgcontent",level:3},{value:"printSVGFollowingPage",id:"printsvgfollowingpage",level:3},{value:"mergeTempXSLFiles",id:"mergetempxslfiles",level:3},{value:"producePDF",id:"producepdf",level:3},{value:"createSvgTableFrame",id:"createsvgtableframe",level:3},{value:"clipSvgContent",id:"clipsvgcontent",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"deepseecomponentdeepseesvgimageprovider",children:"%DeepSee.Component.deepseeSvgImageProvider"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Component.deepseeSvgImageProvider Extends %ZEN.ComponentEx.svgImageProvider [ System = 3 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"SVGImageProvider These utilities are built upon the java .jar libraries in the FOP distribution included with modern releases of InterSystems IRIS"}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.intersystems.com/deepsee";\n'})}),"\n",(0,a.jsx)(t.p,{children:"This is the XML namespace used for library components."}),"\n",(0,a.jsx)(t.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%DeepSee";\n'})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"printparameters",children:"printParameters;"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property printParameters;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"createtempsvgcontainer",children:"createTempSvgContainer"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createTempSvgContainer() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create a temporary SVG container in the body of the Zen component. This is used to trigger the calcualation of bounding boxes of temporary elements that would not otherwise be committed to the DOM."}),"\n",(0,a.jsx)(t.h3,{id:"gettempsvgcontainer",children:"getTempSvgContainer"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getTempSvgContainer() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the current temporary SVG container, if it exists."}),"\n",(0,a.jsx)(t.h3,{id:"destroytempsvgcontainer",children:"destroyTempSvgContainer"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod destroyTempSvgContainer() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Remove the temporary SVG container from the Zen body."}),"\n",(0,a.jsx)(t.h3,{id:"createsvgtablefromzencomponent",children:"createSVGTableFromZenComponent"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createSVGTableFromZenComponent(componentId) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Given the ID of a Zen component, attempt to extract the primary html table and convert it to an SVG representation. This also supports 4-quadrant tables used for some DeepSee widgets."}),"\n",(0,a.jsx)(t.h3,{id:"addsvglegendtochart",children:"addSVGLegendToChart"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod addSVGLegendToChart(chartDocument, legendSVG, legendPosition) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"- chartDocument is the document obtained using %DeepSee.Component.deepseeSvgImageProvider:getSVGDOMRoot(chartSVGFrameId) - legendSVG is manufactured by %DeepSee.Component.deepseeSvgImageProvider:createSVGTableFromZenComponent(chartLegendId)"}),"\n",(0,a.jsx)(t.h3,{id:"removesvglegendfromchart",children:"removeSVGLegendFromChart"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod removeSVGLegendFromChart(chartDocument, legendGroupId, legendPosition) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Pull the svg legend from the chart document"}),"\n",(0,a.jsx)(t.h3,{id:"converthtmltabletosvg",children:"convertHTMLTableToSVG"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod convertHTMLTableToSVG(table, defaultId) [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Create an SVG representation of a single HTML table. These could be:",(0,a.jsx)(t.br,{}),"\n- Components of a pivot or listing table",(0,a.jsx)(t.br,{}),"\n- Chart legends"]}),"\n",(0,a.jsx)(t.h3,{id:"createsvgtablefromresultset",children:"createSVGTableFromResultSet"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createSVGTableFromResultSet(jsRS, htmlTemplateId, parms) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create and return an SVG materialization of a DeepSeeResultSet client object. The resultset is required, styling and sizing templates may be included to influence cell sizes, headers, and font styling in the final SVG product."}),"\n",(0,a.jsx)(t.h3,{id:"converthtmlcelltosvgrect",children:"convertHTMLCellToSVGRect"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod convertHTMLCellToSVGRect(htmlCell, geometry) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Given an htmlCell representing a cell of an html table, return an equivalent representation as a member of an svg group."}),"\n",(0,a.jsx)(t.h3,{id:"createsvgtextcell",children:"createSVGTextCell"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createSVGTextCell(text, id, geometry, htmlStyle) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create a fully styled cell around a particular text. The {x,y,h,w} geometry can be supplied as this is created using geometry."}),"\n",(0,a.jsx)(t.h3,{id:"createsvgtextnode",children:"createSVGTextNode"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createSVGTextNode(text, id, geometry, htmlStyle) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create the specific text"}),"\n",(0,a.jsx)(t.h3,{id:"wrapsvgtext",children:"wrapSvgText"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod wrapSvgText(words, id, geometry, htmlStyle) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return an array with the components of wrapped SVG text"}),"\n",(0,a.jsx)(t.h3,{id:"applyhtmlstyletosvg",children:"applyHTMLStyleToSVG"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod applyHTMLStyleToSVG(svgNode, htmlStyle, forBatik, suppressPadding) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"As closely as possible copy an html css style definition to an SVG object. This can sanitize the style input for compatibility printing in Batik or retain more complex styling for browser display."}),"\n",(0,a.jsx)(t.h3,{id:"setprintparameters",children:"setPrintParameters"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setPrintParameters(parms) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Set the print parameters for reference when converting style information."}),"\n",(0,a.jsx)(t.h3,{id:"getprintparameters",children:"getPrintParameters"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getPrintParameters() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Get the print parameters stored in this provider."}),"\n",(0,a.jsx)(t.h3,{id:"dumpdomtreegeometry",children:"dumpDOMTreeGeometry"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod dumpDOMTreeGeometry(root, svgGroup) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Output a text representation of a DOM subtree showing element nesting and basic goemetry parameters starting from the given root node. To dump the entire DOM to the error console, pass this function document.body as the root."}),"\n",(0,a.jsx)(t.h3,{id:"dumpdomnodegeometry",children:"dumpDOMNodeGeometry"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod dumpDOMNodeGeometry(node, level, stem, last, pst, psl, svgGroup) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Recursive function to dump the nesting structure and base geometry of a tree of DOM nodes node: the root the of the current subtree level: the currnet depth of recursion stem: a string of 0s and 1s used to indicate the location of leaves in the tree already encountered last: a boolean flag used to tell the current node whether or not it is the last child element of its parent pst: parentScrollTop offset psl: parentScrollLeft offset"}),"\n",(0,a.jsx)(t.h3,{id:"preparefiltertable",children:"prepareFilterTable"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod prepareFilterTable(filterNames, filterValues, parms) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This method takes as input the filterNames and filterValues arrays that are commonly built for DeepSee widgets. The array is reshaped into a table that can be digested by the fo conversion utilities."}),"\n",(0,a.jsx)(t.h3,{id:"calculatemaximagewidth",children:"calculateMaxImageWidth"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod calculateMaxImageWidth(metaDataJS) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This interprets the current page margin settings and returns the maximum width available for the svg image. The value is returned in points."}),"\n",(0,a.jsx)(t.h3,{id:"calculatemaximageheight",children:"calculateMaxImageHeight"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod calculateMaxImageHeight(metaDataJS) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This interprets the current page margin settings and returns the maximum height available for the svg image. The value is returned in points."}),"\n",(0,a.jsx)(t.h3,{id:"parsesize",children:"parseSize"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod parseSize(size) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Parse a size attribute into its value and units."}),"\n",(0,a.jsx)(t.h3,{id:"convertsizetopoint",children:"convertSizeToPoint"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod convertSizeToPoint(sizeStr) [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Given a size attribute setting, convert it to points. The size is returned in an object:",(0,a.jsx)(t.br,{}),"\nsize.value",(0,a.jsx)(t.br,{}),"\nsize.units"]}),"\n",(0,a.jsx)(t.h3,{id:"parsecssstylestring",children:"parseCssStyleString"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod parseCssStyleString(cssString) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Parse a bare css style string into an object"}),"\n",(0,a.jsx)(t.h3,{id:"getppi",children:"getPPI"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getPPI() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Get the pixels per inch"}),"\n",(0,a.jsx)(t.h3,{id:"mergexslfiles",children:"MergeXSLFiles"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod MergeXSLFiles(pOutFile, pTargetFile, pSourceFiles, pSessionId = "") As %Status [ ZenMethod ]\n'})}),"\n",(0,a.jsx)(t.p,{children:'Do the work of performing the merge of two or more xsl files into a single file pOutfile. All files must be located in the mgr/Temp directory. The pTargetFile is the master file which will provide the page settings. The argument pSourceFiles is a list of file names delimited by "||". The page content of each of these files will be appended to the content of the pTargetFile spearated by a page break.'}),"\n",(0,a.jsx)(t.h3,{id:"printsvgcontent",children:"printSVGContent"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod printSVGContent(svgFrameId, parms, svgContent, filename) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Print SVG content using the svgImageProvider. Parameters specific to the widget type may be passed in via the parms object, and those parameters will be augmented using settings common to all widgets in this clientMethod.",(0,a.jsx)(t.br,{}),"\nThe target content may be looked up in the DOM using a svgFrameId, or printable content can be passed in directly as svgContent."]}),"\n",(0,a.jsx)(t.h3,{id:"printsvgfollowingpage",children:"printSVGFollowingPage"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod printSVGFollowingPage(parms, pageNo, clipX, clipY, tempFiles) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Clip svgContent for a particular page in a multi-page pring. This will collect all pages into the tempFiles. Upon completion of the current page this method will advance to the next page and fire the method again to print the next temp document. Once the last page is reached, the method to merge is fired. PAGES 2-N: - Advance the clipY to scroll the content under the clipPath"}),"\n",(0,a.jsx)(t.h3,{id:"mergetempxslfiles",children:"mergeTempXSLFiles"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod mergeTempXSLFiles(parms, targetFileName, tempFiles) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Perform the merge of tempFiles into the fileName. This assumes tempFiles is an array."}),"\n",(0,a.jsx)(t.h3,{id:"producepdf",children:"producePDF"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod producePDF(parms, fileName, outName) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Convert the complete XSL file to PDF and launch the viewer in a new browser tab. This is a terminal method in an async execution chain."}),"\n",(0,a.jsx)(t.h3,{id:"createsvgtableframe",children:"createSvgTableFrame"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createSvgTableFrame(refId, height, width) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Produce a standard SVG container for the printable tables which can get filled with resultset content."}),"\n",(0,a.jsx)(t.h3,{id:"clipsvgcontent",children:"clipSvgContent"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod clipSvgContent(svgContent, height, width, clipTargetId, clipX, clipY) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Create a clipPath to add to a limited copy of the svgContent that will appropriately size one page of printable content. The function assumes a provided svgcontent which uses absolute positioning relative to the frame and produces a copy of the content visible inside the clip window."})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var a=n(96540);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);