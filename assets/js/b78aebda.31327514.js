"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[41667],{25585:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,toc:()=>c});var s=n(74848),o=n(28453);const i={pagination_prev:null,pagination_next:null},r="%ZEN.Component.composite",c=[{value:"Properties",id:"properties",level:2},{value:"childrenCreated",id:"childrencreated",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"%GetChildById",id:"getchildbyid",level:3},{value:"getChildById",id:"getchildbyid-1",level:3},{value:"%CreateComposite",id:"createcomposite",level:3},{value:"%GetPaneContents",id:"getpanecontents",level:3},{value:"%OnAfterCreateComposite",id:"onaftercreatecomposite",level:3},{value:"%OnSubmit",id:"onsubmit",level:3},{value:"%ReallyAddChild",id:"reallyaddchild",level:3}];function a(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"zencomponentcomposite",children:"%ZEN.Component.composite"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.composite Extends group [ Deprecated, System = 3 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Base class for composite components. A composite component provides a way to pre-assemble a group of components that can be used as a single item."}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"childrencreated",children:"childrenCreated"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property childrenCreated As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0 ];\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Internal property.",(0,s.jsx)(t.br,{}),"\nThis property is used to keep track of whether the contents of the composite element have been created or not."]}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Constructor for composite components. If you override this method, be sure to invoke this code as well using ##super."}),"\n",(0,s.jsx)(t.h3,{id:"getchildbyid",children:"%GetChildById"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetChildById(pID As %String) As %ZEN.Component.object\n"})}),"\n",(0,s.jsx)(t.p,{children:"Server-side method Find a child of this composite using its non-qualified (short) id name."}),"\n",(0,s.jsx)(t.h3,{id:"getchildbyid-1",children:"getChildById"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getChildById(id) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Client-side method Find a child of this composite using its non-qualified (short) id name."}),"\n",(0,s.jsx)(t.h3,{id:"createcomposite",children:"%CreateComposite"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CreateComposite() As %Status [ CodeMode = objectgenerator, GenerateAfter = %OnAfterCreateComposite ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This internal method creates the contents of the composite component."}),"\n",(0,s.jsx)(t.h3,{id:"getpanecontents",children:"%GetPaneContents"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetPaneContents(pGroup As %ZEN.Component.group, pPaneName As %String, Output pPaneExists As %Boolean) As %Status [ CodeMode = objectgenerator ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For composites that define panes, this method creates the object tree for a given pane and adds it to the given group element.",(0,s.jsx)(t.br,{}),'\nEvery pane name and pane block is assumed to start with "pane".']}),"\n",(0,s.jsx)(t.h3,{id:"onaftercreatecomposite",children:"%OnAfterCreateComposite"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnAfterCreateComposite() As %Status [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This callback is called after the children of this composite component have been created."}),"\n",(0,s.jsx)(t.h3,{id:"onsubmit",children:"%OnSubmit"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnSubmit(pSubmit As %ZEN.Submit) As %Status\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This callback is called when a form defined on this composite is submitted. pSubmit is a %ZEN.Submit object containing details of the form submit.",(0,s.jsx)(t.br,{}),"\nSubclasses override this method."]}),"\n",(0,s.jsx)(t.h3,{id:"reallyaddchild",children:"%ReallyAddChild"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %ReallyAddChild(pComponent As %ZEN.Component.object, pSibling As %ZEN.Component.object = "", pBefore As %Boolean = 0) As %Status [ GenerateAfter = %AddChild, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This is a local override of this method. It makes sure that %composite is set."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);