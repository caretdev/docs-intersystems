"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[63687],{16120:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>n,toc:()=>i});var s=a(74848),r=a(28453);const n={pagination_prev:null,pagination_next:null},l="%DeepSee.Dashboard.DataProperty",i=[{value:"Parameters",id:"parameters",level:2},{value:"NAMESPACE",id:"namespace",level:3},{value:"XMLNAME",id:"xmlname",level:3},{value:"XMLIGNORENULL",id:"xmlignorenull",level:3},{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"label",id:"label",level:3},{value:"width",id:"width",level:3},{value:"align",id:"align",level:3},{value:"subtype",id:"subtype",level:3},{value:"style",id:"style",level:3},{value:"display",id:"display",level:3},{value:"format",id:"format",level:3},{value:"showAs",id:"showas",level:3},{value:"valueColumn",id:"valuecolumn",level:3},{value:"summary",id:"summary",level:3},{value:"summaryValue",id:"summaryvalue",level:3},{value:"dataValue",id:"datavalue",level:3},{value:"targetValue",id:"targetvalue",level:3},{value:"thresholdLower",id:"thresholdlower",level:3},{value:"thresholdUpper",id:"thresholdupper",level:3},{value:"rangeLower",id:"rangelower",level:3},{value:"rangeUpper",id:"rangeupper",level:3},{value:"baseValue",id:"basevalue",level:3},{value:"override",id:"override",level:3},{value:"Methods",id:"methods",level:2},{value:"%CopyTo",id:"copyto",level:3},{value:"%CopyToDao",id:"copytodao",level:3},{value:"%CopyToDef",id:"copytodef",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"deepseedashboarddataproperty",children:"%DeepSee.Dashboard.DataProperty"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Dashboard.DataProperty Extends (%SerialObject, %XML.Adaptor) [ System = 4 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This class defines a how a specific dataProperty is displayed within a user-defined DeepSee dashboard widget. Many of the properties are only used by specific widget types. This is what is saved to disk, not part of the actual visual component."}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.intersystems.com/deepsee/library";\n'})}),"\n",(0,s.jsx)(t.h3,{id:"xmlname",children:"XMLNAME"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter XMLNAME = "dataProperty";\n'})}),"\n",(0,s.jsx)(t.h3,{id:"xmlignorenull",children:"XMLIGNORENULL"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter XMLIGNORENULL = 1;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"name",children:"name"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property name As %String(MAXLEN = 255, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Identifying name for this dataProperty. This is used to logically identify it."}),"\n",(0,s.jsx)(t.h3,{id:"label",children:"label"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property label As %ZEN.Datatype.caption(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Label displayed for this item within the widget."}),"\n",(0,s.jsx)(t.h3,{id:"width",children:"width"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property width As %ZEN.Datatype.length(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Width of column within the widget if appropriate."}),"\n",(0,s.jsx)(t.h3,{id:"align",children:"align"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property align As %String(MAXLEN = 25, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Alignment of column within the widget if appropriate."}),"\n",(0,s.jsx)(t.h3,{id:"subtype",children:"subtype"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property subtype As %String(MAXLEN = 255, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"For some widget types, such as meters, this lets an individual meter override the overall subtype."}),"\n",(0,s.jsx)(t.h3,{id:"style",children:"style"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property style As %ZEN.Datatype.style(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Style to apply to this property if appropriate.",(0,s.jsx)(t.br,{}),'\nThis is a CSS style string: e.g., "color: red;"']}),"\n",(0,s.jsx)(t.h3,{id:"display",children:"display"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property display As %ZEN.Datatype.string(VALUELIST = ",itemNo,label,title,value,arrow,lamp,trendLine,plotBox,hidden", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Specify what to display for this property."}),"\n",(0,s.jsx)(t.h3,{id:"format",children:"format"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property format As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Specify how to format the value for this property."}),"\n",(0,s.jsx)(t.h3,{id:"showas",children:"showAs"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property showAs As %ZEN.Datatype.string(VALUELIST = ",value,conditional,sum,target,target%,sum%", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Specify how to display values for this property (when displayed in a scoreCard).",(0,s.jsx)(t.br,{}),'\nIf "value" then the value for the property is displayed.',(0,s.jsx)(t.br,{}),'\nIf "conditional" then the value for the property is displayed if the property exists.',(0,s.jsx)(t.br,{}),'\nIf "sum" then the total of all values for the property is displayed.',(0,s.jsx)(t.br,{}),'\nIf "target" then the target value is displayed.',(0,s.jsx)(t.br,{}),'\nIf "target%" then the value as a percentage of the target is displayed.',(0,s.jsx)(t.br,{}),'\nIf "sum%" then the value as a percentage of the sum is displayed.']}),"\n",(0,s.jsx)(t.h3,{id:"valuecolumn",children:"valueColumn"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property valueColumn As %ZEN.Datatype.boolean(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"If true, then this column supplies the logical value used to identify a row within the score card. This may be used to tie actions to the scorecard."}),"\n",(0,s.jsx)(t.h3,{id:"summary",children:"summary"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property summary As %ZEN.Datatype.string(VALUELIST = ",sum,avg,min,max,value", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Type of summary to display for this column.",(0,s.jsx)(t.br,{}),'\nIf "", then no summary is displayed.',(0,s.jsx)(t.br,{}),'\n"sum" computes and displays the sum of the values within the column.',(0,s.jsx)(t.br,{}),'\n"avg" computes and displays the average of the values within the column.',(0,s.jsx)(t.br,{}),'\n"min" finds and displays the minimum of the values within the column.',(0,s.jsx)(t.br,{}),'\n"max" finds and displays the maximum of values within the column.',(0,s.jsx)(t.br,{}),'\n"value" evaluates and displays the value of the summaryValue property.']}),"\n",(0,s.jsx)(t.h3,{id:"summaryvalue",children:"summaryValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property summaryValue As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:['Value to use for the summary of the column (if summary is "value").',(0,s.jsx)(t.br,{}),'\nThis can be a literal number, a literal string (enclosed within ""), the name of the property in data source that supplies the value for this column, or an expression (starting with =).']}),"\n",(0,s.jsx)(t.h3,{id:"datavalue",children:"dataValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property dataValue As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:'Value used for this property. This can be a number or the name of the property in data source that supplies the value for this column. It can also contain a DeepSee formula (starting with "=").'}),"\n",(0,s.jsx)(t.h3,{id:"targetvalue",children:"targetValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property targetValue As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Target value for this property. This is used for columns that display a target value. If this is not supplied, the default target value for the data source is used.",(0,s.jsx)(t.br,{}),"\nThis can contain an actual value (numeric) or the name of a property within the dataSource."]}),"\n",(0,s.jsx)(t.h3,{id:"thresholdlower",children:"thresholdLower"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property thresholdLower As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Lower threshold value for this property. If this is not supplied, the default value for the data source is used.",(0,s.jsx)(t.br,{}),"\nThis can contain an actual value (numeric) or the name of a property within the dataSource."]}),"\n",(0,s.jsx)(t.h3,{id:"thresholdupper",children:"thresholdUpper"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property thresholdUpper As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Upper threshold value for this property. If this is not supplied, the default value for the data source is used.",(0,s.jsx)(t.br,{}),"\nThis can contain an actual value (numeric) or the name of a property within the dataSource."]}),"\n",(0,s.jsx)(t.h3,{id:"rangelower",children:"rangeLower"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property rangeLower As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Lower range value for this property. If this is not supplied, the default value for the data source is used.",(0,s.jsx)(t.br,{}),"\nThis can contain an actual value (numeric) or the name of a property within the dataSource."]}),"\n",(0,s.jsx)(t.h3,{id:"rangeupper",children:"rangeUpper"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property rangeUpper As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Upper range value for this property. If this is not supplied, the default value for the data source is used.",(0,s.jsx)(t.br,{}),"\nThis can contain an actual value (numeric) or the name of a property within the dataSource."]}),"\n",(0,s.jsx)(t.h3,{id:"basevalue",children:"baseValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property baseValue As %ZEN.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Optional. Base value for this property. This can contain an actual value (numeric) or the name of a property within the dataSource."}),"\n",(0,s.jsx)(t.h3,{id:"override",children:"override"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property override As %ZEN.Datatype.string(MAXLEN = 32000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Optional. Style override for this property. This is an object state (as JSON) for the client object that visualizes this property."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"copyto",children:"%CopyTo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CopyTo(ByRef pTarget) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Copy contents of this data property to pTarget."}),"\n",(0,s.jsx)(t.h3,{id:"copytodao",children:"%CopyToDao"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CopyToDao(ByRef pTarget As %DynamicObject = {$$$NULLOREF}) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Copy the contents of this definition to an Dao."}),"\n",(0,s.jsx)(t.h3,{id:"copytodef",children:"%CopyToDef"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CopyToDef(ByRef pTarget As %DeepSee.Dashboard.DataProperty) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Copy contents to a structured DataProperty definition"})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>i});var s=a(96540);const r={},n=s.createContext(r);function l(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);