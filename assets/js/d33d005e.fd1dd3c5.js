"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[52211],{62215:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>i,toc:()=>a});var s=n(74848),r=n(28453);const i={pagination_prev:null,pagination_next:null},l="%Compiler.Type.Relationship",a=[{value:"Parameters",id:"parameters",level:2},{value:"ACCESSPOLICY",id:"accesspolicy",level:3},{value:"Methods",id:"methods",level:2},{value:"GetSwizzled",id:"getswizzled",level:3},{value:"Relate",id:"relate",level:3},{value:"UnSwizzle",id:"unswizzle",level:3},{value:"UnRelate",id:"unrelate",level:3},{value:"NewObject",id:"newobject",level:3},{value:"RClose",id:"rclose",level:3},{value:"RExec",id:"rexec",level:3},{value:"RFetch",id:"rfetch",level:3},{value:"Set",id:"set",level:3},{value:"SetObject",id:"setobject",level:3},{value:"SetObjectId",id:"setobjectid",level:3},{value:"SQLCompute",id:"sqlcompute",level:3},{value:"OnDelete",id:"ondelete",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"compilertyperelationship",children:"%Compiler.Type.Relationship"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Compiler.Type.Relationship Extends %Compiler.Type.Object [ NoContext, System = 2 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Object Relationship Property Class"}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"accesspolicy",children:"ACCESSPOLICY"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter ACCESSPOLICY As STRING [ Constraint = ",lazy,eager", Flags = ENUM ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"ACCESSPOLICY defines how collection is fetched to the client application. EAGER: The whole collection is fetched no later than it is first accessed by application in any manner. If collection contains object values then objects are opened and instantiated in application memory. For applications using POJO mode this means that application can use this collection even if it has been disconnected from the server afterwards. Value EAGER is a requirement, meaning that if it is specified then EAGER policy always be employed. LAZY: Values in collection can be fetched as they are requested by the application, e.g. when methods get() or Iterator.next() are invoked. Value LAZY is a hint meaning that if it is specified it tells that LAZY policy may be used for this collection but does not guarantee that it is used. In case LAZY fetching is used collection may become invalid when application disconnected from the server."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"getswizzled",children:"GetSwizzled"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSwizzled(noswizzle As %Boolean = 0) As %RegisteredObject [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Return the oref of the object referenced by this property. If the oref isn\'t present then swizzle the OID to produce one and relate the objects. If noswizzle is passed as true then this will just return the current value for the property, so if it has been swizzled already then it will return the oref, if it has not been swizzled it will return "" ($$$NULLOREF).'}),"\n",(0,s.jsx)(t.h3,{id:"relate",children:"Relate"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Relate(oref) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Connect two objects in memory so that the relationship in each object has a swizzled reference to its inverse relationship in the other object."}),"\n",(0,s.jsx)(t.h3,{id:"unswizzle",children:"UnSwizzle"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method UnSwizzle(force As %Integer = 0) As %Status [ CodeMode = generator, Private, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Unswizzles a property, if it has an oref |"}),"\n",(0,s.jsx)(t.h3,{id:"unrelate",children:"UnRelate"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method UnRelate(oref) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Terminate the relationship between two objects. For multi-valued relationships just invoke its UnRelate() method."}),"\n",(0,s.jsx)(t.h3,{id:"newobject",children:"NewObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NewObject() As %ObjectHandle [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Creates a new instance of this property's type class and returns its reference to the caller."}),"\n",(0,s.jsx)(t.h3,{id:"rclose",children:"RClose"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RClose(%qHandle As %Binary) As %Status [ CodeMode = generator, PublicList = SQLCODE, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Close the query that returns a list of related objects."}),"\n",(0,s.jsx)(t.h3,{id:"rexec",children:"RExec"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RExec(ByRef %qHandle As %Binary, inverse As %String) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Instantiate a query that returns a list of objects related to inverse."}),"\n",(0,s.jsx)(t.h3,{id:"rfetch",children:"RFetch"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RFetch(ByRef %qHandle As %Binary, FetchCount As %Integer = 0, ByRef RowSet As %List, ByRef ReturnCount As %Integer, ByRef AtEnd As %Integer) As %Status [ CodeMode = generator, PlaceAfter = RExec, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns up to FetchCount number of rows (or up to 32k of data if FetchCount is zero) in RowSet. ReturnCount indicates the number of rows returned. AtEnd is TRUE if the query encountered an end-of-data condition while retrieving data - in other words, don't try calling again."}),"\n",(0,s.jsx)(t.h3,{id:"set",children:"Set"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Set(newvalue As %String) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set the value of this property to newvalue. If this property has a current value that that is not newvalue then %Close it, decrement its reference count and UnRelate() it. Relate() the new value."}),"\n",(0,s.jsx)(t.h3,{id:"setobject",children:"SetObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetObject(newvalue As %ObjectIdentity) As %Status [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method stores a new value for the OID of the referenced object. if swizzling has not occurred, it simply stores the OID (after perhaps stripping the class name if CLASSNAME=0). If swizzling has occurred, then it references the object to obtain its OID. If it is the same, then nothing happens. If they are different then the old object is closed and the new OID is stored."}),"\n",(0,s.jsx)(t.h3,{id:"setobjectid",children:"SetObjectId"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetObjectId(newid As %String) As %Status [ CodeMode = generator, GenerateAfter = SetObject, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method stores simply calls SetObject() with constructed Oid |"}),"\n",(0,s.jsx)(t.h3,{id:"sqlcompute",children:"SQLCompute"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SQLCompute() As %String [ CodeMode = generator, Internal, ProcedureBlock = 0, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"This method is generated for properties with SQLCOMPUTED = true. It contains code to compute a value for the property as defined in SQLCOMPUTECODE for the SQL Filer."}),"\n",(0,s.jsx)(t.h3,{id:"ondelete",children:"OnDelete"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod OnDelete(id As %RawString = "", concurrency As %Integer = -1) As %Status [ CodeMode = generator, ProcedureBlock = 1, ServerOnly = 1 ]\n'})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);