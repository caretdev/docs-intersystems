"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[65792],{61300:(e,l,s)=>{s.r(l),s.d(l,{contentTitle:()=>i,default:()=>d,frontMatter:()=>t,toc:()=>a});var r=s(74848),n=s(28453);const t={pagination_prev:null,pagination_next:null},i="%CSP.Util.HTMLMeter",a=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"MINWIDTH",id:"minwidth",level:3},{value:"MINHEIGHT",id:"minheight",level:3},{value:"WIDTH",id:"width",level:3},{value:"HEIGHT",id:"height",level:3},{value:"SHOWLABEL",id:"showlabel",level:3},{value:"Properties",id:"properties",level:2},{value:"Width",id:"width-1",level:3},{value:"Height",id:"height-1",level:3},{value:"RangeLower",id:"rangelower",level:3},{value:"RangeUpper",id:"rangeupper",level:3},{value:"ThresholdLower",id:"thresholdlower",level:3},{value:"ThresholdUpper",id:"thresholdupper",level:3},{value:"ScaleFactor",id:"scalefactor",level:3},{value:"Label",id:"label",level:3},{value:"Detail",id:"detail",level:3},{value:"InitialValue",id:"initialvalue",level:3},{value:"InitialStatus",id:"initialstatus",level:3},{value:"Description",id:"description",level:3},{value:"Property",id:"property",level:3},{value:"FullProperty",id:"fullproperty",level:3},{value:"Parent",id:"parent",level:3},{value:"Dashboard",id:"dashboard",level:3},{value:"ShowLabel",id:"showlabel-1",level:3},{value:"MeterId",id:"meterid",level:3},{value:"Link",id:"link",level:3},{value:"Methods",id:"methods",level:2},{value:"OnHTMLHead",id:"onhtmlhead",level:3},{value:"OnHTMLStyle",id:"onhtmlstyle",level:3},{value:"OnHTMLScript",id:"onhtmlscript",level:3},{value:"OnHTMLInitJS",id:"onhtmlinitjs",level:3},{value:"OnHTMLBody",id:"onhtmlbody",level:3},{value:"DrawSelector",id:"drawselector",level:3},{value:"GenerateCode",id:"generatecode",level:3},{value:"WidthSet",id:"widthset",level:3},{value:"HeightSet",id:"heightset",level:3}];function c(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.header,{children:(0,r.jsx)(l.h1,{id:"csputilhtmlmeter",children:"%CSP.Util.HTMLMeter"})}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Class %CSP.Util.HTMLMeter Extends (%RegisteredObject, %XML.Adaptor) [ Inheritance = right, ServerOnly = 1, System = 4 ]\n"})}),"\n",(0,r.jsx)(l.p,{children:"This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,r.jsx)(l.p,{children:"Base class for HTML-based dashboard meters."}),"\n",(0,r.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(l.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%Utility";\n'})}),"\n",(0,r.jsx)(l.p,{children:"Default domain for the Portal's localization."}),"\n",(0,r.jsx)(l.h3,{id:"minwidth",children:"MINWIDTH"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter MINWIDTH As INTEGER = 0;\n"})}),"\n",(0,r.jsx)(l.p,{children:"Minimum width, in logical units, of this meter."}),"\n",(0,r.jsx)(l.h3,{id:"minheight",children:"MINHEIGHT"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter MINHEIGHT As INTEGER = 0;\n"})}),"\n",(0,r.jsx)(l.p,{children:"Minimum height, in logical units, of this meter."}),"\n",(0,r.jsx)(l.h3,{id:"width",children:"WIDTH"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter WIDTH As INTEGER = 100;\n"})}),"\n",(0,r.jsx)(l.p,{children:"Default width, in logical units, of this meter."}),"\n",(0,r.jsx)(l.h3,{id:"height",children:"HEIGHT"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter HEIGHT As INTEGER = 20;\n"})}),"\n",(0,r.jsx)(l.p,{children:"Default height, in logical units, of this meter."}),"\n",(0,r.jsx)(l.h3,{id:"showlabel",children:"SHOWLABEL"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter SHOWLABEL As BOOLEAN = 1;\n"})}),"\n",(0,r.jsx)(l.p,{children:"Should this meter display the standard label"}),"\n",(0,r.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(l.h3,{id:"width-1",children:"Width"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Width As %Integer(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = {..#WIDTH} ];\n'})}),"\n",(0,r.jsx)(l.p,{children:"Width, in logical units, of this meter. Note, this value is determined by the WIDTH class parameter."}),"\n",(0,r.jsx)(l.h3,{id:"height-1",children:"Height"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Height As %Integer(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = {..#HEIGHT} ];\n'})}),"\n",(0,r.jsx)(l.p,{children:"Height, in logical units, of this meter. Note, this value is determined by the HEIGHT class parameter."}),"\n",(0,r.jsx)(l.h3,{id:"rangelower",children:"RangeLower"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property RangeLower As %Float(XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Represents the lower value of the meter range."}),"\n",(0,r.jsx)(l.h3,{id:"rangeupper",children:"RangeUpper"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property RangeUpper As %Float(XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Represents the upper value of the meter range."}),"\n",(0,r.jsx)(l.h3,{id:"thresholdlower",children:"ThresholdLower"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property ThresholdLower As %Float(XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Represents the lower threshold level for the meter."}),"\n",(0,r.jsx)(l.h3,{id:"thresholdupper",children:"ThresholdUpper"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property ThresholdUpper As %Float(XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Represents the upper threshold level for the meter."}),"\n",(0,r.jsx)(l.h3,{id:"scalefactor",children:"ScaleFactor"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property ScaleFactor As %Float(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 1 ];\n'})}),"\n",(0,r.jsx)(l.p,{children:"For numeric displays, the meter will multiply the current level by this amount before displaying it."}),"\n",(0,r.jsx)(l.h3,{id:"label",children:"Label"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Label As %String(MAXLEN = 50, XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"The label displayed for the meter."}),"\n",(0,r.jsx)(l.h3,{id:"detail",children:"Detail"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Detail As %String(MAXLEN = 500, XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Optional details text (as HTML) for the meter."}),"\n",(0,r.jsx)(l.h3,{id:"initialvalue",children:"InitialValue"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property InitialValue As %String(MAXLEN = 500, XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"The initial value of the meter."}),"\n",(0,r.jsx)(l.h3,{id:"initialstatus",children:"InitialStatus"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property InitialStatus As %String(MAXLEN = 50, XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"The initial status of the meter."}),"\n",(0,r.jsx)(l.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Description As %String(MAXLEN = 250, XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Description for the meter."}),"\n",(0,r.jsx)(l.h3,{id:"property",children:"Property"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Property As %String(MAXLEN = 128, XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Metric property providing the metric for this meter."}),"\n",(0,r.jsx)(l.h3,{id:"fullproperty",children:"FullProperty"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property FullProperty As %String(MAXLEN = 500, XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"The resolved full property name."}),"\n",(0,r.jsx)(l.h3,{id:"parent",children:"Parent"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Parent As HTMLMeter(XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Parent meter for grouped elements"}),"\n",(0,r.jsx)(l.h3,{id:"dashboard",children:"Dashboard"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Dashboard As HTMLDashboardPane(XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Dashboard this meter is part of"}),"\n",(0,r.jsx)(l.h3,{id:"showlabel-1",children:"ShowLabel"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property ShowLabel As %Boolean(XMLPROJECTION = "NONE") [ InitialExpression = {..#SHOWLABEL}, ReadOnly ];\n'})}),"\n",(0,r.jsx)(l.p,{children:"Indicates that the label should be displayed for this meter."}),"\n",(0,r.jsx)(l.h3,{id:"meterid",children:"MeterId"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property MeterId As %Integer(XMLPROJECTION = "NONE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"Id used when meter is placed on client page"}),"\n",(0,r.jsx)(l.h3,{id:"link",children:"Link"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:'Property Link As %String(MAXLEN = 128, XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,r.jsx)(l.p,{children:"If present, the link (URL) used to drill into details for this meter."}),"\n",(0,r.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(l.h3,{id:"onhtmlhead",children:"OnHTMLHead"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod OnHTMLHead()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Called before any scripts, styles, defs are written Usually used to pick up include files"}),"\n",(0,r.jsx)(l.h3,{id:"onhtmlstyle",children:"OnHTMLStyle"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod OnHTMLStyle()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Draw the style section of this HTML meter"}),"\n",(0,r.jsx)(l.h3,{id:"onhtmlscript",children:"OnHTMLScript"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod OnHTMLScript()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Draw the script section of this HTML meter"}),"\n",(0,r.jsx)(l.h3,{id:"onhtmlinitjs",children:"OnHTMLInitJS"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method OnHTMLInitJS()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Generate JavaScript to initialize client-side meter object"}),"\n",(0,r.jsx)(l.h3,{id:"onhtmlbody",children:"OnHTMLBody"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method OnHTMLBody()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Draw the body of this HTML meter"}),"\n",(0,r.jsx)(l.h3,{id:"drawselector",children:"DrawSelector"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method DrawSelector()\n"})}),"\n",(0,r.jsx)(l.p,{children:"Draw standard selector / indicator box for meter"}),"\n",(0,r.jsx)(l.h3,{id:"generatecode",children:"GenerateCode"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method GenerateCode(pCode As %CharacterStream, pLevel As %Integer = 1) As %Status\n"})}),"\n",(0,r.jsx)(l.p,{children:"Called by Dashboard class to generate code to create an instace of this object. The object instance is called tMeter."}),"\n",(0,r.jsx)(l.h3,{id:"widthset",children:"WidthSet"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method WidthSet(%val As %Integer) As %Status\n"})}),"\n",(0,r.jsx)(l.h3,{id:"heightset",children:"HeightSet"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-objectscript-class",children:"Method HeightSet(%val As %Integer) As %Status\n"})})]})}function d(e={}){const{wrapper:l}={...(0,n.R)(),...e.components};return l?(0,r.jsx)(l,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,l,s)=>{s.d(l,{R:()=>i,x:()=>a});var r=s(96540);const n={},t=r.createContext(n);function i(e){const l=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(t.Provider,{value:l},e.children)}}}]);