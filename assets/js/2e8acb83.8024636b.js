"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[42233],{64965:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>a,default:()=>o,frontMatter:()=>r,toc:()=>d});var n=s(74848),i=s(28453);const r={pagination_prev:null,pagination_next:null},a="%SYS.Date.SlidingWindow",d=[{value:"Methods",id:"methods",level:2},{value:"NoWindow",id:"nowindow",level:3},{value:"Get",id:"get",level:3},{value:"Twentieth",id:"twentieth",level:3},{value:"SetAbsolute",id:"setabsolute",level:3},{value:"SetDate",id:"setdate",level:3},{value:"SetRelative",id:"setrelative",level:3},{value:"UseDefault",id:"usedefault",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"sysdateslidingwindow",children:"%SYS.Date.SlidingWindow"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SYS.Date.SlidingWindow Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"The %SYS.Date.SlidingWindow class supports methods for setting, modifying and inspecting the system-wide or process-specific sliding window definitions. With the exception of Get(), all the other class methods return a %Status to indicate success or failure. Any modified system-wide definition will be active until the system is restarted. If necessary, users can add the new settings to ^ZSTU or ^%ZSTART in order to make them survive across reboots."}),"\n",(0,n.jsx)(t.p,{children:"In most cases, the first parameter indicates whether the call is system or process-specific:"}),"\n",(0,n.jsxs)(t.p,{children:["Scope = 0: system (default)",(0,n.jsx)(t.br,{}),"\nScope = 1: process"]}),"\n",(0,n.jsx)(t.p,{children:"Depending of the method, start and end dates can be specified in 3 different ways:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Absolute Dates, represented in $H format"}),"\n",(0,n.jsx)(t.li,{children:"Absolute Years, represented by 4-digit numbers relative to the start of the Common Era (0 C.E.)"}),"\n",(0,n.jsx)(t.li,{children:"Relative Years, represented by numbers relative the current year\nWhen relative years are used to define a sliding window, the first or only relative year is interpreted as the start year, expressed as the number of years PRIOR to the current year. The second relative year, if any, is interpreted as the end year, expressed as one more than the number of years AFTER the current year."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"nowindow",children:"NoWindow"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod NoWindow(Scope As %Integer = 0) As %String\n"})}),"\n",(0,n.jsx)(t.p,{children:'Set default to be an "empty" window, so that all years display using 4 digits.'}),"\n",(0,n.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Get(Scope As %Integer = 0) As %String\n"})}),"\n",(0,n.jsx)(t.p,{children:"Get current default definition in the format:"}),"\n",(0,n.jsx)(t.p,{children:"OldStartDate^OldEndDate"}),"\n",(0,n.jsx)(t.p,{children:"Where OldStartDate and OldEndDate are absolute dates in $H format representing the start and end, respectively, of the current sliding window."}),"\n",(0,n.jsx)(t.h3,{id:"twentieth",children:"Twentieth"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Twentieth(Scope As %Integer = 0) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Remove current default so that a 20th century fixed window is used by default."}),"\n",(0,n.jsx)(t.h3,{id:"setabsolute",children:"SetAbsolute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SetAbsolute(Scope As %Integer = 0, StartYear As %Integer, EndYear As %Integer) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Set date window to begin on the absolute year StarYear and to end on the absolute year EndYear."}),"\n",(0,n.jsx)(t.h3,{id:"setdate",children:"SetDate"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SetDate(Scope As %Integer = 0, StartDate As %Integer, EndDate As %Integer) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Set date window to begin on the absolute date StartDate and to end on the absolute date EndDate."}),"\n",(0,n.jsx)(t.h3,{id:"setrelative",children:"SetRelative"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SetRelative(Scope As %Integer = 0, StartYear As %Integer, EndYear As %Integer) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Set date window to begin on the relative year StartYear and to end on the relative year EndYear."}),"\n",(0,n.jsx)(t.p,{children:"Example: If issued in 2008, the following command would establish a process-specific sliding window definition which would result in this process displaying two-digit years for any dates in the range 01/01/1918 through 12/31/2017, inclusive."}),"\n",(0,n.jsx)(t.p,{children:"Set status=##class(%SYS.Date.SlidingWindow).SetRelative(1,90,10)"}),"\n",(0,n.jsx)(t.h3,{id:"usedefault",children:"UseDefault"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod UseDefault()\n"})}),"\n",(0,n.jsx)(t.p,{children:"Set process window to be the same as the current system default."})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>d});var n=s(96540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);