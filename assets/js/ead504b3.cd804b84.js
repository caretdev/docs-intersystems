"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[98385],{88606:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>l,frontMatter:()=>s,toc:()=>c});var r=t(74848),a=t(28453);const s={pagination_prev:null,pagination_next:null},o="%ZEN.Auxiliary.parameter",c=[{value:"Properties",id:"properties",level:2},{value:"value",id:"value",level:3}];function i(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"zenauxiliaryparameter",children:"%ZEN.Auxiliary.parameter"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Auxiliary.parameter Extends %ZEN.Component.object [ Deprecated, System = 3 ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Defines a parameter name/value pair for use by certain data displaying components. Typically this is used by components, such as %ZEN.Component.dynaView or %ZEN.Component.tablePane, to let users provide values that are, in turn, passed on to the callback that provides the contents of the component."}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property value As %ZEN.Datatype.string(ZENEXPRESSION = 1);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Value of the parameter."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(96540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);