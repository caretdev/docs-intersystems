"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[90496],{92100:(e,l,n)=>{n.r(l),n.d(l,{contentTitle:()=>r,default:()=>c,frontMatter:()=>o,toc:()=>i});var a=n(74848),s=n(28453);const o={pagination_prev:null,pagination_next:null},r="%Library.Boolean",i=[{value:"Parameters",id:"parameters",level:2},{value:"XSDTYPE",id:"xsdtype",level:3},{value:"JSONTYPE",id:"jsontype",level:3},{value:"Methods",id:"methods",level:2},{value:"XSDToLogical",id:"xsdtological",level:3},{value:"LogicalToXSD",id:"logicaltoxsd",level:3},{value:"DisplayToLogical",id:"displaytological",level:3},{value:"Normalize",id:"normalize",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"LogicalToDisplay",id:"logicaltodisplay",level:3}];function t(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.header,{children:(0,a.jsx)(l.h1,{id:"libraryboolean",children:"%Library.Boolean"})}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"Class %Library.Boolean Extends %Integer [ ClientDataType = BOOLEAN, OdbcType = BIT, SqlCategory = INTEGER, System = 2 ]\n"})}),"\n",(0,a.jsxs)(l.p,{children:["The ",(0,a.jsx)(l.strong,{children:"%Boolean"})," data type class represents a boolean value."]}),"\n",(0,a.jsxs)(l.p,{children:["The logical value of the ",(0,a.jsx)(l.strong,{children:"%Boolean"})," data type is an integer with value of 0 (false) and 1 (true)."]}),"\n",(0,a.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(l.h3,{id:"xsdtype",children:"XSDTYPE"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter XSDTYPE = "boolean";\n'})}),"\n",(0,a.jsx)(l.p,{children:"Declares the XSD type used when projecting XML Schemas."}),"\n",(0,a.jsx)(l.h3,{id:"jsontype",children:"JSONTYPE"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter JSONTYPE = "boolean";\n'})}),"\n",(0,a.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(l.h3,{id:"xsdtological",children:"XSDToLogical"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod XSDToLogical(%val As %String) As %Boolean [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,a.jsx)(l.p,{children:"Converts the SOAP encoded input value, which is true, false 1 or 0, into a %Boolean value."}),"\n",(0,a.jsx)(l.h3,{id:"logicaltoxsd",children:"LogicalToXSD"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToXSD(%val As %Boolean) As %String [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,a.jsx)(l.p,{children:"Converts the %Boolean value to the canonical SOAP encoded value."}),"\n",(0,a.jsx)(l.h3,{id:"displaytological",children:"DisplayToLogical"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod DisplayToLogical(%val As %String) As %Boolean [ ServerOnly = 0 ]\n"})}),"\n",(0,a.jsx)(l.p,{children:"Converts the input value %val, which is a string representing a boolean value, into a boolean value."}),"\n",(0,a.jsx)(l.p,{children:"Returns the boolean value of the input string %val."}),"\n",(0,a.jsx)(l.h3,{id:"normalize",children:"Normalize"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod Normalize(%val As %RawString) As %Integer [ ServerOnly = 1 ]\n"})}),"\n",(0,a.jsx)(l.p,{children:"Converts %val to a normalized value."}),"\n",(0,a.jsx)(l.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:'ClassMethod IsValid(%val As %RawString = "") As %Status [ CodeMode = generator, ServerOnly = 0 ]\n'})}),"\n",(0,a.jsx)(l.p,{children:"Tests if the boolean value %val is valid."}),"\n",(0,a.jsx)(l.h3,{id:"logicaltodisplay",children:"LogicalToDisplay"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToDisplay(%val As %Boolean) As %String [ ServerOnly = 0 ]\n"})}),"\n",(0,a.jsx)(l.p,{children:"Converts the value of %val, which is in boolean format, into a display string."}),"\n",(0,a.jsx)(l.p,{children:"Returns the formatted value of %val."})]})}function c(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,a.jsx)(l,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>r,x:()=>i});var a=n(96540);const s={},o=a.createContext(s);function r(e){const l=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:l},e.children)}}}]);