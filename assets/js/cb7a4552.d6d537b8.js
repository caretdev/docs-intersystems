"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[11060],{18910:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>r,default:()=>l,frontMatter:()=>i,toc:()=>c});var s=a(74848),n=a(28453);const i={pagination_prev:null,pagination_next:null},r="%Api.InteropMetrics.v1.impl",c=[{value:"Parameters",id:"parameters",level:2},{value:"ExposeServerExceptions",id:"exposeserverexceptions",level:3},{value:"Methods",id:"methods",level:2},{value:"currentDatabaseImpact",id:"currentdatabaseimpact",level:3},{value:"historicalDatabaseImpact",id:"historicaldatabaseimpact",level:3},{value:"currentInterfaces",id:"currentinterfaces",level:3},{value:"historicalInterfaces",id:"historicalinterfaces",level:3},{value:"currentVolume",id:"currentvolume",level:3},{value:"historicalVolume",id:"historicalvolume",level:3},{value:"currentRange",id:"currentrange",level:3},{value:"historicalRange",id:"historicalrange",level:3}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apiinteropmetricsv1impl",children:"%Api.InteropMetrics.v1.impl"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Api.InteropMetrics.v1.impl Extends %REST.Impl [ ProcedureBlock ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Set of REST APIs for getting interop metrics",(0,s.jsx)(t.br,{}),"\nBusiness logic class defined by OpenAPI in %Api.InteropMetrics.v1.spec",(0,s.jsx)(t.br,{}),"\nUpdated Nov 14, 2024 18:21:32"]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"exposeserverexceptions",children:"ExposeServerExceptions"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter ExposeServerExceptions = 0;\n"})}),"\n",(0,s.jsx)(t.p,{children:"If ExposeServerExceptions is true, then details of internal errors will be exposed."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"currentdatabaseimpact",children:"currentDatabaseImpact"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod currentDatabaseImpact(start As %String, end As %String, database As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns estimated size of data (in MB) created for each database for all currently active data.",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstart, If specified, only data since start (inclusive) is included. The start parameter is a date or datetime in UTC that must specified in ODBC format YYYY-MM-DD[ HH:MM:SS]. If only YYYY-MM-DD is specified, HH:MM:SS is assumed to be 00:00:00.",(0,s.jsx)(t.br,{}),"\nend, If specified, only data until end (inclusive) is included. The end parameter is a date or datetime in UTC that must specified in ODBC format YYYY-MM-DD[ HH:MM:SS]. If only YYYY-MM-DD is specified, HH:MM:SS is assumed to be 23:59:59.",(0,s.jsx)(t.br,{}),"\ndatabase, If specified, only data related to that database is included."]}),"\n",(0,s.jsx)(t.h3,{id:"historicaldatabaseimpact",children:"historicalDatabaseImpact"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod historicalDatabaseImpact(startmonth As %String, endmonth As %String, database As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns estimated size of data (in MB) created for each database for all historical data.",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstartmonth, If specified, only data since startmonth (inclusive) is included. The startmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\nendmonth, If specified, only data until endmonth (inclusive) is included. The endmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\ndatabase, If specified, only data related to that database is included."]}),"\n",(0,s.jsx)(t.h3,{id:"currentinterfaces",children:"currentInterfaces"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod currentInterfaces(start As %String, end As %String, namespace As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns information about all inbound, outbound, and web API interfaces for all currently active data.",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstart, If specified, only data since start (inclusive) is included. The start parameter is a date or datetime in UTC that must specified in ODBC format YYYY-MM-DD[ HH:MM:SS]. If only YYYY-MM-DD is specified, HH:MM:SS is assumed to be 00:00:00.",(0,s.jsx)(t.br,{}),"\nend, If specified, only data until end (inclusive) is included. The end parameter is a date or datetime in UTC that must specified in ODBC format YYYY-MM-DD[ HH:MM:SS]. If only YYYY-MM-DD is specified, HH:MM:SS is assumed to be 23:59:59.",(0,s.jsx)(t.br,{}),"\nnamespace, If specified, only data related to that namespace is included."]}),"\n",(0,s.jsx)(t.h3,{id:"historicalinterfaces",children:"historicalInterfaces"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod historicalInterfaces(startmonth As %String, endmonth As %String, namespace As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns information about all inbound, outbound, and web API interfaces for all historical data",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstartmonth, If specified, only data since startmonth (inclusive) is included. The startmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\nendmonth, If specified, only data until endmonth (inclusive) is included. The endmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\nnamespace, If specified, only data related to that namespace is included."]}),"\n",(0,s.jsx)(t.h3,{id:"currentvolume",children:"currentVolume"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod currentVolume(startDate As %String, endDate As %String, namespace As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns the total inbound and outbound volume metrics per namespace for all currently active data.",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstartDate, If specified, only data since startDate (inclusive) is included. The startDate parameter is a date in UTC that must specified in ODBC format YYYY-MM-DD.",(0,s.jsx)(t.br,{}),"\nendDate, If specified, only data until endDate (inclusive) is included. The endDate parameter is a date in UTC that must specified in ODBC format YYYY-MM-DD.",(0,s.jsx)(t.br,{}),"\nnamespace, If specified, only data related to that namespace is included."]}),"\n",(0,s.jsx)(t.h3,{id:"historicalvolume",children:"historicalVolume"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod historicalVolume(startmonth As %String, endmonth As %String, namespace As %String) As %Stream.Object\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Returns the total inbound and outbound volume metrics per namespace for all historical data.",(0,s.jsx)(t.br,{}),"\nThe method arguments hold values for:",(0,s.jsx)(t.br,{}),"\nstartmonth, If specified, only data since startmonth (inclusive) is included. The startmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\nendmonth, If specified, only data until endmonth (inclusive) is included. The endmonth parameter is string of format YYYY-MM. Note that all times and dates are in UTC.",(0,s.jsx)(t.br,{}),"\nnamespace, If specified, only data related to that namespace is included."]}),"\n",(0,s.jsx)(t.h3,{id:"currentrange",children:"currentRange"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod currentRange() As %Stream.Object\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the date of both the earliest and most recent currently active records. If no metrics data exist, an empty response is returned."}),"\n",(0,s.jsx)(t.h3,{id:"historicalrange",children:"historicalRange"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod historicalRange() As %Stream.Object\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the date of both the earliest and most recent historical data. If no metrics data exist, an empty response is returned."})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>c});var s=a(96540);const n={},i=s.createContext(n);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);