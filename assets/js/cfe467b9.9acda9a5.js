"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[76193],{87629:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>c,toc:()=>i});var r=n(74848),s=n(28453);const c={pagination_prev:null,pagination_next:null},a="%XML.Security.EncryptedData",i=[{value:"Parameters",id:"parameters",level:2},{value:"XMLFORMAT",id:"xmlformat",level:3},{value:"NAMESPACE",id:"namespace",level:3},{value:"ELEMENTQUALIFIED",id:"elementqualified",level:3},{value:"Properties",id:"properties",level:2},{value:"CipherData",id:"cipherdata",level:3},{value:"EncryptionProperties",id:"encryptionproperties",level:3},{value:"ReferenceOption",id:"referenceoption",level:3},{value:"KeyElement",id:"keyelement",level:3},{value:"EncryptedPart",id:"encryptedpart",level:3},{value:"IsBodyEncrypted",id:"isbodyencrypted",level:3},{value:"Methods",id:"methods",level:2},{value:"Create",id:"create",level:3},{value:"CreateFromEncryptedKey",id:"createfromencryptedkey",level:3},{value:"EncryptStream",id:"encryptstream",level:3},{value:"ValidateDocument",id:"validatedocument",level:3},{value:"Initialize",id:"initialize",level:3},{value:"ValidateKeyAlgorithm",id:"validatekeyalgorithm",level:3},{value:"Encrypt",id:"encrypt",level:3},{value:"EncryptElement",id:"encryptelement",level:3},{value:"EncryptBody",id:"encryptbody",level:3},{value:"ComputeCipherData",id:"computecipherdata",level:3},{value:"Reset",id:"reset",level:3},{value:"Decrypt",id:"decrypt",level:3},{value:"Validate",id:"validate",level:3},{value:"ValidateElement",id:"validateelement",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"xmlsecurityencrypteddata",children:"%XML.Security.EncryptedData"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XML.Security.EncryptedData Extends %XML.Security.EncryptedType [ System = 4 ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"For details on using this class"}),", see ",(0,r.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25XML.Security.EncryptedData+xml",children:"Encrypting XML Documents"}),". and ",(0,r.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25XML.Security.EncryptedData+soap",children:"Encrypting SOAP Security Headers"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"XML Encryption element."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"xmlformat",children:"XMLFORMAT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter XMLFORMAT = "literal";\n'})}),"\n",(0,r.jsx)(t.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.w3.org/2001/04/xmlenc#";\n'})}),"\n",(0,r.jsx)(t.h3,{id:"elementqualified",children:"ELEMENTQUALIFIED"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter ELEMENTQUALIFIED = 1;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"cipherdata",children:"CipherData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property CipherData As %XML.Security.CipherDataStream(XMLREF = 1) [ Required ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"Override of %XML.Security.EncryptedType property to allow > 32k of data"}),"\n",(0,r.jsx)(t.h3,{id:"encryptionproperties",children:"EncryptionProperties"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property EncryptionProperties As %XML.Security.EncryptionProperties(XMLREF = 1);\n"})}),"\n",(0,r.jsx)(t.p,{children:"Unchanged override of %XML.Security.EncryptedType property to maintain element position."}),"\n",(0,r.jsx)(t.h3,{id:"referenceoption",children:"ReferenceOption"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property ReferenceOption As %String(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"ReferenceOption argument from the Create call."}),"\n",(0,r.jsx)(t.h3,{id:"keyelement",children:"KeyElement"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property KeyElement As %XML.Security.EncryptedKey(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"The key element which contains the key material to use for creating the Key. The type of this property depends on the reference option."}),"\n",(0,r.jsx)(t.h3,{id:"encryptedpart",children:"EncryptedPart"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property EncryptedPart As %SOAP.Security.Element(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:'Security header element child to be encrypted. If Body to be encrypted, then "".'}),"\n",(0,r.jsx)(t.h3,{id:"isbodyencrypted",children:"IsBodyEncrypted"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property IsBodyEncrypted As %Boolean(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"If true, then the SOAP Body is encrypted."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"create",children:"Create"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Create(keyElement As %XML.Security.EncryptedKey = "", elementToEncrypt As %SOAP.Security.Element, referenceOption As %Integer = "") As %XML.Security.EncryptedData\n'})}),"\n",(0,r.jsx)(t.p,{children:"Create a EncryptedData element that is to be referenced from a ReferenceList Security element and that is to carry content encrypted with a symmetric key specified by its KeyInfo element."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"keyElement is the Security element which will supply the symmetric key. keyElement is meaningful only when referenceOption specified. See referenceOption for details."}),"\n",(0,r.jsx)(t.li,{children:'The elementToEncrypt argument specifies the oref of the element to be encrypted. It is currently only valid to encrypt the body or a Security element. The default is "" which means to encrypt the body.'}),"\n",(0,r.jsxs)(t.li,{children:['The referenceOption argument specifies the type of reference which will be in the KeyInfo. If referenceOption is "" or not specified, no KeyInfo is created. This is the default.\n',(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"$$$SOAPWSReferenceEncryptedKey is reference to an EncryptedKey element in this message. The keyElement argument must be specified and is the EncryptedKey element."}),"\n",(0,r.jsx)(t.li,{children:"$$$SOAPWSReferenceEncryptedKeySHA1 is reference by the SHA1 hash of the key contained in the EncryptedKey element specified as the first argument. If the keyElement is not specified, the key from the first EncryptedKey element in the received message is used."}),"\n",(0,r.jsx)(t.li,{children:"$$$SOAPWSReferenceDerivedKey is reference to a DerivedKeyToken element in this message. The keyElement argument must be specified and is the DerivedKeyToken element. The key size to be used for this EncryptedData element must be specified by setting the Algorithm property or by setting the Length property of the DerivedKey."}),"\n",(0,r.jsx)(t.li,{children:"$$$SOAPWSReferenceSCT is reference by wsu:Id to a SecurityContextToken element in this message. The keyElement argument must be specified and is the SecurityContextToken element."}),"\n",(0,r.jsx)(t.li,{children:"$$$SOAPWSReferenceSCTIdentifier is reference by Identifier and Instance to a SecurityContextToken element not necessarily in this message. The keyElement argument must be specified and is the SecurityContextToken element."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"createfromencryptedkey",children:"CreateFromEncryptedKey"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateFromEncryptedKey(encryptedKey As %XML.Security.EncryptedKey, elementToEncrypt As %SOAP.Security.Element) As %XML.Security.EncryptedData [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Create an EncryptedData element"}),"\n",(0,r.jsx)(t.h3,{id:"encryptstream",children:"EncryptStream"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method EncryptStream(messageStream As %BinaryStream, encryptedKeys As %ListOfObjects(ELEMENTTYPE="%XML.Security.EncryptedKey")) As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"EncryptStream encrypts messageStream and stores the encrypted content of messageStream as the CipherData. This completed EncryptedData instance may be exported using %XML.Writer to create an EncyptedData element as required by the XML Encryption specification."}),"\n",(0,r.jsx)(t.p,{children:"messageStream is the stream containing the data to be encrypted. messageStream must be positioned before calling EncryptStream -- for example by calling Rewind first."}),"\n",(0,r.jsx)(t.p,{children:"encryptedKeys is a %ListOfObjects of instances of %XML.Security.EncryptedKey. The EncyptedStream method will compute a common random, symmetric key for all the elements in encryptedKeys and store the encrypted symmetric key in the EncryptedKey instance. Encryption of the symmetric key is done using the public key from the X.509 credentials associated with the EncyptedKey instance. The result is that messageStream may be decrypted by any recipient that has the private key associated with the X.509 certificate in one of the EncryptedKey instances."}),"\n",(0,r.jsx)(t.p,{children:"The default value of any property of EncryptedData, such as Algorithm, Type and RequireBestEntropy, may be overridden before calling EncryptStream."}),"\n",(0,r.jsx)(t.p,{children:"The following example encrypts messageStream based on the certifcates in the credentials called cred1 and cred2."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:'set encryptedKeys=##class(%ListOfObjects).%New() set x5091 = ##class(%SYS.X509Credentials).GetByAlias("cred1") do encryptedKeys.Insert(##class(#XML.Security.EncryptedKey).CreateX509( x5091,,$$$KeyInfoX509SKI)) set x5092 = ##class(%SYS.X509Credentials).GetByAlias("cred2") do encryptedKeys.Insert(##class(#XML.Security.EncryptedKey).CreateX509( x5092,,$$$KeyInfoX509SKI)) set encryptedData=##class(#XML.Security.EncryptedData).%New() set encryptedData.Algorithm=$$$SOAPWSaes256cbc ; default is $$$SOAPWSaes128cbc set encryptedData.Type=$$$SOAPWSEncryptElement ; default is $$$SOAPWSEncryptContent do messageStream.Rewind() set status=encryptedData.EncryptStream(messageStream, encryptedKeys) if $$$ISERR(status) .... handle error ....'})}),"\n",(0,r.jsx)(t.h3,{id:"validatedocument",children:"ValidateDocument"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod ValidateDocument(ByRef document As %XML.Document, encryptedKeys As %ListOfObjects(ELEMENTTYPE="%XML.Security.EncryptedKey")) As %Boolean\n'})}),"\n",(0,r.jsx)(t.p,{children:"Validate a %XML.Document containing a parsed XML document which contains an EncryptedData element and EncryptedKey elements. document is the parsed document."}),"\n",(0,r.jsx)(t.p,{children:"If decryption is valid, the document argument is updated with a new document which has the EncryptedData element replaced by the decypted text and true (1) is returned. If invalid return false (0)."}),"\n",(0,r.jsx)(t.p,{children:"encryptedKeys is a %ListOfObjects of instances of %XML.Security.EncryptedKey. The ValidateDocument method will decrypt the CipherData in the EncryptedData element found in the document based on one of the EncryptedKey elements in encryptedKeys. Any EncryptedKey elemetns which do not result in successful decryption are ignored. The result is that the EncryptedData in document may be decrypted by any recipient that has the private key associated with the X.509 certificate in one of the EncryptedKey instances."}),"\n",(0,r.jsxs)(t.p,{children:['The following example assumes a single argument web service method with the argument named arg. This will usually be the case with an entire message being the argument since Parameter ARGUMENTSTYLE = "message". The EncryptedData to validate and decrypt is the SOAP message whose %XML.Document is contained in the ImportHandler property of the service. ',(0,r.jsx)(t.code,{children:"// Keys element is property containing a list of EncryptedKey elements. // Keys is an arbitrary property name set document=..ImportHandler if ##class(%XML.Security.EncryptedData).ValidateDocument(.document,arg.Keys) { set reader=##class(%XML.Reader).%New() set reader.Document=document ; updated document to a reader instance do reader.Correlate(.... ; Use reader to create classes ... Use Next loop to process payload ... } else { ... process error ... }"})]}),"\n",(0,r.jsx)(t.h3,{id:"initialize",children:"Initialize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method Initialize(service As %SOAP.WebBase, header As %SOAP.Security.Header, key As %Binary = "") As %Status [ Internal ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Initialize will be called from InitializeForService in ReferenceList."}),"\n",(0,r.jsx)(t.h3,{id:"validatekeyalgorithm",children:"ValidateKeyAlgorithm"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ValidateKeyAlgorithm() As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Validate algorithm and key size"}),"\n",(0,r.jsx)(t.h3,{id:"encrypt",children:"Encrypt"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Encrypt(header As %SOAP.Security.Header) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Do the encryption for this EncryptedData element."}),"\n",(0,r.jsx)(t.h3,{id:"encryptelement",children:"EncryptElement"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method EncryptElement(element As %SOAP.Security.Element, header As %SOAP.Security.Header) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Encryption of a Security element."}),"\n",(0,r.jsx)(t.h3,{id:"encryptbody",children:"EncryptBody"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method EncryptBody(header As %SOAP.Security.Header) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Actual encryption of the SOAP Body."}),"\n",(0,r.jsx)(t.h3,{id:"computecipherdata",children:"ComputeCipherData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ComputeCipherData(stream As %FileBinaryStream) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Actual encryption of a stream"}),"\n",(0,r.jsx)(t.h3,{id:"reset",children:"Reset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Reset()\n"})}),"\n",(0,r.jsx)(t.p,{children:"Reset the element."}),"\n",(0,r.jsx)(t.h3,{id:"decrypt",children:"Decrypt"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Decrypt(document As %XML.Document, service As %SOAP.WebBase, ref As %XML.Security.DataReference, key As %Binary, mimeAttachments As %Net.MIMEPart = "") As %Status [ Internal ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"Validate and decrypt this EncryptedData element for SOAP Body."}),"\n",(0,r.jsx)(t.h3,{id:"validate",children:"Validate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Validate(key As %Binary, service As %SOAP.WebBase) As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Validate received EncryptedData and get key if needed"}),"\n",(0,r.jsx)(t.h3,{id:"validateelement",children:"ValidateElement"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ValidateElement(document As %XML.Document, service As %SOAP.WebBase) As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Validate the security header element. If invalid return an error code."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const s={},c=r.createContext(s);function a(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);