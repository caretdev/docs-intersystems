"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[38395],{42715:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>i,toc:()=>a});var r=n(74848),s=n(28453);const i={pagination_prev:null,pagination_next:null},l="%Net.ChunkedWriter",a=[{value:"Properties",id:"properties",level:2},{value:"TranslateTable",id:"translatetable",level:3},{value:"SentChars",id:"sentchars",level:3},{value:"Methods",id:"methods",level:2},{value:"OutputStream",id:"outputstream",level:3},{value:"Clear",id:"clear",level:3},{value:"WriteSingleChunk",id:"writesinglechunk",level:3},{value:"WriteFirstChunk",id:"writefirstchunk",level:3},{value:"WriteChunk",id:"writechunk",level:3},{value:"WriteLastChunk",id:"writelastchunk",level:3},{value:"GetChunkLength",id:"getchunklength",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"netchunkedwriter",children:"%Net.ChunkedWriter"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Net.ChunkedWriter Extends %AbstractStream [ Abstract, System = 3 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"%Net.ChunkedWriter provides an interface so that its sub class may be used as an %Net.HttpRequest EntityBody for chunked output from %Net.HttpRequest."}),"\n",(0,r.jsx)(t.p,{children:"In order to do chunked output from %Net.HttpRequest, a subclass of %Net.ChunkedWriter must be created which implements the OutputStream method. This subclass of %Net.ChunkedWriter is then assigned to the EntityBody property of %Net.HttpRequest which uses the OutputStream method of this class to produce the chunked output."}),"\n",(0,r.jsx)(t.p,{children:"If the entire request body fits in one buffer, OutputStream is implemented by calling WriteSingleChunk(buffer)."}),"\n",(0,r.jsx)(t.p,{children:"If the entire request is multiple buffers, then WriteFirstChunk(buffer) is called followed by 0 or more calls to WriteChunk(buffer) followed by a call to WriteLastChunk(buffer). WriteLastChunk may be called with the last buffer of output or with the empty string as its argument if no more output is required."}),"\n",(0,r.jsx)(t.p,{children:"The TranslateTable property may be set to force automatic translation of the chunks as they are written."}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"translatetable",children:"TranslateTable"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property TranslateTable As %String [ InitialExpression = "RAW" ];\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Translate table to be used for outputting the buffer. See ",(0,r.jsx)(t.a,{href:"/csp/docbook/Doc.View.cls?FIND=LANDING+TRANSLATETABLES",children:"Translation Tables"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"sentchars",children:"SentChars"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property SentChars As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"Number of characters we send"}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"outputstream",children:"OutputStream"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method OutputStream()\n"})}),"\n",(0,r.jsx)(t.p,{children:"Abstract method to be overridden by subclass to do the chunked output using the utility functions defined by this abstract super class."}),"\n",(0,r.jsx)(t.h3,{id:"clear",children:"Clear"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Clear() As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Just return ok"}),"\n",(0,r.jsx)(t.h3,{id:"writesinglechunk",children:"WriteSingleChunk"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method WriteSingleChunk(buffer As %String)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Write the Content-Length HTTP header followed by the entity body as a single chunk. This is used to output the data as not chunked if its length can be determined."}),"\n",(0,r.jsx)(t.h3,{id:"writefirstchunk",children:"WriteFirstChunk"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method WriteFirstChunk(buffer As %String)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Write the Transfer-Encoding: chunked header followed by the first chunk,"}),"\n",(0,r.jsx)(t.h3,{id:"writechunk",children:"WriteChunk"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method WriteChunk(buffer As %String)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Write a chunk."}),"\n",(0,r.jsx)(t.h3,{id:"writelastchunk",children:"WriteLastChunk"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method WriteLastChunk(buffer As %String)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Write the last chunk followed by a zero length chunk to mark the end."}),"\n",(0,r.jsx)(t.h3,{id:"getchunklength",children:"GetChunkLength"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetChunkLength(buffer As %String) As %Integer [ Internal, Private ]\n"})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(96540);const s={},i=r.createContext(s);function l(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);