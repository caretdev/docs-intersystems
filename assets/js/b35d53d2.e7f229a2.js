"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[27647],{90226:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>a,default:()=>o,frontMatter:()=>i,toc:()=>l});var r=s(74848),t=s(28453);const i={pagination_prev:null,pagination_next:null},a="%CSP.WebSocket",l=[{value:"Parameters",id:"parameters",level:2},{value:"UseSession",id:"usesession",level:3},{value:"NOCHARSETCONVERT",id:"nocharsetconvert",level:3},{value:"Properties",id:"properties",level:2},{value:"SharedConnection",id:"sharedconnection",level:3},{value:"NoDataFraming",id:"nodataframing",level:3},{value:"BinaryData",id:"binarydata",level:3},{value:"WebSocketID",id:"websocketid",level:3},{value:"SessionId",id:"sessionid",level:3},{value:"SessionEndOnClose",id:"sessionendonclose",level:3},{value:"GWClientAddress",id:"gwclientaddress",level:3},{value:"AtEnd",id:"atend",level:3},{value:"BytesAvailable",id:"bytesavailable",level:3},{value:"DataFrameType",id:"dataframetype",level:3},{value:"WSDataFraming",id:"wsdataframing",level:3},{value:"WSClassProtocolVersion",id:"wsclassprotocolversion",level:3},{value:"WSInitStatus",id:"wsinitstatus",level:3},{value:"Methods",id:"methods",level:2},{value:"OnPreServer",id:"onpreserver",level:3},{value:"OnPostServer",id:"onpostserver",level:3},{value:"Server",id:"server",level:3},{value:"OnClientMessage",id:"onclientmessage",level:3},{value:"Initialize",id:"initialize",level:3},{value:"InitializeServer",id:"initializeserver",level:3},{value:"SaveServer",id:"saveserver",level:3},{value:"DeleteServer",id:"deleteserver",level:3},{value:"OpenServer",id:"openserver",level:3},{value:"EndServer",id:"endserver",level:3},{value:"Read",id:"read",level:3},{value:"ReadAsync",id:"readasync",level:3},{value:"Write",id:"write",level:3},{value:"Page",id:"page",level:3},{value:"SendAsyncMessage",id:"sendasyncmessage",level:3},{value:"SendNullResponse",id:"sendnullresponse",level:3},{value:"Error",id:"error",level:3},{value:"Login",id:"login",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"cspwebsocket",children:"%CSP.WebSocket"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Class %CSP.WebSocket Extends (%RegisteredObject, %CSP.Page) [ ServerOnly = 1 ]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The %CSP.WebSocket object serves as an event handler for communication between client and server using the WebSocket protocol (",(0,r.jsx)(n.strong,{children:"RFC 6455"}),"). All WebSocket servers derive from %CSP.WebSocket."]}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"usesession",children:"UseSession"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter UseSession = 1;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nocharsetconvert",children:"NOCHARSETCONVERT"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter NOCHARSETCONVERT = 1;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"sharedconnection",children:"SharedConnection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property SharedConnection As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"This property determines whether the communication between the client and WebSocket server should be over a dedicated Gateway conection or over a pool of shared connections. It may be set to one of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SharedConnection=0"})," - The WebSocket server communicates with the client via a dedicated Gateway connection. In this mode of operation the hosting connection is effectively 'private' to the application session."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SharedConnection=1"})," - The WebSocket server communicates asynchronously with the client via a fixed number of shared Gateway connections."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nodataframing",children:"NoDataFraming"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property NoDataFraming As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"This property determines whether formal data framing should occur between the Web Gateway and InterSystems IRIS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NoDataFraming=0"})," - Use the READ and WRITE methods in this class to manage I/O with the WebSocket."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NoDataFraming=1"})," - Use the basic ObjectScript READ and WRITE commands to manage I/O with the WebSocket (",(0,r.jsx)(n.strong,{children:"SharedConnection"})," cannot be set with this mode)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"binarydata",children:"BinaryData"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property BinaryData As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"This property determines whether the data streams transmitted between the client and server should be treated as binary. The default setting is to treat the incoming and outgoing data as UTF-8 encoded text."}),"\n",(0,r.jsx)(n.p,{children:"This property may be set to one of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"BinaryData=0"})," - UTF-8 encoded text."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"BinaryData=1"})," - Binary Data."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"websocketid",children:"WebSocketID"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property WebSocketID As %String;\n"})}),"\n",(0,r.jsx)(n.p,{children:"The unique identity of this WebSocket."}),"\n",(0,r.jsx)(n.h3,{id:"sessionid",children:"SessionId"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property SessionId As %String;\n"})}),"\n",(0,r.jsx)(n.p,{children:"The CSP Session ID from which this WebSocket was created."}),"\n",(0,r.jsx)(n.h3,{id:"sessionendonclose",children:"SessionEndOnClose"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property SessionEndOnClose As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"This property determines whether WebSocket closure forces the associated CSP session to end. Must be set in either Server() or OnPostServer(). For WebSockets operating asynchronously, only takes effect if EndServer() is called in Server()."}),"\n",(0,r.jsx)(n.p,{children:"This property may be set to one of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SessionEndOnClose=0"})," - Do not force the CSP session to end when the web socket closes. (For synchronous web sockets, the CSP session may still end depending on its EndSession property.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SessionEndOnClose=1"})," - Ensure that the CSP session ends when the web socket closes."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gwclientaddress",children:"GWClientAddress"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property GWClientAddress As %String;\n"})}),"\n",(0,r.jsx)(n.p,{children:"The address through which a WebSocket operating asynchronously (SharedConnection=1) can communicate with the hosting CSP Gateway."}),"\n",(0,r.jsx)(n.h3,{id:"atend",children:"AtEnd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property AtEnd As %Boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The AtEnd property is set to true (1) when, during a read, the WebSocket server has reached the end of the current data frame."}),"\n",(0,r.jsx)(n.h3,{id:"bytesavailable",children:"BytesAvailable"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property BytesAvailable As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The amount of client data waiting to be read."}),"\n",(0,r.jsx)(n.h3,{id:"dataframetype",children:"DataFrameType"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property DataFrameType As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The type of the Data Frame waiting to be read."}),"\n",(0,r.jsx)(n.h3,{id:"wsdataframing",children:"WSDataFraming"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property WSDataFraming As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The flag indicating that WebSocket data framing should be used for write operations."}),"\n",(0,r.jsx)(n.h3,{id:"wsclassprotocolversion",children:"WSClassProtocolVersion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property WSClassProtocolVersion As %Integer [ InitialExpression = 2, Private ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The version of the transmission protocol between the CSP Gateway and this class."}),"\n",(0,r.jsx)(n.h3,{id:"wsinitstatus",children:"WSInitStatus"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property WSInitStatus As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(n.p,{children:"The internal initialization status for the WebSocket."}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"onpreserver",children:"OnPreServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method OnPreServer() As %Status\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Event handler for the ",(0,r.jsx)(n.strong,{children:"PreServer"})," event: this is invoked before starting the WebSockets Server. Changes to the SharedConnection flag must be made here."]}),"\n",(0,r.jsx)(n.h3,{id:"onpostserver",children:"OnPostServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method OnPostServer() As %Status\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Event handler for the ",(0,r.jsx)(n.strong,{children:"PostServer"})," event: this is invoked after closing the WebSockets Server."]}),"\n",(0,r.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method Server() As %Status\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The WebSocket Server. Use the Read and Write methods to receive data from, and send data to, the client. Call the EndServer method to gracefully terminate the WebSocket Server. A WebSocket operating asynchronously (SharedConnection=1) can exit this method (using ",(0,r.jsx)(n.strong,{children:"Quit) and subsequently open the WebSocket using the OpenServer method."})]}),"\n",(0,r.jsx)(n.h3,{id:"onclientmessage",children:"OnClientMessage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:'Method OnClientMessage(data As %String = "", close As %Integer) As %Status\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Event handler for the ",(0,r.jsx)(n.strong,{children:"ClientMessage"})," event: this method is only relevant to WebSockets operating in Asynchronous mode. In other words WebSockets for which the SharedConnection flag is set. If OnClientMessage successfully processes the client message it must return with 1."]}),"\n",(0,r.jsx)(n.h3,{id:"initialize",children:"Initialize"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:'Method Initialize(WebSocketID As %String = "", GWClientAddress As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(n.p,{children:"Internal method to initialize the WebSocket Class."}),"\n",(0,r.jsx)(n.h3,{id:"initializeserver",children:"InitializeServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method InitializeServer() As %Status\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal method to initialize the WebSocket Server."}),"\n",(0,r.jsx)(n.h3,{id:"saveserver",children:"SaveServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method SaveServer() As %Status [ Final, Private ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal method to save the WebSocket Server."}),"\n",(0,r.jsx)(n.h3,{id:"deleteserver",children:"DeleteServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method DeleteServer() As %Status [ Final, Private ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal method to delete the WebSocket Server."}),"\n",(0,r.jsx)(n.h3,{id:"openserver",children:"OpenServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:'Method OpenServer(WebSocketID As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(n.p,{children:"Method to open an existing WebSocket Server. Only a WebSocket operating asynchronously (SharedConnection=1) can be accessed using this method."}),"\n",(0,r.jsx)(n.h3,{id:"endserver",children:"EndServer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method EndServer() As %Status\n"})}),"\n",(0,r.jsx)(n.p,{children:"Gracefully terminate the WebSocket Server."}),"\n",(0,r.jsx)(n.h3,{id:"read",children:"Read"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method Read(ByRef len As %Integer = 32656, ByRef sc As %Status, timeout As %Integer = 86400) As %String\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reads up to len characters from the client. If the call is successful the status (sc) will be returned as $$$OK, otherwise an error code of $$$CSPWebSocketTimeout indicates a timeout and $$$CSPWebSocketClosed indicates that the client has terminated the WebSocket."}),"\n",(0,r.jsx)(n.h3,{id:"readasync",children:"ReadAsync"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method ReadAsync(ByRef len As %Integer = 32656, ByRef sc As %Status, timeout As %Integer = 86400) As %String [ Private ]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"write",children:"Write"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method Write(data As %String) As %Status\n"})}),"\n",(0,r.jsx)(n.p,{children:"Write to the client."}),"\n",(0,r.jsx)(n.h3,{id:"page",children:"Page"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Page(skipheader As %Boolean = 1) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal handling of page processing"}),"\n",(0,r.jsx)(n.h3,{id:"sendasyncmessage",children:"SendAsyncMessage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod SendAsyncMessage(websocketid As %String, gwclientaddress As %String) As %Status [ Final ]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sendnullresponse",children:"SendNullResponse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod SendNullResponse() [ Internal ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Send the basic web socket response to the gateway"}),"\n",(0,r.jsx)(n.h3,{id:"error",children:"Error"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Error(skipheader As %Boolean = 1) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal handling of error"}),"\n",(0,r.jsx)(n.h3,{id:"login",children:"Login"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Login(skipheader As %Boolean = 1) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Internal handling of login"})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(96540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);