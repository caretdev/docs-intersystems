"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[83177],{31499:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,toc:()=>l});var t=n(74848),a=n(28453);const r={pagination_prev:null,pagination_next:null},i="%iKnow.Domain",l=[{value:"Properties",id:"properties",level:2},{value:"Id",id:"id",level:3},{value:"Name",id:"name",level:3},{value:"Version",id:"version",level:3},{value:"BuildFlags",id:"buildflags",level:3},{value:"DefinitionClass",id:"definitionclass",level:3},{value:"Methods",id:"methods",level:2},{value:"GetOrCreateId",id:"getorcreateid",level:3},{value:"Create",id:"create",level:3},{value:"Open",id:"open",level:3},{value:"OpenId",id:"openid",level:3},{value:"Exists",id:"exists",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"%OnBeforeSave",id:"onbeforesave",level:3},{value:"%OnAfterSave",id:"onaftersave",level:3},{value:"DropData",id:"dropdata",level:3},{value:"Delete",id:"delete",level:3},{value:"DeleteId",id:"deleteid",level:3},{value:"%OnDelete",id:"ondelete",level:3},{value:"GetSystemParameter",id:"getsystemparameter",level:3},{value:"UnsetSystemParameter",id:"unsetsystemparameter",level:3},{value:"SetSystemParameter",id:"setsystemparameter",level:3},{value:"CheckParameterValue",id:"checkparametervalue",level:3},{value:"SetParameter",id:"setparameter",level:3},{value:"UnsetParameter",id:"unsetparameter",level:3},{value:"GetParameter",id:"getparameter",level:3},{value:"GetAllDomainsExecute",id:"getalldomainsexecute",level:3},{value:"GetAllDomainsClose",id:"getalldomainsclose",level:3},{value:"GetAllDomainsFetch",id:"getalldomainsfetch",level:3},{value:"RegisterImportedDomain",id:"registerimporteddomain",level:3},{value:"IsEmpty",id:"isempty",level:3},{value:"Rename",id:"rename",level:3},{value:"GetParameters",id:"getparameters",level:3},{value:"GetCurrentSystemVersion",id:"getcurrentsystemversion",level:3},{value:"GetIKnowGlobals",id:"getiknowglobals",level:3},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchSetProperty",id:"dispatchsetproperty",level:3},{value:"%ConstructClone",id:"constructclone",level:3},{value:"%DeleteExtent",id:"deleteextent",level:3},{value:"%KillExtentData",id:"killextentdata",level:3},{value:"AssignId",id:"assignid",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"iknowdomain",children:"%iKnow.Domain"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %iKnow.Domain Extends %Persistent [ Deprecated, Final, StorageStrategy = iKnowStorage, System = 4 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The InterSystems IRIS NLP iKnow technology is now deprecated. Please see the ",(0,t.jsx)(s.a,{href:"https://docs.intersystems.com/irislatest/csp/docbook/DocBook.UI.Page.cls?KEY=GIKNOW",children:"product documentation"})," for more detail."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"For details on using this class"}),", see ",(0,t.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25iKnow.Domain",children:"NLP Domains"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"This class represents a domain registered in this namespace."}),"\n",(0,t.jsx)(s.p,{children:"When creating a domain, you should pass a value for Name to its %New method."}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"id",children:"Id"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Id As %Integer [ ReadOnly ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"The automatically generated ID for this domain, which is unique across namespaces"}),"\n",(0,t.jsx)(s.h3,{id:"name",children:"Name"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Name As %String [ ReadOnly ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"The name of this domain, which should be unique within the namespace (case-insensitive)"}),"\n",(0,t.jsx)(s.h3,{id:"version",children:"Version"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Version As %String [ InitialExpression = {$$$IKCURRENTVERSION}, ReadOnly ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Stores the iKnow data structure version number for this domain."}),"\n",(0,t.jsx)(s.h3,{id:"buildflags",children:"BuildFlags"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property BuildFlags As %String [ Internal, ReadOnly ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Describes which data structures are built and maintained when adding data to the domain. This propery is for internal use only."}),"\n",(0,t.jsx)(s.h3,{id:"definitionclass",children:"DefinitionClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefinitionClass As %String [ Calculated, ReadOnly, SqlComputeCode = { set {*} = ##class(%iKnow.Domain).%OpenId({Id}).GetParameter($$$IKPDEFINITIONCLASS)}, SqlComputed ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"The name of the Domain Definition class managing this domain, if any. See also %iKnow.DomainDefinition."}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"getorcreateid",children:"GetOrCreateId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetOrCreateId(name As %String, sortField As %Integer = {$$$SORTBYFREQUENCY}, Output sc As %Status = {$$$OK}) As %Integer [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Shorthand method to get the domain ID for a specific domain name, creating it if it does not yet exist in this namespace."}),"\n",(0,t.jsx)(s.p,{children:"Deprecated: use regular %New and %Save methods instead."}),"\n",(0,t.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Create(name As %String, sortField As %Integer = -1, Output sc As %Status = {$$$OK}, buildFlags As %String = "") As %iKnow.Domain [ Deprecated ]\n'})}),"\n",(0,t.jsx)(s.p,{children:'Creates a domain with the specified domain name in the given namespace. If no value is supplied for sortField, it will assume the system-wide defaults. buildFlags is either of "ALL" or "MINIMAL". An empty value will assume the system default.'}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use %New instead (supplying only the name parameter)"]}),"\n",(0,t.jsx)(s.h3,{id:"open",children:"Open"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Open(name As %String, Output sc As %Status = {$$$OK}) As %iKnow.Domain [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Opens a domain object with the specified name"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use NameIndexOpen instead"]}),"\n",(0,t.jsx)(s.h3,{id:"openid",children:"OpenId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OpenId(id As %Integer, Output sc As %Status = {$$$OK}) As %iKnow.Domain [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Opens a domain object with the specified ID"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use %OpenId instead"]}),"\n",(0,t.jsx)(s.h3,{id:"exists",children:"Exists"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Exists(name As %String) As %Boolean [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Checks whether a domain with the given name already exists within the namespace"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use NameIndexExists instead"]}),"\n",(0,t.jsx)(s.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %OnNew(pName As %String, pBuildFlags As %String = "") As %Status [ Private, ServerOnly = 1 ]\n'})}),"\n",(0,t.jsx)(s.p,{children:'Instantiates a new Domain object iwth the given domain name. pBuildFlags is either of "ALL" or "MINIMAL". An emtpy value will result in the system default being used.'}),"\n",(0,t.jsx)(s.h3,{id:"onbeforesave",children:"%OnBeforeSave"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnBeforeSave(insert As %Boolean) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onaftersave",children:"%OnAfterSave"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterSave(insert As %Boolean) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"dropdata",children:"DropData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method DropData(dropMetadataDefinitions As %Boolean = 0, dropDictionaries As %Boolean = 0, dropTempGlobals As %Boolean = 1, dropSkipLists As %Boolean = 1, dropMetricDefinitions As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method will drop all sources and subsequent indexes from this domain."}),"\n",(0,t.jsx)(s.p,{children:"Note that it is recommended to call this method separately, before dropping the domain through %Delete or %DeleteId."}),"\n",(0,t.jsx)(s.h3,{id:"delete",children:"Delete"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Delete(domainName As %String) As %Status [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Utility method to delete a domain from the system, including its data, settings and system global entries."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use %DeleteId instead (accepts domain ID)"]}),"\n",(0,t.jsx)(s.h3,{id:"deleteid",children:"DeleteId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DeleteId(domainId As %Integer) As %Status [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Utility method to delete a domain from the system, including its data, settings and system global entries."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": use %DeleteId instead"]}),"\n",(0,t.jsx)(s.h3,{id:"ondelete",children:"%OnDelete"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnDelete(oid As %ObjectIdentity) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getsystemparameter",children:"GetSystemParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetSystemParameter(paramName As %String) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the current namespace-wide value for a domain parameter if there is one registered. See GetParameter for more details on how to fetch the current APPLICABLE parameter for a domain, as this method does not take any domain-specific settings or hardcoded defaults into account."}),"\n",(0,t.jsx)(s.h3,{id:"unsetsystemparameter",children:"UnsetSystemParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UnsetSystemParameter(paramName As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Removes a namespace-level default parameter value for the given parameter name."}),"\n",(0,t.jsx)(s.h3,{id:"setsystemparameter",children:"SetSystemParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetSystemParameter(paramName As %String, paramValue As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Registers a domain parameter at the namespace level, for all domains in the current namespace. If there is already a value registered, call UnsetSystemParameter first to explicitly clear the current value."}),"\n",(0,t.jsx)(s.h3,{id:"checkparametervalue",children:"CheckParameterValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CheckParameterValue(paramName As %String, paramValue As %String, domain As %iKnow.Domain = "") As %Status [ Internal, Private ]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"setparameter",children:"SetParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetParameter(paramName As %String, paramValue As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Sets a domain-specific parameter, overriding the system default"}),"\n",(0,t.jsx)(s.h3,{id:"unsetparameter",children:"UnsetParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method UnsetParameter(paramName As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Unsets a domain-specific parameter, so it will use the system default again"}),"\n",(0,t.jsx)(s.h3,{id:"getparameter",children:"GetParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method GetParameter(paramName As %String, Output definedAt As %String = "DOMAIN") As %String\n'})}),"\n",(0,t.jsx)(s.p,{children:'Returns the value used for parameter paramName for this domain. This can be a domain-specific override (definedAt = "DOMAIN"), a namespace-wide default (definedAt = "NAMESPACE") or the hardcoded default (definedat = "DEFAULT")'}),"\n",(0,t.jsx)(s.h3,{id:"getalldomainsexecute",children:"GetAllDomainsExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAllDomainsExecute(ByRef qHandle As %Binary, pCurrentNamespaceOnly As %Boolean = 0, pIncludeRemote As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Utility query to retrieve a list of all registered Domains"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": Please use normal SQL queries to approach this class."]}),"\n",(0,t.jsx)(s.h3,{id:"getalldomainsclose",children:"GetAllDomainsClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAllDomainsClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = GetAllDomainsExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getalldomainsfetch",children:"GetAllDomainsFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetAllDomainsFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = GetAllDomainsExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"registerimporteddomain",children:"RegisterImportedDomain"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RegisterImportedDomain(domainId As %Integer) As %Status [ Deprecated ]\n"})}),"\n",(0,t.jsx)(s.p,{children:'This method has been deprecated. There is no need for "registering" or otherwise marking domains that have been imported from globals or data files.'}),"\n",(0,t.jsx)(s.h3,{id:"isempty",children:"IsEmpty"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method IsEmpty() As %Boolean\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns whether or not a domain is empty. If there are any entities or remnants of (virtual) sources, this method will return false."}),"\n",(0,t.jsx)(s.h3,{id:"rename",children:"Rename"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Rename(pFrom As %String, pTo As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method renames an existing domain named pFrom to pTo, if there isn't already a domain with that name in this namespace. The domain ID does not change."}),"\n",(0,t.jsx)(s.h3,{id:"getparameters",children:"GetParameters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetParameters(Output pParams) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns an array pParams containing all the domain parameters registered for this instance in the form: pParams(",(0,t.jsx)(s.em,{children:"paramName"}),") = ",(0,t.jsx)(s.em,{children:"paramValue"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"NOTE: this might include parameters that cannot be modified by end users, but will not include values defined at the namespace level."}),"\n",(0,t.jsx)(s.h3,{id:"getcurrentsystemversion",children:"GetCurrentSystemVersion"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCurrentSystemVersion() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the current version of this InterSystems IRIS instance, which is the version of any newly created domain in this instance. Domains already created in this instance before it was last upgraded or which were imported from other instances through other means, may have earlier versions. To check the version of a particular domain, use the Version property of a %iKnow.Domain instance."}),"\n",(0,t.jsx)(s.h3,{id:"getiknowglobals",children:"GetIKnowGlobals"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetIKnowGlobals(Output list) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method to retrieve all raw ^IRIS.IK* global names to avoid having to list them dynamically. This excludes the global names that include domain/temp IDs and process IDs managed entirely within the domain build process and tracked through ^IRIS.IKS.Globals / ^IRIS.IKT.Globals"}),"\n",(0,t.jsx)(s.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(Property As %String) [ ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Is used to get the value of an unknown property, redirecting to the domain parameter."}),"\n",(0,t.jsx)(s.h3,{id:"dispatchsetproperty",children:"%DispatchSetProperty"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DispatchSetProperty(Property As %String, Val) [ ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"is used to set the value of an unknown property, redirecting to the domain parameter."}),"\n",(0,t.jsx)(s.h3,{id:"constructclone",children:"%ConstructClone"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ConstructClone(deep As %Boolean = 0, ByRef cloned As %String, location As %String) As %RegisteredObject [ ServerOnly = 0 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"deleteextent",children:"%DeleteExtent"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteExtent(concurrency As %Integer = -1, ByRef deletecount, ByRef instancecount, pInitializeExtent As %Integer = 1) As %Status [ ServerOnly = 0 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"killextentdata",children:"%KillExtentData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %KillExtentData(killstreams As %Boolean = 0) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"assignid",children:"AssignId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method AssignId(pDomainId As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method assigns pDomainId as this domain's desired Id property, if no value has been set so far. If the value is already taken when calling this method, an error will be returned. If the value has already been taken by the time this domain object is saved, the next available ID value will be assigned."})]})}function c(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>l});var t=n(96540);const a={},r=t.createContext(a);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);