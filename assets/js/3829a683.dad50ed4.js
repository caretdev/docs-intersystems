"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[21767],{51748:(e,s,a)=>{a.r(s),a.d(s,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,toc:()=>l});var n=a(74848),t=a(28453);const i={pagination_prev:null,pagination_next:null},r="%XML.Namespaces",l=[{value:"Properties",id:"properties",level:2},{value:"DefaultNamespace",id:"defaultnamespace",level:3},{value:"ElementQualified",id:"elementqualified",level:3},{value:"AttributeQualified",id:"attributequalified",level:3},{value:"SuppressXmlns",id:"suppressxmlns",level:3},{value:"SuppressAutoPrefix",id:"suppressautoprefix",level:3},{value:"DefaultXmlns",id:"defaultxmlns",level:3},{value:"OutputTypeAttribute",id:"outputtypeattribute",level:3},{value:"CurrentNamespace",id:"currentnamespace",level:3},{value:"depth",id:"depth",level:3},{value:"stack",id:"stack",level:3},{value:"maxPrefix",id:"maxprefix",level:3},{value:"namespaces",id:"namespaces",level:3},{value:"prefixes",id:"prefixes",level:3},{value:"locations",id:"locations",level:3},{value:"addedNamespaces",id:"addednamespaces",level:3},{value:"removeNamespaces",id:"removenamespaces",level:3},{value:"DefaultDefined",id:"defaultdefined",level:3},{value:"SaveDefaultDefined",id:"savedefaultdefined",level:3},{value:"CurrentElementQualified",id:"currentelementqualified",level:3},{value:"Stable",id:"stable",level:3},{value:"DefaultPrefix",id:"defaultprefix",level:3},{value:"Methods",id:"methods",level:2},{value:"OutputTypeAttributeSet",id:"outputtypeattributeset",level:3},{value:"RestoreOutputTypeAttribute",id:"restoreoutputtypeattribute",level:3},{value:"PushNode",id:"pushnode",level:3},{value:"SetDefaultDefined",id:"setdefaultdefined",level:3},{value:"PopDefaultDefined",id:"popdefaultdefined",level:3},{value:"SetCurrentElementQualified",id:"setcurrentelementqualified",level:3},{value:"SetSuppressXmlns",id:"setsuppressxmlns",level:3},{value:"SetStable",id:"setstable",level:3},{value:"PushNodeForExport",id:"pushnodeforexport",level:3},{value:"PopNode",id:"popnode",level:3},{value:"PopNamespaces",id:"popnamespaces",level:3},{value:"GetXMLPrefixes",id:"getxmlprefixes",level:3},{value:"AddNamespace",id:"addnamespace",level:3},{value:"GetNamespacePrefix",id:"getnamespaceprefix",level:3},{value:"DefineAllNamespacePrefixes",id:"defineallnamespaceprefixes",level:3},{value:"DefineNamespacePrefix",id:"definenamespaceprefix",level:3},{value:"RemoveNamespacePrefix",id:"removenamespaceprefix",level:3},{value:"AddInstanceNamespace",id:"addinstancenamespace",level:3},{value:"AddSchemaNamespace",id:"addschemanamespace",level:3},{value:"AddSOAPNamespace",id:"addsoapnamespace",level:3},{value:"AddSOAP12Namespace",id:"addsoap12namespace",level:3},{value:"GetNewPrefix",id:"getnewprefix",level:3},{value:"GetPrefix",id:"getprefix",level:3},{value:"GetNextDefinedNamespace",id:"getnextdefinednamespace",level:3},{value:"GetNamespace",id:"getnamespace",level:3},{value:"Copy",id:"copy",level:3},{value:"Reset",id:"reset",level:3},{value:"GetNextNamespace",id:"getnextnamespace",level:3},{value:"GetNextClass",id:"getnextclass",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"xmlnamespaces",children:"%XML.Namespaces"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %XML.Namespaces Extends %RegisteredObject [ System = 3 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"%XML.Namespace manages the XML namespaces for an XML document."}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"defaultnamespace",children:"DefaultNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultNamespace As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:'The default namespace to use when no namespace is specified for the current namespace. The namespace "" is treated as equivalent to an XML document with no namespace.'}),"\n",(0,n.jsx)(s.h3,{id:"elementqualified",children:"ElementQualified"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ElementQualified As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:'If true, the XML document is the the form specified by elementFormDefault="qualified". This is the default value to use if elementQualfied not specified in PushNodeForExport.'}),"\n",(0,n.jsx)(s.h3,{id:"attributequalified",children:"AttributeQualified"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AttributeQualified As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:'If true, the XML document is the the form specified by attributeFormDefault="qualified".'}),"\n",(0,n.jsx)(s.h3,{id:"suppressxmlns",children:"SuppressXmlns"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SuppressXmlns As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"SuppressXmlns allows optionally suppression of the use of xmlns= to set default XML namespace when ElementQualified is false. If SuppressXmlns is true then a prefix is used for each tag rather than default namespace with xmlns=."}),"\n",(0,n.jsx)(s.h3,{id:"suppressautoprefix",children:"SuppressAutoPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SuppressAutoPrefix As %Boolean [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"SuppressAutoPrefix allows optionally suppression of the prefix that is created for the default XML namespace even if it is not needed for the current element."}),"\n",(0,n.jsx)(s.h3,{id:"defaultxmlns",children:"DefaultXmlns"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultXmlns As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"DefaultXmlns allows optional specification of the XML namespace to use as the default XML namespace when SuppressXmlns is false."}),"\n",(0,n.jsx)(s.h3,{id:"outputtypeattribute",children:"OutputTypeAttribute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OutputTypeAttribute As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"OutputTypeAttribute allows the user to force the inclusion of the xsi:type attribute for each element of object output."}),"\n",(0,n.jsx)(s.h3,{id:"currentnamespace",children:"CurrentNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CurrentNamespace As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The namespace for the current node."}),"\n",(0,n.jsx)(s.h3,{id:"depth",children:"depth"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property depth As %Integer [ InitialExpression = 0, Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The depth of the current namespace list. The depth property represents the number of times this identical namespace list has been pushed for a child node. This use of depth is an optimization to prevent the use of an instance of %XML.Namespaces for each level of child node."}),"\n",(0,n.jsx)(s.h3,{id:"stack",children:"stack"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property stack As %XML.Namespaces [ Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The stack property points to the next %XML.Namespaces instance on the linked list that defines the stack of nodes."}),"\n",(0,n.jsx)(s.h3,{id:"maxprefix",children:"maxPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property maxPrefix As %Integer [ InitialExpression = 0, Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:'The maxPrefix property is the number for the next last prefix of the form "s"_..maxPrefix that was created.'}),"\n",(0,n.jsx)(s.h3,{id:"namespaces",children:"namespaces"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property namespaces As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The namespaces that have already been defined. For each namespace, namespaces(prefix)=namespace."}),"\n",(0,n.jsx)(s.h3,{id:"prefixes",children:"prefixes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property prefixes As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The prefixes associated with namespaces that have already been defined. Each entry in prefixes has a corresponding entry in namespaces. For each namespace, prefixes(namespace)=prefix."}),"\n",(0,n.jsx)(s.h3,{id:"locations",children:"locations"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property locations As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:'The schemaLocation associated with namespaces that have already been defined. Each entry in locations has a corresponding entry in namespaces. For each namespace, locations(namespace)=schemaLocation. If locations(namespace) node exists, then no schemaLocation attribute is to be output. If locations(namespace)="", then the schemaLocation attribute has already been output.'}),"\n",(0,n.jsx)(s.h3,{id:"addednamespaces",children:"addedNamespaces"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property addedNamespaces As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The namespaces that will be defined for child nodes. These namespaces do not yet have there prefix defined even though the prefix may be specified as a hint. For each added namespace and prefix, addedNamespaces(namespace,prefix)=schemaLocation."}),"\n",(0,n.jsx)(s.h3,{id:"removenamespaces",children:"removeNamespaces"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property removeNamespaces As %String [ Internal, MultiDimensional, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"These namespaces where added temporarily"}),"\n",(0,n.jsx)(s.h3,{id:"defaultdefined",children:"DefaultDefined"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultDefined As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:'The default namespace that the XML document has defined or "" if none.'}),"\n",(0,n.jsx)(s.h3,{id:"savedefaultdefined",children:"SaveDefaultDefined"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SaveDefaultDefined As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:'Save default namespace when making temporary change before calling XMLExportInternal in order to support form="unqualified"'}),"\n",(0,n.jsx)(s.h3,{id:"currentelementqualified",children:"CurrentElementQualified"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CurrentElementQualified As %Boolean [ Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The current value of ElementQualified."}),"\n",(0,n.jsx)(s.h3,{id:"stable",children:"Stable"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Stable As %Boolean [ Internal ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Stable is true, if the same prefixes may be used if the current namespace does not change"}),"\n",(0,n.jsx)(s.h3,{id:"defaultprefix",children:"DefaultPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultPrefix As %String [ MultiDimensional ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"DefaultPrefix(namespace)=prefix is an array of default prefixes to be used for adding namespaces when no prefix is defined."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"outputtypeattributeset",children:"OutputTypeAttributeSet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method OutputTypeAttributeSet(value As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"restoreoutputtypeattribute",children:"RestoreOutputTypeAttribute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method RestoreOutputTypeAttribute(value As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Restore the value of OutputTypeAttribute without adding the schema namespaces again."}),"\n",(0,n.jsx)(s.h3,{id:"pushnode",children:"PushNode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method PushNode(namespace As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Push a new current namespace onto the stack of active namespaces."}),"\n",(0,n.jsx)(s.p,{children:'namespace is the XML namespace for the elements of the node that is being created. This method does not actually create the node. It just does the required namespace handling. If this namespace has not yet been added, it will also be added with a default prefix. The default namespace will be the namespace for the node if "" is specified.'}),"\n",(0,n.jsx)(s.h3,{id:"setdefaultdefined",children:"SetDefaultDefined"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetDefaultDefined(defaultdefined As %String) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set new value of DefaultDefined property. If the value of DefaultDefined changes, then make sure that this node is at depth=1."}),"\n",(0,n.jsx)(s.h3,{id:"popdefaultdefined",children:"PopDefaultDefined"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method PopDefaultDefined() [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Pop previous value of DefaultDefined property."}),"\n",(0,n.jsx)(s.h3,{id:"setcurrentelementqualified",children:"SetCurrentElementQualified"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetCurrentElementQualified(elementQualified As %Boolean) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set new value of CurrentElementQualified property. If the value of CurrentElementQualified changes, then make sure that this node is at depth=1."}),"\n",(0,n.jsx)(s.h3,{id:"setsuppressxmlns",children:"SetSuppressXmlns"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetSuppressXmlns(suppressxmlns As %Boolean) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set new value of SuppressXmlns property. If the value of SuppressXmlns changes, then make sure that this node is at depth=1."}),"\n",(0,n.jsx)(s.h3,{id:"setstable",children:"SetStable"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetStable(stable As %Boolean) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set new value of Stable property. If the value of Stable changes, then make sure that this node is at depth=1."}),"\n",(0,n.jsx)(s.h3,{id:"pushnodeforexport",children:"PushNodeForExport"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method PushNodeForExport(namespace As %String = "", local As %Boolean, defaultPrefixRequired As %Boolean, elementQualified As %Boolean, attributeQualified As %Boolean, Output topPrefix As %String, Output topAttrs As %String, Output typesPrefix As %String, Output attrsPrefix As %String, Output usePrefix As %Boolean, forceStable As %Boolean) As %Status [ Internal ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Push a new current namespace onto the stack of active namespaces and return information needed by XMLExport."}),"\n",(0,n.jsxs)(s.p,{children:["This method is for internal use only. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this method.",(0,n.jsx)(s.br,{}),'\nnamespace is the XML namespace for the elements of the node that is being created. This mehod does not actually create the node. It just does the required namespace hadnling. If this namespace has not yet been added, it will also be added with a default prefix. The default namespace will be the namespace for the node if "" is specified.',(0,n.jsx)(s.br,{}),"\nlocal specifies if the element is treated as a local element. A global element is specified by a false value of local which can be either 0 to represent a global element in the namespace specified by the namespace argument or a string which is the namespace to which the global element belongs. The default for local is 0.",(0,n.jsx)(s.br,{}),"\ndefaultPrefixRequired specifies if the prefix for the default namespace must be defined. elementQualified specifies override for ElementQualified property.",(0,n.jsx)(s.br,{}),"\nThe following are returned for use the XMLExport based on the new current namespace:",(0,n.jsx)(s.br,{}),'\ntopPrefix is the prefix (or "") to be used for the next top containing tag.',(0,n.jsx)(s.br,{}),"\ntopAttrs is any xmlns attributes needed to define topPrefix.",(0,n.jsx)(s.br,{}),"\ntypesPrefix is the prefix to be used for type references in the object being exported.",(0,n.jsx)(s.br,{}),'\nattrsPrefix is the prefix (or "") to be used for any attributes of this object.',(0,n.jsx)(s.br,{}),"\nsoapPrefix is prefix to be used for the SOAP encoding namespace.",(0,n.jsx)(s.br,{}),"\nschemaPrefix is prefix to be used for the XML schema namespace.",(0,n.jsx)(s.br,{}),"\nxsiPrefix is prefix to be used for the XML schema instance namespace.",(0,n.jsx)(s.br,{}),"\nxsiAttrs is any xmlns attributes needed to define the XML schema instance namespace."]}),"\n",(0,n.jsx)(s.h3,{id:"popnode",children:"PopNode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method PopNode()\n"})}),"\n",(0,n.jsx)(s.p,{children:"Pop the namespace information for the last node pushed."}),"\n",(0,n.jsx)(s.h3,{id:"popnamespaces",children:"PopNamespaces"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method PopNamespaces() [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Remove any prefix definitions that were introduced just for one class"}),"\n",(0,n.jsx)(s.h3,{id:"getxmlprefixes",children:"GetXMLPrefixes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetXMLPrefixes(Output soapPrefix As %String, Output schemaPrefix As %String, Output xsiPrefix As %String, Output xsiAttrs As %String) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get SOAP, Schema and Schema instance prefixes"}),"\n",(0,n.jsx)(s.h3,{id:"addnamespace",children:"AddNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method AddNamespace(namespace As %String, prefix As %String, schemaLocation As %String = "", allowMultiplePrefixes As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsx)(s.p,{children:"Add a namespace definition to the current level. PopNode will remove this definition. The next PushNode... will cause the attributes to be created for adding this namespace to the XML document."}),"\n",(0,n.jsx)(s.p,{children:"prefix is the optional preferred prefix for this namespace. If no prefix is specified, a unique prefix will be computed."}),"\n",(0,n.jsx)(s.p,{children:"A schemaLocation attribute value for the first definition of this namespace may also specified."}),"\n",(0,n.jsx)(s.p,{children:"If allowMultiplePrefixes is true then multiple prefixes may be defined for the same namespace. The default is false which will override the previously defined prefix for the same namespace."}),"\n",(0,n.jsx)(s.h3,{id:"getnamespaceprefix",children:"GetNamespacePrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetNamespacePrefix(namespace As %String, ByRef attrs) As %String\n"})}),"\n",(0,n.jsx)(s.h3,{id:"defineallnamespaceprefixes",children:"DefineAllNamespacePrefixes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method DefineAllNamespacePrefixes(prefixRequired As %Boolean = 1)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Make prefix definition for all newly added namespaces."}),"\n",(0,n.jsx)(s.h3,{id:"definenamespaceprefix",children:"DefineNamespacePrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method DefineNamespacePrefix(namespace As %String, prefixRequired As %Boolean = 1, prefix As %String)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Make prefix definition for a new namespace at the current level. Optionally force the prefix to be used by specifying 3rd argument."}),"\n",(0,n.jsx)(s.h3,{id:"removenamespaceprefix",children:"RemoveNamespacePrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method RemoveNamespacePrefix(namespace As %String) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Remove the prefix definition for an existing namespace at the current level."}),"\n",(0,n.jsx)(s.h3,{id:"addinstancenamespace",children:"AddInstanceNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method AddInstanceNamespace(prefix As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Add a the XML Schema instance namespace definition to the current level. PopNode will remove this definition. The next PushNode... will cause the attributes to be created for adding this namespace to the XML document.",(0,n.jsx)(s.br,{}),"\nprefix is the optional preferred prefix for this namespace. If no prefix is specified, a unique prefix will be computed."]}),"\n",(0,n.jsx)(s.h3,{id:"addschemanamespace",children:"AddSchemaNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method AddSchemaNamespace(prefix As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Add a the XML Schema namespace definition to the current level. PopNode will remove this definition. The next PushNode... will cause the attributes to be created for adding this namespace to the XML document.",(0,n.jsx)(s.br,{}),"\nprefix is the optional preferred prefix for this namespace. If no prefix is specified, a unique prefix will be computed."]}),"\n",(0,n.jsx)(s.h3,{id:"addsoapnamespace",children:"AddSOAPNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method AddSOAPNamespace(soapPrefix As %String, schemaPrefix As %String, xsiPrefix As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Add the SOAP 1.1 encoding namespace, the XML schema namespace and the XML Schema instance namespace definitions to the current level. PopNode will remove these definitions. The next PushNode... will cause the attributes to be created for adding these namespaces to the XML document.",(0,n.jsx)(s.br,{}),"\nsoapPrefix, schemaPrefixPrefix and xsiPrefix are the optional preferred prefix for these namespaces. If no prefix is specified, a unique prefix will be computed."]}),"\n",(0,n.jsx)(s.h3,{id:"addsoap12namespace",children:"AddSOAP12Namespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method AddSOAP12Namespace(soapPrefix As %String, schemaPrefix As %String, xsiPrefix As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Add the SOAP 1.2 encoding namespace, the XML schema namespace and the XML Schema instance namespace definitions to the current level. PopNode will remove these definitions. The next PushNode... will cause the attributes to be created for adding these namespaces to the XML document.",(0,n.jsx)(s.br,{}),"\nsoapPrefix, schemaPrefixPrefix and xsiPrefix are the optional preferred prefix for these namespaces. If no prefix is specified, a unique prefix will be computed."]}),"\n",(0,n.jsx)(s.h3,{id:"getnewprefix",children:"GetNewPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetNewPrefix(prefix As %String, bTemp As %Boolean = 0) As %String\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get a new unique prefix."}),"\n",(0,n.jsx)(s.h3,{id:"getprefix",children:"GetPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetPrefix(namespace As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'Get the prefix for the specified namespace at the current stack level. "" is returned if the namespace is not defined.'}),"\n",(0,n.jsx)(s.h3,{id:"getnextdefinednamespace",children:"GetNextDefinedNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetNextDefinedNamespace(namespace As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get the next namespace"}),"\n",(0,n.jsx)(s.h3,{id:"getnamespace",children:"GetNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetNamespace(prefix As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'Get the namespace for the specified prefix at the current stack level. "" is returned if the prefix is not defined.'}),"\n",(0,n.jsx)(s.h3,{id:"copy",children:"Copy"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Copy(source As %XML.Namespaces) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Fill myself from the specified instance"}),"\n",(0,n.jsx)(s.h3,{id:"reset",children:"Reset"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Reset()\n"})}),"\n",(0,n.jsx)(s.p,{children:"Reset myself"}),"\n",(0,n.jsx)(s.h3,{id:"getnextnamespace",children:"GetNextNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetNextNamespace(namespace As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'GetNextNamespace returns the next XML namespace in name order. A return of "", indicates no more XML namespaces to list.'}),"\n",(0,n.jsx)(s.h3,{id:"getnextclass",children:"GetNextClass"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetNextClass(namespace As %String, class As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'GetNextClass returns the next class in the XML namespace in class name order. A return of "", indicates no more classes to list. Note that namespace="" indicates classes without an XML namespace defined.'})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>l});var n=a(96540);const t={},i=n.createContext(t);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);