"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[11796],{23804:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>n,toc:()=>l});var a=s(74848),r=s(28453);const n={pagination_prev:null,pagination_next:null},i="%ZEN.SVGComponent.lineChart",l=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"Properties",id:"properties",level:2},{value:"chartFilled",id:"chartfilled",level:3},{value:"chartStacked",id:"chartstacked",level:3},{value:"chartPivot",id:"chartpivot",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"renderSeries",id:"renderseries",level:3},{value:"useSumForRange",id:"usesumforrange",level:3},{value:"getXAxisType",id:"getxaxistype",level:3},{value:"getYAxisType",id:"getyaxistype",level:3},{value:"isTimeBased",id:"istimebased",level:3},{value:"getChartElementStyle",id:"getchartelementstyle",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"hasMultiples",id:"hasmultiples",level:3}];function c(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"zensvgcomponentlinechart",children:"%ZEN.SVGComponent.lineChart"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.SVGComponent.lineChart Extends chart [ Deprecated, System = 3 ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This is an SVG chart component that displays a line chart.",(0,a.jsx)(t.br,{}),"\nThis chart displays one or more data series as a set of lines.",(0,a.jsx)(t.br,{}),"\nIf there are multiple data series, the lines are either superimposed or or stacked atop one another, as specified by the chartStacked property.",(0,a.jsx)(t.br,{}),"\nYou can use the chartFilled property to specify that the area under the lines should be filled, turning this into an area chart.",(0,a.jsx)(t.br,{}),"\nYou can view pivot the chart using the chartPivot property."]}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE = 1;\n"})}),"\n",(0,a.jsx)(t.p,{children:"Default value for plotToEdge property."}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"chartfilled",children:"chartFilled"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property chartFilled As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"Specifies whether the area under the line is filled (as in an area chart) or not filled (as in a line chart)."}),"\n",(0,a.jsx)(t.h3,{id:"chartstacked",children:"chartStacked"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property chartStacked As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsxs)(t.p,{children:["If true, this is a ",(0,a.jsx)(t.em,{children:"stacked"})," line chart. That is, data series are plotted above one another.",(0,a.jsx)(t.br,{}),"\nNote that negative values are ignored in stacked charts."]}),"\n",(0,a.jsx)(t.h3,{id:"chartpivot",children:"chartPivot"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property chartPivot As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"If true, pivot this chart: display categories vertically and values horizontally."}),"\n",(0,a.jsx)(t.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(t.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod renderSeries(group) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Draw data series for this chart. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(t.h3,{id:"usesumforrange",children:"useSumForRange"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod useSumForRange() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This method returns true if data series should be summed when calculating data range for the chart."}),"\n",(0,a.jsx)(t.h3,{id:"getxaxistype",children:"getXAxisType"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getXAxisType() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the type of x axis (category or value) used by this chart."}),"\n",(0,a.jsx)(t.h3,{id:"getyaxistype",children:"getYAxisType"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getYAxisType() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the type of y axis (category or value) used by this chart."}),"\n",(0,a.jsx)(t.h3,{id:"istimebased",children:"isTimeBased"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod isTimeBased() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Test if a time-based x axis should be used. This is overridden in subclasses."}),"\n",(0,a.jsx)(t.h3,{id:"getchartelementstyle",children:"getChartElementStyle"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getChartElementStyle(series, item) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return default style for a line element."}),"\n",(0,a.jsx)(t.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Set the value of a named property."}),"\n",(0,a.jsx)(t.h3,{id:"hasmultiples",children:"hasMultiples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod hasMultiples() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(t.p,{children:'Indicates that this chart supports "show multiples" mode.'})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var a=s(96540);const r={},n=a.createContext(r);function i(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);