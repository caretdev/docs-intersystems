"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[19093],{60968:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>l,frontMatter:()=>r,toc:()=>o});var n=t(74848),a=t(28453);const r={pagination_prev:null,pagination_next:null},i="OAuth2.Server.OpenID",o=[{value:"Methods",id:"methods",level:2},{value:"IsOpenID",id:"isopenid",level:3},{value:"AddScopeClaims",id:"addscopeclaims",level:3},{value:"AddRequiredClaims",id:"addrequiredclaims",level:3},{value:"SetAudClaim",id:"setaudclaim",level:3},{value:"Hash",id:"hash",level:3},{value:"CreateIDToken",id:"createidtoken",level:3},{value:"Validate",id:"validate",level:3},{value:"VerifyAudience",id:"verifyaudience",level:3},{value:"PrepareFrontChannelLogout",id:"preparefrontchannellogout",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"oauth2serveropenid",children:"OAuth2.Server.OpenID"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class OAuth2.Server.OpenID Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"The authorization server supports the OpenId Connect specification. The OAuth2.Server.OpenID class is a helper class which contains the OpenID functionality. This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"isopenid",children:"IsOpenID"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsOpenID(scope As %String) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Is this an OpenID authorization request? Find out by looking for openid scope."}),"\n",(0,n.jsx)(s.h3,{id:"addscopeclaims",children:"AddScopeClaims"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AddScopeClaims(token As OAuth2.Server.AccessToken) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Add claims that are based on scopes. Always add default claims."}),"\n",(0,n.jsx)(s.h3,{id:"addrequiredclaims",children:"AddRequiredClaims"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AddRequiredClaims(json As %DynamicObject, token As OAuth2.Server.AccessToken) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"The additional properties that are required for OpenID."}),"\n",(0,n.jsx)(s.h3,{id:"setaudclaim",children:"SetAudClaim"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetAudClaim(json As %DynamicObject, token As OAuth2.Server.AccessToken, openid As %Boolean) [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set the aud claim for the JSON object"}),"\n",(0,n.jsx)(s.h3,{id:"hash",children:"Hash"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Hash(alg As %String, tokenString As %String) As %String\n"})}),"\n",(0,n.jsx)(s.p,{children:"Compute the token hash"}),"\n",(0,n.jsx)(s.h3,{id:"createidtoken",children:"CreateIDToken"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateIDToken(token As OAuth2.Server.AccessToken, Output sc As %Status) As %String\n"})}),"\n",(0,n.jsx)(s.p,{children:"Add the additional properties that are needed for the IDToken Create an IDToken based on token properties. We assume %server is the server configuration."}),"\n",(0,n.jsx)(s.h3,{id:"validate",children:"Validate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Validate(applicationName As %String, IDToken As %String, accessToken As %String, scope As %String, aud As %String, Output jsonObject As %RegisteredObject, Output securityParameters As %String, Output sc As %Status) As %Boolean\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Validate validates the signed OpenID Connect ID token and creates an object to reflect the JWT properties. Validate also validates the access token based on the at_hash property of the IDToken. The applicationName argument is the name of the client or resource server configuration which contains authorization server access data, such as authorization server ServerCredentials. The scope argument is a blank separated list of scope values. If scope is specified, the acces token must have an associated scope which is a superset of the scope parameter.",(0,n.jsx)(s.br,{}),"\nThe aud argument specifies the audience which is using the token. If the token has an associated aud property (usually because the audience was specified when requesting the token), then aud is matched to the token audience. If aud is not specified, then no audience checking takes place.",(0,n.jsx)(s.br,{}),"\nThe claims in the JSON object are returned in jsonObject .",(0,n.jsx)(s.br,{}),"\nsecurityParameters - Array of Strings that was used to set the JSON Object Signature and/or Encryption operations to be performed on the JWT"]}),"\n",(0,n.jsxs)(s.p,{children:["See %Net.JSON.JWA for the list of supported algorithms.",(0,n.jsx)(s.br,{}),"\nFor JSON Web Signature (JWS):",(0,n.jsx)(s.br,{}),'\nsecurityParameters("sigalg") - Signature or MAC algorithm.',(0,n.jsx)(s.br,{}),"\nFor JSON Web Encryption (JWE):",(0,n.jsx)(s.br,{}),'\nsecurityParameters("keyalg") - Key management algorithm',(0,n.jsx)(s.br,{}),'\nNote, securityParameters("keyalg") and securityParameters("encalg") must both be specified or null.',(0,n.jsx)(s.br,{}),"\nSee %Net.JSON.JWA for the list of supported algorithms."]}),"\n",(0,n.jsx)(s.h3,{id:"verifyaudience",children:"VerifyAudience"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod VerifyAudience(objectAudience, aud As %String, clientId As %String) As %Boolean [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:'Verify audience from the JSON object (objectAudience) against the audience from the resource server The resource server audience is the aud argument, or if aud="" the client_id.'}),"\n",(0,n.jsx)(s.h3,{id:"preparefrontchannellogout",children:"PrepareFrontChannelLogout"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod PrepareFrontChannelLogout(token As OAuth2.Server.AccessToken, Output logoutUriList As %List) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Perform the operations required for front channel logout When a client has requested front channel logout, the /logout endpoint calls this When the server initiates front channel logout, OAuth2.Server.Auth:Logout() calls this"})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var n=t(96540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);