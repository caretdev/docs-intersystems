"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[57923],{77263:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>n,default:()=>d,frontMatter:()=>a,toc:()=>l});var r=t(74848),i=t(28453);const a={pagination_prev:null,pagination_next:null},n="%DeepSee.REST.v3.CommandServer",l=[{value:"XDatas",id:"xdatas",level:2},{value:"UrlMap",id:"urlmap",level:3},{value:"Methods",id:"methods",level:2},{value:"%ValidateRequest",id:"validaterequest",level:3},{value:"ExecuteAction",id:"executeaction",level:3},{value:"BuildCube",id:"buildcube",level:3},{value:"RepairBuild",id:"repairbuild",level:3},{value:"BuildAllRegisteredGroups",id:"buildallregisteredgroups",level:3},{value:"BuildOneRegisteredGroup",id:"buildoneregisteredgroup",level:3},{value:"SynchronizeCube",id:"synchronizecube",level:3},{value:"GetLastUpdate",id:"getlastupdate",level:3},{value:"GetActiveRegistry",id:"getactiveregistry",level:3},{value:"SetActiveRegistry",id:"setactiveregistry",level:3},{value:"BuildRegistryMap",id:"buildregistrymap",level:3},{value:"WriteToRegistry",id:"writetoregistry",level:3},{value:"ScheduleUpdaterTasks",id:"scheduleupdatertasks",level:3},{value:"GetSynchScheduleParameters",id:"getsynchscheduleparameters",level:3},{value:"GetCubeSize",id:"getcubesize",level:3},{value:"IsValidGroup",id:"isvalidgroup",level:3},{value:"IsValidCubeSchedule",id:"isvalidcubeschedule",level:3},{value:"%SetAnswerStatus",id:"setanswerstatus",level:3},{value:"%lookup2JSON",id:"lookup2json",level:3}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"deepseerestv3commandserver",children:"%DeepSee.REST.v3.CommandServer"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.REST.v3.CommandServer Extends %DeepSee.REST.REST\n"})}),"\n",(0,r.jsx)(s.p,{children:"This class is responsible for exposing the functionality of %DeepSee.CubeManager.Utils via REST APIs"}),"\n",(0,r.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,r.jsx)(s.h3,{id:"urlmap",children:"UrlMap"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"XData UrlMap\n"})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"validaterequest",children:"%ValidateRequest"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ValidateRequest(pUrl As %String, pMethod As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.h3,{id:"executeaction",children:"ExecuteAction"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExecuteAction(namespace As %String, pUrl As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Execute a KPI action defined in a cube's actionClass. The  and  must be supplied through either a GET or POST request in order to invoke the action, and additional information may optionally be provided via a CONTEXT object and/or a DataSource."}),"\n",(0,r.jsx)(s.h3,{id:"buildcube",children:"BuildCube"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BuildCube(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"A wrapper for %DeepSee.Utils.%BuildCube which records cube event information when building the cube. Required Properties: cubeName Optional Properties: async, indexOnly, maxFacts, tracking, mapCube, buildStats, factList"}),"\n",(0,r.jsx)(s.h3,{id:"repairbuild",children:"RepairBuild"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RepairBuild(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"This method provides a means of doing an unscheduled repair build of a registered cube. Required Properties: cubeName Optional Properties: map, async, indexOnly, maxFacts, tracking, buildStats, factList"}),"\n",(0,r.jsx)(s.h3,{id:"buildallregisteredgroups",children:"BuildAllRegisteredGroups"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BuildAllRegisteredGroups(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"This is a utility method which executes a complete build of all currently registered cubes in the current cube registry. Required Properties: None Optional Properties: map, buildStats"}),"\n",(0,r.jsx)(s.h3,{id:"buildoneregisteredgroup",children:"BuildOneRegisteredGroup"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BuildOneRegisteredGroup(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"This is a utility method which executes a complete build of one registered cube group in the current cube registry. Required Properties: None Optional Properties: groupName, map, buildStats"}),"\n",(0,r.jsx)(s.h3,{id:"synchronizecube",children:"SynchronizeCube"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SynchronizeCube(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"A wrapper for %DeepSee.Utils.%SynchronizeCube which records cube event information when building the cube. Required Properties: None Optional Properties: cubeName, readCommitted, checkReferences, async, mapCube, synchronizeStats"}),"\n",(0,r.jsx)(s.h3,{id:"getlastupdate",children:"GetLastUpdate"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetLastUpdate(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Retrieves the timestamp of the the last registered data update for the cube. Updates performed outside of the Cube Manager will not be recognized in this check. Required Properties: cubeKey Optional Properties: updateType"}),"\n",(0,r.jsx)(s.h3,{id:"getactiveregistry",children:"GetActiveRegistry"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetActiveRegistry(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Retrieve the name of the Cube Registry currently marked Active Required Properties: None Optional Properties: None"}),"\n",(0,r.jsx)(s.h3,{id:"setactiveregistry",children:"SetActiveRegistry"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetActiveRegistry(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Change which Cube Registry is currently active. The Active Registry is the only one that is visible to the updater tasks. Required Properties: None Optional Properties: className, mustExist"}),"\n",(0,r.jsx)(s.h3,{id:"buildregistrymap",children:"BuildRegistryMap"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BuildRegistryMap(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:'Retrieve the map that describes the current state of the Cube Registry and all other unregistered cubes on the system. Required Properties: None Optional Properties: className, registeredOnly For the lookup variable in the output JSON, for each array in the "cubes" object, the first value corresponds to that the GroupIdx value and the second the CubeIdx value for that cube. The Cube can then be retrieved as follows: Set Cube = Map.Groups.GetAt(GroupIdx).Cubes.GetAt(CubeIdx)'}),"\n",(0,r.jsx)(s.h3,{id:"writetoregistry",children:"WriteToRegistry"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod WriteToRegistry(namespace As %String)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Walk through a CubeManager.RegistryMap object and register the cubes. Required Properties: cubeMap Optional Properties: None"}),"\n",(0,r.jsx)(s.h3,{id:"scheduleupdatertasks",children:"ScheduleUpdaterTasks"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ScheduleUpdaterTasks(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Schedule the build and synch tasks according to the settings in a CubeManager.RegistryMap object. Required properties: None Optional properties: cubeMap"}),"\n",(0,r.jsx)(s.h3,{id:"getsynchscheduleparameters",children:"GetSynchScheduleParameters"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetSynchScheduleParameters(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Convenience method -- takes the number of seconds between synchs and sets the parameters for the call to %SYS.Task.DeepSeeSynchronize:Schedule() Required Properties: None Optional Properties: scheduleSynchInterval, dailyFrequency, dailyFrequencyTime, dailyIncrement, dailyStartTime"}),"\n",(0,r.jsx)(s.h3,{id:"getcubesize",children:"GetCubeSize"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCubeSize(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Given the logical name, pCubeName of a DeepSee cube, return the number of rows within its fact table. Required Properties: None Optional Properties: cubeKey"}),"\n",(0,r.jsx)(s.h3,{id:"isvalidgroup",children:"IsValidGroup"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsValidGroup(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Boolean test which returns 1 if the group supplied as the argument is no less than the union of the natural groups of each of its members. Required Properties: group Optional Properties: groups, cubes, buildOrders"}),"\n",(0,r.jsx)(s.h3,{id:"isvalidcubeschedule",children:"IsValidCubeSchedule"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsValidCubeSchedule(namespace As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Validation for the current cube settings. Required Properties: cube Optional Properties: None"}),"\n",(0,r.jsx)(s.h3,{id:"setanswerstatus",children:"%SetAnswerStatus"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SetAnswerStatus(ByRef answer, errorExists As %Integer, tSC As %Status, statusVarName As %String, listOfStatusVarWithError = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"This method is very specific to the APIs currently written in %DeepSee.REST.vx.CommandServer and is designed to be a utility function only for that class answer is a dynamic abstract object, errorExists is a 0 or 1 indicating if an error has occured or not. If errorExists is 1, tSC is the status variable to be returned from the method that is invoking this method listOfStatusVarWithError is a list of integers used for methods like /Command/RepairBuild and /Command/BuildAllRegisteredGroups where the variable containing the status (such as buildStats for these 2 APIs) has 2 indices and the answer needs to indicate which buildstat contains the error"}),"\n",(0,r.jsx)(s.h3,{id:"lookup2json",children:"%lookup2JSON"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %lookup2JSON(ByRef array)\n"})}),"\n",(0,r.jsx)(s.p,{children:"A special case of %DeepSee.REST.REST.%Array2JSON used to modify the lookup variable returned by %DeepSee.REST.vx.CommandServer.%BuildRegistryMap"})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>l});var r=t(96540);const i={},a=r.createContext(i);function n(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);