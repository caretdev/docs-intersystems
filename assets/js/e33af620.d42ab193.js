"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[17869],{62797:(e,s,a)=>{a.r(s),a.d(s,{contentTitle:()=>l,default:()=>c,frontMatter:()=>r,toc:()=>i});var t=a(74848),n=a(28453);const r={pagination_prev:null,pagination_next:null},l="Config.Shadows",i=[{value:"Parameters",id:"parameters",level:2},{value:"CAPITALNAME",id:"capitalname",level:3},{value:"EMSSERVICE",id:"emsservice",level:3},{value:"Properties",id:"properties",level:2},{value:"Address",id:"address",level:3},{value:"DaysBeforePurge",id:"daysbeforepurge",level:3},{value:"DisableJournalUpdates",id:"disablejournalupdates",level:3},{value:"Enabled",id:"enabled",level:3},{value:"FilterRoutine",id:"filterroutine",level:3},{value:"JournalDirectory",id:"journaldirectory",level:3},{value:"MaxErrors",id:"maxerrors",level:3},{value:"SSLConfig",id:"sslconfig",level:3},{value:"Methods",id:"methods",level:2},{value:"CreateCallBack",id:"createcallback",level:3},{value:"Load",id:"load",level:3},{value:"MoveToActive",id:"movetoactive",level:3},{value:"Rename",id:"rename",level:3},{value:"Suspend",id:"suspend",level:3},{value:"EMSAllowEdit",id:"emsallowedit",level:3},{value:"%OnBeforeSaveCallBack",id:"onbeforesavecallback",level:3},{value:"%OnDeleteCallBack",id:"ondeletecallback",level:3},{value:"%OnValidateObject",id:"onvalidateobject",level:3},{value:"ListExecute",id:"listexecute",level:3},{value:"ListFetch",id:"listfetch",level:3},{value:"ListClose",id:"listclose",level:3},{value:"SourceDatabasesExecute",id:"sourcedatabasesexecute",level:3},{value:"SourceDatabasesFetch",id:"sourcedatabasesfetch",level:3},{value:"SourceDatabasesClose",id:"sourcedatabasesclose",level:3}];function o(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"configshadows",children:"Config.Shadows"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class Config.Shadows Extends (%Persistent, Config.CommonMultipleMethods, Config.CommonProperties, %SYSTEM.Help) [ Final, Inheritance = right, System = 4 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This class allows you to modify and view the [Shadows] section of the CPF file through programatic APIs. While properties are usually modified through the System Management portal, there may be some occasion where modifying them through the API's is best for your system. In all the Config methods, if you do not specify the CPFFile parameter, the currently active CPF file is used. If you wish to modify a CPF file which is not the currently active one, then specify the CPFFile you wish to modify in the method call.",(0,t.jsx)(s.br,{}),"\nThe Flags parameter does not normally need to be specified; the defaults are usually sufficient for most cases.",(0,t.jsx)(s.br,{}),"\nYou can use either the provided API's (Create/Get/Modify/Delete) to modify the properties by passing in the correct parameters, or use Object syntax to open and directly manipulate the config objects (Open() and Exists()). Most objects created here need only to specify the Name of the object, and 1 or 2 properties since the the defaults are what are commonly used for most cases."]}),"\n",(0,t.jsx)(s.p,{children:"EXAMPLE:"}),"\n",(0,t.jsxs)(s.p,{children:['; Use class methods to create an instance %SYS>s Name="ABC" %SYS>s Properties("Enabled")=0 %SYS>s Properties("Address")="127.0.0.1|56775" %SYS>s Status=##Class(Config.Shadows).Create(Name,.Properties) %SYS>i \'Status w !,"Error="',(0,t.jsx)(s.em,{children:'$SYSTEM.Status.GetErrorText(Status) ; Use class methods to modify properties %SYS>s Status=##Class(Config.Shadows).Get(Name,.Properties) %SYS>i \'Status w !,"Error="'}),'$SYSTEM.Status.GetErrorText(Status) %SYS>zw Properties Properties("Enabled")=0 %SYS>s Properties("Enabled")=1 %SYS>s Status=##Class(Config.Shadows).Modify(Name,.Properties) %SYS>i \'Status w !,"Error="',(0,t.jsx)(s.em,{children:'$SYSTEM.Status.GetErrorText(Status) ; Now use Objects to modify properties %SYS>s Obj=##Class(Config.Shadows).Open(Name) ; We could have used i ##Class(Config.Shadows).Exists(Name,.Obj) instead of Open() %SYS>w Obj.Enabled 1 %SYS>s Obj.Enabled=0 %SYS>s Status=Obj.%Save() %SYS>i \'Status w !,"Error="'}),'$SYSTEM.Status.GetErrorText(Status) ; Now delete the object we just created %SYS>s Status=##Class(Config.Shadows).Delete(Name) %SYS>i \'Status w !,"Error="_$SYSTEM.Status.GetErrorText(Status)']}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"capitalname",children:"CAPITALNAME"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter CAPITALNAME = 0;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"emsservice",children:"EMSSERVICE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter EMSSERVICE [ Internal ] = "Namespace";\n'})}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"address",children:"Address"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Address As %NetworkAddress [ Required ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"IP Address to connect to."}),"\n",(0,t.jsx)(s.h3,{id:"daysbeforepurge",children:"DaysBeforePurge"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property DaysBeforePurge As %Integer(MAXVAL = 10000, MINVAL = 0) [ InitialExpression = 0, Required ];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"disablejournalupdates",children:"DisableJournalUpdates"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property DisableJournalUpdates As %Boolean [ InitialExpression = 0, Required ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, updates that the shadow applies to the shadow databases are NOT journaled, regardless of the journal settings on the databases. By default, this is false, that is, shadow updates are journaled."}),"\n",(0,t.jsx)(s.h3,{id:"enabled",children:"Enabled"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Enabled As Security.Datatype.BooleanYN [ InitialExpression = 0, Required ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies whether the shadow should be running or stopped.",(0,t.jsx)(s.br,{}),"\n0 - Stopped",(0,t.jsx)(s.br,{}),"\n1 - Running"]}),"\n",(0,t.jsx)(s.h3,{id:"filterroutine",children:"FilterRoutine"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property FilterRoutine As %String(MAXLEN = 64);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"journaldirectory",children:"JournalDirectory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property JournalDirectory As %SysPath [ InitialExpression = "shadow", Required ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Directory where the shadow journal files reside."}),"\n",(0,t.jsx)(s.h3,{id:"maxerrors",children:"MaxErrors"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property MaxErrors As %Integer(MAXVAL = 20000, MINVAL = 10) [ InitialExpression = 10, Required ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Maximum number of errors to retain."}),"\n",(0,t.jsx)(s.h3,{id:"sslconfig",children:"SSLConfig"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SSLConfig As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"SSL configuration to use on the shadow connection."}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"createcallback",children:"CreateCallBack"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateCallBack(Obj As %ObjectHandle, Data As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Called by the Create method during import from a CPF file."}),"\n",(0,t.jsx)(s.h3,{id:"load",children:"Load"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Load(Obj As %ObjectHandle = "", Flags As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Load the parameters into memory and activate.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Obj"}),' = Handle to the object which caused the load. If "", then load everything, only called from Activate().',(0,t.jsx)(s.br,{}),"\nIf a delete operation, then Obj is the shadow of the item which was deleted since the oject itself has already been deleted.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Flags"})," = Type of modification.",(0,t.jsx)(s.br,{}),"\n0 - Modify",(0,t.jsx)(s.br,{}),"\n1 - Create/Insert",(0,t.jsx)(s.br,{}),"\n2 - Delete"]}),"\n",(0,t.jsx)(s.h3,{id:"movetoactive",children:"MoveToActive"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod MoveToActive(Obj As %ObjectHandle = "", Flags As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"Move the CPF data into the active config global. This also check if any shadow is added/removed/updated in CPF file since last shutdown."}),"\n",(0,t.jsx)(s.p,{children:"Parameters:"}),"\n",(0,t.jsx)(s.h3,{id:"rename",children:"Rename"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Rename(OldShadow, NewShadow, CPFFile As %String = "", Flags As %Integer = 0) As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Rename a shadow to new Shadow including mappings, and activate them.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"OldShadow"})," - Shadow to rename.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"NewShadow"})," - New Shadow to copy to.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"CPFFile"}),' - Name of the CPF file to copy mappings in, "" = active CPF file.']}),"\n",(0,t.jsx)(s.h3,{id:"suspend",children:"Suspend"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Suspend(Obj As %ObjectHandle) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"emsallowedit",children:"EMSAllowEdit"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method EMSAllowEdit(insert As %Boolean) As %Boolean [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Called from %OnBeforeSave. Provides a way for a specific class to override the EMS.Restricted() check when the Instance is managed. Used when a few properties in a class (like Config.SQL.JDBCGatewayPort) are not managed by EMS."}),"\n",(0,t.jsx)(s.h3,{id:"onbeforesavecallback",children:"%OnBeforeSaveCallBack"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnBeforeSaveCallBack(insert As %Integer, Obj As %ObjectHandle) As %Status [ Internal, Private ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"ondeletecallback",children:"%OnDeleteCallBack"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnDeleteCallBack(Obj As %ObjectHandle) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Called from %Delete().",(0,t.jsx)(s.br,{}),"\nAny error returned here will keep the object from being deleted."]}),"\n",(0,t.jsx)(s.h3,{id:"onvalidateobject",children:"%OnValidateObject"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnValidateObject() As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This is called from %Save().",(0,t.jsx)(s.br,{}),"\nAny error returned from this will cause the object to not be saved."]}),"\n",(0,t.jsx)(s.h3,{id:"listexecute",children:"ListExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ListExecute(ByRef %qHandle As %Binary, Names As %String = "*", CPFFile As %String = "", Flags As %Integer = 0, Format As %Integer = 0) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"List Shadows in a CPF file."}),"\n",(0,t.jsxs)(s.p,{children:["Parameters:",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Names"})," - Comma separated list of Shadow names",(0,t.jsx)(s.br,{}),'\n"*" - All records match',(0,t.jsx)(s.br,{}),'\n"String,String1" - Any records matching one of these elements',(0,t.jsx)(s.br,{}),'\n"String*" - Any record starting with "String"',(0,t.jsx)(s.br,{}),'\n"String,String1*,String2" - Any record matching one of these elements, or starting with "String1"',(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"CPFFile"})," - Name of the CPF file to use. A null string means use the active CPF file.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Flags"})," - Currently ignored.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Format"}),(0,t.jsx)(s.br,{}),"\n0 - Standard report list format",(0,t.jsx)(s.br,{}),"\n1 - ^CONFIG global format",(0,t.jsx)(s.br,{}),"\n2 - CPF file format format",(0,t.jsx)(s.br,{}),"\nNote: This query may change in future versions"]}),"\n",(0,t.jsx)(s.h3,{id:"listfetch",children:"ListFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListFetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"listclose",children:"ListClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListClose(ByRef %qHandle As %Binary) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"sourcedatabasesexecute",children:"SourceDatabasesExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SourceDatabasesExecute(ByRef qHandle As %Binary, ShadowID As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns info about source databases"}),"\n",(0,t.jsx)(s.h3,{id:"sourcedatabasesfetch",children:"SourceDatabasesFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SourceDatabasesFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"sourcedatabasesclose",children:"SourceDatabasesClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SourceDatabasesClose(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>l,x:()=>i});var t=a(96540);const n={},r=t.createContext(n);function l(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);