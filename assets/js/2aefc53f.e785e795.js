"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[4158],{92621:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>i,default:()=>o,frontMatter:()=>a,toc:()=>l});var s=r(74848),t=r(28453);const a={pagination_prev:null,pagination_next:null},i="%CSP.Mgr.Helper.AlternativeServer",l=[{value:"Parameters",id:"parameters",level:2},{value:"XMLIGNOREINVALIDTAG",id:"xmlignoreinvalidtag",level:3},{value:"XMLIGNORENULL",id:"xmlignorenull",level:3},{value:"Properties",id:"properties",level:2},{value:"CacheServerName",id:"cacheservername",level:3},{value:"Activity",id:"activity",level:3},{value:"Status",id:"status",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cspmgrhelperalternativeserver",children:"%CSP.Mgr.Helper.AlternativeServer"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %CSP.Mgr.Helper.AlternativeServer Extends (%SerialObject, %XML.Adaptor)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Load-Balancing is implemented in a round robin fashion. Each new user session will be connected to the next available 'alternative' server (including the 'Default' Server). Once a user session is established on a server, the Gateway will endeavor to maintain the session on that server unless it becomes unavailable, in which case the session will be failed-over to the next available server in the list. State-aware sessions (preserve mode = 1) cannot be failed-over under any circumstances and, consequently, the session will be closed if the hosting server becomes unavailable. This object is part of the %CSP.Mgr.GatewaySystemStatus object."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"xmlignoreinvalidtag",children:"XMLIGNOREINVALIDTAG"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNOREINVALIDTAG As BOOLEAN = 1;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"xmlignorenull",children:"XMLIGNORENULL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter XMLIGNORENULL As STRING = 1;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"cacheservername",children:"CacheServerName"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property CacheServerName As %String;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"activity",children:"Activity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Activity As %String;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"status",children:"Status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Status As %String;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The purpose for which this server is being used."}),"\n",(0,s.jsx)(n.p,{children:"Use for Load-Balancing. (Fail-over in implied for this option)."}),"\n",(0,s.jsx)(n.p,{children:"Use for Fail-over only. (Use the alternatives only if the main (i.e. default) server becomes unavailable.)"}),"\n",(0,s.jsx)(n.p,{children:"Disable. (Do not connect to the alternative servers under any circumstances.)"})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(96540);const t={},a=s.createContext(t);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);