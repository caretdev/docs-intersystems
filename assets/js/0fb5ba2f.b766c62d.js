"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[64597],{65730:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>a,default:()=>c,frontMatter:()=>i,toc:()=>r});var t=s(74848),l=s(28453);const i={pagination_prev:null,pagination_next:null},a="%Library.CollationGenerator",r=[{value:"Methods",id:"methods",level:2},{value:"CollationExpression",id:"collationexpression",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"Nulls",id:"nulls",level:3},{value:"CollateCodeGen",id:"collatecodegen",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"librarycollationgenerator",children:"%Library.CollationGenerator"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Library.CollationGenerator [ System = 2 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This class implements expression generators for all collations."}),"\n",(0,t.jsx)(n.p,{children:"A collation expression is used by code generators to tranform logical data values into values used by indices."}),"\n",(0,t.jsx)(n.p,{children:'For example, you may wish that a query by name finds the same results for both "ELVIS" and "elvis". Using a case-insensitive index transformation, such as String, will accomplish this. If you want an exact match, use Exact.'}),"\n",(0,t.jsxs)(n.p,{children:["Collations are specified via a property's COLLATION parameter. Every datatype has a default COLLATION value, which matches one of the methods of the ",(0,t.jsx)(n.strong,{children:"%Collation"})," class. The COLLATION parameter can be overwritten by an individual property or by a specific index definition."]}),"\n",(0,t.jsx)(n.p,{children:"Note that changing a property's COLLATION value will corrupt any index values currently stored for that property and will require you to manually repopulate the index."}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"collationexpression",children:"CollationExpression"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod CollationExpression(collation As %String = "", %val As %String, parms As %String) As %String\n'})}),"\n",(0,t.jsx)(n.p,{children:"This method generates the appropriate collation expression as requested by the parameters. collation ="}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"AlphaUp"})," Converts a logical value to upper case, strips all punctuation and white space (except for ',' and '?')."]}),"\n",(0,t.jsxs)(n.p,{children:["This method is included for compatability with earlier products; use ",(0,t.jsx)(n.strong,{children:"String"})," instead."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Exact"})," Performs no transformation; the index value is exactly the logical value."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Minus"})," Prepends a minus ('-') sign to the logical value."]}),"\n",(0,t.jsx)(n.p,{children:"This method is included for compatability with earlier products; you should not need it in new applications."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MVR"})," MULTI VALUE Collation"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Plus"})," Prepends a plus ('+') sign to the logical value."]}),"\n",(0,t.jsx)(n.p,{children:"This method is included for compatability with earlier products; you should not need it in new applications."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Space"})," Prepends a space (' ') character to the logical value."]}),"\n",(0,t.jsx)(n.p,{children:"This method is included for compatability with earlier products; you should not need it in new applications."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SqlString"})," Prepends a space to force string collation and strips trailing whitespace."]}),"\n",(0,t.jsx)(n.p,{children:"This method is used to insure that strings are collated case-sensitively and that numeric string values are collated correctly."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SqlUpper"})," Converts a logical value to upper case, strips trailing whitespace and prepends a space to force string collation."]}),"\n",(0,t.jsx)(n.p,{children:"This collation is used to insure that strings are collated case-insensitively and that numeric string values are collated correctly."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"String"})," Converts a logical value to upper case, strips all punctuation and white space (except for ',')."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Truncate"})," Performs no transformation; the index value is exactly the logical value. However, the value will be truncated to the length specified by the optional length argument. Truncate with no length is the same as Exact."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Upper"})," Converts a logical value to upper case without removing any characters."]}),"\n",(0,t.jsx)(n.p,{children:"%val the expression being collated"}),"\n",(0,t.jsx)(n.p,{children:"parms collation parameters as expected by collation"}),"\n",(0,t.jsx)(n.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod IsValid(collation As %RawString = "") [ CodeMode = expression ]\n'})}),"\n",(0,t.jsx)(n.h3,{id:"nulls",children:"Nulls"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod Nulls(collation As %String = "", collationparms As %String = "") As %Boolean\n'})}),"\n",(0,t.jsx)(n.h3,{id:"collatecodegen",children:"CollateCodeGen"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod CollateCodeGen(val As %String, transSpec As %String = "", length As %String = "") As %String\n'})}),"\n",(0,t.jsx)(n.p,{children:"Generate collation expression for COLLATE collation"})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(96540);const l={},i=t.createContext(l);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);