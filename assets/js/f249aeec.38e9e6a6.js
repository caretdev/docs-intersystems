"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[88896],{5779:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>l,default:()=>i,frontMatter:()=>n,toc:()=>c});var r=s(74848),a=s(28453);const n={pagination_prev:null,pagination_next:null},l="%XSQL.Log",c=[{value:"Properties",id:"properties",level:2},{value:"logFile",id:"logfile",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"write",id:"write",level:3},{value:"ActivateLog",id:"activatelog",level:3},{value:"DeactivateLog",id:"deactivatelog",level:3},{value:"logError",id:"logerror",level:3},{value:"logException",id:"logexception",level:3},{value:"logValue",id:"logvalue",level:3},{value:"logFunction",id:"logfunction",level:3},{value:"logStream",id:"logstream",level:3},{value:"logStatus",id:"logstatus",level:3},{value:"logHeader",id:"logheader",level:3},{value:"logStatementResult",id:"logstatementresult",level:3},{value:"logStatementSource",id:"logstatementsource",level:3},{value:"logResults",id:"logresults",level:3},{value:"logResultSet",id:"logresultset",level:3},{value:"logEnterProcedure",id:"logenterprocedure",level:3},{value:"logEmbeddedSQL",id:"logembeddedsql",level:3},{value:"logSQLCODE",id:"logsqlcode",level:3},{value:"prepareLog",id:"preparelog",level:3},{value:"startLog",id:"startlog",level:3},{value:"stopLog",id:"stoplog",level:3},{value:"traceMessage",id:"tracemessage",level:3},{value:"traceDeferredStatement",id:"tracedeferredstatement",level:3},{value:"traceContext",id:"tracecontext",level:3},{value:"traceException",id:"traceexception",level:3},{value:"traceStatus",id:"tracestatus",level:3},{value:"traceError",id:"traceerror",level:3},{value:"traceValue",id:"tracevalue",level:3},{value:"traceFunction",id:"tracefunction",level:3},{value:"traceResult",id:"traceresult",level:3},{value:"traceResultSet",id:"traceresultset",level:3},{value:"traceEmbeddedSQL",id:"traceembeddedsql",level:3},{value:"traceSQLCODE",id:"tracesqlcode",level:3},{value:"traceEnterProcedure",id:"traceenterprocedure",level:3},{value:"traceEnterFunction",id:"traceenterfunction",level:3},{value:"traceExitProcedure",id:"traceexitprocedure",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"xsqllog",children:"%XSQL.Log"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XSQL.Log Extends %Library.RegisteredObject [ System = 2 ]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"logfile",children:"logFile"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property logFile As %String;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %OnNew(logFile As %RawString = "", initialize As %Boolean = 0) As %Status [ Private, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"This callback method is invoked by the %New method to provide notification that a new instance of an object is being created."}),"\n",(0,r.jsx)(t.p,{children:"If this method returns an error then the object will not be created."}),"\n",(0,r.jsx)(t.p,{children:"It is passed the arguments provided in the %New call. When customizing this method, override the arguments with whatever variables and types you expect to receive from %New(). For example, if you're going to call %New, passing 2 arguments, %OnNew's signature could be:"}),"\n",(0,r.jsx)(t.p,{children:'Method %OnNew(dob as %Date = "", name as %Name = "") as %Status'}),"\n",(0,r.jsx)(t.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ Private ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"write",children:"write"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method write(message As %String(MAXLEN=""), linesBefore As %Integer = 0, linesAfter As %Integer = 1) As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"write() - write a message to the current log file"}),"\n",(0,r.jsx)(t.h3,{id:"activatelog",children:"ActivateLog"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ActivateLog() As %Integer [ SqlName = activate_log, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"ActivateLog (also called as a procedure - CALL InSync_SYS.activate_log()) will set the trace switch to begin logging. Messages logged using $$$TRACE macros will be written to the log file."}),"\n",(0,r.jsx)(t.h3,{id:"deactivatelog",children:"DeactivateLog"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DeactivateLog() As %Integer [ SqlName = deactivate_log, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"DeactivateLog (also callable as a procedure - CALL InSync_SYS.deactivate_log()) will turn of the trace switch so that $$$TRACE macros will not longer be written to the log file. The log file is also closed."}),"\n",(0,r.jsx)(t.h3,{id:"logerror",children:"logError"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logError(pError As %SYSTEM.Error)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report an error from a %SYSTEM.Error object"}),"\n",(0,r.jsx)(t.p,{children:"pError - an instance of %SYSTEM.Error"}),"\n",(0,r.jsx)(t.h3,{id:"logexception",children:"logException"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logException(pException As %Exception.AbstractException, pPrefix As %String = {$Char(9,9)})\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logvalue",children:"logValue"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method logValue(pName As %String(MAXLEN="") = "", pValue As %String(MAXLEN="") = "")\n'})}),"\n",(0,r.jsx)(t.p,{children:"Report a named value"}),"\n",(0,r.jsx)(t.p,{children:"pName - the name of the value, for example, 'pFormal1' as the name of a formal argument  pValue - the value"}),"\n",(0,r.jsx)(t.h3,{id:"logfunction",children:"logFunction"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method logFunction(pName As %String(MAXLEN="") = "", pValue As %String(MAXLEN="") = "")\n'})}),"\n",(0,r.jsx)(t.p,{children:"Report a function and its return value."}),"\n",(0,r.jsx)(t.p,{children:"pName - the name of the value, for example, 'pFormal1' as the name of a formal argument  pValue - the value"}),"\n",(0,r.jsx)(t.h3,{id:"logstream",children:"logStream"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logStream(stream As %Stream.Object, pNumbered As %Integer = 0)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Copy the contents of a stream to the log"}),"\n",(0,r.jsx)(t.p,{children:"stream - stream to copy to the file."}),"\n",(0,r.jsx)(t.h3,{id:"logstatus",children:"logStatus"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logStatus(StatusCode As %Status, Message As %String, ByRef Outcome) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report a status message from a trace"}),"\n",(0,r.jsx)(t.p,{children:'sc - pass as status code  message - pass a message to be written both to the current device and to the log (or "") (optional)  outcome - pass an array of stats (optional)'}),"\n",(0,r.jsx)(t.h3,{id:"logheader",children:"logHeader"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logHeader() As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logstatementresult",children:"logStatementResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logStatementResult(pResult As %SQL.StatementResult) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Log the contents of a %SQL.StatementResult object"}),"\n",(0,r.jsx)(t.h3,{id:"logstatementsource",children:"logStatementSource"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method logStatementSource(pBatchNumber As %Library.Integer, ByRef pSource As %Library.String(MAXLEN=""), pLinesBefore As %Integer = 0, pLinesAfter As %Integer = 1) As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"Log SQL statement source"}),"\n",(0,r.jsx)(t.h3,{id:"logresults",children:"logResults"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logResults(context As %Library.ProcedureContext) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logresultset",children:"logResultSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logResultSet(pContext As %Library.ProcedureContext, pResultSet As %Library.IResultSet) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logenterprocedure",children:"logEnterProcedure"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logEnterProcedure(pProcedureName As %Library.String, ByRef pArguments As %Library.String) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logembeddedsql",children:"logEmbeddedSQL"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method logEmbeddedSQL(pStatement As %Library.String, pSQLCODE As %Library.Integer, pMsg As %Library.String, pROWCOUNT As %Library.Integer, pTime As %Library.Numeric, ByRef pArguments As %Library.String) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"logsqlcode",children:"logSQLCODE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method logSQLCODE(pSQLCODE As %Library.Integer = 0, pMessage As %String(MAXLEN="") = "", pPrefix As %String = {$Char(9,9)}) As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"Log an SQLCODE and %msg value"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"pSQLCODE - the SQLCODE value"}),"\n",(0,r.jsx)(t.li,{children:"pMessage - the %msg value"}),"\n",(0,r.jsx)(t.li,{children:"pPrefix - the prefix to use when writing the log content, defaults to two tab characters."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"preparelog",children:"prepareLog"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod prepareLog()\n"})}),"\n",(0,r.jsx)(t.h3,{id:"startlog",children:"startLog"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod startLog(logFile As %RawString = "", initialize As %Boolean = 0) As %Status\n'})}),"\n",(0,r.jsx)(t.h3,{id:"stoplog",children:"stopLog"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod stopLog() As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"tracemessage",children:"traceMessage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod traceMessage(message As %String(MAXLEN=""), linesBefore As %Integer = 0, linesAfter As %Integer = 1) As %Status\n'})}),"\n",(0,r.jsx)(t.h3,{id:"tracedeferredstatement",children:"traceDeferredStatement"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod traceDeferredStatement(statementType, ByRef sql As %String(MAXLEN="") = "", ByRef %args As %String(MAXLEN="") = "") As %Status\n'})}),"\n",(0,r.jsx)(t.h3,{id:"tracecontext",children:"traceContext"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceContext(context As %Library.ProcedureContext) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"traceexception",children:"traceException"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceException(pException As %Exception.AbstractException, pPrefix As %Library.String = {$Char(9)}) [ ProcedureBlock = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report an exception from a trace"}),"\n",(0,r.jsx)(t.p,{children:"pException - pass as an exception oref"}),"\n",(0,r.jsx)(t.h3,{id:"tracestatus",children:"traceStatus"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceStatus(StatusCode As %Status, Message As %String, ByRef Outcome)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report a status message from a trace"}),"\n",(0,r.jsx)(t.p,{children:'sc - pass as status code  message - pass a message to be written both to the current device and to the log (or "") (optional)  outcome - pass an array of stats (optional)'}),"\n",(0,r.jsx)(t.h3,{id:"traceerror",children:"traceError"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceError(pError As %SYSTEM.Error) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report an error from a %SYSTEM.Error object"}),"\n",(0,r.jsx)(t.p,{children:"error - an instance of %SYSTEM.Error"}),"\n",(0,r.jsx)(t.h3,{id:"tracevalue",children:"traceValue"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod traceValue(pName As %String(MAXLEN="") = "", pValue As %String(MAXLEN="") = "")\n'})}),"\n",(0,r.jsx)(t.p,{children:"Report a named value"}),"\n",(0,r.jsx)(t.p,{children:"pName - the name of the value, for example, 'pFormal1' as the name of a formal argument  pValue - the value"}),"\n",(0,r.jsx)(t.h3,{id:"tracefunction",children:"traceFunction"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod traceFunction(pName As %String(MAXLEN="") = "", pValue As %String(MAXLEN="") = "")\n'})}),"\n",(0,r.jsx)(t.p,{children:"Report a function and its return value."}),"\n",(0,r.jsx)(t.p,{children:"pName - the name of the function method  pValue - the return value"}),"\n",(0,r.jsx)(t.h3,{id:"traceresult",children:"traceResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceResult(pContext As %Library.ProcedureContext) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"traceresultset",children:"traceResultSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceResultSet(pContext As %Library.ProcedureContext, pResultSet As %Library.IResultSet) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"traceembeddedsql",children:"traceEmbeddedSQL"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceEmbeddedSQL(pStatement As %Library.String, pSQLCODE As %Library.Integer, pMsg As %Library.String, pROWCOUNT As %Library.Integer, pTime As %Library.Numeric, pArguments... As %Library.String) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Report a execution of embedded/deferred SQL, its arguments, and status."}),"\n",(0,r.jsx)(t.p,{children:"pStatement - the text of the SQL Statement executed  pArguments - the Arguments and their values  pSQLCODE - the resulting SQLCODE  pMsg - the resuting %msg (if any)  pROWCOUNT - the resulting %ROWCOUNT (if any)  pTime - the execution time (if any)"}),"\n",(0,r.jsx)(t.h3,{id:"tracesqlcode",children:"traceSQLCODE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod traceSQLCODE(pSQLCODE As %Library.Integer = 0, pMessage As %String(MAXLEN="") = "", pPrefix As %String = {$Char(9,9)}) As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"Log an SQLCODE and %msg value"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"pSQLCODE - the SQLCODE value"}),"\n",(0,r.jsx)(t.li,{children:"pMessage - the %msg value"}),"\n",(0,r.jsx)(t.li,{children:"pPrefix - the prefix to use when writing the log content, defaults to two tab characters."}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"traceenterprocedure",children:"traceEnterProcedure"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceEnterProcedure(pProcedureName As %String, pArguments... As %Library.String) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"traceenterfunction",children:"traceEnterFunction"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceEnterFunction(pProcedureName As %String, pArguments... As %Library.String) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"traceexitprocedure",children:"traceExitProcedure"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod traceExitProcedure() As %Status\n"})})]})}function i(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>c});var r=s(96540);const a={},n=r.createContext(a);function l(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);