"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[81292],{96384:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>r,default:()=>d,frontMatter:()=>l,toc:()=>i});var t=n(74848),a=n(28453);const l={pagination_prev:null,pagination_next:null},r="%ZEN.Component.tablePane",i=[{value:"Parameters",id:"parameters",level:2},{value:"SYSMODULE",id:"sysmodule",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"Properties",id:"properties",level:2},{value:"columns",id:"columns",level:3},{value:"parameters",id:"parameters-1",level:3},{value:"conditions",id:"conditions",level:3},{value:"caption",id:"caption",level:3},{value:"showValueInTooltip",id:"showvalueintooltip",level:3},{value:"nowrap",id:"nowrap",level:3},{value:"extraColumnWidth",id:"extracolumnwidth",level:3},{value:"showFilters",id:"showfilters",level:3},{value:"headerLayout",id:"headerlayout",level:3},{value:"filtersDisabled",id:"filtersdisabled",level:3},{value:"autoExecute",id:"autoexecute",level:3},{value:"valueColumn",id:"valuecolumn",level:3},{value:"dataSource",id:"datasource",level:3},{value:"useSnapshot",id:"usesnapshot",level:3},{value:"fixedHeaders",id:"fixedheaders",level:3},{value:"bodyHeight",id:"bodyheight",level:3},{value:"cellSpacing",id:"cellspacing",level:3},{value:"rowCount",id:"rowcount",level:3},{value:"pageSize",id:"pagesize",level:3},{value:"currPage",id:"currpage",level:3},{value:"currColumn",id:"currcolumn",level:3},{value:"onheaderClick",id:"onheaderclick",level:3},{value:"sortOrder",id:"sortorder",level:3},{value:"lastFilter",id:"lastfilter",level:3},{value:"snapshotId",id:"snapshotid",level:3},{value:"clearSnapshot",id:"clearsnapshot",level:3},{value:"lastUpdate",id:"lastupdate",level:3},{value:"showQuery",id:"showquery",level:3},{value:"invalidMessage",id:"invalidmessage",level:3},{value:"useKeys",id:"usekeys",level:3},{value:"refreshRequired",id:"refreshrequired",level:3},{value:"unlockSession",id:"unlocksession",level:3},{value:"onkeypress",id:"onkeypress",level:3},{value:"msgNoResult",id:"msgnoresult",level:3},{value:"permitClientSQL",id:"permitclientsql",level:3},{value:"suppressExceptionOnClientSQL",id:"suppressexceptiononclientsql",level:3},{value:"Methods",id:"methods",level:2},{value:"refreshTable",id:"refreshtable",level:3},{value:"%ResetQuery",id:"resetquery",level:3},{value:"%OnAddToPageAfter",id:"onaddtopageafter",level:3},{value:"%OnZENDeserialize",id:"onzendeserialize",level:3},{value:"ValidateQueryIntegrity",id:"validatequeryintegrity",level:3},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"%DrawTable",id:"drawtable",level:3},{value:"%DrawCell",id:"drawcell",level:3},{value:"%DrawFilter",id:"drawfilter",level:3},{value:"%CreateSnapshot",id:"createsnapshot",level:3},{value:"%AddColumn",id:"addcolumn",level:3},{value:"%AddParameter",id:"addparameter",level:3},{value:"headerClick",id:"headerclick",level:3},{value:"filterKeyPressed",id:"filterkeypressed",level:3},{value:"filterChanged",id:"filterchanged",level:3},{value:"applyFilters",id:"applyfilters",level:3},{value:"resetColumnFilters",id:"resetcolumnfilters",level:3},{value:"disableColumnFilters",id:"disablecolumnfilters",level:3},{value:"getFilterValue",id:"getfiltervalue",level:3},{value:"setFilterValue",id:"setfiltervalue",level:3},{value:"getColumnFilters",id:"getcolumnfilters",level:3},{value:"setColumnFilters",id:"setcolumnfilters",level:3},{value:"showColumnFilters",id:"showcolumnfilters",level:3},{value:"showDateSelector",id:"showdateselector",level:3},{value:"setDateFilter",id:"setdatefilter",level:3},{value:"getPageCount",id:"getpagecount",level:3},{value:"previousPage",id:"previouspage",level:3},{value:"nextPage",id:"nextpage",level:3},{value:"firstPage",id:"firstpage",level:3},{value:"lastPage",id:"lastpage",level:3},{value:"gotoPage",id:"gotopage",level:3},{value:"addNavigator",id:"addnavigator",level:3},{value:"removeNavigator",id:"removenavigator",level:3},{value:"executeQuery",id:"executequery",level:3},{value:"getRowData",id:"getrowdata",level:3},{value:"getRenderedRowData",id:"getrenderedrowdata",level:3},{value:"FetchRowFromSnapshot",id:"fetchrowfromsnapshot",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"tpKeyDownHandler",id:"tpkeydownhandler",level:3},{value:"tpKeyPressHandler",id:"tpkeypresshandler",level:3},{value:"focus",id:"focus",level:3},{value:"appendColumn",id:"appendcolumn",level:3},{value:"%IsTypeNumeric",id:"istypenumeric",level:3},{value:"findChildByClass",id:"findchildbyclass",level:3},{value:"findChildByTag",id:"findchildbytag",level:3},{value:"findDescendantByClass",id:"finddescendantbyclass",level:3},{value:"resizeHeaders",id:"resizeheaders",level:3},{value:"getInsideWidth",id:"getinsidewidth",level:3},{value:"setOffsetWidth",id:"setoffsetwidth",level:3},{value:"packRowsIE",id:"packrowsie",level:3},{value:"packRows",id:"packrows",level:3},{value:"anchorDiv",id:"anchordiv",level:3},{value:"launchConfirmDialog",id:"launchconfirmdialog",level:3},{value:"onDisplayHandler",id:"ondisplayhandler",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"onPopupAction",id:"onpopupaction",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"zencomponenttablepane",children:"%ZEN.Component.tablePane"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.tablePane Extends simpleTablePane [ Deprecated, System = 3 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This component draws an HTML table based on the contents of a query.",(0,t.jsx)(s.br,{}),"\nThe data for the table can come from a pre-built class query, an SQL statement, or the tablePane can create an SQL query automatically.",(0,t.jsx)(s.br,{}),"\nThe properties of the tablePane, as well as the auxiliary classes, %ZEN.Auxiliary.column, %ZEN.Auxiliary.condition, and %ZEN.Auxiliary.parameter, let you control the behavior and appearance of the tablePane.",(0,t.jsx)(s.br,{}),"\nMany of the characteristics of the tablePane are inherited from its superclass, %ZEN.Component.simpleTablePane. Refer to it for more details."]}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"sysmodule",children:"SYSMODULE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter SYSMODULE = "table";\n'})}),"\n",(0,t.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%ZEN";\n'})}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"columns",children:"columns"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property columns As list Of %ZEN.Auxiliary.column(XMLPROJECTION = "ELEMENT", XMLREF = 1, XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["List of column information objects.",(0,t.jsx)(s.br,{}),"\nEach object specifies additional details about a column in the table."]}),"\n",(0,t.jsx)(s.h3,{id:"parameters-1",children:"parameters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property parameters As list Of %ZEN.Auxiliary.parameter(XMLNAME = "parameter", XMLPROJECTION = "ELEMENT", XMLREF = 1);\n'})}),"\n",(0,t.jsx)(s.p,{children:"User-defined list of parameters. These values are passed on to the user callback function that provides the query for this table."}),"\n",(0,t.jsx)(s.h3,{id:"conditions",children:"conditions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property conditions As list Of %ZEN.Auxiliary.condition(XMLPROJECTION = "ELEMENT", XMLREF = 1, XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"A list of conditions. These are special expression objects that are evaluated to add data-dependent styles to the table."}),"\n",(0,t.jsx)(s.h3,{id:"caption",children:"caption"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property caption As %ZEN.Datatype.caption;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Caption displayed for this table using the HTML caption element.",(0,t.jsx)(s.br,{}),"\nThis is a localized value."]}),"\n",(0,t.jsx)(s.h3,{id:"showvalueintooltip",children:"showValueInTooltip"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property showValueInTooltip As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, then the tooltip (HTML title attribute) displayed for cells within the table will display the current value of the cell."}),"\n",(0,t.jsx)(s.h3,{id:"nowrap",children:"nowrap"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property nowrap As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If a browser does not support CSS nowrap correctly, this flag provides a way to control whether table cells allow word wrapping or not."}),"\n",(0,t.jsx)(s.h3,{id:"extracolumnwidth",children:"extraColumnWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property extraColumnWidth As %ZEN.Datatype.length [ InitialExpression = 30 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Width used for extra columns, such as row number, row selector, etc."}),"\n",(0,t.jsx)(s.h3,{id:"showfilters",children:"showFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property showFilters As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, display column filters (if any)."}),"\n",(0,t.jsx)(s.h3,{id:"headerlayout",children:"headerLayout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property headerLayout As %ZEN.Datatype.string(VALUELIST = ",filtersOnTop,headersOnTop") [ InitialExpression = "filtersOnTop" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"This property controls how to display the table header when column filters are used."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'"filtersOnTop" - (the default) Display column filters above column headers.'}),"\n",(0,t.jsx)(s.li,{children:'"headersOnTop" - Display column headers above filters.'}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"filtersdisabled",children:"filtersDisabled"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property filtersDisabled As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, disable column filters (if any)."}),"\n",(0,t.jsx)(s.h3,{id:"autoexecute",children:"autoExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property autoExecute As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If true (the default), automatically re-execute the query for this table when the user changes the value of a column filter.",(0,t.jsx)(s.br,{}),"\nIf false, the query will only be re-executed when the executeQuery is called."]}),"\n",(0,t.jsx)(s.h3,{id:"valuecolumn",children:"valueColumn"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property valueColumn As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, this is the name of the data column that provides a logical value for a selected row."}),"\n",(0,t.jsx)(s.h3,{id:"datasource",children:"dataSource"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property dataSource As %ZEN.Datatype.string(VALUELIST = ",query,columns") [ InitialExpression = "query" ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies where the data columns of the table come from.",(0,t.jsx)(s.br,{}),'\n"query" (the default)- columns are displayed for each column in the data source query.',(0,t.jsx)(s.br,{}),'\n"columns" - only columns explicitly defined in the columns list are displayed.']}),"\n",(0,t.jsx)(s.h3,{id:"usesnapshot",children:"useSnapshot"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property useSnapshot As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, create a temporary snapshot of the query results. This allows for paging and sorting without re-executing the query."}),"\n",(0,t.jsx)(s.h3,{id:"fixedheaders",children:"fixedHeaders"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property fixedHeaders As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, then the header of the table will stay in position when the body of the table is scrolled."}),"\n",(0,t.jsx)(s.h3,{id:"bodyheight",children:"bodyHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bodyHeight As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If present, this specifies the height of the body section of the table."}),"\n",(0,t.jsx)(s.h3,{id:"cellspacing",children:"cellSpacing"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property cellSpacing As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Amount of spacing around cells in the table. The default is 0 (no extra space around table cells). For a slight but noticeable separation, a useful value is 2."}),"\n",(0,t.jsx)(s.h3,{id:"rowcount",children:"rowCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property rowCount As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If present, this is the number of rows returned by the current query. This is calculated by the built-in query or the automatic query.",(0,t.jsx)(s.br,{}),'\nNote: this is a string as it could be set to "" or "100+".']}),"\n",(0,t.jsx)(s.h3,{id:"pagesize",children:"pageSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property pageSize As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:'This is the number of items to display on a single "page" of the table. 0, the default, means show all data on first page. This can only be set to a non-zero value when the table is in snapshot mode.'}),"\n",(0,t.jsx)(s.h3,{id:"currpage",children:"currPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property currPage As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:'For snapshot mode, this is the number (1-based) of the current "page" within the snapshot that is displayed.'}),"\n",(0,t.jsx)(s.h3,{id:"currcolumn",children:"currColumn"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property currColumn As %ZEN.Datatype.string(ZENEXPRESSION = 1);\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is the logical name of the most recently selected column header. Typically this is used for sorting."}),"\n",(0,t.jsx)(s.h3,{id:"onheaderclick",children:"onheaderClick"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property onheaderClick As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(s.p,{children:"onheaderClick event handler: This event is fired when the user clicks on a column header. The name of the column will be in the currColumn property."}),"\n",(0,t.jsx)(s.h3,{id:"sortorder",children:"sortOrder"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property sortOrder As %ZEN.Datatype.string(VALUELIST = ",asc,desc", ZENEXPRESSION = 1);\n'})}),"\n",(0,t.jsx)(s.p,{children:'For sortable tables, this is the order to sort values within the current column. Values can be "", "asc" (ascending), or "desc" (descending).'}),"\n",(0,t.jsx)(s.h3,{id:"lastfilter",children:"lastFilter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property lastFilter As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal property used to track last changed filter."}),"\n",(0,t.jsx)(s.h3,{id:"snapshotid",children:"snapshotId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property snapshotId As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal property used to track the result set snapshot number."}),"\n",(0,t.jsx)(s.h3,{id:"clearsnapshot",children:"clearSnapshot"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property clearSnapshot As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:'Client-side, run-time flag that is set when client wants to force re-execution of the table query when the table is in "snapshot" mode.'}),"\n",(0,t.jsx)(s.h3,{id:"lastupdate",children:"lastUpdate"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property lastUpdate As %ZEN.Datatype.string(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Time, in ODBC timestamp format, that the query for this table was last executed. This is set on the server whenever the query is for the tablePane is executed."}),"\n",(0,t.jsx)(s.h3,{id:"showquery",children:"showQuery"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property showQuery As %ZEN.Datatype.boolean(ZENENCRYPT = 1, ZENEXPRESSION = 1) [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Server-side diagnostic flag. If true, display the query used to get data for this table.",(0,t.jsx)(s.br,{}),"\nThis is an encrypted value and cannot be set on the client."]}),"\n",(0,t.jsx)(s.h3,{id:"invalidmessage",children:"invalidMessage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property invalidMessage As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Invalid Date","%ZEN")} ];\n'})}),"\n",(0,t.jsx)(s.p,{children:'Localized "invalid date" message displayed by control.'}),"\n",(0,t.jsx)(s.h3,{id:"usekeys",children:"useKeys"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property useKeys As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, then the tablePane will capture user keystrokes and use them for simple table navigation."}),"\n",(0,t.jsx)(s.h3,{id:"refreshrequired",children:"refreshRequired"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property refreshRequired As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"This property should be set to 1 by server-side methods that want to force the query associate with the tablePane to be re-executed."}),"\n",(0,t.jsx)(s.h3,{id:"unlocksession",children:"unlockSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property unlockSession As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Flag to control whether session is unlocked during updates to the table."}),"\n",(0,t.jsx)(s.h3,{id:"onkeypress",children:"onkeypress"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property onkeypress As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(s.p,{children:"onkeypress event handler: If useKeys is true, then this event handler code is run when the user presses a key within the tablePane."}),"\n",(0,t.jsx)(s.h3,{id:"msgnoresult",children:"msgNoResult"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property msgNoResult As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("No Results","%ZEN")} ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"permitclientsql",children:"permitClientSQL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property permitClientSQL As %ZEN.Datatype.boolean(ZENENCRYPT = 1, ZENEXPRESSION = 1) [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Flag for backwards compatibility. If permitClientSQL is set to true, query parameters may be set programatically through javascript on the client, depending on site and application settings this may constitute a security risk. If set to false (the default), the parameters may only be set on the server. This property is encrypted and any attempt to modify it on the client will result in an  error."}),"\n",(0,t.jsx)(s.h3,{id:"suppressexceptiononclientsql",children:"suppressExceptionOnClientSQL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property suppressExceptionOnClientSQL As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:'Flag for less intrusive remedial action when Client-side SQL modification is forbidden. If permitClientSQL is set to false (the default), this flag controls the rendering of the table if client side modification of the query parameters is detected. By default, a Zen Exception will be raised, warning of the security risk. If this flag is set to true, however, the exception will be suppressed and the table will re-render using the last known (server-side) values for the query parameters. In this case the client-side modifications are simply ignored. The default value is "false" indicating that the exception should be raised.'}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"refreshtable",children:"refreshTable"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod refreshTable() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Internal method.",(0,t.jsx)(s.br,{}),"\nApplications should use the executeQuery of the tablePane class.",(0,t.jsx)(s.br,{}),"\nCall to the server and update the contents of the tablePane. This is a wrapper around the refreshContents method."]}),"\n",(0,t.jsx)(s.h3,{id:"resetquery",children:"%ResetQuery"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ResetQuery() As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This method is used (server-side only) to set the refreshRequired property when changing the underlying query from ObjectScript at run time. Client-side code should ",(0,t.jsx)(s.strong,{children:"not"}),' "wrap" and call this function. Instead, JavaScript code should make use of the refreshTable() method.']}),"\n",(0,t.jsx)(s.h3,{id:"onaddtopageafter",children:"%OnAddToPageAfter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAddToPageAfter() As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onzendeserialize",children:"%OnZENDeserialize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnZENDeserialize() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This callback is invoked by the %ZENDeserialize method."}),"\n",(0,t.jsx)(s.h3,{id:"validatequeryintegrity",children:"ValidateQueryIntegrity"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method ValidateQueryIntegrity() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw innerHTML for this component (without enclosing div)."}),"\n",(0,t.jsx)(s.h3,{id:"drawtable",children:"%DrawTable"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawTable(pRS As %ResultSet) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the table."}),"\n",(0,t.jsx)(s.h3,{id:"drawcell",children:"%DrawCell"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawCell(pMethod As %String, pName As %String, pSeed As %String) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Invoke user method to provide contents for a cell"}),"\n",(0,t.jsx)(s.h3,{id:"drawfilter",children:"%DrawFilter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawFilter(pMethod As %String, pName As %String, pColInfo As %ZEN.Auxiliary.column) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Invoke user method to provide contents for a column filter."}),"\n",(0,t.jsx)(s.h3,{id:"createsnapshot",children:"%CreateSnapshot"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %CreateSnapshot(pTempID As %String, pRS As %ResultSet) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Create a temporary snapshot file from a result set. Assumes that result set has been created and executed. Users should not call this method."}),"\n",(0,t.jsx)(s.h3,{id:"addcolumn",children:"%AddColumn"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %AddColumn(pColumn As %ZEN.Auxiliary.column = "") As %ZEN.Auxiliary.column\n'})}),"\n",(0,t.jsx)(s.p,{children:"Add a new column definition to this tablePane. If pColumn is not provided, this method will create a new column object."}),"\n",(0,t.jsx)(s.h3,{id:"addparameter",children:"%AddParameter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %AddParameter(pParm As %ZEN.Auxiliary.parameter = "") As %ZEN.Auxiliary.parameter\n'})}),"\n",(0,t.jsx)(s.p,{children:"Add a new parameter definition to this tablePane. If pParm is not provided, this method will create a new parameter object."}),"\n",(0,t.jsx)(s.h3,{id:"headerclick",children:"headerClick"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod headerClick(name) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"User has clicked on a column header."}),"\n",(0,t.jsx)(s.h3,{id:"filterkeypressed",children:"filterKeyPressed"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod filterKeyPressed(evt, filterName, type, index) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"User has pressed a key within a filter."}),"\n",(0,t.jsx)(s.h3,{id:"filterchanged",children:"filterChanged"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod filterChanged(filterName, refresh, type, index) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["User has changed the value of a filter. filterName is the name of the filter.",(0,t.jsx)(s.br,{}),"\nrefresh indicates if the query should be re-executed.",(0,t.jsx)(s.br,{}),"\ntype (optional) is type of filter.",(0,t.jsx)(s.br,{}),"\nindex (optional) is control index for filters with multiple controls."]}),"\n",(0,t.jsx)(s.h3,{id:"applyfilters",children:"applyFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod applyFilters() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"If we are in autoExecute mode, then re-execute the query for this table using the current value of any column filters. If we are not in autoExecute mode, then do nothing."}),"\n",(0,t.jsx)(s.h3,{id:"resetcolumnfilters",children:"resetColumnFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod resetColumnFilters() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Reset the values of the column filters (if there are any)."}),"\n",(0,t.jsx)(s.h3,{id:"disablecolumnfilters",children:"disableColumnFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod disableColumnFilters(flag) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Disable (or enable) the column filters for this table."}),"\n",(0,t.jsx)(s.h3,{id:"getfiltervalue",children:"getFilterValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getFilterValue(cname) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get current value of column filter associated with column cname."}),"\n",(0,t.jsx)(s.h3,{id:"setfiltervalue",children:"setFilterValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setFilterValue(cname, value) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set the value of column filter associated with column cname."}),"\n",(0,t.jsx)(s.h3,{id:"getcolumnfilters",children:"getColumnFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getColumnFilters() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get column filters (if there are any). Returns an associative array containing the current values of the filter controls indexed by column name."}),"\n",(0,t.jsx)(s.h3,{id:"setcolumnfilters",children:"setColumnFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setColumnFilters(state) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set the value of all column filters (if there are any). state is an associative array containing the current values of the filter controls indexed by column name (as returned by getColumnFilters."}),"\n",(0,t.jsx)(s.h3,{id:"showcolumnfilters",children:"showColumnFilters"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod showColumnFilters(flag) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Show or hide columns filters (if there are any). Users should use setProperty('showFilters',true) instead."}),"\n",(0,t.jsx)(s.h3,{id:"showdateselector",children:"showDateSelector"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod showDateSelector(cname, index, type, minDate, maxDate) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Display date selector for a date filter box."}),"\n",(0,t.jsx)(s.h3,{id:"setdatefilter",children:"setDateFilter"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setDateFilter(group) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set value of date filter box. index is 0 or 1 to indicate which date box to set."}),"\n",(0,t.jsx)(s.h3,{id:"getpagecount",children:"getPageCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getPageCount() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, calculate the number of pages."}),"\n",(0,t.jsx)(s.h3,{id:"previouspage",children:"previousPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod previousPage(giveFocus) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, go to previous page, if possible. If giveFocus is true, then give focus back to the hidden control."}),"\n",(0,t.jsx)(s.h3,{id:"nextpage",children:"nextPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod nextPage(giveFocus) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, go to next page, if possible."}),"\n",(0,t.jsx)(s.h3,{id:"firstpage",children:"firstPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod firstPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, go to the first page."}),"\n",(0,t.jsx)(s.h3,{id:"lastpage",children:"lastPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod lastPage() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, go to the last page."}),"\n",(0,t.jsx)(s.h3,{id:"gotopage",children:"gotoPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod gotoPage(page) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For multi-page display, go to specified page (1 is first page), if possible."}),"\n",(0,t.jsx)(s.h3,{id:"addnavigator",children:"addNavigator"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod addNavigator(nav) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Associate a navigator component with this tablePane. This is called by the navigator component."}),"\n",(0,t.jsx)(s.h3,{id:"removenavigator",children:"removeNavigator"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod removeNavigator() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove the navigator component with this tablePane. This is called by the navigator component."}),"\n",(0,t.jsx)(s.h3,{id:"executequery",children:"executeQuery"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod executeQuery(remember, sync) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Force query for this table to be executed on the server. If the table is in snapshot mode, then a new snapshot will be created.",(0,t.jsx)(s.br,{}),"\nIf remember is true, then the table will stay on the same page after the new results are displayed. If sync is defined and is true, the refresh will be executed synchronously (unless we are in deferred mode)."]}),"\n",(0,t.jsx)(s.h3,{id:"getrowdata",children:"getRowData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getRowData(row) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["For tables in snapshot mode only.",(0,t.jsx)(s.br,{}),"\nGo to the server and fetch the data for the specified row (0-based) from the table snapshot data. This data is packaged into a JavaScript object whose properties correspond to the names of the columns in the snapshot table.",(0,t.jsx)(s.br,{}),"\nFor non-snapshot tables or out of range row numbers, returns null."]}),"\n",(0,t.jsx)(s.h3,{id:"getrenderedrowdata",children:"getRenderedRowData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getRenderedRowData(row) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Explore the DOM and extract the data for the specified phyiscal table row (0-based) from the rendered table data (not to be confused with the logical row number of the data itself in a multi-page table).",(0,t.jsx)(s.br,{}),"\nThis data is packaged into a JavaScript object whose properties correspond to the names of the columns in the table. If showRowNumbers is true the object will also contain a property called rowNum and will be contain the logical, enumerated row of the result set record",(0,t.jsx)(s.br,{}),"\nThis is a client-side only call and can query only the values of the current page of the current table. The full, logical contents of the table (in snapshot mode) resides at the server and logical rows may be accessed using getRowData()",(0,t.jsx)(s.br,{}),"\nIf there are not data columns to report or if the requested row is greater than the page size for the table, this function returns null."]}),"\n",(0,t.jsx)(s.h3,{id:"fetchrowfromsnapshot",children:"FetchRowFromSnapshot"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod FetchRowFromSnapshot(pIndex As %Integer, pID As %String, pRow As %Integer, pCurrColumn As %String = "", pSortOrder As %String = "") As %Boolean [ ZenMethod ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Internal method.",(0,t.jsx)(s.br,{}),"\nFetch data from snapshot global and package up as a client object. pIndex is index of client component.",(0,t.jsx)(s.br,{}),"\npID is internal ID of snapshot global.",(0,t.jsx)(s.br,{}),"\npRow is row number to fetch."]}),"\n",(0,t.jsx)(s.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set the value of a named property."}),"\n",(0,t.jsx)(s.h3,{id:"tpkeydownhandler",children:"tpKeyDownHandler"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod tpKeyDownHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Process key down event within the table's invisible edit control."}),"\n",(0,t.jsx)(s.h3,{id:"tpkeypresshandler",children:"tpKeyPressHandler"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod tpKeyPressHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Process key press event within the table's invisible edit control."}),"\n",(0,t.jsx)(s.h3,{id:"focus",children:"focus"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod focus() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Client-side method to input focus to this control."}),"\n",(0,t.jsx)(s.h3,{id:"appendcolumn",children:"appendColumn"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod appendColumn(colName) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Appends new column object to this table with the given column name. Returns the new column object.",(0,t.jsx)(s.br,{}),"\nCall the executeQuery method after calling this to update the table."]}),"\n",(0,t.jsx)(s.h3,{id:"istypenumeric",children:"%IsTypeNumeric"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %IsTypeNumeric(pType As %Integer) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Tests if a column type is a numeric type. Zen uses the CLIENTDATATYPE value, not ODBCTYPE. Client types are defined as: Returns the type of column n in the result set where type is an integer associated with the client datatype. If the type cannot be determined, 0 (zero) is returned."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"1"}),(0,t.jsx)(s.th,{children:"BINARY"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"2"}),(0,t.jsx)(s.td,{children:"DATE"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"3"}),(0,t.jsx)(s.td,{children:"DOUBLE"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"4"}),(0,t.jsx)(s.td,{children:"HANDLE"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"5"}),(0,t.jsx)(s.td,{children:"INTEGER"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"6"}),(0,t.jsx)(s.td,{children:"LIST"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"7"}),(0,t.jsx)(s.td,{children:"LONGVARCHAR"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"8"}),(0,t.jsx)(s.td,{children:"TIME"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"9"}),(0,t.jsx)(s.td,{children:"TIMESTAMP"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"10"}),(0,t.jsx)(s.td,{children:"VARCHAR"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"11"}),(0,t.jsx)(s.td,{children:"STATUS"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"12"}),(0,t.jsx)(s.td,{children:"BINARYSTREAM"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"13"}),(0,t.jsx)(s.td,{children:"CHARACTERSTREAM"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"14"}),(0,t.jsx)(s.td,{children:"NUMERIC"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"15"}),(0,t.jsx)(s.td,{children:"CURRENCY"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"16"}),(0,t.jsx)(s.td,{children:"BOOLEAN"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"17"}),(0,t.jsx)(s.td,{children:"OID"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"18"}),(0,t.jsx)(s.td,{children:"BIGINT"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"19"}),(0,t.jsx)(s.td,{children:"FDATE"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"20"}),(0,t.jsx)(s.td,{children:"FTIMESTAMP"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"findchildbyclass",children:"findChildByClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod findChildByClass(node, className) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Explore the DOM structure and return the first child of the given node that matches the given class name"}),"\n",(0,t.jsx)(s.h3,{id:"findchildbytag",children:"findChildByTag"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod findChildByTag(node, tagName) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Explore the DOM structure and return the first child of the given node that matches the HTML tag type"}),"\n",(0,t.jsx)(s.h3,{id:"finddescendantbyclass",children:"findDescendantByClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod findDescendantByClass(node, className) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Explore the DOM in a depth first recursive search to find the first descendant of the given node of of the given class"}),"\n",(0,t.jsx)(s.h3,{id:"resizeheaders",children:"resizeHeaders"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod resizeHeaders() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getinsidewidth",children:"getInsideWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getInsideWidth(element) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Under IE with fixedHeaders set to true, the table headers and the body columns may become misaligned. This routine checks for alignment issues in the rendered table and, if needed, reformats the header to accound for the space taken up by a vertical scrollbar in the body of the table."}),"\n",(0,t.jsx)(s.h3,{id:"setoffsetwidth",children:"setOffsetWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setOffsetWidth(element, width) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"packrowsie",children:"packRowsIE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod packRowsIE() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"packrows",children:"packRows"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod packRows() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"anchordiv",children:"anchorDiv"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod anchorDiv() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"if the position of the enclosing div for table has not been explicitly set to some desired value, force its positioning to relative with an offset of 0,0 such a that any absolutely positioned child elements will have a known, local offset parent."}),"\n",(0,t.jsx)(s.h3,{id:"launchconfirmdialog",children:"launchConfirmDialog"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod launchConfirmDialog(url, pageName, features, parms) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"ondisplayhandler",children:"onDisplayHandler"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod onDisplayHandler() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Called after refreshContents when table is actually visible. Call the resizeHeaders routine to see if any alignment issue need to be addressed."}),"\n",(0,t.jsx)(s.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"When the page is loaded, check for alignment issues between the table header and the table body."}),"\n",(0,t.jsx)(s.h3,{id:"onpopupaction",children:"onPopupAction"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod onPopupAction(popupName, action, value) [ Language = javascript ]\n"})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var t=n(96540);const a={},l=t.createContext(a);function r(e){const s=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(l.Provider,{value:s},e.children)}}}]);