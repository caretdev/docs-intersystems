"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[31096],{77824:(e,s,a)=>{a.r(s),a.d(s,{contentTitle:()=>n,default:()=>c,frontMatter:()=>t,toc:()=>i});var l=a(74848),r=a(28453);const t={pagination_prev:null,pagination_next:null},n="SYS.History.SharedMemoryData",i=[{value:"Properties",id:"properties",level:2},{value:"DateTime",id:"datetime",level:3},{value:"Length",id:"length",level:3},{value:"ZDATE",id:"zdate",level:3},{value:"ZTIME",id:"ztime",level:3},{value:"SMID",id:"smid",level:3},{value:"Allocated",id:"allocated",level:3},{value:"Available",id:"available",level:3},{value:"Used",id:"used",level:3},{value:"SMTUsed",id:"smtused",level:3},{value:"GSTUsed",id:"gstused",level:3},{value:"TotalUsed",id:"totalused",level:3},{value:"TotalGSTSMTAllocated",id:"totalgstsmtallocated",level:3},{value:"Methods",id:"methods",level:2},{value:"Sample",id:"sample",level:3},{value:"Finalise",id:"finalise",level:3},{value:"Report",id:"report",level:3},{value:"UsageQueryExecute",id:"usagequeryexecute",level:3},{value:"UsageQueryFetch",id:"usagequeryfetch",level:3},{value:"UsageQueryClose",id:"usagequeryclose",level:3},{value:"UsageQuerySMIDExecute",id:"usagequerysmidexecute",level:3},{value:"UsageQuerySMIDFetch",id:"usagequerysmidfetch",level:3},{value:"UsageQuerySMIDClose",id:"usagequerysmidclose",level:3},{value:"Demo",id:"demo",level:3},{value:"SetPurge",id:"setpurge",level:3},{value:"Purge",id:"purge",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"syshistorysharedmemorydata",children:"SYS.History.SharedMemoryData"})}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Class SYS.History.SharedMemoryData Extends (%Persistent, %XML.Adaptor) [ System = 4 ]\n"})}),"\n",(0,l.jsx)(s.p,{children:'Basic detail collection class of System Usage metrics for the Shared Memory Application Monitor (%Monitor.System.HistoryMemory) Properties represent metrics which get collected every few minutes by the %MONAPP Application Monitor process when the %Monitor.System.HistoryMemory class is "active".'}),"\n",(0,l.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(s.h3,{id:"datetime",children:"DateTime"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property DateTime As %TimeStamp [ Internal, SqlColumnNumber = 2 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Time of sample"}),"\n",(0,l.jsx)(s.h3,{id:"length",children:"Length"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property Length As %Integer [ SqlColumnNumber = 3 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Length of sample in seconds"}),"\n",(0,l.jsx)(s.h3,{id:"zdate",children:"ZDATE"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property ZDATE As %Integer [ SqlColumnNumber = 4 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"UTC date key"}),"\n",(0,l.jsx)(s.h3,{id:"ztime",children:"ZTIME"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property ZTIME As %Integer [ SqlColumnNumber = 5 ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"UTC time key"}),"\n",(0,l.jsx)(s.h3,{id:"smid",children:"SMID"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property SMID As array Of SYS.History.SharedMemoryUsage;\n"})}),"\n",(0,l.jsx)(s.p,{children:"System usage metrics"}),"\n",(0,l.jsx)(s.h3,{id:"allocated",children:"Allocated"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property Allocated As %Integer [ SqlColumnNumber = 6, SqlFieldName = Allocated ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Shared Memory Allocated"}),"\n",(0,l.jsx)(s.h3,{id:"available",children:"Available"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property Available As %Integer [ SqlColumnNumber = 7, SqlFieldName = Available ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Shared Memory Available"}),"\n",(0,l.jsx)(s.h3,{id:"used",children:"Used"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property Used As %Integer [ SqlColumnNumber = 8, SqlFieldName = Used ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Shared Memory Used"}),"\n",(0,l.jsx)(s.h3,{id:"smtused",children:"SMTUsed"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property SMTUsed As %Integer [ SqlColumnNumber = 9, SqlFieldName = SMTUsed ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Static Memory Table Used"}),"\n",(0,l.jsx)(s.h3,{id:"gstused",children:"GSTUsed"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property GSTUsed As %Integer [ SqlColumnNumber = 10, SqlFieldName = GSTUsed ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"General String Table Used"}),"\n",(0,l.jsx)(s.h3,{id:"totalused",children:"TotalUsed"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property TotalUsed As %Integer [ SqlColumnNumber = 11, SqlFieldName = TotalUsed ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Total Memory used"}),"\n",(0,l.jsx)(s.h3,{id:"totalgstsmtallocated",children:"TotalGSTSMTAllocated"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Property TotalGSTSMTAllocated As %Integer [ SqlColumnNumber = 12, SqlFieldName = TotalGSTSMTAllocated ];\n"})}),"\n",(0,l.jsx)(s.p,{children:"Total GST and SMT allocated"}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h3,{id:"sample",children:"Sample"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Sample() As SYS.History.SharedMemoryData [ Internal ]\n"})}),"\n",(0,l.jsx)(s.p,{children:"Database metrics Instantiate the class and fetch current values for all metric properties."}),"\n",(0,l.jsx)(s.h3,{id:"finalise",children:"Finalise"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"Method Finalise(sample As SYS.History.SharedMemoryData) As SYS.History.SharedMemoryData [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"report",children:"Report"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Report(Verbosity As %Integer = 0, StartZD As %Integer = 0, EndZD As %Integer = 0)\n"})}),"\n",(0,l.jsx)(s.p,{children:"Generate a report that analyses the data that has been previously captured by the application monitor."}),"\n",(0,l.jsx)(s.p,{children:"By default the report will include all samples from the table and will simply return a value that is the recommended size of SMH expressed in Kilobytes, which is calculated as the sum of the peak usage of all the shared memory heap consumers with a growth value added (2MB per CPU)."}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Verbosity"})," The verbosity of the display to the screen, where 0 is the minimum verbosity (no output), 1 displays a summary and 2 displays a breakdown of the different consumers."]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"StartZD"})," By default the report will include all samples found, but by passing a value here in internal date format, the report will only start from that date"]}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"EndZD"})," By default the report will continue until the final sample at the last time and date is found. By passing a value here, which is a date in internal format, the report will stop its analysis at the end of this date."]}),"\n",(0,l.jsx)(s.h3,{id:"usagequeryexecute",children:"UsageQueryExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod UsageQueryExecute(ByRef qHandle As %Binary, StartZD As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Query the shared memory heap data and return a single data for each sample. The data returned is the total for this sample."}),"\n",(0,l.jsx)(s.h3,{id:"usagequeryfetch",children:"UsageQueryFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UsageQueryFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"usagequeryclose",children:"UsageQueryClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UsageQueryClose(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"usagequerysmidexecute",children:"UsageQuerySMIDExecute"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod UsageQuerySMIDExecute(ByRef qHandle As %Binary, StartZD As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,l.jsx)(s.p,{children:"Query the shared memory heap data and return a data row for each consumer for each sample. Therefore the data returned reflects a single consumer of shared memory heap, and you will need multiple data rows returned for a full sample."}),"\n",(0,l.jsx)(s.h3,{id:"usagequerysmidfetch",children:"UsageQuerySMIDFetch"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UsageQuerySMIDFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"usagequerysmidclose",children:"UsageQuerySMIDClose"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod UsageQuerySMIDClose(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,l.jsx)(s.h3,{id:"demo",children:"Demo"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Demo(Days As %Integer = 1, Interval As %Integer = 300) As %Integer\n"})}),"\n",(0,l.jsx)(s.p,{children:"Create some data for demonstration purposes."}),"\n",(0,l.jsx)(s.p,{children:"By default this method will create data for a single day assuming a sample interval of 300 seconds, hence it will generate (86400/300) samples."}),"\n",(0,l.jsx)(s.p,{children:"The method works by finding the current usage of shared memory heap, and then for every sample will randomly increase or decrease the shared memory heap usage for a single consumer, with a bias towards gradually increasing the total SMH usage."}),"\n",(0,l.jsx)(s.p,{children:(0,l.jsx)(s.strong,{children:"Warning: This will delete all existing data for SMH analysis"})}),"\n",(0,l.jsx)(s.h3,{id:"setpurge",children:"SetPurge"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetPurge(Keep As %Integer = 0)\n"})}),"\n",(0,l.jsx)(s.p,{children:"Set the system parameter for the number of days of sample data to keep."}),"\n",(0,l.jsx)(s.p,{children:'Initial system default is 7 days. Return value is the previous setting, and executing this method with a "" argument will return the current setting without modifying it.'}),"\n",(0,l.jsx)(s.h3,{id:"purge",children:"Purge"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Purge(DaysKeep As %Integer = 0) As %Integer\n"})}),"\n",(0,l.jsx)(s.p,{children:"Purge SharedMemoryData interval data, keeping the last 'DaysKeep' days."}),"\n",(0,l.jsx)(s.p,{children:"This is typically called at the start of each day from the %Monitor.System.HistorySys class, using the current system default for 'Keep' (see the SetPurge() method). The 'DaysKeep' argument allows you to over ride the system default , a value of \"0\" or \"\" uses the system default, and a value of -1 deletes everything."}),"\n",(0,l.jsx)(s.p,{children:"Returns the number of entries purged."})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>n,x:()=>i});var l=a(96540);const r={},t=l.createContext(r);function n(e){const s=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),l.createElement(t.Provider,{value:s},e.children)}}}]);