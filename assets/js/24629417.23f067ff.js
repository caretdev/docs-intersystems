"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[21446],{95173:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>i,default:()=>o,frontMatter:()=>l,toc:()=>r});var a=s(74848),t=s(28453);const l={pagination_prev:null,pagination_next:null},i="%ZEN.Component.component",r=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTWIDTH",id:"defaultwidth",level:3},{value:"DEFAULTHEIGHT",id:"defaultheight",level:3},{value:"DEFAULTVISIBLE",id:"defaultvisible",level:3},{value:"DEFAULTHIDDEN",id:"defaulthidden",level:3},{value:"DEFAULTLABELCLASS",id:"defaultlabelclass",level:3},{value:"DEFAULTLABELDISABLEDCLASS",id:"defaultlabeldisabledclass",level:3},{value:"DEFAULTHINTCLASS",id:"defaulthintclass",level:3},{value:"DEFAULTENCLOSINGCLASS",id:"defaultenclosingclass",level:3},{value:"Properties",id:"properties",level:2},{value:"error",id:"error",level:3},{value:"label",id:"label",level:3},{value:"labelClass",id:"labelclass",level:3},{value:"labelDisabledClass",id:"labeldisabledclass",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"showLabel",id:"showlabel",level:3},{value:"hint",id:"hint",level:3},{value:"hintClass",id:"hintclass",level:3},{value:"hintStyle",id:"hintstyle",level:3},{value:"title",id:"title",level:3},{value:"hidden",id:"hidden",level:3},{value:"onshow",id:"onshow",level:3},{value:"onhide",id:"onhide",level:3},{value:"onrefresh",id:"onrefresh",level:3},{value:"dragEnabled",id:"dragenabled",level:3},{value:"dropEnabled",id:"dropenabled",level:3},{value:"onbeforedrag",id:"onbeforedrag",level:3},{value:"ondrag",id:"ondrag",level:3},{value:"onafterdrag",id:"onafterdrag",level:3},{value:"ondrop",id:"ondrop",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"align",id:"align",level:3},{value:"valign",id:"valign",level:3},{value:"width",id:"width",level:3},{value:"height",id:"height",level:3},{value:"slice",id:"slice",level:3},{value:"enclosingClass",id:"enclosingclass",level:3},{value:"enclosingStyle",id:"enclosingstyle",level:3},{value:"overlayMode",id:"overlaymode",level:3},{value:"dynamic",id:"dynamic",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawComponentHTML",id:"drawcomponenthtml",level:3},{value:"%OnDrawEnclosingDiv",id:"ondrawenclosingdiv",level:3},{value:"%EnclosingDivId",id:"enclosingdivid",level:3},{value:"refreshContents",id:"refreshcontents",level:3},{value:"ReallyRefreshContents",id:"reallyrefreshcontents",level:3},{value:"getEnclosingDiv",id:"getenclosingdiv",level:3},{value:"getLabelElement",id:"getlabelelement",level:3},{value:"getHintElement",id:"gethintelement",level:3},{value:"setOverlayMode",id:"setoverlaymode",level:3},{value:"startProgressBar",id:"startprogressbar",level:3},{value:"stopProgressBar",id:"stopprogressbar",level:3},{value:"progressBarHandler",id:"progressbarhandler",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"setHidden",id:"sethidden",level:3},{value:"getHidden",id:"gethidden",level:3},{value:"onRefreshContents",id:"onrefreshcontents",level:3},{value:"onDisplayHandler",id:"ondisplayhandler",level:3},{value:"onStartModalHandler",id:"onstartmodalhandler",level:3},{value:"onEndModalHandler",id:"onendmodalhandler",level:3},{value:"onPopupAction",id:"onpopupaction",level:3},{value:"exposeComponent",id:"exposecomponent",level:3},{value:"dragHandler",id:"draghandler",level:3},{value:"dropHandler",id:"drophandler",level:3},{value:"dragNotifyHandler",id:"dragnotifyhandler",level:3},{value:"dragStartHandler",id:"dragstarthandler",level:3},{value:"dropStartHandler",id:"dropstarthandler",level:3},{value:"dragFinishHandler",id:"dragfinishhandler",level:3}];function d(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"zencomponentcomponent",children:"%ZEN.Component.component"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.component Extends object [ Abstract, Deprecated, System = 3 ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is the base class for all visual, HTML-based Zen components."}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(n.h3,{id:"defaultwidth",children:"DEFAULTWIDTH"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTWIDTH As STRING;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default width for a component."}),"\n",(0,a.jsx)(n.h3,{id:"defaultheight",children:"DEFAULTHEIGHT"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTHEIGHT As STRING;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default height for a component."}),"\n",(0,a.jsx)(n.h3,{id:"defaultvisible",children:"DEFAULTVISIBLE"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVISIBLE = 1;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default visibilty for a component."}),"\n",(0,a.jsx)(n.h3,{id:"defaulthidden",children:"DEFAULTHIDDEN"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTHIDDEN As BOOLEAN = 0;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default hidden property for a component."}),"\n",(0,a.jsx)(n.h3,{id:"defaultlabelclass",children:"DEFAULTLABELCLASS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTLABELCLASS As STRING = "zenLabel";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default css class used for labels."}),"\n",(0,a.jsx)(n.h3,{id:"defaultlabeldisabledclass",children:"DEFAULTLABELDISABLEDCLASS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTLABELDISABLEDCLASS As STRING = "zenLabelDisabled";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default css class used for disabled labels."}),"\n",(0,a.jsx)(n.h3,{id:"defaulthintclass",children:"DEFAULTHINTCLASS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTHINTCLASS As STRING = "zenHint";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default css class used for hints."}),"\n",(0,a.jsx)(n.h3,{id:"defaultenclosingclass",children:"DEFAULTENCLOSINGCLASS"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTENCLOSINGCLASS As STRING = "zendiv";\n'})}),"\n",(0,a.jsx)(n.p,{children:"Subclasses can set this to change default enclosingClass used for this component."}),"\n",(0,a.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(n.h3,{id:"error",children:"error"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property error As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Run-time value; Set to indicate an error within this component.",(0,a.jsx)(n.br,{}),"\nThis is primarily used by controls. It is defined here for flexibility."]}),"\n",(0,a.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property label As %ZEN.Datatype.caption;\n"})}),"\n",(0,a.jsx)(n.p,{children:"User defined label used to label this component. The actual display of this label is managed by the group this component belongs to."}),"\n",(0,a.jsx)(n.h3,{id:"labelclass",children:"labelClass"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property labelClass As %ZEN.Datatype.cssClass [ InitialExpression = {..#DEFAULTLABELCLASS} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optional CSS class used for the component label."}),"\n",(0,a.jsx)(n.h3,{id:"labeldisabledclass",children:"labelDisabledClass"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property labelDisabledClass As %ZEN.Datatype.cssClass [ InitialExpression = {..#DEFAULTLABELDISABLEDCLASS} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optional CSS class used for the component label when disabled."}),"\n",(0,a.jsx)(n.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property labelStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(n.p,{children:"User defined style used for the component label."}),"\n",(0,a.jsx)(n.h3,{id:"showlabel",children:"showLabel"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property showLabel As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Controls whether a label is displayed for this component.",(0,a.jsx)(n.br,{}),"\nIf false do not display a label for this component. If labels are displayed to the left, the Layout Manager will attempt to give the space allocated for the label to the component as well. This makes this option useful for placing labels between sections in forms."]}),"\n",(0,a.jsx)(n.h3,{id:"hint",children:"hint"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property hint As %ZEN.Datatype.caption;\n"})}),"\n",(0,a.jsx)(n.p,{children:"User defined hint text used to display additional hint text for this component. If specified, the hint text is drawn below the component."}),"\n",(0,a.jsx)(n.h3,{id:"hintclass",children:"hintClass"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property hintClass As %ZEN.Datatype.cssClass [ InitialExpression = {..#DEFAULTHINTCLASS} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optional CSS class used for the component hint."}),"\n",(0,a.jsx)(n.h3,{id:"hintstyle",children:"hintStyle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property hintStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(n.p,{children:"User defined style used for the component hint."}),"\n",(0,a.jsx)(n.h3,{id:"title",children:"title"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property title As %ZEN.Datatype.caption;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Help text (tool tip) displayed when mouse hovers over this component (or its label)."}),"\n",(0,a.jsx)(n.h3,{id:"hidden",children:"hidden"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property hidden As %ZEN.Datatype.boolean(ZENEXPRESSION = 1) [ InitialExpression = {..#DEFAULTHIDDEN} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:'If true, this component is hidden. That is, its enclosing element\'s display style is set to "none".'}),"\n",(0,a.jsx)(n.h3,{id:"onshow",children:"onshow"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property onshow As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,a.jsx)(n.p,{children:"onshow event handler: This event is fired when this component is made visible."}),"\n",(0,a.jsx)(n.h3,{id:"onhide",children:"onhide"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property onhide As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,a.jsx)(n.p,{children:"onhide event handler: This event is fired when this component is made hidden."}),"\n",(0,a.jsx)(n.h3,{id:"onrefresh",children:"onrefresh"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property onrefresh As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,a.jsx)(n.p,{children:"onrefresh event handler: This event is fired when the contents of this component are refreshed from the server."}),"\n",(0,a.jsx)(n.h3,{id:"dragenabled",children:"dragEnabled"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property dragEnabled As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"If this value is true and dragAndDrop is enabled for the page, then this component can serve as a drag source (i.e., users can start a drag and drop operation over this component). The actual behavior is determined by the subclass implementation."}),"\n",(0,a.jsx)(n.h3,{id:"dropenabled",children:"dropEnabled"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property dropEnabled As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"If this value is true and dragAndDrop is enabled for the page, then this component can serve as a drag target (i.e., users can end a drag and drop operation over this component). The actual behavior is determined by the subclass implementation."}),"\n",(0,a.jsx)(n.h3,{id:"onbeforedrag",children:"onbeforedrag"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property onbeforedrag As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,a.jsx)(n.p,{children:"onbeforedrag event handler: If this value is true and dragEnabled is true and drag-and-drop is enabled for the current page, then this event is raised when a drag operation has been initiated within this component but before the component has started to process the event. This is for cases where you want to override the default drag behavior of a component."}),"\n",(0,a.jsx)(n.h3,{id:"ondrag",children:"ondrag"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property ondrag As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,a.jsx)(n.p,{children:"ondrag event handler: If this value is true and dragEnabled is true and drag-and-drop is enabled for the current page, then this event is raised when a drag operation has been initiated within this component."}),"\n",(0,a.jsx)(n.h3,{id:"onafterdrag",children:"onafterdrag"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property onafterdrag As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,a.jsx)(n.p,{children:"onafterdrag event handler: If this value is true and dragEnabled is true and drag-and-drop is enabled for the current page, then this event is raised when a drag operation that started within this component completes."}),"\n",(0,a.jsx)(n.h3,{id:"ondrop",children:"ondrop"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property ondrop As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,a.jsx)(n.p,{children:"ondrop event handler: If this value is true and dropEnabled is true and drag-and-drop is enabled for the current page, then this event is raised when a drop operation occurs within this component."}),"\n",(0,a.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property containerStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(n.p,{children:"CSS style applied to the td element used to contain this child component within its parent group's layout table. This overrides the parent group's cellStyle property for this child. Typically this is used to provide padding or alignment for a specific component. This only applies to layout strategies that use tables."}),"\n",(0,a.jsx)(n.h3,{id:"align",children:"align"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property align As %ZEN.Datatype.align;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Specifies how this component should be horizontally aligned within its layout cell."}),"\n",(0,a.jsx)(n.h3,{id:"valign",children:"valign"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property valign As %ZEN.Datatype.valign;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Specifies how this component should be vertically aligned within its layout cell."}),"\n",(0,a.jsx)(n.h3,{id:"width",children:"width"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property width As %ZEN.Datatype.length [ InitialExpression = {..#DEFAULTWIDTH} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Specifies the width of this component with respect to its container."}),"\n",(0,a.jsx)(n.h3,{id:"height",children:"height"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property height As %ZEN.Datatype.length [ InitialExpression = {..#DEFAULTHEIGHT} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Specifies the height of this component with respect to its container."}),"\n",(0,a.jsx)(n.h3,{id:"slice",children:"slice"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property slice As %ZEN.Datatype.integer(MINVAL = 0);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["User-defined number of ",(0,a.jsx)(n.em,{children:"units"})," of relative space this component's layout cell takes up within its group along the group layout direction. This may be used by a layout manager when calculating layout requirements."]}),"\n",(0,a.jsx)(n.h3,{id:"enclosingclass",children:"enclosingClass"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property enclosingClass As %ZEN.Datatype.cssClass [ InitialExpression = {..#DEFAULTENCLOSINGCLASS} ];\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optional CSS class used for this component's enclosing div."}),"\n",(0,a.jsx)(n.h3,{id:"enclosingstyle",children:"enclosingStyle"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Property enclosingStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optional CSS style applied to this component's enclosing div."}),"\n",(0,a.jsx)(n.h3,{id:"overlaymode",children:"overlayMode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property overlayMode As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Internal property",(0,a.jsx)(n.br,{}),"\nUsed to track the current overlay mode of this component."]}),"\n",(0,a.jsx)(n.h3,{id:"dynamic",children:"dynamic"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Property dynamic As %ZEN.Datatype.boolean(XMLPROJECTION = "none", ZENSETTING = 0) [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Internal property",(0,a.jsx)(n.br,{}),"\nUsed to keep track of components that were added dynamically to forms."]}),"\n",(0,a.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,a.jsx)(n.p,{children:"defines style sheet used by this component"}),"\n",(0,a.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.h3,{id:"drawcomponenthtml",children:"%DrawComponentHTML"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:'Method %DrawComponentHTML(pStyle As %String = "") [ Final ]\n'})}),"\n",(0,a.jsx)(n.p,{children:"Draw enclosing div element and then draw contents within it."}),"\n",(0,a.jsx)(n.h3,{id:"ondrawenclosingdiv",children:"%OnDrawEnclosingDiv"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawEnclosingDiv() As %String [ CodeMode = expression ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This callback, if defined, makes it possible for a subclass to inject additional attributes into the enclosing div element for a component. If implemented, this method should return a string with a leading space to avoid conflict with other attributes."}),"\n",(0,a.jsx)(n.h3,{id:"enclosingdivid",children:"%EnclosingDivId"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method %EnclosingDivId() [ CodeMode = expression, Final ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Compute the HTML id value used for an enclosing div. Use component id for enclosing div; if not defined use zen#, where # is the index number."}),"\n",(0,a.jsx)(n.h3,{id:"refreshcontents",children:"refreshContents"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod refreshContents(sync) [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This method, called from a client page, invokes this component's %DrawHTML, converts its output to a JavaScript string and replaces the component's enclosing div with this new HTML. This is useful for components that need to refresh their contents from the server after being rendered.",(0,a.jsx)(n.br,{}),"\nInternally, this refresh can occur immediately or be deferred as specified by the zenRefreshMode flag.",(0,a.jsx)(n.br,{}),"\nIf sync is defined and is true, the refresh will be executed synchronously (unless we are in deferred mode)."]}),"\n",(0,a.jsx)(n.h3,{id:"reallyrefreshcontents",children:"ReallyRefreshContents"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"Method ReallyRefreshContents() [ Internal, ZenMethod ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Internal method.",(0,a.jsx)(n.br,{}),"\nThis is the server-side implementation of the refreshContents method. Do not call this method directly."]}),"\n",(0,a.jsx)(n.h3,{id:"getenclosingdiv",children:"getEnclosingDiv"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getEnclosingDiv() [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Client-side method returns the div element that encloses this component."}),"\n",(0,a.jsx)(n.h3,{id:"getlabelelement",children:"getLabelElement"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getLabelElement() [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Client-side method returns the HTML element that displays the label for this component (if any)."}),"\n",(0,a.jsx)(n.h3,{id:"gethintelement",children:"getHintElement"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getHintElement() [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Client-side method returns the HTML element that displays the hint for this component (if any)."}),"\n",(0,a.jsx)(n.h3,{id:"setoverlaymode",children:"setOverlayMode"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setOverlayMode(mode) [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Expirimental: do not use.",(0,a.jsx)(n.br,{}),"\nSet the overlay mode for this component.",(0,a.jsx)(n.br,{}),"\n(An overlay is a transparent div placed atop a component for the purpose of capturing events; it is used by the ZEN Page editing utilities.)",(0,a.jsx)(n.br,{}),"\nmode is the overlay mode:",(0,a.jsx)(n.br,{}),"\n0: turn off overlay.",(0,a.jsx)(n.br,{}),"\n1: turn on overlay.",(0,a.jsx)(n.br,{}),"\n2: turn on overlay, show indication that this component is ",(0,a.jsx)(n.em,{children:"selected"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"startprogressbar",children:"startProgressBar"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod startProgressBar(div) [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Start the display of a progress bar within display area for this component.",(0,a.jsx)(n.br,{}),"\nTypically this is used by components that refresh their contents from the server (such as tablePane).",(0,a.jsx)(n.br,{}),"\ndiv, if defined, is div element that will contain the progress bar."]}),"\n",(0,a.jsx)(n.h3,{id:"stopprogressbar",children:"stopProgressBar"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod stopProgressBar() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Stop the timer used by the Progress bar."}),"\n",(0,a.jsx)(n.h3,{id:"progressbarhandler",children:"progressBarHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod progressBarHandler() [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Internal method.",(0,a.jsx)(n.br,{}),"\nTimer event handler used by the Progress bar."]}),"\n",(0,a.jsx)(n.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Set the value of a named property."}),"\n",(0,a.jsx)(n.h3,{id:"sethidden",children:"setHidden"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setHidden(flag) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"If flag is true, hide this component otherwise make it visible. If present, invoke onshow or onhide callbacks."}),"\n",(0,a.jsx)(n.h3,{id:"gethidden",children:"getHidden"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getHidden() As %String [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Return whether this component is hidden."}),"\n",(0,a.jsx)(n.h3,{id:"onrefreshcontents",children:"onRefreshContents"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onRefreshContents() [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This client callback is called just from refreshContents just after the new HTML is delivered from the server."}),"\n",(0,a.jsx)(n.h3,{id:"ondisplayhandler",children:"onDisplayHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onDisplayHandler() [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This client callback is called from exposeComponent after the element has been displayed on the screen. This ia a synthetic event that fires when the page is first displayed, when the component or its containing group is refreshed from the server, or when the component or its containing group is displayed via a programmatic 'show()' call. Note that setting the style.display value from JavaScript DOES NOT trigger this event"}),"\n",(0,a.jsx)(n.h3,{id:"onstartmodalhandler",children:"onStartModalHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onStartModalHandler(zindex) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Notification that this component is about to become modal. zindex is zindex value to use to make sure component is placed above system-provided div element."}),"\n",(0,a.jsx)(n.h3,{id:"onendmodalhandler",children:"onEndModalHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onEndModalHandler(zindex) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Notification that this component is about to stop being modal."}),"\n",(0,a.jsx)(n.h3,{id:"onpopupaction",children:"onPopupAction"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onPopupAction(popupName, action, value) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This client event, if present, is fired when a popup page has specified this component as its parent and fires an action.",(0,a.jsx)(n.br,{}),"\npopupName is the name of the popup window sending the action.",(0,a.jsx)(n.br,{}),"\naction is the name of the action.",(0,a.jsx)(n.br,{}),"\nvalue is the value associated with the action."]}),"\n",(0,a.jsx)(n.h3,{id:"exposecomponent",children:"exposeComponent"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod exposeComponent() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This manages the ondisplay event callback handling. The display event fires when the page is first displayed, when the component or its containing group is refreshed from the server, or when the component or its containing group is displayed via a programmatic 'show()' call. Note that setting the style.display value from JavaScript DOES NOT trigger this event. In general, application code should not modify or overload this method; instead, use the onDisplayHandler() to customize this processing."}),"\n",(0,a.jsx)(n.h3,{id:"draghandler",children:"dragHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dragHandler() [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is called by the layout manager when a drag-and-drop operation starts on this component."}),"\n",(0,a.jsx)(n.h3,{id:"drophandler",children:"dropHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dropHandler() [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is called by the layout manager when a drag-and-drop operation ends on this component."}),"\n",(0,a.jsx)(n.h3,{id:"dragnotifyhandler",children:"dragNotifyHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dragNotifyHandler(dragData) [ Final, Language = javascript ]\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is called by the layout manager when a drag operation that started on this component is completed (that is, after the target component finished processing the drop)."}),"\n",(0,a.jsx)(n.h3,{id:"dragstarthandler",children:"dragStartHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dragStartHandler(dragData) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This is called when a drag operation is started within this component.",(0,a.jsx)(n.br,{}),"\nThis method is implemented by subclasses."]}),"\n",(0,a.jsx)(n.h3,{id:"dropstarthandler",children:"dropStartHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dropStartHandler(dragData) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This is called when a data drop operation is started within this component.",(0,a.jsx)(n.br,{}),"\nThis method is implemented by subclasses."]}),"\n",(0,a.jsx)(n.h3,{id:"dragfinishhandler",children:"dragFinishHandler"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod dragFinishHandler(dragData) [ Abstract, Language = javascript ]\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This is called when a drag operation started within this component is completed.",(0,a.jsx)(n.br,{}),"\nThis method is implemented by subclasses."]})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var a=s(96540);const t={},l=a.createContext(t);function i(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);