"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[86874],{40121:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>i,frontMatter:()=>s,toc:()=>r});var n=a(74848),l=a(28453);const s={pagination_prev:null,pagination_next:null},o="%ZEN.Auxiliary.dataController",r=[{value:"Properties",id:"properties",level:2},{value:"modelClass",id:"modelclass",level:3},{value:"validationCode",id:"validationcode",level:3},{value:"%model",id:"model",level:3},{value:"Methods",id:"methods",level:2},{value:"%GetClientValidationCode",id:"getclientvalidationcode",level:3},{value:"%AcquireData",id:"acquiredata",level:3},{value:"%AcquireMetaData",id:"acquiremetadata",level:3},{value:"%CreateModelInstance",id:"createmodelinstance",level:3},{value:"%DeleteModelInstance",id:"deletemodelinstance",level:3},{value:"%GetModelPropertyList",id:"getmodelpropertylist",level:3},{value:"%GetModelPropertyInfo",id:"getmodelpropertyinfo",level:3},{value:"save",id:"save",level:3},{value:"loadModel",id:"loadmodel",level:3},{value:"LoadFromServer",id:"loadfromserver",level:3},{value:"SaveToServer",id:"savetoserver",level:3},{value:"createNewObject",id:"createnewobject",level:3},{value:"deleteId",id:"deleteid",level:3},{value:"DeleteFromServer",id:"deletefromserver",level:3},{value:"ExecuteAction",id:"executeaction",level:3},{value:"execValidationCode",id:"execvalidationcode",level:3},{value:"setModelClass",id:"setmodelclass",level:3},{value:"getModelClass",id:"getmodelclass",level:3},{value:"setProperty",id:"setproperty",level:3}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"zenauxiliarydatacontroller",children:"%ZEN.Auxiliary.dataController"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.Auxiliary.dataController Extends %ZEN.Auxiliary.abstractController [ Deprecated, System = 3 ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This class is used to implement the Controller portion of the Zen Model-View-Controller mechanism.",(0,n.jsx)(t.br,{}),"\nA dataController component provides a way to establish a connection between a DataModel class and one or more %ZEN.Component.dataView components (such as a form).",(0,n.jsx)(t.br,{}),"\nWhen the data associated with the Controller changes, these changes are automatically broadcast to all View components connected to the Controller.",(0,n.jsx)(t.br,{}),"\nFor example, the following XML defines a dataController that will open an instance of the ",(0,n.jsx)(t.strong,{children:"MyApp.MyModel"})," class using an id value of 1. The %ZEN.Component.dynaForm object is bound to the dataController by setting its controllerId property to the id of the dataController: `` In this case, the %ZEN.Component.dynaForm will display a form with controls for every property within the Data Model."]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"modelclass",children:"modelClass"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property modelClass As %ZEN.Datatype.className(ZENEXPRESSION = 1);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Name of the DataModel class that provides data for this controller.",(0,n.jsx)(t.br,{}),"\nYou can change this value using the client-side setModelClass method. This will cause a new object to be loaded into the controller."]}),"\n",(0,n.jsx)(t.h3,{id:"validationcode",children:"validationCode"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property validationCode As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0) [ Internal ];\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Internal property.",(0,n.jsx)(t.br,{}),"\nUsed to hold client-side validation code."]}),"\n",(0,n.jsx)(t.h3,{id:"model",children:"%model"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property %model As %ZEN.DataModel.DataModel(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"Transient, internal property used to keep a reference to a DataModel object."}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"getclientvalidationcode",children:"%GetClientValidationCode"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetClientValidationCode() As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nGet any client-side validate code defined by the model class."]}),"\n",(0,n.jsx)(t.h3,{id:"acquiredata",children:"%AcquireData"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %AcquireData() As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nAcquire data from the associated DataModel object. This is typically called on the server before a page is served in order to get initial values for bound components."]}),"\n",(0,n.jsx)(t.h3,{id:"acquiremetadata",children:"%AcquireMetaData"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %AcquireMetaData() As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nAcquire meta-data from the associated DataModel object. This may be called before a page is rendered or in response to a client-side change to a dataController."]}),"\n",(0,n.jsx)(t.h3,{id:"createmodelinstance",children:"%CreateModelInstance"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %CreateModelInstance(pClass As %String, pID As %String, Output pSC As %Status, pController As %ZEN.Auxiliary.dataController) As %ZEN.DataModel.DataModel [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:'Internal method. Create an instance of a DataModel object. If pID is "", then this creates a new instance of model.'}),"\n",(0,n.jsx)(t.h3,{id:"deletemodelinstance",children:"%DeleteModelInstance"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteModelInstance(pClass As %String, pID As %String) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Delete an instance of a DataModel object."}),"\n",(0,n.jsx)(t.h3,{id:"getmodelpropertylist",children:"%GetModelPropertyList"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetModelPropertyList(Output pSC As %Status) As %String\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Return a comma-delimited list of the properties contained in the current DataModel class.",(0,n.jsx)(t.br,{}),"\nA property in the list may include type and label information in the form:",(0,n.jsx)(t.br,{}),"\nProp:type:label"]}),"\n",(0,n.jsx)(t.h3,{id:"getmodelpropertyinfo",children:"%GetModelPropertyInfo"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetModelPropertyInfo(Output pInfo As %String, pExtended As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Return an array containing information about the properties contained in the current DataModel.",(0,n.jsx)(t.br,{}),"\nRefer to the %GetPropertyInfo of the %ZEN.DataModel.DataModel for details."]}),"\n",(0,n.jsx)(t.h3,{id:"save",children:"save"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod save() [ Language = javascript ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Save data from this dataController back to the DataModel on the server. Return the id with which the model was saved or '' if it was not saved."}),"\n",(0,n.jsx)(t.h3,{id:"loadmodel",children:"loadModel"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod loadModel(force) [ Internal, Language = javascript ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Load new data into this dataController from DataModel on the server.",(0,n.jsx)(t.br,{}),"\nIf force is true, then always load data, otherwise only load data if there is no current data or it has been invalidated.",(0,n.jsx)(t.br,{}),"\nApplications should not call this directly. Instead they should use the setModelClass, setModelId, or update methods."]}),"\n",(0,n.jsx)(t.h3,{id:"loadfromserver",children:"LoadFromServer"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method LoadFromServer() As %String [ Internal, ZenMethod ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nLoad data from the associated DataModel object."]}),"\n",(0,n.jsx)(t.h3,{id:"savetoserver",children:"SaveToServer"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveToServer() As %String [ Internal, ZenMethod ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nSave data back to the associated DataModel object. Returns the id of the saved object (which could have changed in the case of an insert)."]}),"\n",(0,n.jsx)(t.h3,{id:"createnewobject",children:"createNewObject"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod createNewObject() [ Language = javascript ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Ask our associated dataModel to create a new (unsaved) instance."}),"\n",(0,n.jsx)(t.h3,{id:"deleteid",children:"deleteId"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod deleteId(id) [ Language = javascript ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Ask our associated dataModel to delete the item with the given id. Returns true if the delete was successful. If the dataModel is readOnly, then the delete will not happen."}),"\n",(0,n.jsx)(t.h3,{id:"deletefromserver",children:"DeleteFromServer"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method DeleteFromServer(pID As %String) As %Boolean [ Internal, ZenMethod ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nAsk the associated DataModel object to delete the given item."]}),"\n",(0,n.jsx)(t.h3,{id:"executeaction",children:"ExecuteAction"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteAction(pAction As %String, pData As %String) As %Boolean [ Internal, ZenMethod ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nAsk the associated DataModel object to perform the given action."]}),"\n",(0,n.jsx)(t.h3,{id:"execvalidationcode",children:"execValidationCode"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod execValidationCode(property, value) [ Internal, Language = javascript ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Internal method.",(0,n.jsx)(t.br,{}),"\nExecute client side validation code for this controller."]}),"\n",(0,n.jsx)(t.h3,{id:"setmodelclass",children:"setModelClass"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setModelClass(cls, id) [ Language = javascript ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This method lets you set the values of both the modelClass and (if provided) modelId properties for this controller. This will cause new data to be loaded and any views connected to this controller to refresh.",(0,n.jsx)(t.br,{}),"\nThis is useful in cases where both the model class and id need to change as this method changes both with a single call to the server."]}),"\n",(0,n.jsx)(t.h3,{id:"getmodelclass",children:"getModelClass"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod getModelClass() [ Language = javascript ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the class name of the current model associated with this dataController."}),"\n",(0,n.jsx)(t.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Set the value of a named property."})]})}function i(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var n=a(96540);const l={},s=n.createContext(l);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);