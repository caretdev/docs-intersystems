"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[4871],{92689:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>c,frontMatter:()=>r,toc:()=>i});var s=t(74848),a=t(28453);const r={pagination_prev:null,pagination_next:null},l="%ZEN.Component.loginForm",i=[{value:"Parameters",id:"parameters",level:2},{value:"SYSMODULE",id:"sysmodule",level:3},{value:"DEFAULTGROUPCLASS",id:"defaultgroupclass",level:3},{value:"DEFAULTGROUPSTYLE",id:"defaultgroupstyle",level:3},{value:"Properties",id:"properties",level:2},{value:"enctype",id:"enctype",level:3},{value:"onsubmit",id:"onsubmit",level:3},{value:"ondefault",id:"ondefault",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"handleKey",id:"handlekey",level:3},{value:"%OnDrawForm",id:"ondrawform",level:3},{value:"%OnAddToPageAfter",id:"onaddtopageafter",level:3},{value:"getFormElement",id:"getformelement",level:3},{value:"submit",id:"submit",level:3},{value:"reset",id:"reset",level:3},{value:"submitHandler",id:"submithandler",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"getController",id:"getcontroller",level:3},{value:"controlChangeHandler",id:"controlchangehandler",level:3}];function o(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"zencomponentloginform",children:"%ZEN.Component.loginForm"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.loginForm Extends group [ Deprecated, System = 3 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Login Form component.",(0,s.jsx)(n.br,{}),"\nThis is a specialized type of form designed to be used in a login page. Unlike the regular form component, this is a very simple object with none of the more advanced form features that are inappropriate for a login page."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"sysmodule",children:"SYSMODULE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter SYSMODULE = "form";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"defaultgroupclass",children:"DEFAULTGROUPCLASS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTGROUPCLASS = "form";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"defaultgroupstyle",children:"DEFAULTGROUPSTYLE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTGROUPSTYLE = "padding: 5px;";\n'})}),"\n",(0,s.jsx)(n.p,{children:"Default style for cells within forms"}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"enctype",children:"enctype"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property enctype As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Specifies the enctype for the form. (Refer to the HTML form element for details)."}),"\n",(0,s.jsx)(n.h3,{id:"onsubmit",children:"onsubmit"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property onsubmit As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["onsubmit event handler: This event is fired when this form is about to be submitted. It provides a chance to perform client-side validation of values within the form. If this event handler returns false, then the submit operation will not occur.",(0,s.jsx)(n.br,{}),"\nNote that unlike the HTML onsubmit event, this callback is ",(0,s.jsx)(n.em,{children:"always"})," called when the form is submitted."]}),"\n",(0,s.jsx)(n.h3,{id:"ondefault",children:"ondefault"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property ondefault As %ZEN.Datatype.eventHandler(HANDLER = "");\n'})}),"\n",(0,s.jsx)(n.p,{children:"ondefault event handler: This is a special event that is fired when the user performs an action that triggers the default action for a form. Typically this is when the user presses the Enter key within a control within the form."}),"\n",(0,s.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,s.jsx)(n.p,{children:"defines style sheet used by this component"}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"handlekey",children:"handleKey"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod handleKey(e) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ondrawform",children:"%OnDrawForm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawForm() As %Status [ CodeMode = expression ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"This callback gives form subclasses a chance to add additional hidden fields."}),"\n",(0,s.jsx)(n.h3,{id:"onaddtopageafter",children:"%OnAddToPageAfter"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnAddToPageAfter() As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"This callback ensures that CSRF tokens are set (if desired) in any page employing this widget"}),"\n",(0,s.jsx)(n.h3,{id:"getformelement",children:"getFormElement"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getFormElement() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the HTML form element associated with this component. This is provided in case there are addition HTML form properties or methods that an application needs access to."}),"\n",(0,s.jsx)(n.h3,{id:"submit",children:"submit"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod submit(action) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Submit the HTML form associated with this component. action if defined, is the action value that is passed on to the server %OnSubmit callback method."}),"\n",(0,s.jsx)(n.h3,{id:"reset",children:"reset"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod reset() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Reset the HTML form associated with this component."}),"\n",(0,s.jsx)(n.h3,{id:"submithandler",children:"submitHandler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod submitHandler() [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Internal method.",(0,s.jsx)(n.br,{}),"\nOnsubmit event handler. This is an internal method used to trap the default action of the form."]}),"\n",(0,s.jsx)(n.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set the value of a named property."}),"\n",(0,s.jsx)(n.h3,{id:"getcontroller",children:"getController"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getController() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"In case a control thinks this is a normal form, indicate that there is no data controller in play."}),"\n",(0,s.jsx)(n.h3,{id:"controlchangehandler",children:"controlChangeHandler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod controlChangeHandler(control, fire) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Internal method.",(0,s.jsx)(n.br,{}),"\nThis handler is called whenever the value of a control within this form is changed by the user."]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var s=t(96540);const a={},r=s.createContext(a);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);