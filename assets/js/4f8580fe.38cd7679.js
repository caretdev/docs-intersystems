"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[7655],{23606:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>i,toc:()=>a});var n=s(74848),r=s(28453);const i={pagination_prev:null,pagination_next:null},o="Config.IO",a=[{value:"Properties",id:"properties",level:2},{value:"File",id:"file",level:3},{value:"MagTape",id:"magtape",level:3},{value:"Other",id:"other",level:3},{value:"Terminal",id:"terminal",level:3},{value:"Methods",id:"methods",level:2},{value:"Load",id:"load",level:3},{value:"%OnValidateObject",id:"onvalidateobject",level:3}];function l(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"configio",children:"Config.IO"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class Config.IO Extends (%Persistent, Config.CommonSingleMethods, Config.CommonProperties, %SYSTEM.Help) [ Final, Inheritance = right, System = 4 ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This class allows you to modify and view the [IO] section of the CPF file through programatic APIs. While properties are usually modified through the System Management portal, there may be some occasion where modifying them through the API's is best for your system. In all the Config methods, if you do not specify the CPFFile parameter, the currently active CPF file is used. If you wish to modify a CPF file which is not the currently active one, then specify the CPFFile you wish to modify in the method call.",(0,n.jsx)(t.br,{}),"\nThe Flags parameter does not normally need to be specified; the defaults are usually sufficient for most cases.",(0,n.jsx)(t.br,{}),"\nYou can use either the provided API's (Get/Modify) to modify the properties by passing in the correct parameters, or use Object syntax to open and directly manipulate the config objects."]}),"\n",(0,n.jsx)(t.p,{children:"EXAMPLE:"}),"\n",(0,n.jsxs)(t.p,{children:['; Use class methods to modify properties %SYS>s Status=##Class(Config.IO).Get(.Properties) %SYS>i \'Status w !,"Error="',(0,n.jsx)(t.em,{children:'$SYSTEM.Status.GetErrorText(Status) %SYS>zw Properties Properties("File")="^%X364" Properties("MagTape")="^%XMAG" Properties("Other")="^%X364" Properties("Terminal")="^%X364" %STS>s Properties("Terminal")="^%XMYROUTINE" %SYS>s Status=##Class(Config.IO).Modify(.Properties) %SYS>i \'Status w !,"Error="'}),'$SYSTEM.Status.GetErrorText(Status) ; Now use Objects to modify properties %SYS>s Obj=##Class(Config.IO).Open() %SYS>w Obj.Terminal ^%XMYROUTINE %SYS>s Obj.Terminal=^%ZMYROUTINE %SYS>s Status=Obj.%Save() %SYS>i \'Status w !,"Error="_$SYSTEM.Status.GetErrorText(Status)']}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"file",children:"File"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property File As %String(MAXLEN = 32, MINLEN = 1) [ InitialExpression = "^%X364", Required ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"Routine to use in WRITE commands for sequential files."}),"\n",(0,n.jsx)(t.h3,{id:"magtape",children:"MagTape"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property MagTape As %String(MAXLEN = 32, MINLEN = 1) [ InitialExpression = "^%XMAG", Required ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"Routine to use in WRITE commands for magnetic tapes."}),"\n",(0,n.jsx)(t.h3,{id:"other",children:"Other"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property Other As %String(MAXLEN = 32, MINLEN = 1) [ InitialExpression = "^%X364", Required ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"Routine to use in WRITE commands for Other devices."}),"\n",(0,n.jsx)(t.h3,{id:"terminal",children:"Terminal"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property Terminal As %String(MAXLEN = 32, MINLEN = 1) [ InitialExpression = "^%X364", Required ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"Routine to use in WRITE commands for terminals."}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"load",children:"Load"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Load(Obj As %ObjectHandle = "", Flags As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Load the parameters into memory and activate.",(0,n.jsx)(t.br,{}),"\nParameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Obj"}),' = Handle to the object which caused the load. If "", then load everything, only called from STU.',(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Flags"})," = Type of modification.",(0,n.jsx)(t.br,{}),"\n0 - Modify",(0,n.jsx)(t.br,{}),"\n1 - Create/Insert"]}),"\n",(0,n.jsx)(t.h3,{id:"onvalidateobject",children:"%OnValidateObject"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnValidateObject() As %Status [ Internal ]\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);