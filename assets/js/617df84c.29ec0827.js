"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[79544],{21009:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>d,default:()=>l,frontMatter:()=>i,toc:()=>o});var s=t(74848),a=t(28453);const i={pagination_prev:null,pagination_next:null},d="%ZEN.StudioDocument.AbstractEditor",o=[{value:"Parameters",id:"parameters",level:2},{value:"RESOURCE",id:"resource",level:3},{value:"Properties",id:"properties",level:2},{value:"DocumentID",id:"documentid",level:3},{value:"documentName",id:"documentname",level:3},{value:"readOnly",id:"readonly",level:3},{value:"modified",id:"modified",level:3},{value:"zoom",id:"zoom",level:3},{value:"editorReady",id:"editorready",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Contents",id:"contents",level:3},{value:"Methods",id:"methods",level:2},{value:"GetClassName",id:"getclassname",level:3},{value:"%OnDrawHTMLHead",id:"ondrawhtmlhead",level:3},{value:"%DrawStudioAPI",id:"drawstudioapi",level:3},{value:"%OnDrawHTMLBody",id:"ondrawhtmlbody",level:3},{value:"onloadHandler",id:"onloadhandler",level:3},{value:"onStartEditor",id:"onstarteditor",level:3},{value:"setResultsDiv",id:"setresultsdiv",level:3},{value:"raiseEvent",id:"raiseevent",level:3},{value:"raiseDocument",id:"raisedocument",level:3},{value:"raiseOpenDocument",id:"raiseopendocument",level:3},{value:"raiseSelect",id:"raiseselect",level:3},{value:"onSetDocument",id:"onsetdocument",level:3},{value:"onGetDocument",id:"ongetdocument",level:3},{value:"onSetProperty",id:"onsetproperty",level:3},{value:"onGetProperty",id:"ongetproperty",level:3},{value:"onCmdDelete",id:"oncmddelete",level:3},{value:"onCmdCut",id:"oncmdcut",level:3},{value:"onCmdCopy",id:"oncmdcopy",level:3},{value:"onCmdUndo",id:"oncmdundo",level:3},{value:"onCanUndo",id:"oncanundo",level:3},{value:"onCmdRedo",id:"oncmdredo",level:3},{value:"onCmdPaste",id:"oncmdpaste",level:3},{value:"onSetZoom",id:"onsetzoom",level:3},{value:"onSetReadOnly",id:"onsetreadonly",level:3},{value:"isReadOnly",id:"isreadonly",level:3},{value:"getZoom",id:"getzoom",level:3},{value:"setZoom",id:"setzoom",level:3},{value:"isModified",id:"ismodified",level:3},{value:"setModified",id:"setmodified",level:3},{value:"clearModified",id:"clearmodified",level:3}];function r(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"zenstudiodocumentabstracteditor",children:"%ZEN.StudioDocument.AbstractEditor"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.StudioDocument.AbstractEditor Extends %ZEN.Component.page [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Base class for Studio Document editors that use the XEDIT window within Studio.",(0,s.jsx)(n.br,{}),"\nAn XEDIT document is a window within Studio with 2 panes: the upper pane contains HTML content, served by a subclass of this class; the lower pane displays an editable XML representation of the data displayed in the upper pane. This XML representation is provided by this class as well.",(0,s.jsx)(n.br,{}),"\nSubclasses of this are used to provide Studio content editors for Abstract documents served by a corresponding subclass of the %ZEN.StudioDocument.AbstractDocument class."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"resource",children:"RESOURCE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter RESOURCE = "%Development:USE";\n'})}),"\n",(0,s.jsx)(n.p,{children:"Require %Development:USE for access to subclasses of this page."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"documentid",children:"DocumentID"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property DocumentID As %ZEN.Datatype.string(ZENURL = "ID");\n'})}),"\n",(0,s.jsx)(n.p,{children:"ID of current document. This is provided, as a URL parameter, by the Studio."}),"\n",(0,s.jsx)(n.h3,{id:"documentname",children:"documentName"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property documentName As %ZEN.Datatype.string(ZENURL = "DOC");\n'})}),"\n",(0,s.jsx)(n.p,{children:"Name of document being edited. This is provided, as a URL parameter, by the Studio."}),"\n",(0,s.jsx)(n.h3,{id:"readonly",children:"readOnly"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property readOnly As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"Indicates that this document is in read only mode. Editors should not set this property; it is set by the Studio. Use the isReadOnly method to observe this."}),"\n",(0,s.jsx)(n.h3,{id:"modified",children:"modified"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property modified As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"Indicates that this document is modified. Use the isModified,setModified, and clearModified methods to observe and change this."}),"\n",(0,s.jsx)(n.h3,{id:"zoom",children:"zoom"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property zoom As %ZEN.Datatype.float [ InitialExpression = 100 ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"Current zoom level (as a percentage) of this editor (if applicable). Use the getZoom and setZoom methods to modify and observe this."}),"\n",(0,s.jsx)(n.h3,{id:"editorready",children:"editorReady"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Property editorReady As %ZEN.Datatype.boolean(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,s.jsx)(n.p,{children:"Internal property. Client-side flag indicating that this editor is ready to process events from the Studio."}),"\n",(0,s.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,s.jsx)(n.h3,{id:"contents",children:"Contents"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"XData Contents\n"})}),"\n",(0,s.jsx)(n.p,{children:"Contents of editor page. Provided by subclass."}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"getclassname",children:"GetClassName"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetClassName(pName As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Given a document name, strip off the extension and return the class name."}),"\n",(0,s.jsx)(n.h3,{id:"ondrawhtmlhead",children:"%OnDrawHTMLHead"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawHTMLHead() As %Status\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This callback is called at the start of the HTML HEAD section of the page.",(0,s.jsx)(n.br,{}),"\nThis writes out the JavaScript methods expected by the Studio API."]}),"\n",(0,s.jsx)(n.h3,{id:"drawstudioapi",children:"%DrawStudioAPI"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %DrawStudioAPI() As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Writes out the JavaScript methods expected by the Studio API."}),"\n",(0,s.jsx)(n.h3,{id:"ondrawhtmlbody",children:"%OnDrawHTMLBody"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawHTMLBody() As %Status [ Internal ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This callback is called at the start of the HTML BODY section of the page.",(0,s.jsx)(n.br,{}),'\nThis writes out the "result" div expected by the Studio API.']}),"\n",(0,s.jsx)(n.h3,{id:"onloadhandler",children:"onloadHandler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onloadHandler() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"This client event, if present, is fired when the page is loaded."}),"\n",(0,s.jsx)(n.h3,{id:"onstarteditor",children:"onStartEditor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onStartEditor() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"This client event, if present, is fired when editor is loaded."}),"\n",(0,s.jsx)(n.h3,{id:"setresultsdiv",children:"setResultsDiv"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setResultsDiv(data) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set contents of results div used to pass data to Studio."}),"\n",(0,s.jsx)(n.h3,{id:"raiseevent",children:"raiseEvent"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod raiseEvent(type) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Raise a named event for Studio to catch."}),"\n",(0,s.jsx)(n.h3,{id:"raisedocument",children:"raiseDocument"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod raiseDocument(state) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Raise a 'document' event to Studio.",(0,s.jsx)(n.br,{}),"\nThis will set the contents of the XML pane within the Studio edit window, if applicable. state is the text that will be placed within the edit window."]}),"\n",(0,s.jsx)(n.h3,{id:"raiseopendocument",children:"raiseOpenDocument"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod raiseOpenDocument(doc) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Raise an OPENDOC event to Studio.",(0,s.jsx)(n.br,{}),"\ndoc is the full name (with extension) of the document for Studio to open."]}),"\n",(0,s.jsx)(n.h3,{id:"raiseselect",children:"raiseSelect"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod raiseSelect(proplist) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Raise a SELECT event to Studio.",(0,s.jsx)(n.br,{}),"\nThis will update the Studio Inspector.",(0,s.jsx)(n.br,{}),"\nproplist is a list of property values for inspector to show. The first property in the list is the Name of selected item. proplist is an array of objects of the form:",(0,s.jsx)(n.br,{}),"\nproplist[n] = obj;",(0,s.jsx)(n.br,{}),"\nobj.name = 'name of property'",(0,s.jsx)(n.br,{}),"\nobj.type = 'type' (STRING,INTEGER, etc.)",(0,s.jsx)(n.br,{}),"\nobj.value = value"]}),"\n",(0,s.jsx)(n.h3,{id:"onsetdocument",children:"onSetDocument"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onSetDocument(state) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Notification that the user has changed the XML version of this document.",(0,s.jsx)(n.br,{}),"\nstate is the contents of the XML editor pane."]}),"\n",(0,s.jsx)(n.h3,{id:"ongetdocument",children:"onGetDocument"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onGetDocument() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Get document with current state of editor (raise event with current document in it)"}),"\n",(0,s.jsx)(n.h3,{id:"onsetproperty",children:"onSetProperty"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onSetProperty(prop, value) [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Notification that the user has changed a property using the Inspector.",(0,s.jsx)(n.br,{}),"\nprop is the property name, value is the new value."]}),"\n",(0,s.jsx)(n.h3,{id:"ongetproperty",children:"onGetProperty"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onGetProperty(prop) [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the value of a specific property value from the editor."}),"\n",(0,s.jsx)(n.h3,{id:"oncmddelete",children:"onCmdDelete"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdDelete() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the delete command."}),"\n",(0,s.jsx)(n.h3,{id:"oncmdcut",children:"onCmdCut"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdCut() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the cut command."}),"\n",(0,s.jsx)(n.h3,{id:"oncmdcopy",children:"onCmdCopy"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdCopy() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the copy command."}),"\n",(0,s.jsx)(n.h3,{id:"oncmdundo",children:"onCmdUndo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdUndo() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the undo command."}),"\n",(0,s.jsx)(n.h3,{id:"oncanundo",children:"onCanUndo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCanUndo() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Test if undo is possible."}),"\n",(0,s.jsx)(n.h3,{id:"oncmdredo",children:"onCmdRedo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdRedo() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the redo command."}),"\n",(0,s.jsx)(n.h3,{id:"oncmdpaste",children:"onCmdPaste"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCmdPaste() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that user has invoked the paste command."}),"\n",(0,s.jsx)(n.h3,{id:"onsetzoom",children:"onSetZoom"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onSetZoom() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that the zoom level of the editor has changed."}),"\n",(0,s.jsx)(n.h3,{id:"onsetreadonly",children:"onSetReadOnly"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onSetReadOnly() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notification that Studio has modified the ReadOnly state of the editor."}),"\n",(0,s.jsx)(n.h3,{id:"isreadonly",children:"isReadOnly"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod isReadOnly() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the ReadOnly state of the editor."}),"\n",(0,s.jsx)(n.h3,{id:"getzoom",children:"getZoom"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getZoom() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Return the zoom level of the editor."}),"\n",(0,s.jsx)(n.h3,{id:"setzoom",children:"setZoom"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setZoom(zoom) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set the zoom level of the editor."}),"\n",(0,s.jsx)(n.h3,{id:"ismodified",children:"isModified"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod isModified() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Test if the document is modified."}),"\n",(0,s.jsx)(n.h3,{id:"setmodified",children:"setModified"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setModified() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Set the modified flag for this editor."}),"\n",(0,s.jsx)(n.h3,{id:"clearmodified",children:"clearModified"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod clearModified() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Clear the modified flag for this editor."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(96540);const a={},i=s.createContext(a);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);