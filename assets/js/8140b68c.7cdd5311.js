"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[10601],{29340:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>d,frontMatter:()=>r,toc:()=>l});var i=n(74848),s=n(28453);const r={pagination_prev:null,pagination_next:null},c="%SOAP.Security.TextElement",l=[{value:"Properties",id:"properties",level:2},{value:"Text",id:"text",level:3},{value:"Methods",id:"methods",level:2},{value:"XMLExportInternal",id:"xmlexportinternal",level:3},{value:"SetText",id:"settext",level:3},{value:"SetCanonicalized",id:"setcanonicalized",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"soapsecuritytextelement",children:"%SOAP.Security.TextElement"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SOAP.Security.TextElement Extends %SOAP.Security.Element [ System = 4 ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"%SOAP.Security.TextElement defines a Security header element which is output from the text string included that is set by its user. The text string must include the element tag as well as all its children."}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t.h3,{id:"text",children:"Text"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Property Text As %String;\n"})}),"\n",(0,i.jsx)(t.p,{children:"The text to be output for this element."}),"\n",(0,i.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(t.h3,{id:"xmlexportinternal",children:"XMLExportInternal"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method XMLExportInternal() As %Status [ Internal, ProcedureBlock = 0, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(t.p,{children:"XMLExport of this element is just the write of the buffer"}),"\n",(0,i.jsx)(t.h3,{id:"settext",children:"SetText"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetText(document As %XML.Document, nodeid As %String) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Set the Text property from specified XML document node as the specified text from the document.",(0,i.jsx)(t.br,{}),"\ndocument is the document which contains the text to be added. The document will frequently be set as client.ImportHandler where client is the %SOAP.WebClient subclass. nodeid is the nodeid of the element and its children to be add to text property."]}),"\n",(0,i.jsx)(t.h3,{id:"setcanonicalized",children:"SetCanonicalized"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetCanonicalized(document As %XML.Document, nodeid As %String, ByRef PrefixList) As %Status\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Set the Text property from specified XML document node as canonicalized text.",(0,i.jsx)(t.br,{}),"\ndocument is the document which contains the text to be canonicalized. The document will frequently be set as client.ImportHandler where client is the %SOAP.WebClient subclass.",(0,i.jsx)(t.br,{}),"\nnodeid is the nodeid of the element and its children to be add to Text property.",(0,i.jsx)(t.br,{}),'\nFor Exclusive XML Canonicalization prefixList is a multidimensional array which specifies the prefixes that are included on the IncludedNamespaces list. prefixList(prefix)="" if the prefix is on the list. If prefixList is = "c14n", then inclusive canonicalization is performed.']})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>l});var i=n(96540);const s={},r=i.createContext(s);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);