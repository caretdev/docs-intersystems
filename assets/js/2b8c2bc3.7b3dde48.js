"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[15058],{41019:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>r,default:()=>p,frontMatter:()=>l,toc:()=>a});var i=t(74848),n=t(28453);const l={pagination_prev:null,pagination_next:null},r="%DeepSee.ListingGroup",a=[{value:"Methods",id:"methods",level:2},{value:"%GetListingGroups",id:"getlistinggroups",level:3},{value:"%GetClassName",id:"getclassname",level:3},{value:"%DeleteListingGroup",id:"deletelistinggroup",level:3},{value:"%SaveListingGroup",id:"savelistinggroup",level:3},{value:"%ListingGroupExists",id:"listinggroupexists",level:3},{value:"%GetModel",id:"getmodel",level:3},{value:"%GetListingGroupArray",id:"getlistinggrouparray",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"deepseelistinggroup",children:"%DeepSee.ListingGroup"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.ListingGroup Extends %RegisteredObject [ System = 4 ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"This class contains APIs for managing Listing Groups. A listing group porvides the ability to define DeepSee listings outside of the cube and subject area definitions."}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"getlistinggroups",children:"%GetListingGroups"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetListingGroups(Output pList, pCompiled = 1, pRequestCube = "*")\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Returns a list of listing groups currently stored. The return structure is",(0,i.jsx)(s.br,{}),"\npList(GroupID,counter) = $LB(GroupID,Name,Caption,CubeList,Class). If the setting pCompiled = 1 is used, only listing groups that have successfully been compiled will be returned. Otherwise, all models currently saved will be returned."]}),"\n",(0,i.jsx)(s.h3,{id:"getclassname",children:"%GetClassName"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetClassName(pListingGroupName = "", pCompiled = 1) As %String\n'})}),"\n",(0,i.jsx)(s.p,{children:"Look up the storage class for a given listing group. The parameter pCompiled = 1 indicates only the available metadata should be returned. pCompiled = 0 returns all listing definition classes defined in the namespace."}),"\n",(0,i.jsx)(s.h3,{id:"deletelistinggroup",children:"%DeleteListingGroup"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteListingGroup(pListingGroup) As %Status [ Internal ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Utility method to delete a listing group definition. This will delete both compiled and uncompiled definitions."}),"\n",(0,i.jsx)(s.h3,{id:"savelistinggroup",children:"%SaveListingGroup"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SaveListingGroup(pGroupObject As %DeepSee.Model.ListingGroup.listingGroup, pClassName = "") As %Status\n'})}),"\n",(0,i.jsx)(s.p,{children:"Utility method for saving a listing group object to its class."}),"\n",(0,i.jsx)(s.h3,{id:"listinggroupexists",children:"%ListingGroupExists"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ListingGroupExists(pListGroupName = "", pCompiled = 1) As %Boolean\n'})}),"\n",(0,i.jsx)(s.h3,{id:"getmodel",children:"%GetModel"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetModel(pClassName = "", Output pStatus As %Status) As %DeepSee.Model.ListingGroup.listingGroup [ Internal ]\n'})}),"\n",(0,i.jsx)(s.p,{children:"Serialize the listing group model stored in the class pClassName."}),"\n",(0,i.jsx)(s.h3,{id:"getlistinggrouparray",children:"%GetListingGroupArray"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetListingGroupArray(ByRef pParameters, Output pMetaData, Output %pData) As %Status [ Final, Internal ]\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return an array of all currently defined DeepSee ListingGroups in a format that can be used by a finderDialog."})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>a});var i=t(96540);const n={},l=i.createContext(n);function r(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);