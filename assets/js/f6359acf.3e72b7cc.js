"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[94346],{35265:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>l,default:()=>c,frontMatter:()=>t,toc:()=>r});var i=s(74848),a=s(28453);const t={pagination_prev:null,pagination_next:null},l="%ZEN.Auxiliary.dataSet",r=[{value:"Properties",id:"properties",level:2},{value:"dimensions",id:"dimensions",level:3},{value:"%size",id:"size",level:3},{value:"%data",id:"data",level:3},{value:"%labels",id:"labels",level:3},{value:"clientData",id:"clientdata",level:3},{value:"clientLabels",id:"clientlabels",level:3},{value:"clientSize",id:"clientsize",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"%SetDimensions",id:"setdimensions",level:3},{value:"%GetDimensions",id:"getdimensions",level:3},{value:"%Clear",id:"clear",level:3},{value:"%GetLabel",id:"getlabel",level:3},{value:"%GetDimSize",id:"getdimsize",level:3},{value:"%SetLabel",id:"setlabel",level:3},{value:"%GetValue",id:"getvalue",level:3},{value:"%SetValue",id:"setvalue",level:3},{value:"%GetArray",id:"getarray",level:3},{value:"%SetArray",id:"setarray",level:3},{value:"%Print",id:"print",level:3},{value:"%OnObjectSynch",id:"onobjectsynch",level:3},{value:"%OnZENDeserialize",id:"onzendeserialize",level:3},{value:"%OnDrawObjectProperties",id:"ondrawobjectproperties",level:3},{value:"%SerializeData",id:"serializedata",level:3},{value:"clear",id:"clear-1",level:3},{value:"redim",id:"redim",level:3},{value:"swap",id:"swap",level:3},{value:"insert",id:"insert",level:3},{value:"remove",id:"remove",level:3},{value:"getDimensions",id:"getdimensions-1",level:3},{value:"getDimSize",id:"getdimsize-1",level:3},{value:"getLabel",id:"getlabel-1",level:3},{value:"getData",id:"getdata",level:3},{value:"setLabel",id:"setlabel-1",level:3},{value:"setData",id:"setdata",level:3}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"zenauxiliarydataset",children:"%ZEN.Auxiliary.dataSet"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Auxiliary.dataSet Extends %ZEN.Component.object [ Deprecated, System = 3 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This class provides a way to assemble data that can be conveniently passed between the web client and the server. A dataSet object can contain 0-dimensional (scalar) data, 1-dimensional (list), 2-dimensional, or 3-dimensional data, as specified by its dimensions property."}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"dimensions",children:"dimensions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property dimensions As %ZEN.Datatype.integer(MAXVAL = 3, MINVAL = 0, XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,i.jsx)(n.p,{children:"Number of dimensions within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"size",children:"%size"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property %size As %ZEN.Datatype.integer(MINVAL = 1, XMLPROJECTION = "NONE") [ MultiDimensional, Private ];\n'})}),"\n",(0,i.jsx)(n.p,{children:"Size, indexed by dimension number, of each dimension."}),"\n",(0,i.jsx)(n.h3,{id:"data",children:"%data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property %data As %ZEN.Datatype.string(XMLPROJECTION = "NONE") [ MultiDimensional, Private ];\n'})}),"\n",(0,i.jsx)(n.p,{children:"Array of data values within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"labels",children:"%labels"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property %labels As %ZEN.Datatype.string(XMLPROJECTION = "NONE") [ MultiDimensional, Private ];\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Set of captions used as labels along the various dimensions of the dataSet.",(0,i.jsx)(n.br,{}),"\nThe array of labels is indexed by dimension number and position within the dimension."]}),"\n",(0,i.jsx)(n.h3,{id:"clientdata",children:"clientData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property clientData As %ZEN.Datatype.list(XMLPROJECTION = "NONE", ZENSETTING = 0);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Array of serialized data values going to and coming from the client."}),"\n",(0,i.jsx)(n.h3,{id:"clientlabels",children:"clientLabels"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property clientLabels As %ZEN.Datatype.list(XMLPROJECTION = "NONE", ZENSETTING = 0);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Array of serialized label values going to and coming from the client."}),"\n",(0,i.jsx)(n.h3,{id:"clientsize",children:"clientSize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Property clientSize As %ZEN.Datatype.list(XMLPROJECTION = "NONE", ZENSETTING = 0);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Array of serialized dimension size values going to and coming from the client."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"setdimensions",children:"%SetDimensions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SetDimensions(dims As %Integer)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the number of dimensions within the dataSet. Changing the number of dimensions deletes the contents of the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"getdimensions",children:"%GetDimensions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetDimensions() As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the number of dimensions within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"clear",children:"%Clear"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %Clear()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Delete data currently in the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"getlabel",children:"%GetLabel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetLabel(n As %Integer = 1, dim As %Integer = 1) As %String [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the value of a label at position n in dimension dim within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"getdimsize",children:"%GetDimSize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetDimSize(dim As %Integer = 1) As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return current size of a dimension."}),"\n",(0,i.jsx)(n.h3,{id:"setlabel",children:"%SetLabel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SetLabel(pLabel As %String, n As %Integer = 1, dim As %Integer = 1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the value of a label at position n in dimension dim within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"getvalue",children:"%GetValue"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetValue(d1 As %Integer = 1, d2 As %Integer = 1, d3 As %Integer = 1) As %String [ CodeMode = expression ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the value of a cell within the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"setvalue",children:"%SetValue"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SetValue(pValue As %String, d1 As %Integer = 1, d2 As %Integer = 1, d3 As %Integer = 1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the value of a cell within the dataSet. Updates dimension size as needed."}),"\n",(0,i.jsx)(n.h3,{id:"getarray",children:"%GetArray"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %GetArray(Output pArray)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Copy the contents of this dataSet into a local array."}),"\n",(0,i.jsx)(n.h3,{id:"setarray",children:"%SetArray"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SetArray(ByRef pArray, s1 As %Integer = 1, s2 As %Integer = 1, s3 As %Integer = 1)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the contents of this dataSet from a local array. The local array must have the same dimensionality as the dataSet and must have the correct number and type of subscripts.",(0,i.jsx)(n.br,{}),"\nThe caller is also responsible for supplying the sizes of each dimension."]}),"\n",(0,i.jsx)(n.h3,{id:"print",children:"%Print"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %Print()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Print out contents of this dataSet to the current device."}),"\n",(0,i.jsx)(n.h3,{id:"onobjectsynch",children:"%OnObjectSynch"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnObjectSynch() As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Make sure client data is prepared."}),"\n",(0,i.jsx)(n.h3,{id:"onzendeserialize",children:"%OnZENDeserialize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnZENDeserialize() As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Deserialize additional values from the client."}),"\n",(0,i.jsx)(n.h3,{id:"ondrawobjectproperties",children:"%OnDrawObjectProperties"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnDrawObjectProperties() As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Called just before we serve property values to the client."}),"\n",(0,i.jsx)(n.h3,{id:"serializedata",children:"%SerializeData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SerializeData(pDelim As %String = {$C(5)}) As %Status\n"})}),"\n",(0,i.jsx)(n.p,{children:"Convert internal arrays to a serialized strings for use on the client."}),"\n",(0,i.jsx)(n.h3,{id:"clear-1",children:"clear"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod clear() [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Clear contents of this dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"redim",children:"redim"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod redim(dims, sz1, sz2, sz3) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Update size of dataSet to new dimensions and size."}),"\n",(0,i.jsx)(n.h3,{id:"swap",children:"swap"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod swap(dim, item1, item2, labels) [ Language = javascript ]\n"})}),"\n",(0,i.jsxs)(n.p,{children:['Swap the contents of 2 "slices" of the dataSet within the specified dimension.',(0,i.jsx)(n.br,{}),"\nFor example, swap the contents of 2 rows within a 2D dataSet. If labels is true, then swap labels as well."]}),"\n",(0,i.jsx)(n.h3,{id:"insert",children:"insert"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod insert(dim, index) [ Language = javascript ]\n"})}),"\n",(0,i.jsxs)(n.p,{children:['Insert a new "slice" into the dataSet within the specified dimension just before item index (0-based).',(0,i.jsx)(n.br,{}),"\nIf index is -1, then insert at the end."]}),"\n",(0,i.jsx)(n.h3,{id:"remove",children:"remove"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod remove(dim, index) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:'Remove a "slice" from the dataSet within the specified dimension at position index (0-based).'}),"\n",(0,i.jsx)(n.h3,{id:"getdimensions-1",children:"getDimensions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getDimensions() [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the number of dimensions in the dataSet."}),"\n",(0,i.jsx)(n.h3,{id:"getdimsize-1",children:"getDimSize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getDimSize(dim) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the number of items in the specified dimension (dim is 1,2, or 3)."}),"\n",(0,i.jsx)(n.h3,{id:"getlabel-1",children:"getLabel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getLabel(n, dim) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the label at position n (0-based) in the given dimension (1,2, or 3)."}),"\n",(0,i.jsx)(n.h3,{id:"getdata",children:"getData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getData(d1, d2, d3) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the data contained in the specified location. Location is 0-based;"}),"\n",(0,i.jsx)(n.h3,{id:"setlabel-1",children:"setLabel"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setLabel(label, n, dim) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the value of the label at position n (0-based) in the given dimension (1,2, or 3)."}),"\n",(0,i.jsx)(n.h3,{id:"setdata",children:"setData"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod setData(value, d1, d2, d3) [ Language = javascript ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the data contained in the specified location. Location is 0-based;"})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(96540);const a={},t=i.createContext(a);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);