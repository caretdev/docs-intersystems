"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[27974],{3978:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>a,default:()=>d,frontMatter:()=>c,toc:()=>i});var r=s(74848),l=s(28453);const c={pagination_prev:null,pagination_next:null},a="%ZEN.Report.Display.COSChart.dsFormulaParser",i=[{value:"Properties",id:"properties",level:2},{value:"parseTree",id:"parsetree",level:3},{value:"engine",id:"engine",level:3},{value:"funcSet",id:"funcset",level:3},{value:"errorHTML",id:"errorhtml",level:3},{value:"lookupTable",id:"lookuptable",level:3},{value:"dsFormulaLastError",id:"dsformulalasterror",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"setFunctionSet",id:"setfunctionset",level:3},{value:"eval",id:"eval",level:3},{value:"getTree",id:"gettree",level:3},{value:"setTree",id:"settree",level:3},{value:"evalNode",id:"evalnode",level:3},{value:"parse",id:"parse",level:3},{value:"tokenize",id:"tokenize",level:3},{value:"reduceTokens",id:"reducetokens",level:3},{value:"reduceFunction",id:"reducefunction",level:3},{value:"isExpressionBalanced",id:"isexpressionbalanced",level:3},{value:"dsGetErrorHTML",id:"dsgeterrorhtml",level:3},{value:"isBinaryOperator",id:"isbinaryoperator",level:3},{value:"isUnaryOperator",id:"isunaryoperator",level:3},{value:"isOperatorChar",id:"isoperatorchar",level:3},{value:"isUnaryOperatorChar",id:"isunaryoperatorchar",level:3},{value:"isWhiteSpace",id:"iswhitespace",level:3},{value:"isIdentChar",id:"isidentchar",level:3},{value:"isSpecialChar",id:"isspecialchar",level:3},{value:"isValidIdent",id:"isvalidident",level:3},{value:"isValidClassName",id:"isvalidclassname",level:3},{value:"isFunction",id:"isfunction",level:3},{value:"testPrecedence",id:"testprecedence",level:3},{value:"getPrecedence",id:"getprecedence",level:3},{value:"get",id:"get",level:3},{value:"findFunctionInFunctionSet",id:"findfunctioninfunctionset",level:3},{value:"lastIndexOf",id:"lastindexof",level:3},{value:"Insert",id:"insert",level:3}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"zenreportdisplaycoschartdsformulaparser",children:"%ZEN.Report.Display.COSChart.dsFormulaParser"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.COSChart.dsFormulaParser Extends %RegisteredObject [ Deprecated ]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"parsetree",children:"parseTree"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property parseTree As parseTreeNode;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"engine",children:"engine"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property engine As dsFormulaEngine;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"funcset",children:"funcSet"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property funcSet As list Of function;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"errorhtml",children:"errorHTML"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property errorHTML As %String;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"lookuptable",children:"lookupTable"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property lookupTable As %String [ MultiDimensional ];\n"})}),"\n",(0,r.jsx)(n.h3,{id:"dsformulalasterror",children:"dsFormulaLastError"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Property dsFormulaLastError As %String;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnNew() As %Status\n"})}),"\n",(0,r.jsx)(n.h3,{id:"setfunctionset",children:"setFunctionSet"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method setFunctionSet(funcSet)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Connect a function set to the parser."}),"\n",(0,r.jsx)(n.h3,{id:"eval",children:"eval"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method eval(lookupFunc)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Evaluate a DeepSee formula. lookupFunc is a function used to lookup ident values."}),"\n",(0,r.jsx)(n.h3,{id:"gettree",children:"getTree"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method getTree()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Get the parse tree."}),"\n",(0,r.jsx)(n.h3,{id:"settree",children:"setTree"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method setTree(tree)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Set the parse tree directly."}),"\n",(0,r.jsx)(n.h3,{id:"evalnode",children:"evalNode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method evalNode(node, lookupFunc)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Evaluate a node within a parse tree"}),"\n",(0,r.jsx)(n.h3,{id:"parse",children:"parse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method parse(expr)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Parse a DeepSee formula."}),"\n",(0,r.jsx)(n.h3,{id:"tokenize",children:"tokenize"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method tokenize(expr)\n"})}),"\n",(0,r.jsx)(n.p,{children:"tokenize a DeepSee formula; return a list of tokens. each token is of the form: {type:ident|func|,|(|)|unary|op|string|number , value:value} In ObjectScript the tokenList is a list of parseTreeNodes."}),"\n",(0,r.jsx)(n.h3,{id:"reducetokens",children:"reduceTokens"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method reduceTokens(tokens, expr)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reduce the token list (tokens) into a parse tree (expr) and return the top node of it."}),"\n",(0,r.jsx)(n.h3,{id:"reducefunction",children:"reduceFunction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method reduceFunction(tokens, offset, expr)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Reduce a function within a token list. Return index of next token."}),"\n",(0,r.jsx)(n.h3,{id:"isexpressionbalanced",children:"isExpressionBalanced"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isExpressionBalanced(expr)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Make a pass over expression and make sure parens and quotes are balanced"}),"\n",(0,r.jsx)(n.h3,{id:"dsgeterrorhtml",children:"dsGetErrorHTML"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method dsGetErrorHTML(code, msg, expr, start, end)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return error HTML."}),"\n",(0,r.jsx)(n.h3,{id:"isbinaryoperator",children:"isBinaryOperator"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isBinaryOperator(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isunaryoperator",children:"isUnaryOperator"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isUnaryOperator(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isoperatorchar",children:"isOperatorChar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isOperatorChar(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isunaryoperatorchar",children:"isUnaryOperatorChar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isUnaryOperatorChar(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"iswhitespace",children:"isWhiteSpace"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isWhiteSpace(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isidentchar",children:"isIdentChar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isIdentChar(ch, start)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isspecialchar",children:"isSpecialChar"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isSpecialChar(ch)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isvalidident",children:"isValidIdent"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod isValidIdent(token)\n"})}),"\n",(0,r.jsx)(n.p,{children:"test if complete token is a valid identifier"}),"\n",(0,r.jsx)(n.h3,{id:"isvalidclassname",children:"isValidClassName"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod isValidClassName(token)\n"})}),"\n",(0,r.jsx)(n.p,{children:"test if token is a valid class name"}),"\n",(0,r.jsx)(n.h3,{id:"isfunction",children:"isFunction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method isFunction(token)\n"})}),"\n",(0,r.jsx)(n.p,{children:"test if token is a supported function name"}),"\n",(0,r.jsx)(n.h3,{id:"testprecedence",children:"testPrecedence"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method testPrecedence(op1, op2)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Test if op1 has precendence over op2"}),"\n",(0,r.jsx)(n.h3,{id:"getprecedence",children:"getPrecedence"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method getPrecedence(op)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the precedence value for the given operator."}),"\n",(0,r.jsx)(n.h3,{id:"get",children:"get"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod get(arg, defvalue)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"findfunctioninfunctionset",children:"findFunctionInFunctionSet"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"Method findFunctionInFunctionSet(func)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"lastindexof",children:"lastIndexOf"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod lastIndexOf(string, substring)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"insert",children:"Insert"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Insert(array, obj)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(96540);const l={},c=r.createContext(l);function a(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);