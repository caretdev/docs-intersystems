"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[25801],{56771:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,toc:()=>l});var a=t(74848),n=t(28453);const r={pagination_prev:null,pagination_next:null},i="%ZEN.SVGComponent.xyChart",l=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"DEFAULTMARKERSVISIBLE",id:"defaultmarkersvisible",level:3},{value:"Properties",id:"properties",level:2},{value:"independentXSeries",id:"independentxseries",level:3},{value:"chartPivot",id:"chartpivot",level:3},{value:"seriesYAxes",id:"seriesyaxes",level:3},{value:"tag",id:"tag",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"getXAxisType",id:"getxaxistype",level:3},{value:"getYAxisType",id:"getyaxistype",level:3},{value:"findDataRange",id:"finddatarange",level:3},{value:"renderSeries",id:"renderseries",level:3},{value:"getLegendLabels",id:"getlegendlabels",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"getToolTipInfo",id:"gettooltipinfo",level:3}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"zensvgcomponentxychart",children:"%ZEN.SVGComponent.xyChart"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.SVGComponent.xyChart Extends chart [ Deprecated, System = 3 ]\n"})}),"\n",(0,a.jsxs)(s.p,{children:["This is an SVG chart component that displays an X-Y chart.",(0,a.jsx)(s.br,{}),"\nThis chart plots two or more series of data as a series of x,y points on the chart. The first data series provides the x values, the second provides the correlated y values.",(0,a.jsx)(s.br,{}),"\nAdditional data series are plotted as y values correlated to the x values provided by the first series.",(0,a.jsx)(s.br,{}),"\nThe first series name is used as the name of the first series containing y-values.",(0,a.jsx)(s.br,{}),"\nYou can supply more than one set of x values using the independentXSeries property."]}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE = 1;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default value for plotToEdge property."}),"\n",(0,a.jsx)(s.h3,{id:"defaultmarkersvisible",children:"DEFAULTMARKERSVISIBLE"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTMARKERSVISIBLE = 1;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Default value for the markersVisible property."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"independentxseries",children:"independentXSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property independentXSeries As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Optional: if false (the default) the first data series is used to supply x values for the chart and all other data series provide y values.",(0,a.jsx)(s.br,{}),"\nIf false, then the chart will display multiple x series. In this case, the first data series provides the first set of x values, the second data provides the first set of y values, the third data series provides the second set of x values, and so on."]}),"\n",(0,a.jsx)(s.h3,{id:"chartpivot",children:"chartPivot"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property chartPivot As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, pivot this chart: display categories vertically and values horizontally."}),"\n",(0,a.jsx)(s.h3,{id:"seriesyaxes",children:"seriesYAxes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property seriesYAxes As %ZEN.Datatype.csv(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.h3,{id:"tag",children:"tag"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property tag As %ZEN.Datatype.string(XMLPROJECTION = "none") [ InitialExpression = "xyChart", Internal ];\n'})}),"\n",(0,a.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"getxaxistype",children:"getXAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getXAxisType() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of x axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"getyaxistype",children:"getYAxisType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getYAxisType() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the type of y axis (category or value) used by this chart."}),"\n",(0,a.jsx)(s.h3,{id:"finddatarange",children:"findDataRange"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod findDataRange() [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Internal method: return (as an object) the minimum and maximum data values for this chart. This is used for ranges that are automatically calculated."}),"\n",(0,a.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod renderSeries(group) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw data series for this chart. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(s.h3,{id:"getlegendlabels",children:"getLegendLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getLegendLabels() [ Language = javascript ]\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Return an array of labels to display within the Legend box.",(0,a.jsx)(s.br,{}),"\nFor xy chart we have to skip the first series, as it contains x-values, and not a logical data series."]}),"\n",(0,a.jsx)(s.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Set the value of a named property."}),"\n",(0,a.jsx)(s.h3,{id:"gettooltipinfo",children:"getToolTipInfo"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClientMethod getToolTipInfo(series, item, captions, values) [ Internal, Language = javascript ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return an object containing tooltip information for the given element."})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>l});var a=t(96540);const n={},r=a.createContext(n);function i(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);