"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[90421],{28730:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>l,frontMatter:()=>r,toc:()=>o});var s=t(74848),i=t(28453);const r={pagination_prev:null,pagination_next:null},a="%Library.Any",o=[];function c(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"libraryany",children:"%Library.Any"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Class %Library.Any [ ClassType = "", System = 1 ]\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is a generic datatype to use whenever a more specific type is not applicable. Use this type in situations like the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The value can be any type of data."}),"\n",(0,s.jsx)(n.li,{children:"IRIS does not include a class that describes the type. This applies, for example, if the value is an opaque structure that is not native to ObjectScript."}),"\n",(0,s.jsx)(n.li,{children:"The value can be one of several different types of data, and if you specify a type, that will confuse users of your code. For example, if a method can return either an object or a string, it is best for the method signature to have only a generic statement about the return value."}),"\n",(0,s.jsx)(n.li,{children:"The value being passed is a multidimensional array."}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);