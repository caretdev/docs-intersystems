"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[191],{32174:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>n,default:()=>c,frontMatter:()=>i,toc:()=>l});var a=t(74848),r=t(28453);const i={pagination_prev:null,pagination_next:null},n="%DeepSee.CubeManager.RegistryMap",l=[{value:"Properties",id:"properties",level:2},{value:"Groups",id:"groups",level:3},{value:"BuildStartHour",id:"buildstarthour",level:3},{value:"BuildStartMinute",id:"buildstartminute",level:3},{value:"Disabled",id:"disabled",level:3},{value:"IndependentSync",id:"independentsync",level:3},{value:"SerialUpdates",id:"serialupdates",level:3},{value:"StorageClass",id:"storageclass",level:3},{value:"Description",id:"description",level:3},{value:"UserUpdatesLocked",id:"userupdateslocked",level:3},{value:"Methods",id:"methods",level:2},{value:"Print",id:"print",level:3},{value:"ToArray",id:"toarray",level:3},{value:"RegistryMapTableViewExecute",id:"registrymaptableviewexecute",level:3},{value:"RegistryMapTableViewFetch",id:"registrymaptableviewfetch",level:3},{value:"RegistryMapTableViewClose",id:"registrymaptableviewclose",level:3},{value:"SaveToClass",id:"savetoclass",level:3},{value:"LoadFromClass",id:"loadfromclass",level:3},{value:"CreateMapTimeStamp",id:"createmaptimestamp",level:3},{value:"Validate",id:"validate",level:3}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"deepseecubemanagerregistrymap",children:"%DeepSee.CubeManager.RegistryMap"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.CubeManager.RegistryMap Extends (%RegisteredObject, %XML.Adaptor, %JSON.Adaptor) [ System = 4 ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"The class responsible for organizing the information about the registered state of all cubes on the system."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"groups",children:"Groups"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Relationship Groups As %DeepSee.CubeManager.RegistryMapGroup [ Cardinality = many, Inverse = Map ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"The collection of groups that are defined in the overall sysem registry map"}),"\n",(0,a.jsx)(s.h3,{id:"buildstarthour",children:"BuildStartHour"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property BuildStartHour As %String(VALUELIST = ",00,01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23") [ InitialExpression = "21" ];\n'})}),"\n",(0,a.jsx)(s.p,{children:"The hour of the acceptable build window for the day, used to construct the timestamp that defines the window when builds may be started."}),"\n",(0,a.jsx)(s.h3,{id:"buildstartminute",children:"BuildStartMinute"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property BuildStartMinute As %String(VALUELIST = ",00,15,30,45") [ InitialExpression = "00" ];\n'})}),"\n",(0,a.jsx)(s.p,{children:"The quater hour of the acceptable build window for the day, used to construct the timestamp that defines the window when builds may be started."}),"\n",(0,a.jsx)(s.h3,{id:"disabled",children:"Disabled"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property Disabled As %ZEN.Datatype.boolean;\n"})}),"\n",(0,a.jsx)(s.p,{children:"Disabled = true will suspend the automated Build and Synch tasks for this namespace."}),"\n",(0,a.jsx)(s.h3,{id:"independentsync",children:"IndependentSync"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property IndependentSync As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"Controls whether cubes within a group are synchronized based on the relationship dependency (the default) or if it synchronizes solely based on schedule."}),"\n",(0,a.jsx)(s.h3,{id:"serialupdates",children:"SerialUpdates"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property SerialUpdates As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If this property is set to 1, the updater tasks will not job off the group update code and will instead run all updates in a single process."}),"\n",(0,a.jsx)(s.h3,{id:"storageclass",children:"StorageClass"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property StorageClass As %String(XMLPROJECTION = "NONE");\n'})}),"\n",(0,a.jsx)(s.p,{children:"When this is loaded into memory, this stores the name of the class the map was loaded from."}),"\n",(0,a.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property Description As %String(MAXLEN = 2500);\n"})}),"\n",(0,a.jsx)(s.p,{children:"Description of this registry definition."}),"\n",(0,a.jsx)(s.h3,{id:"userupdateslocked",children:"UserUpdatesLocked"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property UserUpdatesLocked As %ZEN.Datatype.boolean [ Internal ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"This is a flag that can be set in the stored registry to prevent users from being able to adjust the Disabled setting and prevents builds from this item in the registry."}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"print",children:"Print"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method Print()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Diagnostic method, prints information about the current map."}),"\n",(0,a.jsx)(s.h3,{id:"toarray",children:"ToArray"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method ToArray(ByRef pGroups, ByRef pCubes, ByRef pBuildOrders, ByRef pLookup) As %Status\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Converts the current map into an array. If this is the full {registered}U{unregistered} map, the first three arrays will match those returned using the call",(0,a.jsx)(s.br,{}),"\n%DeepSee.CubeManager.Utils.GetCubeGroups(.pGroups,.pCubes,.pBuildOrders)",(0,a.jsx)(s.br,{}),"\nThis method also returns a special lookup index which can be used to quickly reference the group or cube objects contained in the current map object. ",(0,a.jsx)(s.code,{children:'Set CubeName = "HOLEFOODS" Set Map = ##class(%DeepSee.CubeManager.Utils).BuildRegistryMap() Do Map.ToArray(.Groups,.Cubes,.BuildOrders,.Lookup) Set GroupIdx = $LG(Lookup("cubes",CubeName),1) Set CubeIdx = $LG(Lookup("cubes",CubeName),2) Set Cube = Map.Groups.GetAt(GroupIdx).Cubes.GetAt(CubeIdx)'})]}),"\n",(0,a.jsx)(s.h3,{id:"registrymaptableviewexecute",children:"RegistryMapTableViewExecute"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod RegistryMapTableViewExecute(ByRef pResults As %Binary, pSearchKey As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,a.jsx)(s.p,{children:"Definition for the table view of the overall cube list, as used by the Cube Registry page This does the actual work of building the rows of the Cube Registry table view."}),"\n",(0,a.jsx)(s.h3,{id:"registrymaptableviewfetch",children:"RegistryMapTableViewFetch"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RegistryMapTableViewFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = RegistryMapTableViewExecute ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Fetch method to retrieve a given row from the Cube Registry table representation."}),"\n",(0,a.jsx)(s.h3,{id:"registrymaptableviewclose",children:"RegistryMapTableViewClose"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RegistryMapTableViewClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = RegistryMapTableViewExecute ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"savetoclass",children:"SaveToClass"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Method SaveToClass(pClassName = "") As %Status\n'})}),"\n",(0,a.jsx)(s.p,{children:"Serializes the current Registry structure into XML inside the XData block in the relevant Registry class."}),"\n",(0,a.jsx)(s.h3,{id:"loadfromclass",children:"LoadFromClass"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LoadFromClass(pClassname As %String, Output pStatus As %Status) As %DeepSee.CubeManager.RegistryMap\n"})}),"\n",(0,a.jsx)(s.p,{children:"Deserialize the XML from the Registry XData block into a RegistryMap model."}),"\n",(0,a.jsx)(s.h3,{id:"createmaptimestamp",children:"CreateMapTimeStamp"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method CreateMapTimeStamp() As %String\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return the current build time in hh:mm:ss format."}),"\n",(0,a.jsx)(s.h3,{id:"validate",children:"Validate"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method Validate() As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Perform validation on the Map object to determine if it is ready for save."})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>l});var a=t(96540);const r={},i=a.createContext(r);function n(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);