"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[16658],{41588:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>a,default:()=>c,frontMatter:()=>i,toc:()=>o});var t=r(74848),n=r(28453);const i={pagination_prev:null,pagination_next:null},a="Security.X509Users",o=[{value:"Properties",id:"properties",level:2},{value:"Comment",id:"comment",level:3},{value:"Enabled",id:"enabled",level:3},{value:"LookupKey",id:"lookupkey",level:3},{value:"Username",id:"username",level:3},{value:"Methods",id:"methods",level:2},{value:"GetX509LookupKey",id:"getx509lookupkey",level:3},{value:"Copy",id:"copy",level:3},{value:"Create",id:"create",level:3},{value:"Delete",id:"delete",level:3},{value:"Exists",id:"exists",level:3},{value:"Export",id:"export",level:3},{value:"Get",id:"get",level:3},{value:"GetProperties",id:"getproperties",level:3},{value:"Initialize",id:"initialize",level:3},{value:"Import",id:"import",level:3},{value:"Modify",id:"modify",level:3},{value:"ListExecute",id:"listexecute",level:3},{value:"ListFetch",id:"listfetch",level:3},{value:"ListClose",id:"listclose",level:3}];function l(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"securityx509users",children:"Security.X509Users"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class Security.X509Users Extends (%Persistent, %XML.Adaptor, %SYSTEM.Help) [ Inheritance = right ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This class maps a key to a User. The keys should be obtained from X509 certificates. Use X509Users.GetLookupKey() go get a standard key from a certificate."}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"comment",children:"Comment"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Comment As %String(MAXLEN = 128);\n"})}),"\n",(0,t.jsx)(s.p,{children:"Comment."}),"\n",(0,t.jsx)(s.h3,{id:"enabled",children:"Enabled"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Enabled As Security.Datatype.BooleanYN [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Allow to log in via this key.",(0,t.jsx)(s.br,{}),"\n0 - Disable login.",(0,t.jsx)(s.br,{}),"\n1 - Enable login."]}),"\n",(0,t.jsx)(s.h3,{id:"lookupkey",children:"LookupKey"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property LookupKey As %String(MAXLEN = 256) [ Required ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Comment."}),"\n",(0,t.jsx)(s.h3,{id:"username",children:"Username"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Username As %Library.Username;\n"})}),"\n",(0,t.jsx)(s.p,{children:"UserName to be logged in as."}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"getx509lookupkey",children:"GetX509LookupKey"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetX509LookupKey(CredentialsCandidate As %String) As %String\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Return the lookup key (SubjectDN) for an X509 Certificate.",(0,t.jsx)(s.br,{}),"\nThere are four different ways this can be called where:"]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Certificate = DER Encoded X509 Certificate"}),"\n",(0,t.jsx)(s.li,{children:"Certificate = PEM Encoded X509 Certificate"}),"\n",(0,t.jsx)(s.li,{children:"Certificate = Alias of %SYS.X509Credentials object"}),"\n",(0,t.jsx)(s.li,{children:"Certificate = A %SYS.X509Credentials object"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If the certificate cannot be found or is invalid, an empty string is returned."}),"\n",(0,t.jsx)(s.h3,{id:"copy",children:"Copy"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Copy(LookupKey As %String, NewLookupKey As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Copy an X509User.",(0,t.jsx)(s.br,{}),"\nCopy an existing X509User in the Security database to a new one.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nLookupKey - LookupKey of the X509User to be copied.",(0,t.jsx)(s.br,{}),"\nNewLookupKey - LookupKey of the X509User to be created."]}),"\n",(0,t.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Create(LookupKey As %String, Username As %String, Enabled As %Boolean, Comment As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Create a X509User.",(0,t.jsx)(s.br,{}),"\nCreate a X509User in the Security database.",(0,t.jsx)(s.br,{}),"\nThere are 2 ways to call this method and pass the parameters:"]}),"\n",(0,t.jsxs)(s.p,{children:["s x=##Class(Security.X509Users).Create(LookupKey,username,...)",(0,t.jsx)(s.br,{}),"\nor",(0,t.jsx)(s.br,{}),"\ns x=##Class(Security.X509Users).Create(LookupKey,.Properties)"]}),"\n",(0,t.jsxs)(s.p,{children:["Where Properties are contained in an array subscripted by property name, passed by reference. See the Get() method for a description of the Properies array. Valid properties for the Create() method are described below, other values are ignored.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nLookupKey - Key used to lookup Username UserName - Name of the user associated with this key",(0,t.jsx)(s.br,{}),"\nEnabled - 0/1, account is disabled/enabled",(0,t.jsx)(s.br,{}),"\nComment - Comment"]}),"\n",(0,t.jsx)(s.h3,{id:"delete",children:"Delete"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Delete(LookupKey As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Delete an X509User.",(0,t.jsx)(s.br,{}),"\nThis method will delete a User from the security database.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nLookupKey - Key to delete"]}),"\n",(0,t.jsx)(s.h3,{id:"exists",children:"Exists"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Exists(LookupKey As %String, ByRef X509User As %ObjectHandle, ByRef Status As %Status) As %Boolean\n"})}),"\n",(0,t.jsxs)(s.p,{children:["X509 User exists.",(0,t.jsx)(s.br,{}),"\nThis method checks for the existence of a user in the security database.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nLookupKey - Lookup key of the user to check existence of",(0,t.jsx)(s.br,{}),"\nRequires the %Admin_Secure:USE privilege to change the $USERNAME value.",(0,t.jsx)(s.br,{}),"\nReturn values:",(0,t.jsx)(s.br,{}),"\nIf Value of the method = 0 (User does not exist, or some error occured)",(0,t.jsx)(s.br,{}),"\nUser = Null",(0,t.jsx)(s.br,{}),'\nStatus = User "x" does not exist, or other error message']}),"\n",(0,t.jsxs)(s.p,{children:["If Value of the method = 1 (User exists)",(0,t.jsx)(s.br,{}),"\nUser = Object handle to user",(0,t.jsx)(s.br,{}),'\nStatus = User "x" already exists']}),"\n",(0,t.jsx)(s.h3,{id:"export",children:"Export"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Export(FileName As %String = "X509UsersExport.xml", ByRef NumExported As %Integer = 0, LookupKeys As %String = "*", Usernames As %String = "*") As %Status\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This method exports X509User records to a file in xml format.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nFilename - Output file name",(0,t.jsx)(s.br,{}),"\nNumExported (byref) - Returns number of records exported.",(0,t.jsx)(s.br,{}),'\nLookupKeys - Comma separated list of Keys to export, "*" = All',(0,t.jsx)(s.br,{}),'\nUsernames - Comma separated list of Usernames, "*" = All. Export X509Users containing only these usernames']}),"\n",(0,t.jsx)(s.h3,{id:"get",children:"Get"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Get(LookupKey As %String, ByRef Properties As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Get a X509User's properties.",(0,t.jsx)(s.br,{}),"\nGets a X509User's properties from the security database.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nUsername - Name of the user to get",(0,t.jsx)(s.br,{}),"\nReturn values:",(0,t.jsx)(s.br,{}),"\nProperties - Array of properties",(0,t.jsx)(s.br,{}),'\nProperties("Comment") - Comment',(0,t.jsx)(s.br,{}),'\nProperties("Enabled") - 0=Disabled, 1=Enabled',(0,t.jsx)(s.br,{}),'\nProperties("LookupKey") - Key used to find Username',(0,t.jsx)(s.br,{}),'\nProperties("Username") - Name of associated user']}),"\n",(0,t.jsx)(s.h3,{id:"getproperties",children:"GetProperties"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetProperties(X509User As %ObjectHandle, ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Get a User's properties.",(0,t.jsx)(s.br,{}),"\nGets a User's properties from the security database.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nUsername - Object handle to a User record",(0,t.jsx)(s.br,{}),"\nReturn values:",(0,t.jsx)(s.br,{}),"\nProperties - See the Get method for more information on properties returned"]}),"\n",(0,t.jsx)(s.h3,{id:"initialize",children:"Initialize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Initialize() As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Initialize the userKey database at installation time."}),"\n",(0,t.jsx)(s.h3,{id:"import",children:"Import"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Import(FileName As %String = "X509UsersExport.xml", ByRef NumImported As %Integer, Flags As %Integer = 0) As %Status\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Import User records from an xml file.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nFileName - Filename to import User records from",(0,t.jsx)(s.br,{}),"\nNumImported (byref) - Returns number of records imported",(0,t.jsx)(s.br,{}),"\nFlags - Control import",(0,t.jsx)(s.br,{}),"\nBit 0 - Do not import records, just return count",(0,t.jsx)(s.br,{}),"\nNote: On failure, no records will be imported"]}),"\n",(0,t.jsx)(s.h3,{id:"modify",children:"Modify"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Modify(LookupKey As %String, ByRef Properties As %String) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Modify a X509User's properties.",(0,t.jsx)(s.br,{}),"\nModifies a X509User's properties from the security database.",(0,t.jsx)(s.br,{}),"\nParameters:",(0,t.jsx)(s.br,{}),"\nLookupKey - Key of the X509User to modify",(0,t.jsx)(s.br,{}),"\nProperties - Array of properties to modify.",(0,t.jsx)(s.br,{}),"\nSee the Get() method for a description of the Properties parameter.",(0,t.jsx)(s.br,{}),"\nIf a specific property is not passed in the properties array, the value is not modified.",(0,t.jsx)(s.br,{}),"\nIf a value is unchanged it is not set to prevent the property modified state from being set."]}),"\n",(0,t.jsx)(s.h3,{id:"listexecute",children:"ListExecute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ListExecute(ByRef %qHandle As %Binary, LookupKeys As %String = "*", Usernames As %String = "*") As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["List all userkey records, brief display.",(0,t.jsx)(s.br,{}),'\nKeys - Comma separated list of userkeys, "*" = All',(0,t.jsx)(s.br,{}),'\nUsernames - Comma separated list of Usernames, "*"=ALL',(0,t.jsx)(s.br,{}),"\nNote: This query may change in future versions"]}),"\n",(0,t.jsx)(s.h3,{id:"listfetch",children:"ListFetch"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListFetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"listclose",children:"ListClose"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListClose(ByRef %qHandle As %Binary) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var t=r(96540);const n={},i=t.createContext(n);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);