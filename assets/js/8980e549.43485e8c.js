"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[9773],{75192:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>l,frontMatter:()=>r,toc:()=>a});var s=t(74848),c=t(28453);const r={pagination_prev:null,pagination_next:null},i="%SYNC.SyncSetObject",a=[{value:"Properties",id:"properties",level:2},{value:"Ptr",id:"ptr",level:3},{value:"sId",id:"sid",level:3},{value:"SysGUID",id:"sysguid",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Class",id:"class",level:3},{value:"GUID",id:"guid",level:3},{value:"SSObject",id:"ssobject",level:3},{value:"FileOperation",id:"fileoperation",level:3},{value:"ForwardLink",id:"forwardlink",level:3},{value:"BackwardLink",id:"backwardlink",level:3},{value:"Error",id:"error",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"sIdGet",id:"sidget",level:3},{value:"SSObjectGet",id:"ssobjectget",level:3},{value:"%SyncObjectIn",id:"syncobjectin",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"syncsyncsetobject",children:"%SYNC.SyncSetObject"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %SYNC.SyncSetObject Extends (%RegisteredObject, %XML.Adaptor) [ Inheritance = right, System = 3 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"%SYNC.SyncSetObject models a record in a %SYNC.SyncSet. SyncSets are globals containing records corresponding to filing events. A filing event is an insert of a new object, update of an existing object or delete of an existing object. Each time a filing event occurs in a class that is OBJJOURNALENABLED, the event is recorded in the %ObjectJournalTransaction class. SyncSets are created from the %ObjectJournalTransaction class and each record in the SyncSet corresponds to a %ObjectJournalRecord. %ObjectJournalRecords are individual filing events that occur with a transaction, the transaction being an instance of %ObjectJournalTransaction. The SyncSetObject contains information that identifies the SyncSet as well as specific information about the filing event described by a record in the SyncSet."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"ptr",children:"Ptr"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Ptr As %Integer;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Sync Set pointer. This property references the SyncSet object on disk."}),"\n",(0,s.jsx)(n.h3,{id:"sid",children:"sId"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property sId As %String [ Private ];\n"})}),"\n",(0,s.jsx)(n.p,{children:"sId is the global identifier and it is used to qualify the global name. Sync sets are constructed on a system and then exported to other systems for synchronizing the objects it contains with a database on the target system. The sId is used to generate a unique name for this sync set on the target system."}),"\n",(0,s.jsx)(n.h3,{id:"sysguid",children:"SysGUID"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property SysGUID As %String;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The GUID of the system where the SyncSet was created."}),"\n",(0,s.jsx)(n.h3,{id:"namespace",children:"Namespace"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Namespace As %String;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Namespace in which the SyncSet was created."}),"\n",(0,s.jsx)(n.h3,{id:"class",children:"Class"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Class As %String;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The name of the Class of which this object in the SyncSet is an instance."}),"\n",(0,s.jsx)(n.h3,{id:"guid",children:"GUID"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property GUID As %String;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The GUID of this object in the SyncSet."}),"\n",(0,s.jsx)(n.h3,{id:"ssobject",children:"SSObject"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property SSObject As %RegisteredObject;\n"})}),"\n",(0,s.jsx)(n.p,{children:"OREF referencing the object identified by GUID as it exists in the target database. If the object does not yet exist in the target database then this oref will be null."}),"\n",(0,s.jsx)(n.h3,{id:"fileoperation",children:"FileOperation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property FileOperation As %Integer;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The type of filing event that produced this SyncSet object. Values are: 0 - UPDATE 1 - INSERT 2 - DELETE"}),"\n",(0,s.jsx)(n.h3,{id:"forwardlink",children:"ForwardLink"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property ForwardLink As %Integer;\n"})}),"\n",(0,s.jsx)(n.p,{children:"ForwardLink is a link to another SyncSet instance in the same SyncSet. ForwardLinks are created when an object cannot be synchronized due to some error. Errors that produce forward links are typically unresolvable references to other objects. The most common unresolvable reference in a properly constructed SyncSet will be a reference to an object that has not yet been created because it occurs later in the SyncSet."}),"\n",(0,s.jsx)(n.h3,{id:"backwardlink",children:"BackwardLink"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property BackwardLink As %Integer;\n"})}),"\n",(0,s.jsx)(n.p,{children:"BackwardLink is a link to the SyncSet instance that caused this SyncSet instance to be created. Creating a new SyncSet instance is triggered by the Requeue mechanism. Requeue is the operation triggered by a failure to successfully synchronize an object, usually because of an unresolvable reference. When a SyncSet instance is requeued the system is basically saying to 'try this operation again later'. The idea being that the cause of the sync failure will have been resolved by the time we process the requeued instance."}),"\n",(0,s.jsx)(n.h3,{id:"error",children:"Error"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Property Error As %List;\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is a list of errors that are recorded for this SyncSet instance."}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %OnNew(initvalue As %RawString) As %Status [ Private, ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"This callback method is invoked by the %New method to provide notification that a new instance of an object is being created."}),"\n",(0,s.jsx)(n.p,{children:"If this method returns an error then the object will not be created."}),"\n",(0,s.jsx)(n.h3,{id:"sidget",children:"sIdGet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method sIdGet() As %String\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ssobjectget",children:"SSObjectGet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method SSObjectGet() As %RegisteredObject\n"})}),"\n",(0,s.jsx)(n.p,{children:"Overridden SSObject Get method. This method looks up the object in the local GUID index. If the GUID is found then attempt to open the object associated with the GUID and return the result. If the GUID is not found in the GUID index then return NULLOREF."}),"\n",(0,s.jsx)(n.h3,{id:"syncobjectin",children:"%SyncObjectIn"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Method %SyncObjectIn(SyncSet As %SYNC.SyncSet) As %Status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Sync this SyncSet instance with the current database. This method returns a %Status value."})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const c={},r=s.createContext(c);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);