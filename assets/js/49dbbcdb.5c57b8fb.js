"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[4767],{40281:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,toc:()=>i});var s=n(74848),o=n(28453);const l={pagination_prev:null,pagination_next:null},a="%ZEN.Component.buttonView",i=[{value:"Properties",id:"properties",level:2},{value:"columns",id:"columns",level:3},{value:"value",id:"value",level:3},{value:"onselect",id:"onselect",level:3},{value:"seed",id:"seed",level:3},{value:"OnGetButtonInfo",id:"ongetbuttoninfo",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawHTML",id:"drawhtml",level:3},{value:"%GetButtonInfo",id:"getbuttoninfo",level:3},{value:"itemClicked",id:"itemclicked",level:3},{value:"resetItems",id:"resetitems",level:3}];function r(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"zencomponentbuttonview",children:"%ZEN.Component.buttonView"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.buttonView Extends %ZEN.Component.component [ Deprecated, System = 3 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This Zen component displays a set of text buttons displayed within a table. The number of columns is determined by the columns property.",(0,s.jsx)(t.br,{}),"\nThe contents of the buttonView are provided via the user-defined OnGetButtonInfo callback.",(0,s.jsx)(t.br,{}),"\nThis component is typically used to display progressive filter buttons that allow a user to narrow down a search."]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"columns",children:"columns"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property columns As %ZEN.Datatype.integer(MINVAL = 1) [ InitialExpression = 4 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"Number of columns of buttons to display."}),"\n",(0,s.jsx)(t.h3,{id:"value",children:"value"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property value As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsx)(t.p,{children:'A string containing the current selected values. This takes the form: "category:value;"'}),"\n",(0,s.jsx)(t.h3,{id:"onselect",children:"onselect"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property onselect As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsx)(t.p,{children:"onselect event handler: If defined, this event is fired when the user selects a new button. The variable, value is passed to the event handler and contains the current value of this component (same as the value property)."}),"\n",(0,s.jsx)(t.h3,{id:"seed",children:"seed"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property seed As %ZEN.Datatype.string(ZENEXPRESSION = 1);\n"})}),"\n",(0,s.jsx)(t.p,{children:"Optional. User-defined seed value. This is an optional parameter that is passed on to the OnGetButtonInfo callback method."}),"\n",(0,s.jsx)(t.h3,{id:"ongetbuttoninfo",children:"OnGetButtonInfo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property OnGetButtonInfo As %ZEN.Datatype.delegator(FORMALSPEC = "seed:%ZEN.Datatype.string,&pInfo", RETURNTYPE = "%Status");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Name of Server-side callback method that provides the list of items to display for this component.",(0,s.jsx)(t.br,{}),"\nThis method should return an array, indexed by button number, that defines the category, caption, value, and (optional) tooltip for each button. You can also provide an optional, disabled flag, which, it true will make the button disabled in all cases. The array takes the form:",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.code,{children:"Set pInfo(n) = $LB(category,caption,value,tooltip,disabled)"}),' When the user selects a button, all other buttons of the same category are disabled (unless category is ""). Pressing the Reset button restores clears all the selections.',(0,s.jsx)(t.br,{}),"\nThis must be the name of a server-only method in the page class that contains this view component."]}),"\n",(0,s.jsx)(t.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(t.h3,{id:"style",children:"Style"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,s.jsx)(t.p,{children:"This Style block contains component-specific CSS style definitions."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"drawhtml",children:"%DrawHTML"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DrawHTML()\n"})}),"\n",(0,s.jsx)(t.p,{children:"The %DrawHTML method draws the initial HTML for this component."}),"\n",(0,s.jsx)(t.h3,{id:"getbuttoninfo",children:"%GetButtonInfo"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetButtonInfo(ByRef pInfo) As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Invoke user method to get list of options to display."}),"\n",(0,s.jsx)(t.h3,{id:"itemclicked",children:"itemClicked"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod itemClicked(idx) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"User clicked on item."}),"\n",(0,s.jsx)(t.h3,{id:"resetitems",children:"resetItems"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"ClientMethod resetItems() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Reset state of buttons."})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const o={},l=s.createContext(o);function a(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);