"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[98708],{6127:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>c,default:()=>d,frontMatter:()=>r,toc:()=>o});var n=t(74848),i=t(28453);const r={pagination_prev:null,pagination_next:null},c="%UnitTest.Result.TestAssert",o=[{value:"Properties",id:"properties",level:2},{value:"Counter",id:"counter",level:3},{value:"Status",id:"status",level:3},{value:"Action",id:"action",level:3},{value:"Description",id:"description",level:3},{value:"Location",id:"location",level:3},{value:"TestMethod",id:"testmethod",level:3},{value:"Methods",id:"methods",level:2},{value:"FileIndicesRecursive",id:"fileindicesrecursive",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"unittestresulttestassert",children:"%UnitTest.Result.TestAssert"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %UnitTest.Result.TestAssert Extends (%Persistent, %XML.Adaptor) [ Final, Owner = {%Developer}, System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Object and SQL projection of a UnitTest TestAssert"}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"counter",children:"Counter"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Counter As %Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The index of the TestAssert"}),"\n",(0,n.jsx)(s.h3,{id:"status",children:"Status"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property Status As %Integer(DISPLAYLIST = ",failed,passed,skipped", VALUELIST = ",0,1,2");\n'})}),"\n",(0,n.jsx)(s.p,{children:"The Status of the TestAssert"}),"\n",(0,n.jsx)(s.h3,{id:"action",children:"Action"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Action As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The name of the action of the TestAssert"}),"\n",(0,n.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Description As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The description of the TestAssert"}),"\n",(0,n.jsx)(s.h3,{id:"location",children:"Location"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Location As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:'The location of the TestAssert in the source document in label[+offset]^[|"ns"|]doc.ext format'}),"\n",(0,n.jsx)(s.h3,{id:"testmethod",children:"TestMethod"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Relationship TestMethod As %UnitTest.Result.TestMethod [ Cardinality = parent, Inverse = TestAsserts ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The parent TestMethod containing this TestAssert"}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"fileindicesrecursive",children:"FileIndicesRecursive"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod FileIndicesRecursive(id) As %Status\n"})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>o});var n=t(96540);const i={},r=n.createContext(i);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);