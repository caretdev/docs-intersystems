"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[8587],{85539:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>o,frontMatter:()=>a,toc:()=>i});var r=t(74848),n=t(28453);const a={pagination_prev:null,pagination_next:null},l="%DeepSee.UserPortal.Utils",i=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"Methods",id:"methods",level:2},{value:"%GetUserHomePageURL",id:"getuserhomepageurl",level:3},{value:"%GetViewerURL",id:"getviewerurl",level:3},{value:"%GetErrorPageURL",id:"geterrorpageurl",level:3},{value:"%GetPreferences",id:"getpreferences",level:3},{value:"%GetUserName",id:"getusername",level:3},{value:"%GetUserList",id:"getuserlist",level:3},{value:"%GetAlertsForUser",id:"getalertsforuser",level:3},{value:"%GetFavoritesForUser",id:"getfavoritesforuser",level:3},{value:"%GetRecentItemsForUser",id:"getrecentitemsforuser",level:3},{value:"%FormatDate",id:"formatdate",level:3},{value:"%GetFolderItemsForUser",id:"getfolderitemsforuser",level:3},{value:"%GetSettingsFromURL",id:"getsettingsfromurl",level:3},{value:"%RegisterUser",id:"registeruser",level:3},{value:"%SendAlert",id:"sendalert",level:3},{value:"%DeleteAlert",id:"deletealert",level:3},{value:"%KillAlerts",id:"killalerts",level:3},{value:"%ClearUserSettings",id:"clearusersettings",level:3},{value:"%RemoveUserSetting",id:"removeusersetting",level:3},{value:"%GetUserSettingsList",id:"getusersettingslist",level:3},{value:"%SetUserSetting",id:"setusersetting",level:3},{value:"%GetUserSetting",id:"getusersetting",level:3},{value:"%ClearUserIcons",id:"clearusericons",level:3},{value:"%RemoveUserIcon",id:"removeusericon",level:3},{value:"%GetUserIconList",id:"getusericonlist",level:3},{value:"%SetUserIcon",id:"setusericon",level:3},{value:"%GetUserIcon",id:"getusericon",level:3},{value:"%ClearDashboardSettings",id:"cleardashboardsettings",level:3},{value:"%ClearLocalDataSource",id:"clearlocaldatasource",level:3},{value:"%SaveDashboardSettings",id:"savedashboardsettings",level:3},{value:"%LoadDashboardSettings",id:"loaddashboardsettings",level:3},{value:"%ListFolderItems",id:"listfolderitems",level:3},{value:"%FindDependencies",id:"finddependencies",level:3},{value:"%FindIsUsedBy",id:"findisusedby",level:3},{value:"%GetColorSchemes",id:"getcolorschemes",level:3},{value:"%GetColorSchemeInfo",id:"getcolorschemeinfo",level:3},{value:"%GetChartSeriesSchemes",id:"getchartseriesschemes",level:3},{value:"%GetChartSeriesSchemeInfo",id:"getchartseriesschemeinfo",level:3},{value:"%GetColorSets",id:"getcolorsets",level:3},{value:"%ResolveTextList",id:"resolvetextlist",level:3},{value:"%ResolveText",id:"resolvetext",level:3},{value:"%ResolveName",id:"resolvename",level:3},{value:"%ParseCellSelectionContext",id:"parsecellselectioncontext",level:3},{value:"AddWidgetNames",id:"addwidgetnames",level:3},{value:"AddWidgetKeys",id:"addwidgetkeys",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"deepseeuserportalutils",children:"%DeepSee.UserPortal.Utils"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.UserPortal.Utils Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"APIs used by the UserPortal."}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%DeepSee";\n'})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"getuserhomepageurl",children:"%GetUserHomePageURL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetUserHomePageURL() As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the URL for the user portal home page."}),"\n",(0,r.jsx)(s.h3,{id:"getviewerurl",children:"%GetViewerURL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetViewerURL() As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the URL for the dashboard viewer."}),"\n",(0,r.jsx)(s.h3,{id:"geterrorpageurl",children:"%GetErrorPageURL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetErrorPageURL(pError As %String) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the URL for the user portal error page."}),"\n",(0,r.jsx)(s.h3,{id:"getpreferences",children:"%GetPreferences"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetPreferences(Output pPrefs) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an array containing the system preferences for the portal."}),"\n",(0,r.jsx)(s.h3,{id:"getusername",children:"%GetUserName"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetUserName(pUserName As %String = "") As %String\n'})}),"\n",(0,r.jsx)(s.p,{children:"Return the name of the current user (or given user name). Return their full name if registered, otherwise return the login name."}),"\n",(0,r.jsx)(s.h3,{id:"getuserlist",children:"%GetUserList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetUserList(Output pUsers, pSearchKey As %String = "", pAlertsEnabled As %Boolean = 0) As %Status\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Return a list of DeepSee users.",(0,r.jsx)(s.br,{}),"\npUsers(n) = $LB(id,name,icon)",(0,r.jsx)(s.br,{}),"\nIf pAlertsEnabled is true, then only return users that have enabled alerts."]}),"\n",(0,r.jsx)(s.h3,{id:"getalertsforuser",children:"%GetAlertsForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetAlertsForUser(Output pAlerts, Output pNewCount As %Integer, pMaxItems As %Integer = 25) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the current alerts list for the current user: pAlerts(n) = $LB(alertId,from,subject,date,url,priority,icon,iconTip)"}),"\n",(0,r.jsx)(s.h3,{id:"getfavoritesforuser",children:"%GetFavoritesForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetFavoritesForUser(Output pFavorites) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the current favorites list for the current user: pItems(n) = $LB(fullName,name,folder,title,type,icon,date,url)"}),"\n",(0,r.jsx)(s.h3,{id:"getrecentitemsforuser",children:"%GetRecentItemsForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetRecentItemsForUser(Output pItems) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return the recent items list for the current user: pItems(n) = $LB(fullName,name,folder,title,type,icon,date,url)"}),"\n",(0,r.jsx)(s.h3,{id:"formatdate",children:"%FormatDate"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %FormatDate(pDate As %String, pUTCtoLocal As %Boolean = 0) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Format a $H value."}),"\n",(0,r.jsx)(s.h3,{id:"getfolderitemsforuser",children:"%GetFolderItemsForUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetFolderItemsForUser(Output pItems, pFolderName As %String, pSearchKey As %String = "", pIncludePrivate As %Boolean = 0, pShowAll As %Boolean = 0) As %Status\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Return a list of folder items for the current user:",(0,r.jsx)(s.br,{}),"\npItems(n) = $LB(name,type,tip,date,url,icon,keywords,public,title,createdBy,resource,cover,category,owner,write,lastAccessed)",(0,r.jsx)(s.br,{}),"\nThis list is returned in ID order; the caller will sort it. If pShowAll is true, list items for all users."]}),"\n",(0,r.jsx)(s.h3,{id:"getsettingsfromurl",children:"%GetSettingsFromURL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetSettingsFromURL(Output pSettings) As %Status\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Get the values of any SETTINGS parameters within the current URL and pull them apart. A dashboard URL may contain any number of parameters called SETTINGS. Each takes the form:",(0,r.jsx)(s.br,{}),"\nSETTINGS=parm:value;parm:value;",(0,r.jsx)(s.br,{}),"\nSupported parameters and values include:",(0,r.jsx)(s.br,{}),'\nTARGET:widgetName; ("*" if not specified)',(0,r.jsx)(s.br,{}),"\nFILTER:spec;",(0,r.jsx)(s.br,{}),"\nVARIABLE:pivotVar; (default value for pivot variable)",(0,r.jsx)(s.br,{}),"\nROWCOUNT:#;",(0,r.jsx)(s.br,{}),"\nCOLCOUNT:#;",(0,r.jsx)(s.br,{}),"\nROWSORT:Measure;",(0,r.jsx)(s.br,{}),"\nCOLSORT:Measure;",(0,r.jsx)(s.br,{}),"\nROWSORTDIR:ASC|DESC;",(0,r.jsx)(s.br,{}),"\nCOLSORTDIR:ASC|DESC;"]}),"\n",(0,r.jsx)(s.p,{children:"For some items, such as FILTER, there can be multiple values separated by ~"}),"\n",(0,r.jsxs)(s.p,{children:[';; is an escape for ";"',(0,r.jsx)(s.br,{}),'\n~~ is an escape for "~"']}),"\n",(0,r.jsxs)(s.p,{children:["A FILTER spec is of the form:",(0,r.jsx)(s.br,{}),"\nName.Value or [Name].[Value], [Name].&[Value]",(0,r.jsx)(s.br,{}),"\nFor an MDX-based filter, Name may have multiple pieces:",(0,r.jsx)(s.br,{}),"\n[DIM].[Hier].[Level].[Value]",(0,r.jsx)(s.br,{}),"\nA VARIABLE (pivot variable) spec is of the form:",(0,r.jsx)(s.br,{}),"\nVarName.Value",(0,r.jsx)(s.br,{}),"\nOn return, pSettings will contain:",(0,r.jsx)(s.br,{}),'\npSettings(target,parm) = "value"']}),"\n",(0,r.jsx)(s.h3,{id:"registeruser",children:"%RegisterUser"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %RegisterUser(pUserId As %String, pUserName As %String = "", pEMail As %String = "", pEnabled As %Boolean = 1) As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Register a DeepSee user."}),"\n",(0,r.jsx)(s.h3,{id:"sendalert",children:"%SendAlert"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %SendAlert(pAlert As %DeepSee.UserPortal.Data.Alert) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Send a new alert."}),"\n",(0,r.jsx)(s.h3,{id:"deletealert",children:"%DeleteAlert"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteAlert(pAlertId As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the given alert."}),"\n",(0,r.jsx)(s.h3,{id:"killalerts",children:"%KillAlerts"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %KillAlerts() As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete all alerts in this namespace."}),"\n",(0,r.jsx)(s.h3,{id:"clearusersettings",children:"%ClearUserSettings"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ClearUserSettings() As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the current user settings for the current namespace."}),"\n",(0,r.jsx)(s.h3,{id:"removeusersetting",children:"%RemoveUserSetting"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %RemoveUserSetting(pName As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the given user setting for the current namespace."}),"\n",(0,r.jsx)(s.h3,{id:"getusersettingslist",children:"%GetUserSettingsList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetUserSettingsList(Output pData, pContext As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Return a list of the current user settings in the form: pData(n) = $LB(name,value,comment,context)"}),"\n",(0,r.jsx)(s.h3,{id:"setusersetting",children:"%SetUserSetting"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SetUserSetting(pName As %String, pValue As %String, pComment As %String = "", pContext As %String = "") As %Status\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Set the value and comment for the given user-defined setting.",(0,r.jsx)(s.br,{}),"\npName is the name of the setting. This must be unique.",(0,r.jsx)(s.br,{}),"\npValue is the value of the setting. This is in ObjectScript expression that is evaluated at run-time.",(0,r.jsx)(s.br,{}),"\npComment is a comment.",(0,r.jsx)(s.br,{}),"\npContext is the name of the context in which this setting is expected to be used. This allows the user to be presented with a limited set of settings."]}),"\n",(0,r.jsx)(s.h3,{id:"getusersetting",children:"%GetUserSetting"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetUserSetting(pName As %String, Output pSC As %Status) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get the value of the given user-defined setting. A user-setting is an expression. This method evaluates the expression and returns the result."}),"\n",(0,r.jsx)(s.h3,{id:"clearusericons",children:"%ClearUserIcons"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ClearUserIcons() As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the current user icons for the current namespace."}),"\n",(0,r.jsx)(s.h3,{id:"removeusericon",children:"%RemoveUserIcon"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %RemoveUserIcon(pName As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Delete the given user icon for the current namespace."}),"\n",(0,r.jsx)(s.h3,{id:"getusericonlist",children:"%GetUserIconList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetUserIconList(Output pData) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return a list of the current user icons in the form: pData(n) = $LB(name,path)"}),"\n",(0,r.jsx)(s.h3,{id:"setusericon",children:"%SetUserIcon"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %SetUserIcon(pName As %String, pPath As %String) As %Status\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Set the path for the given user-defined icon.",(0,r.jsx)(s.br,{}),"\npName is the name of the icon. This must be unique.",(0,r.jsx)(s.br,{}),"\npValue is the path for the icon."]}),"\n",(0,r.jsx)(s.h3,{id:"getusericon",children:"%GetUserIcon"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetUserIcon(pName As %String, Output pSC As %Status) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get the path of the given user-defined icon."}),"\n",(0,r.jsx)(s.h3,{id:"cleardashboardsettings",children:"%ClearDashboardSettings"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ClearDashboardSettings(pDashboard As %String, pUser As %String = "", pSaveLocalDataSource As %Boolean = 0) As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:'Clear dashboard settings for the given dashboard (If pUser is "", then for all users).'}),"\n",(0,r.jsx)(s.h3,{id:"clearlocaldatasource",children:"%ClearLocalDataSource"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ClearLocalDataSource(pDashboard As %String, pWidgetKey As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Clear the localDataSource for a specific user and widget."}),"\n",(0,r.jsx)(s.h3,{id:"savedashboardsettings",children:"%SaveDashboardSettings"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %SaveDashboardSettings(ByRef pSettings As %String, pDashboard As %String, pUser As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"A dashboard setting is a set of name/value pairs saved for a specific dashboard and user. This lets the user save filters values, positions, etc."}),"\n",(0,r.jsx)(s.h3,{id:"loaddashboardsettings",children:"%LoadDashboardSettings"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %LoadDashboardSettings(Output pSettings As %String, pDashboard As %String, pUser As %String = "") As %String\n'})}),"\n",(0,r.jsx)(s.p,{children:"A dashboard setting is a set of name/value pairs saved for a specific dashboard and user. This lets the user save filters values, positions, etc."}),"\n",(0,r.jsx)(s.h3,{id:"listfolderitems",children:"%ListFolderItems"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ListFolderItems(pSearchKey As %String = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Print a list of all folder items to the console."}),"\n",(0,r.jsx)(s.h3,{id:"finddependencies",children:"%FindDependencies"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %FindDependencies(pName As %String, Output pList As %String, pVerbose As %Boolean = 0) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"For the given folder item, pName, return a list of other items it depends upon."}),"\n",(0,r.jsx)(s.h3,{id:"findisusedby",children:"%FindIsUsedBy"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %FindIsUsedBy(pName As %String, Output pList As %String, pVerbose As %Boolean = 0) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"For the given folder item, pName, return a list of other items that use it. This method does a full scan of all dashboard items, so use sparingly."}),"\n",(0,r.jsx)(s.h3,{id:"getcolorschemes",children:"%GetColorSchemes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetColorSchemes(Output pScheme) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an array the list of defined dashboard color schemes: pScheme(n) = $LB(name,caption,jsFile,cssFile)"}),"\n",(0,r.jsx)(s.h3,{id:"getcolorschemeinfo",children:"%GetColorSchemeInfo"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetColorSchemeInfo(pScheme As %String, Output pInfo) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Find info on the given dashboard color scheme."}),"\n",(0,r.jsx)(s.h3,{id:"getchartseriesschemes",children:"%GetChartSeriesSchemes"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetChartSeriesSchemes(Output pScheme) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an array of the defined chart series color schemes: pScheme(n) = $LB(name,caption,[colorList])"}),"\n",(0,r.jsx)(s.h3,{id:"getchartseriesschemeinfo",children:"%GetChartSeriesSchemeInfo"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetChartSeriesSchemeInfo(pScheme As %String, Output pSchemeName, Output pColorList) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Find info on the given chart series color scheme."}),"\n",(0,r.jsx)(s.h3,{id:"getcolorsets",children:"%GetColorSets"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetColorSets(Output pSet) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return an array of the defined color sets. A color set is a name list of up to 256 colors used by a color picker. pSet(n) = $LB(name,caption,;-delimited list of colors)"}),"\n",(0,r.jsx)(s.h3,{id:"resolvetextlist",children:"%ResolveTextList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ResolveTextList(pText As %String) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Resolve a csv-list of localized text strings at run time."}),"\n",(0,r.jsx)(s.h3,{id:"resolvetext",children:"%ResolveText"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ResolveText(pText As %String) As %String\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Resolve a localized text string at run time. A localized string can take the following forms:",(0,r.jsx)(s.br,{}),'\n"String" -- not localized.',(0,r.jsx)(s.br,{}),'\n"$$$String" -- equivalent to $$$Text("String","DeepSeeUser")',(0,r.jsx)(s.br,{}),'\n"$$$String/Domain" -- equivalent to $$$Text("String","Domain")']}),"\n",(0,r.jsx)(s.h3,{id:"resolvename",children:"%ResolveName"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ResolveName(pName) As %String\n"})}),"\n",(0,r.jsx)(s.h3,{id:"parsecellselectioncontext",children:"%ParseCellSelectionContext"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %ParseCellSelectionContext(pExpression = "", pCubeName = "", Output pContextFilters) [ Internal ]\n'})}),"\n",(0,r.jsx)(s.p,{children:"This is a special parser for handling the filter context of selected cells produced during a detail listing. This is designed to parse a pExpression provided in the pivotTable.listingFilters property into display Level-Member name pairs to provide context for a listing export or display."}),"\n",(0,r.jsx)(s.h3,{id:"addwidgetnames",children:"AddWidgetNames"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddWidgetNames(pDashboard As %DeepSee.Dashboard.Definition = "", ByRef pNewWidgetNames) As %Status\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Inspect an open dashboard definition object and add names to any widgets that do not have names. All widgets that are assigned new names will have a name of the form WidgetXXX that is unique to the dashboard assigned. All names assigned in this manner will be returned in an index available through the by reference argument",(0,r.jsx)(s.br,{}),"\npNewWidgetNames(widgetPosition) = newName",(0,r.jsx)(s.br,{}),"\nThis method will not change the stored dashboard definition DFI document."]}),"\n",(0,r.jsx)(s.h3,{id:"addwidgetkeys",children:"AddWidgetKeys"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddWidgetKeys(pDashboard As %DeepSee.Dashboard.Definition = "") As %Status\n'})}),"\n",(0,r.jsx)(s.p,{children:"Look through all of the widgets in a dashboard and make sure each that has a logical name also has a defined key."})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>i});var r=t(96540);const n={},a=r.createContext(n);function l(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);