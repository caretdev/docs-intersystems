"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[55899],{95505:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,toc:()=>i});var n=r(74848),t=r(28453);const l={pagination_prev:null,pagination_next:null},a="%ZEN.Auxiliary.QueryInfo",i=[{value:"Properties",id:"properties",level:2},{value:"parms",id:"parms",level:3},{value:"filters",id:"filters",level:3},{value:"filterOps",id:"filterops",level:3},{value:"filterTypes",id:"filtertypes",level:3},{value:"columns",id:"columns",level:3},{value:"columnExpression",id:"columnexpression",level:3},{value:"rows",id:"rows",level:3},{value:"tableName",id:"tablename",level:3},{value:"columnName",id:"columnname",level:3},{value:"whereClause",id:"whereclause",level:3},{value:"orderByClause",id:"orderbyclause",level:3},{value:"groupByClause",id:"groupbyclause",level:3},{value:"sortColumn",id:"sortcolumn",level:3},{value:"sortOrder",id:"sortorder",level:3},{value:"queryText",id:"querytext",level:3},{value:"queryExecuted",id:"queryexecuted",level:3},{value:"rowCount",id:"rowcount",level:3},{value:"Methods",id:"methods",level:2},{value:"%IsValidSQLName",id:"isvalidsqlname",level:3},{value:"%CreateSQL",id:"createsql",level:3},{value:"QuoteSQL",id:"quotesql",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"zenauxiliaryqueryinfo",children:"%ZEN.Auxiliary.QueryInfo"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Auxiliary.QueryInfo Extends %RegisteredObject [ Deprecated, System = 3 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This is a server-class used to pass information specifying how to build a result set object.",(0,n.jsx)(s.br,{}),"\nThis is used by classes that inherit from the querySource class. Some of these properties are only relevant for tables."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"parms",children:"parms"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property parms As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Set of query parameter values subscripted by parameter number:",(0,n.jsx)(s.br,{}),"\n..parms(n) = value"]}),"\n",(0,n.jsx)(s.h3,{id:"filters",children:"filters"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property filters As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Set of column filter values subscripted by column name:",(0,n.jsx)(s.br,{}),"\n..filters(colName) = filterValue"]}),"\n",(0,n.jsx)(s.h3,{id:"filterops",children:"filterOps"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property filterOps As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Set of column filter operations subscripted by column name:",(0,n.jsx)(s.br,{}),"\n..filterOps(colName) = op",(0,n.jsx)(s.br,{}),"\nWhere op is an SQL operation: %STARTSWITH, =, etc."]}),"\n",(0,n.jsx)(s.h3,{id:"filtertypes",children:"filterTypes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property filterTypes As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Set of column filter types subscripted by column name:",(0,n.jsx)(s.br,{}),"\n..filterTypes(colName) = type"]}),"\n",(0,n.jsx)(s.h3,{id:"columns",children:"columns"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property columns As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Names of columns within the query, subcripted by column number:",(0,n.jsx)(s.br,{}),"\n..columns(n) = colName",(0,n.jsx)(s.br,{}),"\nThis will be provided for tables that use *auto sql* mode."]}),"\n",(0,n.jsx)(s.h3,{id:"columnexpression",children:"columnExpression"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property columnExpression As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Optional SQL expression to use for a column, subcripted by column name:",(0,n.jsx)(s.br,{}),"\n..columnExpression(colname) = expr",(0,n.jsx)(s.br,{}),"\nThis will be provided for tables that use *auto sql* mode."]}),"\n",(0,n.jsx)(s.h3,{id:"rows",children:"rows"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property rows As %ZEN.Datatype.integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:'The number of rows that the component will display. For a "snapshot" query this will be the size of the snapshot.'}),"\n",(0,n.jsx)(s.h3,{id:"tablename",children:"tableName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property tableName As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name of table used to provide data. This will be provided for tables that use *auto sql* mode."}),"\n",(0,n.jsx)(s.h3,{id:"columnname",children:"columnName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property columnName As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name of column used to provide data. This is used for tables that are auto-generated when no other column information is available."}),"\n",(0,n.jsx)(s.h3,{id:"whereclause",children:"whereClause"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property whereClause As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Optional WHERE clause for tables in *auto sql* mode."}),"\n",(0,n.jsx)(s.h3,{id:"orderbyclause",children:"orderByClause"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property orderByClause As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Optional ORDER BY clause for tables in *auto sql* mode."}),"\n",(0,n.jsx)(s.h3,{id:"groupbyclause",children:"groupByClause"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property groupByClause As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Optional GROUP BY clause for tables in *auto sql* mode."}),"\n",(0,n.jsx)(s.h3,{id:"sortcolumn",children:"sortColumn"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property sortColumn As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Optional name of column to sort results by. If the table is in *auto sql* mode, then this is used as the first part of the generated ORDER BY clause."}),"\n",(0,n.jsx)(s.h3,{id:"sortorder",children:"sortOrder"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property sortOrder As %ZEN.Datatype.string(VALUELIST = ",asc,desc");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Specifies direction of sorting, if any. This applies to the column specified by sortColumn."}),"\n",(0,n.jsx)(s.h3,{id:"querytext",children:"queryText"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property queryText As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Output property.",(0,n.jsx)(s.br,{}),"\nThis is also used for the output of the %CreateQuery method.",(0,n.jsx)(s.br,{}),"\nWhen a query is executed, the text of the query (either sql or query name) is placed here (for diagnostic purposes)."]}),"\n",(0,n.jsx)(s.h3,{id:"queryexecuted",children:"queryExecuted"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property queryExecuted As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Output property.",(0,n.jsx)(s.br,{}),"\nSet this property to true in OnCreateResultSet method to indicate that the newly created ResultSet has already been executed."]}),"\n",(0,n.jsx)(s.h3,{id:"rowcount",children:"rowCount"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property rowCount As %ZEN.Datatype.string;\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Output property.",(0,n.jsx)(s.br,{}),"\nQuery will place number of rows in query here if it wants to report this value to the client."]}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"isvalidsqlname",children:"%IsValidSQLName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %IsValidSQLName(pName As %String) As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Test if pName is a valid SQL name."}),"\n",(0,n.jsx)(s.h3,{id:"createsql",children:"%CreateSQL"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %CreateSQL(pComputeRowCount As %Boolean = 1, pInfo As %ZEN.Auxiliary.QueryInfo) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Utility method: construct a (very simple) SQL statement based on the specifications contains within this object's properties. The resulting query is placed within the queryText property."}),"\n",(0,n.jsx)(s.h3,{id:"quotesql",children:"QuoteSQL"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod QuoteSQL(pVal As %String, pType As %String = "")\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Take a value and return an SQL literal (with quotes and escaped quotes as needed).",(0,n.jsx)(s.br,{}),'\npType is the "filter" type: if "date" quote as ODBC literal.']})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>i});var n=r(96540);const t={},l=n.createContext(t);function a(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);