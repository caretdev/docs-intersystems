"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[42370],{17211:(e,s,i)=>{i.r(s),i.d(s,{contentTitle:()=>a,default:()=>o,frontMatter:()=>r,toc:()=>l});var n=i(74848),t=i(28453);const r={pagination_prev:null,pagination_next:null},a="Security.SSLConfigs",l=[{value:"Parameters",id:"parameters",level:2},{value:"SOURCECONTROL",id:"sourcecontrol",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"VERSION",id:"version",level:3},{value:"Properties",id:"properties",level:2},{value:"AuthorizeCN",id:"authorizecn",level:3},{value:"CAFile",id:"cafile",level:3},{value:"CAPath",id:"capath",level:3},{value:"CRLFile",id:"crlfile",level:3},{value:"CertificateFile",id:"certificatefile",level:3},{value:"CipherList",id:"cipherlist",level:3},{value:"Ciphersuites",id:"ciphersuites",level:3},{value:"Description",id:"description",level:3},{value:"DiffieHellmanBits",id:"diffiehellmanbits",level:3},{value:"Enabled",id:"enabled",level:3},{value:"Name",id:"name",level:3},{value:"OCSP",id:"ocsp",level:3},{value:"OCSPIssuerCert",id:"ocspissuercert",level:3},{value:"OCSPRequestFailures",id:"ocsprequestfailures",level:3},{value:"OCSPResponseFile",id:"ocspresponsefile",level:3},{value:"OCSPTimeout",id:"ocsptimeout",level:3},{value:"OCSPURL",id:"ocspurl",level:3},{value:"PrivateKeyFile",id:"privatekeyfile",level:3},{value:"PrivateKeyPassword",id:"privatekeypassword",level:3},{value:"PrivateKeyType",id:"privatekeytype",level:3},{value:"Protocols",id:"protocols",level:3},{value:"SNIName",id:"sniname",level:3},{value:"TLSMaxVersion",id:"tlsmaxversion",level:3},{value:"TLSMinVersion",id:"tlsminversion",level:3},{value:"Type",id:"type",level:3},{value:"VerifyDepth",id:"verifydepth",level:3},{value:"VerifyPeer",id:"verifypeer",level:3},{value:"Version",id:"version-1",level:3},{value:"Methods",id:"methods",level:2},{value:"Activate",id:"activate",level:3},{value:"ActivateAll",id:"activateall",level:3},{value:"Deactivate",id:"deactivate",level:3},{value:"Create",id:"create",level:3},{value:"CreateOne",id:"createone",level:3},{value:"Delete",id:"delete",level:3},{value:"DeleteOne",id:"deleteone",level:3},{value:"Exists",id:"exists",level:3},{value:"Export",id:"export",level:3},{value:"Get",id:"get",level:3},{value:"GetCRLFile",id:"getcrlfile",level:3},{value:"RefreshOCSPResponse",id:"refreshocspresponse",level:3},{value:"CheckOCSPResponse",id:"checkocspresponse",level:3},{value:"GetProperties",id:"getproperties",level:3},{value:"Import",id:"import",level:3},{value:"Modify",id:"modify",level:3},{value:"ModifyOne",id:"modifyone",level:3},{value:"StartEMS",id:"startems",level:3},{value:"ConvertProtocols",id:"convertprotocols",level:3},{value:"TestConnection",id:"testconnection",level:3},{value:"TestConnectionGetError",id:"testconnectiongeterror",level:3},{value:"Validate",id:"validate",level:3},{value:"%OnAfterSave",id:"onaftersave",level:3},{value:"%OnBeforeSave",id:"onbeforesave",level:3},{value:"%OnDelete",id:"ondelete",level:3},{value:"%OnValidateObject",id:"onvalidateobject",level:3},{value:"CheckForECP",id:"checkforecp",level:3},{value:"IsValidForEMS",id:"isvalidforems",level:3},{value:"CAStillValid",id:"castillvalid",level:3},{value:"DetailExecute",id:"detailexecute",level:3},{value:"DetailFetch",id:"detailfetch",level:3},{value:"DetailClose",id:"detailclose",level:3},{value:"ListExecute",id:"listexecute",level:3},{value:"ListFetch",id:"listfetch",level:3},{value:"ListClose",id:"listclose",level:3},{value:"ListEMSExecute",id:"listemsexecute",level:3},{value:"IsThisValid",id:"isthisvalid",level:3},{value:"ListEMSFetch",id:"listemsfetch",level:3},{value:"ListEMSClose",id:"listemsclose",level:3},{value:"GetCertificate",id:"getcertificate",level:3},{value:"GetCAFile",id:"getcafile",level:3},{value:"Initialize",id:"initialize",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"securitysslconfigs",children:"Security.SSLConfigs"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class Security.SSLConfigs Extends (%Persistent, %XML.Adaptor, %SYSTEM.Help) [ Inheritance = right, System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Define the SSL/TLS configurations, and methods which manipulate them."}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"SSL configuration names are case sensitive."}),"\n",(0,n.jsxs)(s.li,{children:["Maximum length of a configuration name is 64 characters.",(0,n.jsx)(s.br,{}),"\nOnce an SSL configuration is defined and activated, you can use the name of the configuration as a parameter to the open or use command in order to set up an SSL connection.",(0,n.jsx)(s.br,{}),'\nLogicalToDisplay Open dev:(Host:Port:"M":/TLS="Name"):10',(0,n.jsx)(s.br,{}),"\nThe %Admin Secure:USE permission is required to operate on an SSL configuration."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The table for this class should be manipulated only through object access, the published API's or through the System Management Portal. It should not be updated through direct SQL access."}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"sourcecontrol",children:"SOURCECONTROL"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter SOURCECONTROL [ Internal ] = {"Revision path: $Id: //iris/2024.3.0/databases/sys/cls/Security/SSLConfigs.xml#1 $"_$c(13,10)_"Last Change:   $DateTime: 2024/10/02 10:58:11 $"_$c(13,10)_"Changelist #:  $Change: 7247250 $"};\n'})}),"\n",(0,n.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%Utility";\n'})}),"\n",(0,n.jsx)(s.p,{children:"Default Localization Domain"}),"\n",(0,n.jsx)(s.h3,{id:"version",children:"VERSION"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter VERSION [ Internal ] = 1;\n"})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"authorizecn",children:"AuthorizeCN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AuthorizeCN As %Boolean [ InitialExpression = 0, Transient ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Name by which this configuration is referenced.",(0,n.jsx)(s.br,{}),"\nAuthorize a backup failover member to join a mirror.",(0,n.jsx)(s.br,{}),"\nNormally, mirroring with SSL requires the following steps:"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Add primary to mirror"}),"\n",(0,n.jsx)(s.li,{children:"Add backup to mirror"}),"\n",(0,n.jsx)(s.li,{children:"Authorize backup on primary\nThis presents difficulties for declarative mirror configuration via CPF. When this property is set to 1, the Distinguished Name is extracted from this mirror's SSL certificates and used to pre-authorize the backup member to join."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"cafile",children:"CAFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CAFile As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["File containing X.509 certificate(s) of trusted Certificate Authorities.",(0,n.jsx)(s.br,{}),'\nCan be an absolute pathname, a pathname relative to the manager\'s directory, or a special value "%OSCertificateStore" for OS-provided trusted CA certificate stores.',(0,n.jsx)(s.br,{}),"\nClients: Specify CAFile and/or CAPath",(0,n.jsx)(s.br,{}),"\nServers: Specify CAFile and/or CAServer if VerifyPeer > 0"]}),"\n",(0,n.jsx)(s.h3,{id:"capath",children:"CAPath"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CAPath As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Directory containing file(s) with X.509 certificate(s) of trusted Certificate Authorities.",(0,n.jsx)(s.br,{}),"\nCan be an absolute pathname or a pathname relative to the manager's directory.",(0,n.jsx)(s.br,{}),"\nClients: Specify CAFile and/or CAPath",(0,n.jsx)(s.br,{}),"\nServers: Specify CAFile and/or CAServer if VerifyPeer > 0"]}),"\n",(0,n.jsx)(s.h3,{id:"crlfile",children:"CRLFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CRLFile As %String(MAXLEN = 255) [ Deprecated, Internal ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["File containing X.509 Certificate Revocation List for trusted Certificate Authorities.",(0,n.jsx)(s.br,{}),"\nCan be an absolute pathname or a pathname relative to the manager's directory.",(0,n.jsx)(s.br,{}),"\nCAFile or CAPath must be specified if CRLFile is specified. DEPRECATED."]}),"\n",(0,n.jsx)(s.h3,{id:"certificatefile",children:"CertificateFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CertificateFile As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["File containing this configuration's X.509 certificate.",(0,n.jsx)(s.br,{}),"\nCan be an absolute pathname or a pathname relative to the manager's directory. If not null, PrivateKeyFile must also be specified."]}),"\n",(0,n.jsx)(s.h3,{id:"cipherlist",children:"CipherList"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property CipherList As %String(MAXLEN = 4096) [ InitialExpression = "ALL:!aNULL:!eNULL:!EXP:!SSLv2" ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Colon-delimited list of enabled ciphersuites for TLSv1.2 and below.",(0,n.jsx)(s.br,{}),"\nBy default, disable anonymous, unencrypted, export, and SSLv2 ciphersuites."]}),"\n",(0,n.jsx)(s.h3,{id:"ciphersuites",children:"Ciphersuites"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Ciphersuites As %String(MAXLEN = 128) [ InitialExpression = {$$$TLSDEFAULTCIPHERSUITES} ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Colon-delimited lists of enabled ciphersuites for TLSv1.3."}),"\n",(0,n.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Description As %String(MAXLEN = 256);\n"})}),"\n",(0,n.jsx)(s.p,{children:"Description of the SSL configuration."}),"\n",(0,n.jsx)(s.h3,{id:"diffiehellmanbits",children:"DiffieHellmanBits"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property DiffieHellmanBits As %Integer(VALUELIST = ",0,512,1024,2048,4096") [ InitialExpression = 0 ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Size of Diffie Hellman key.",(0,n.jsx)(s.br,{}),"\n(Relevant for server configurations only)",(0,n.jsx)(s.br,{}),"\nDefault is 0 (Auto)"]}),"\n",(0,n.jsx)(s.h3,{id:"enabled",children:"Enabled"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Enabled As Security.Datatype.BooleanYN [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Configuration is enabled."}),"\n",(0,n.jsx)(s.h3,{id:"name",children:"Name"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Name As %String(MAXLEN = 64, MINLEN = 1) [ Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"SSL configuration name."}),"\n",(0,n.jsx)(s.h3,{id:"ocsp",children:"OCSP"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSP As %Integer(MAXVAL = 1, MINVAL = 0) [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"OCSP Stapling."}),"\n",(0,n.jsxs)(s.p,{children:["Clients:",(0,n.jsx)(s.br,{}),"\n0 = None",(0,n.jsx)(s.br,{}),"\n1 = Require valid OCSP Stapling (continue only if OCSP verification succeeds)"]}),"\n",(0,n.jsxs)(s.p,{children:["Servers:",(0,n.jsx)(s.br,{}),"\n0 = None",(0,n.jsx)(s.br,{}),"\n1 = Support OCSP Stapling"]}),"\n",(0,n.jsx)(s.h3,{id:"ocspissuercert",children:"OCSPIssuerCert"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSPIssuerCert As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["OCSPIssuerCert.",(0,n.jsx)(s.br,{}),"\nFor Servers with OCSP Stapling support, this is issuer certificate to be used when",(0,n.jsx)(s.br,{}),"\nrequesting an OCSP response."]}),"\n",(0,n.jsx)(s.h3,{id:"ocsprequestfailures",children:"OCSPRequestFailures"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSPRequestFailures As %Integer [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["OCSPRequestFailures.",(0,n.jsx)(s.br,{}),"\nFor Servers with OCSP Stapling support, this is the count of failed OCSP update requests."]}),"\n",(0,n.jsx)(s.h3,{id:"ocspresponsefile",children:"OCSPResponseFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSPResponseFile As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["OCSPResponseFile.",(0,n.jsx)(s.br,{}),"\nFor Servers with OCSP Stapling support, this is the path to store the cached OCSP response file."]}),"\n",(0,n.jsx)(s.h3,{id:"ocsptimeout",children:"OCSPTimeout"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSPTimeout As %Integer [ InitialExpression = {$$$OCSPDEFAULTIMEOUTSEC}, Internal ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["OCSPTimeout.",(0,n.jsx)(s.br,{}),"\nFor Servers with OCSP Stapling support, this is the timeout (in seconds) when attempting to update the OCSP response."]}),"\n",(0,n.jsx)(s.h3,{id:"ocspurl",children:"OCSPURL"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property OCSPURL As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["OCSPURL.",(0,n.jsx)(s.br,{}),"\nFor Servers with OCSP Stapling support, this is the URL used to request an OCSP response",(0,n.jsx)(s.br,{}),"\nNote: this is populated automatically based on the server certificate."]}),"\n",(0,n.jsx)(s.h3,{id:"privatekeyfile",children:"PrivateKeyFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property PrivateKeyFile As %String(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["File containing this configuration's private key.",(0,n.jsx)(s.br,{}),"\nCan be an absolute pathname or a pathname relative to the manager's directory. If not null, CertificateFile must also be specified."]}),"\n",(0,n.jsx)(s.h3,{id:"privatekeypassword",children:"PrivateKeyPassword"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property PrivateKeyPassword As Security.Datatype.Password(MAXLEN = 255);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Optional password used to decrypt this configuration's private key.",(0,n.jsx)(s.br,{}),"\nIf not null, PrivateKeyFile and CertificateFile must also be specified."]}),"\n",(0,n.jsx)(s.h3,{id:"privatekeytype",children:"PrivateKeyType"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property PrivateKeyType As Security.Datatype.PrivateKeyType(MAXVAL = 2, MINVAL = 1) [ InitialExpression = 2, Required ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Private key type, one of:",(0,n.jsx)(s.br,{}),"\n1 = DSA",(0,n.jsx)(s.br,{}),"\n2 = RSA"]}),"\n",(0,n.jsx)(s.h3,{id:"protocols",children:"Protocols"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Protocols As Security.Datatype.Protocol(MAXVAL = 60, MINVAL = 4) [ Deprecated ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Protocols enabled.",(0,n.jsx)(s.br,{}),"\nBit 2 - TLSv1.0",(0,n.jsx)(s.br,{}),"\nBit 3 - TLSv1.1",(0,n.jsx)(s.br,{}),"\nBit 4 - TLSv1.2",(0,n.jsx)(s.br,{}),"\nBit 5 - TLSv1.3",(0,n.jsx)(s.br,{}),"\nDEPRECATED. Use TLSMinVersion and TLSMaxVersion instead."]}),"\n",(0,n.jsx)(s.h3,{id:"sniname",children:"SNIName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SNIName As %String [ Deprecated ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The fully qualified DNS hostname of the server for use with the Subject Name Indication (SNI) TLS extension DEPRECATED."}),"\n",(0,n.jsx)(s.h3,{id:"tlsmaxversion",children:"TLSMaxVersion"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property TLSMaxVersion As Security.Datatype.TLSVersion(VALUELIST = ",2,4,8,16,32") [ InitialExpression = {$s($$$IsOpenSSL10:$$$TLSv12,1:$$$TLSv13)}, Required ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Maximum TLS protocol version enabled.",(0,n.jsx)(s.br,{}),"\n2 - SSLv3 4 - TLSv1.0 8 - TLSv1.1 16 - TLSv1.2 32 - TLSv1.3 Default = TLSv1.3 Requirement is TLSMaxVersion >= TLSMinVersion"]}),"\n",(0,n.jsx)(s.h3,{id:"tlsminversion",children:"TLSMinVersion"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property TLSMinVersion As Security.Datatype.TLSVersion(VALUELIST = ",2,4,8,16,32") [ InitialExpression = {$s($$$IsOpenSSL10:$$$TLSv11,1:$$$TLSv12)}, Required ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Minimum TLS protocol version enabled.",(0,n.jsx)(s.br,{}),"\n2 - SSLv3 4 - TLSv1.0 8 - TLSv1.1 16 - TLSv1.2 32 - TLSv1.3 Default is TLSv1.2",(0,n.jsx)(s.br,{}),"\nRequirement is TLSMinVersion <= TLSMaxVersion"]}),"\n",(0,n.jsx)(s.h3,{id:"type",children:"Type"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Type As Security.Datatype.SSLType [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Intended type for this configuration.",(0,n.jsx)(s.br,{}),"\n0 = client",(0,n.jsx)(s.br,{}),"\n1 = server",(0,n.jsx)(s.br,{}),"\nDefault is client (0)"]}),"\n",(0,n.jsx)(s.h3,{id:"verifydepth",children:"VerifyDepth"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property VerifyDepth As %Integer(MINVAL = 0) [ InitialExpression = 9, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Maximum number of CA certificates allowed in peer certificate chain."}),"\n",(0,n.jsx)(s.h3,{id:"verifypeer",children:"VerifyPeer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property VerifyPeer As %Integer(MAXVAL = 3, MINVAL = 0) [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Peer certificate verification level."}),"\n",(0,n.jsxs)(s.p,{children:["Clients:",(0,n.jsx)(s.br,{}),"\n0 = None (continue even if certificate verification fails)",(0,n.jsx)(s.br,{}),"\n1 = Require server certificate (continue only if certificate verification succeeds)"]}),"\n",(0,n.jsxs)(s.p,{children:["Servers:",(0,n.jsx)(s.br,{}),"\n0 = None (do not request client certificate)",(0,n.jsx)(s.br,{}),"\n1 = Request client certificate (terminate if certificate is provided and verification fails)",(0,n.jsx)(s.br,{}),"\n3 = Require client certificate (continue only if certificate is provided and verification succeeds)"]}),"\n",(0,n.jsx)(s.h3,{id:"version-1",children:"Version"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Version As %Decimal(SCALE = 1) [ Internal ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Version number of the record.",(0,n.jsx)(s.br,{}),"\nUsed for Export/Import."]}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"activate",children:"Activate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Activate() As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Activate the configuration.",(0,n.jsx)(s.br,{}),"\nActivate the configuration for use when new TCP connections are OPENed with the /SSL or /TLS parameter."]}),"\n",(0,n.jsx)(s.h3,{id:"activateall",children:"ActivateAll"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ActivateAll() As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Activate all configurations.",(0,n.jsx)(s.br,{}),"\nActivate all defined SSL configurations."]}),"\n",(0,n.jsx)(s.h3,{id:"deactivate",children:"Deactivate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Deactivate() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Deactivate this configuration."}),"\n",(0,n.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Create(Name As %String, ByRef Properties As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Create an SSL configuration.",(0,n.jsx)(s.br,{}),"\nCreate an SSL configuration in the Security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of the SSL configuration to create",(0,n.jsx)(s.br,{}),"\nProperties - Array of properties corresponding to the class properties",(0,n.jsx)(s.br,{}),'\nFor example, Properties("CAFile")=Filename']}),"\n",(0,n.jsx)(s.h3,{id:"createone",children:"CreateOne"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateOne(ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"delete",children:"Delete"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Delete(Name As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Delete an SSL configuration.",(0,n.jsx)(s.br,{}),"\nThis method will delete an SSL configuration from the security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of SSL configuration to delete"]}),"\n",(0,n.jsx)(s.h3,{id:"deleteone",children:"DeleteOne"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DeleteOne(ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"exists",children:"Exists"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Exists(Name As %String, ByRef SSLConfig As %ObjectHandle, ByRef Status As %Status) As %Boolean\n"})}),"\n",(0,n.jsxs)(s.p,{children:["SSL configuration exists.",(0,n.jsx)(s.br,{}),"\nThis method checks for the existence of an SSL Configuration in the security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of the SSL configuration to check existence of",(0,n.jsx)(s.br,{}),"\nReturn values:",(0,n.jsx)(s.br,{}),"\nIf Value of the method = 0 (SSL configuration does not exist, or some error occured)",(0,n.jsx)(s.br,{}),"\nSSLConfig = Null",(0,n.jsx)(s.br,{}),'\nStatus = SSL configuration "x" does not exist, or other error message']}),"\n",(0,n.jsxs)(s.p,{children:["If Value of the method = 1 (SSL configuration exists)",(0,n.jsx)(s.br,{}),"\nSSLConfig = Object handle to SSL configuration",(0,n.jsx)(s.br,{}),"\nStatus = $$$OK"]}),"\n",(0,n.jsx)(s.h3,{id:"export",children:"Export"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Export(FileName As %String = "SSLConfigsExport.xml", ByRef NumExported As %Integer, SSLConfigs As %String = "*", NoPwd As %Boolean = "0") As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method exports SSL configuration Objects to a file in xml format.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nFileName - Output file name",(0,n.jsx)(s.br,{}),"\nNumExported (byref) - Returns number of XML records exported.",(0,n.jsx)(s.br,{}),'\nSSLConfigs - Comma separated list of SSL configurations to export, "*" = All NoPwd - When true, PrivateKeyPassword is not exported']}),"\n",(0,n.jsx)(s.h3,{id:"get",children:"Get"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Get(Name As %String, ByRef Properties As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Get a SSL configuration's properties.",(0,n.jsx)(s.br,{}),"\nGets a SSL configuration's properties from the security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of the SSL configuration to get",(0,n.jsx)(s.br,{}),"\nReturn values:",(0,n.jsx)(s.br,{}),"\nProperties - Array of properties.",(0,n.jsx)(s.br,{}),'\nFor example, Properties("CAFile")=Filename',(0,n.jsx)(s.br,{}),"\nNote: Admin_Secure:Use permission required for this method since it returns an unhashed password."]}),"\n",(0,n.jsx)(s.h3,{id:"getcrlfile",children:"GetCRLFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetCRLFile() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get an X.509 CRL using the value of the crlDistributionPoints standard extension in the X.509 certificate contained in the file CAFile, and store it in the file CRLFile."}),"\n",(0,n.jsx)(s.h3,{id:"refreshocspresponse",children:"RefreshOCSPResponse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method RefreshOCSPResponse() As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Refresh the cached OCSP Response for a SSLConfig",(0,n.jsx)(s.br,{}),"\nReturn Values:",(0,n.jsx)(s.br,{}),"\nIf the SSLConfig is not a server cofiguration or does not support OCSP Stapling, returns 1.",(0,n.jsx)(s.br,{}),"\nIf the SSLConfig is a server configuration and supports OCSP Stapling, return 1 for success, or 0 for failure."]}),"\n",(0,n.jsx)(s.h3,{id:"checkocspresponse",children:"CheckOCSPResponse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method CheckOCSPResponse() As %Integer [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Check the remaining validity of a cached OCSP Response for a SSLConfig",(0,n.jsx)(s.br,{}),"\nReturn Values:",(0,n.jsx)(s.br,{}),"\nIf the SSLConfig is not a server configuration or does not support OCSP Stapling, returns 0.",(0,n.jsx)(s.br,{}),"\nIf the SSLConfig is a server configuration and supports OCSP Stapling, return the remaining duration of validity in seconds, or 0 for failure."]}),"\n",(0,n.jsx)(s.h3,{id:"getproperties",children:"GetProperties"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetProperties(SSLConfig As %ObjectHandle, ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Get a SSL configuration's properties.",(0,n.jsx)(s.br,{}),"\nGets a SSL configuration's properties from the security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of the SSL configuration to get",(0,n.jsx)(s.br,{}),"\nReturn values:",(0,n.jsx)(s.br,{}),"\nProperties - Array of properties.",(0,n.jsx)(s.br,{}),'\nFor example, Properties("CAFile")=Filename']}),"\n",(0,n.jsx)(s.h3,{id:"import",children:"Import"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Import(FileName As %String = "SSLConfigsExport.xml", ByRef NumImported As %Integer, Flags As %Integer = 0) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Import SSL configuration records from an xml file.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nFileName - Filename to import SSL configuration records from",(0,n.jsx)(s.br,{}),"\nNumImported (byref) - Returns number of records imported",(0,n.jsx)(s.br,{}),"\nFlags - Control import",(0,n.jsx)(s.br,{}),"\nBit 0 - Do not import records, just return count",(0,n.jsx)(s.br,{}),"\nNote: On failure, no records will be imported",(0,n.jsx)(s.br,{}),"\nWarning: Import will fail if the certificate paths or certificates do not exist before the import."]}),"\n",(0,n.jsx)(s.h3,{id:"modify",children:"Modify"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Modify(Name As %String, ByRef Properties As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Modify an SSL configuration.",(0,n.jsx)(s.br,{}),"\nModify an existing SSL configuration's properties in the security database.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nName - Name of the SSL configuration to modify",(0,n.jsx)(s.br,{}),"\nProperties - Array of properties to modify.",(0,n.jsx)(s.br,{}),'\nFor example, Properties("CAFile")=Filename If a specific property is not passed in the properties array, or is the same as the existing value, the value is not modified.']}),"\n",(0,n.jsx)(s.h3,{id:"modifyone",children:"ModifyOne"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyOne(ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"startems",children:"StartEMS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StartEMS() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"convertprotocols",children:"ConvertProtocols"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ConvertProtocols()\n"})}),"\n",(0,n.jsx)(s.p,{children:"Convert deprecated Protocol property to new Min/MaxVersion"}),"\n",(0,n.jsx)(s.h3,{id:"testconnection",children:"TestConnection"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method TestConnection(Host As %String, Port As %Integer, ByRef Info As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Test the SSL configuration.",(0,n.jsx)(s.br,{}),"\nAttempts to make an SSL connection to the passed Host and port.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nHost - Ip name of the host to connect to",(0,n.jsx)(s.br,{}),"\nPort - Port # of the host to connect to",(0,n.jsx)(s.br,{}),"\nReturn Values:",(0,n.jsx)(s.br,{}),"\nOn success, Info is returned as an array of messages concerning the host which we connected to."]}),"\n",(0,n.jsx)(s.h3,{id:"testconnectiongeterror",children:"TestConnectionGetError"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method TestConnectionGetError(Device As %String) As %String [ Final, Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Retrieve reason for ErrorProtocol in TestConnection().",(0,n.jsx)(s.br,{}),"\nCalls $System.Security.Users.GetLastError() to retrieve ssl error text. Protects against errors retrieving error text."]}),"\n",(0,n.jsx)(s.h3,{id:"validate",children:"Validate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Validate(Host As %String, Port As %Integer) As %String [ Deprecated ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Validate the SSL configuration (DEPRECATED).",(0,n.jsx)(s.br,{}),"\nUse the TestConnection method instead.",(0,n.jsx)(s.br,{}),"\nAttempts to make an SSL connection to the passed Host and port.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nHost - Ip name of the host to connect to",(0,n.jsx)(s.br,{}),"\nPort - Port # of the host to connect to",(0,n.jsx)(s.br,{}),"\nReturn Values:",(0,n.jsx)(s.br,{}),"\nString of success or error messages."]}),"\n",(0,n.jsx)(s.h3,{id:"onaftersave",children:"%OnAfterSave"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterSave(insert As %Boolean) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback method is invoked by the %Save method to provide notification that the object is being saved. It is called after the object's data has been successfully written to disk."}),"\n",(0,n.jsx)(s.p,{children:"insert will be set to 1 if this object is being saved for the first time."}),"\n",(0,n.jsx)(s.p,{children:"If this method returns an error then the call to %Save will fail. If the service name is %Service Terminal, reinitialize the memory which depends on it."}),"\n",(0,n.jsx)(s.h3,{id:"onbeforesave",children:"%OnBeforeSave"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnBeforeSave(insert As %Boolean) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback method is invoked by the %Save method to provide notification that the object is being saved. It is called before any data is written to disk."}),"\n",(0,n.jsx)(s.p,{children:"insert will be set to 1 if this object is being saved for the first time."}),"\n",(0,n.jsx)(s.p,{children:"If this method returns an error then the call to %Save will fail."}),"\n",(0,n.jsx)(s.h3,{id:"ondelete",children:"%OnDelete"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnDelete(oid As %ObjectIdentity) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback method is invoked by the %Delete method to provide notification that the object specified by oid is being deleted."}),"\n",(0,n.jsx)(s.p,{children:"If this method returns an error then the object will not be deleted."}),"\n",(0,n.jsx)(s.h3,{id:"onvalidateobject",children:"%OnValidateObject"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnValidateObject(ReadOnly As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This callback method is invoked by the %ValidateObject method to provide notification that the current object is being validated."}),"\n",(0,n.jsx)(s.p,{children:"If this method returns an error then %ValidateObject will fail."}),"\n",(0,n.jsx)(s.h3,{id:"checkforecp",children:"CheckForECP"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CheckForECP(Name As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Determines if it is ok to disable or delete the %ECPServer or %ECPClient SSL configuration."}),"\n",(0,n.jsx)(s.h3,{id:"isvalidforems",children:"IsValidForEMS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsValidForEMS(Name As %String) As %Boolean [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Determines if the named SSL configuration is valid for use by EMS.",(0,n.jsx)(s.br,{}),"\nChecks general object validity and insures that at lease one certificate is unexpired in the CAFile. Returns 1 if validated by %OnValidateObject and any certificate in CAFile has not expired, 0 otherwise."]}),"\n",(0,n.jsx)(s.h3,{id:"castillvalid",children:"CAStillValid"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CAStillValid(CAFile As %String, CheckAll As %Integer = 1) As %Integer [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Inspects certificates in CAFile and returns the number that are valid and unexpired.",(0,n.jsx)(s.br,{}),"\nIf CheckAll = 0, only the first certificate is examined. CheckAll defaults to 1."]}),"\n",(0,n.jsx)(s.h3,{id:"detailexecute",children:"DetailExecute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod DetailExecute(ByRef %qHandle As %Binary, Names As %String = "*", Types As %String = "*") As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(s.p,{children:["List all SSL configuration records, brief display.",(0,n.jsx)(s.br,{}),'\nNames - Comma separated list of SSL configuration names, "*" = All',(0,n.jsx)(s.br,{}),"\nTypes - Comma separated list of SSL Types, 0=Clients, 1=Servers, *=All Note: This query may change in future versions"]}),"\n",(0,n.jsx)(s.h3,{id:"detailfetch",children:"DetailFetch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DetailFetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = DetailExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"detailclose",children:"DetailClose"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DetailClose(ByRef %qHandle As %Binary) As %Status [ Internal, PlaceAfter = DetailExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"listexecute",children:"ListExecute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ListExecute(ByRef %qHandle As %Binary, Names As %String = "*", Types As %String = "*") As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(s.p,{children:["List all SSL configuration records, brief display.",(0,n.jsx)(s.br,{}),'\nNames - Comma separated list of SSL configuration names, "*" = All',(0,n.jsx)(s.br,{}),"\nNote: This query may change in future versions"]}),"\n",(0,n.jsx)(s.h3,{id:"listfetch",children:"ListFetch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListFetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"listclose",children:"ListClose"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListClose(ByRef %qHandle As %Binary) As %Status [ Internal, PlaceAfter = ListExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"listemsexecute",children:"ListEMSExecute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListEMSExecute(ByRef %qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["List all SSL configuration records, brief display.",(0,n.jsx)(s.br,{}),'\nNames - Comma separated list of SSL configuration names, "*" = All',(0,n.jsx)(s.br,{}),"\nList all SSL configuration records, brief display.",(0,n.jsx)(s.br,{}),"\nOnly includes SSL configuration records used by the EMS (i.e. configs intended for client use, with a private key, password, certificate, certificate authority, and not expired.)",(0,n.jsx)(s.br,{}),'\nNames - Comma separated list of SSL configuration names, "*" = All']}),"\n",(0,n.jsx)(s.h3,{id:"isthisvalid",children:"IsThisValid"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsThisValid(Name) As %Boolean [ Internal, SqlProc ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"listemsfetch",children:"ListEMSFetch"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListEMSFetch(ByRef %qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ListEMSExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"listemsclose",children:"ListEMSClose"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ListEMSClose(ByRef %qHandle As %Binary) As %Status [ Internal, PlaceAfter = ListEMSExecute ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"getcertificate",children:"GetCertificate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetCertificate() As %String [ Final ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get the contents of the file named by CertificateFile."}),"\n",(0,n.jsx)(s.h3,{id:"getcafile",children:"GetCAFile"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetCAFile() As %String [ Final, Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get the content of the CA file. Return null string if failed."}),"\n",(0,n.jsx)(s.h3,{id:"initialize",children:"Initialize"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Initialize() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Initialize the SSLConfigs at installation time."})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>l});var n=i(96540);const t={},r=n.createContext(t);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);