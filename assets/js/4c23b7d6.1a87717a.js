"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[15146],{5423:(e,s,i)=>{i.r(s),i.d(s,{contentTitle:()=>l,default:()=>d,frontMatter:()=>a,toc:()=>r});var t=i(74848),n=i(28453);const a={pagination_prev:null,pagination_next:null},l="%DeepSee.Model.cube",r=[{value:"Properties",id:"properties",level:2},{value:"inheritsFrom",id:"inheritsfrom",level:3},{value:"abstract",id:"abstract",level:3},{value:"sourceClass",id:"sourceclass",level:3},{value:"version",id:"version",level:3},{value:"actionClass",id:"actionclass",level:3},{value:"resource",id:"resource",level:3},{value:"owner",id:"owner",level:3},{value:"initialBuildOrder",id:"initialbuildorder",level:3},{value:"buildRestriction",id:"buildrestriction",level:3},{value:"caption",id:"caption",level:3},{value:"namedFactNums",id:"namedfactnums",level:3},{value:"dimensions",id:"dimensions",level:3},{value:"measures",id:"measures",level:3},{value:"relationships",id:"relationships",level:3},{value:"indices",id:"indices",level:3},{value:"expressions",id:"expressions",level:3},{value:"defaultMeasure",id:"defaultmeasure",level:3},{value:"defaultMember",id:"defaultmember",level:3},{value:"nullReplacement",id:"nullreplacement",level:3},{value:"countMeasureName",id:"countmeasurename",level:3},{value:"countMeasureCaption",id:"countmeasurecaption",level:3},{value:"calculatedMembers",id:"calculatedmembers",level:3},{value:"namedSets",id:"namedsets",level:3},{value:"%timeFunctions",id:"timefunctions",level:3},{value:"bucketSize",id:"bucketsize",level:3},{value:"bitmapChunkInMemory",id:"bitmapchunkinmemory",level:3},{value:"defaultListing",id:"defaultlisting",level:3},{value:"listings",id:"listings",level:3},{value:"listingFields",id:"listingfields",level:3},{value:"precompute",id:"precompute",level:3},{value:"maxFacts",id:"maxfacts",level:3},{value:"disableListingGroups",id:"disablelistinggroups",level:3},{value:"enableSqlRestrict",id:"enablesqlrestrict",level:3},{value:"Methods",id:"methods",level:2},{value:"%ProcessFunctions",id:"processfunctions",level:3},{value:"%Validate",id:"validate",level:3},{value:"%ResolveInheritance",id:"resolveinheritance",level:3},{value:"%ResolveSharedDimensions",id:"resolveshareddimensions",level:3},{value:"%ApplyOverridesForDocumatic",id:"applyoverridesfordocumatic",level:3},{value:"%AtScaleExport",id:"atscaleexport",level:3},{value:"%AtScaleAddCustomSQLToDataset",id:"atscaleaddcustomsqltodataset",level:3},{value:"%AtScaleAddColumnsToCalendarDataset",id:"atscaleaddcolumnstocalendardataset",level:3}];function c(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"deepseemodelcube",children:"%DeepSee.Model.cube"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.Model.cube Extends (node, %CSP.Portal.AbstractPortalModel) [ System = 3 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Meta-data object for a DeepSee cube."}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"inheritsfrom",children:"inheritsFrom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property inheritsFrom As %DeepSee.Datatype.entityName(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional. If true, this is the name of another, pre-existing, cube that this cube inherits from.",(0,t.jsx)(s.br,{}),"\nA cube can only inherit from one base cube; there is no possibility of multiple-inheritance."]}),"\n",(0,t.jsx)(s.h3,{id:"abstract",children:"abstract"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property abstract As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:'Optional. If true, then this cube definition is an "abstract" cube. It can be used as a base cube for other cubes, but it cannot be built (loaded with data) or queried against.'}),"\n",(0,t.jsx)(s.h3,{id:"sourceclass",children:"sourceClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property sourceClass As %DeepSee.Datatype.className(XMLPROJECTION = "attribute") [ Required ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Name of class that provides the original data.",(0,t.jsx)(s.br,{}),"\nThis should either be the name of persistent class or a subclass of %DeepSee.DataConnector.",(0,t.jsx)(s.br,{}),"\nThis is used to generate code that updates the cube from the original data.",(0,t.jsx)(s.br,{}),"\nIt is also used to enable drill-through."]}),"\n",(0,t.jsx)(s.h3,{id:"version",children:"version"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property version As %Integer(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"If a version number is present, on compile this class will generate a new class represetning this version of the cube and compile that. This new version can be built while the previous version is still active. Once activated, a new version will be queried."}),"\n",(0,t.jsx)(s.h3,{id:"actionclass",children:"actionClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property actionClass As %DeepSee.Datatype.className(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional. Name of a DeepSee KPI class that provides Dashboard Actions for this cube.",(0,t.jsx)(s.br,{}),"\nIf provided, then a dashboard based on this cube will be able to invoke the actions defined within the given KPI class."]}),"\n",(0,t.jsx)(s.h3,{id:"resource",children:"resource"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property resource As %String(MAXLEN = 255, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional. The resource needed to view or edit this cube:",(0,t.jsx)(s.br,{}),"\nIf defined and the current user holds the USE privilege on this resource, then the user may view (run queries against) this item.",(0,t.jsx)(s.br,{}),"\nIf defined and the current user holds the WRITE privilege on this resource, then the user may modify this item."]}),"\n",(0,t.jsx)(s.h3,{id:"owner",children:"owner"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property owner As %DeepSee.Datatype.string(MAXLEN = 250, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This is the user name of the owner of this cube.",(0,t.jsx)(s.br,{}),"\nThis is used for determining some privileges for this cube."]}),"\n",(0,t.jsx)(s.h3,{id:"initialbuildorder",children:"initialBuildOrder"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property initialBuildOrder As %DeepSee.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:['Optional. If specified, this is the ORDER BY clause applied to the SQL statement used when this cube is initially built (by %BuildCube). It must contain a valid ORDER BY clause, e.g., "DateOfBirth"',(0,t.jsx)(s.br,{}),"\nThis makes it possible to apply an ordering to the initial facts loaded into a cube, which may be useful in some cases.",(0,t.jsx)(s.br,{}),"\nThis property is ignored by cubes that use data connectors.",(0,t.jsx)(s.br,{}),"\nIf this property is defined, then BuildCube will not use parallel processing. This ordering is not applied to incremental updates to the cube."]}),"\n",(0,t.jsx)(s.h3,{id:"buildrestriction",children:"buildRestriction"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property buildRestriction As %DeepSee.Datatype.string(MAXLEN = 2000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional. If specified, this is placed in the WHERE clause applied to the SQL statement used when this cube is initially built (by %BuildCube). It must contain a valid SQL expression, e.g., \"State='WY'\"",(0,t.jsx)(s.br,{}),"\nThis makes it possible to apply a restriction to the facts loaded into a cube, which may be useful in some cases.",(0,t.jsx)(s.br,{}),"\nThis property is also used in the SQL queries used to update cubes. This property is ignored by cubes that use data connectors."]}),"\n",(0,t.jsx)(s.h3,{id:"caption",children:"caption"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property caption As %DeepSee.Datatype.string(MAXLEN = 250, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"This is used as the caption text when utilities display this cube. This overrides the displayName property, if it is used."}),"\n",(0,t.jsx)(s.h3,{id:"namedfactnums",children:"namedFactNums"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property namedFactNums As %Boolean(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"This flag controls how fact numbers are assigned. If true, the compiler will expect that the factNumber is set for measures, levels, and relationships."}),"\n",(0,t.jsx)(s.h3,{id:"dimensions",children:"dimensions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship dimensions As %DeepSee.Model.dimension(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Dimensions defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"measures",children:"measures"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship measures As %DeepSee.Model.measure(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Measures defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"relationships",children:"relationships"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship relationships As %DeepSee.Model.relationship(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Relationships defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"indices",children:"indices"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship indices As %DeepSee.Model.index(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Additional indices defined for this cube.",(0,t.jsx)(s.br,{}),"\nThis provides a way to add extra indices to the fact table for the cube."]}),"\n",(0,t.jsx)(s.h3,{id:"expressions",children:"expressions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship expressions As %DeepSee.Model.expression(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Additional expressions defined for this cube.",(0,t.jsx)(s.br,{}),"\nThis provides a way to compute a value that can be used in one or more source expressions when building this cube."]}),"\n",(0,t.jsx)(s.h3,{id:"defaultmeasure",children:"defaultMeasure"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property defaultMeasure As %DeepSee.Datatype.entityName(XMLPROJECTION = "attribute") [ Deprecated ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Deprecated."}),"\n",(0,t.jsx)(s.h3,{id:"defaultmember",children:"defaultMember"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property defaultMember As %String(MAXLEN = 200, XMLPROJECTION = "attribute") [ Deprecated ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Deprecated."}),"\n",(0,t.jsx)(s.h3,{id:"nullreplacement",children:"nullReplacement"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property nullReplacement As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If defined, this is used as the display value for any members of any level within this cube whose value is null (missing) and has not has its local nullReplacement property set."}),"\n",(0,t.jsx)(s.h3,{id:"countmeasurename",children:"countMeasureName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property countMeasureName As %DeepSee.Datatype.string(XMLPROJECTION = "attribute") [ InitialExpression = "%COUNT" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If defined, this is used as the logical name for the built-in %Count measure."}),"\n",(0,t.jsx)(s.h3,{id:"countmeasurecaption",children:"countMeasureCaption"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property countMeasureCaption As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If defined, this is used as the (localized) display value for the built-in %Count measure."}),"\n",(0,t.jsx)(s.h3,{id:"calculatedmembers",children:"calculatedMembers"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship calculatedMembers As %DeepSee.Model.calculatedMember(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Calculated members defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"namedsets",children:"namedSets"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship namedSets As %DeepSee.Model.namedSet(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Named sets defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"timefunctions",children:"%timeFunctions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %timeFunctions As %String(XMLPROJECTION = "none") [ Internal, MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"List of available cube time functions. Available when cube is compiled."}),"\n",(0,t.jsx)(s.h3,{id:"bucketsize",children:"bucketSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property bucketSize As %Integer(MINVAL = 1, XMLPROJECTION = "attribute") [ InitialExpression = 8 ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies the size of the caching buckets used for this cube.",(0,t.jsx)(s.br,{}),"\nThe bucket size is a number of data blocks, each containing 64000 facts. These are used to cache intermediate results by queries executed against this cube. For example, setting this to 10 would creates caching buckets that each contain 640000 facts.",(0,t.jsx)(s.br,{}),"\nIn some cases, you may want to increase this value if you expect to have a large number of facts and do not expect many updates to older values within the cube.",(0,t.jsx)(s.br,{}),"\nIf you change this value, you must be sure to delete all cached results for this cube. You can do this using the %KillCache method of the cube definition class.",(0,t.jsx)(s.br,{}),"\nThe default value is 8."]}),"\n",(0,t.jsx)(s.h3,{id:"bitmapchunkinmemory",children:"bitmapChunkInMemory"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property bitmapChunkInMemory As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Defines how to build indices for this cube.",(0,t.jsx)(s.br,{}),"\nIf true, DeepSee builds its indices using local memory which is a faster means of doing this. For cubes with many indices (dimensions and measures) or dimensions with a *large* number of members, the set of index values might not fit in local memory, leading to a  error when the cube is built. If this occurs, set this property to false to use a slower, non-local-memory algorithm (the default)."]}),"\n",(0,t.jsx)(s.h3,{id:"defaultlisting",children:"defaultListing"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property defaultListing As %String(MAXLEN = 255, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If specified, this is the name of the listing (in the listing list) that is used as the default RETURN clause for DRILLTHROUGH queries against this cube."}),"\n",(0,t.jsx)(s.h3,{id:"listings",children:"listings"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship listings As %DeepSee.Model.listing(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Listings defined for this cube.",(0,t.jsx)(s.br,{}),"\nIf no listings are defined, then the Show Listing feature of the Analyzer will be disabled."]}),"\n",(0,t.jsx)(s.h3,{id:"listingfields",children:"listingFields"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship listingFields As %DeepSee.Model.listingField(XMLELEMENTREF = 1, XMLPROJECTION = "ELEMENT", XMLTYPECONSTRAINT = "CHOICE") [ Cardinality = many, Inverse = cube ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Listing fields defined for this cube."}),"\n",(0,t.jsx)(s.h3,{id:"precompute",children:"precompute"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property precompute As %Integer(MAXVAL = 2, MINVAL = 0, XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Specify if certain aggregates and counts should be pre-computed when this cube is built. If set to 0, then no precomputation is done. If set 1, counts and aggregates based on 1 level are computed. If set to 2, then combinations of 2 levels are used.",(0,t.jsx)(s.br,{}),"\nFor small cubes (less than 1 million facts) this does not have a very big impact. For larger cubes this can help the initial performance of certain queries, though over time, the cell cache will naturally build up the same set of values that would have been precomputed.",(0,t.jsx)(s.br,{}),"\nThe default value is 0."]}),"\n",(0,t.jsx)(s.h3,{id:"maxfacts",children:"maxFacts"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property maxFacts As %Integer(MINVAL = 0, XMLPROJECTION = "attribute");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If defined, this specifies the maximum number of facts that are initially loaded into this cube by the %BuildCube method.",(0,t.jsx)(s.br,{}),"\nNote that this does exactly what it says; there may be ",(0,t.jsx)(s.em,{children:"less"})," than this number loaded. For example, the %OnProcessFact method may be used to skip some records.",(0,t.jsx)(s.br,{}),"\nThis is intended as a diagnostic aid when a cube is initially developed."]}),"\n",(0,t.jsx)(s.h3,{id:"disablelistinggroups",children:"disableListingGroups"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property disableListingGroups As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"This setting controls whether the cube will accept the use of Listing Groups to define auxiliary listings."}),"\n",(0,t.jsx)(s.h3,{id:"enablesqlrestrict",children:"enableSqlRestrict"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property enableSqlRestrict As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Enable use of the special MDX %SQLRESTRICT clause with this cube."}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"processfunctions",children:"%ProcessFunctions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ProcessFunctions() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Build the list of available time functions."}),"\n",(0,t.jsx)(s.h3,{id:"validate",children:"%Validate"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %Validate() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Validate this cube model for logical errors."}),"\n",(0,t.jsx)(s.h3,{id:"resolveinheritance",children:"%ResolveInheritance"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ResolveInheritance() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Resolve inheritance for this cube; combine its model with that of its base cube, if present. JSL4414 : Make this method not internal"}),"\n",(0,t.jsx)(s.h3,{id:"resolveshareddimensions",children:"%ResolveSharedDimensions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ResolveSharedDimensions(Output pConnections) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Resolve any shared dimensions within this cube. Look for shared dimensions and merge their definition into this cube's. There can be no local override of a shared dimension.",(0,t.jsx)(s.br,{}),"\nReturn a list of shared dimensions organized by target cube."]}),"\n",(0,t.jsx)(s.h3,{id:"applyoverridesfordocumatic",children:"%ApplyOverridesForDocumatic"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ApplyOverridesForDocumatic()\n"})}),"\n",(0,t.jsx)(s.p,{children:"JSL4414 -- new method Not supported for direct use by customers."}),"\n",(0,t.jsx)(s.h3,{id:"atscaleexport",children:"%AtScaleExport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %AtScaleExport(pStatus As %Status, ByRef pRefIndex As %DynamicAbstractObject = "") As %DynamicAbstractObject\n'})}),"\n",(0,t.jsx)(s.p,{children:"Produce the structures needed to emit the appropriate JSON and export this item to AtScale"}),"\n",(0,t.jsx)(s.h3,{id:"atscaleaddcustomsqltodataset",children:"%AtScaleAddCustomSQLToDataset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %AtScaleAddCustomSQLToDataset(pDataset, pAuxiliary) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This Takes the information gathered into the pAuxiliary reference index during the model search and adds the custom SQL and column information to the target dataset."}),"\n",(0,t.jsx)(s.h3,{id:"atscaleaddcolumnstocalendardataset",children:"%AtScaleAddColumnsToCalendarDataset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %AtScaleAddColumnsToCalendarDataset(pDataset, pAuxiliary) As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This Takes the information gathered into the pAuxiliary reference index during the model search and adds the custom SQL and column information to the target dataset."})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>r});var t=i(96540);const n={},a=t.createContext(n);function l(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);