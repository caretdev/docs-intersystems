"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[92343],{21013:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>l,default:()=>d,frontMatter:()=>a,toc:()=>r});var n=s(74848),c=s(28453);const a={pagination_prev:null,pagination_next:null},l="%XDBC.Gateway.ODBC.Statement",r=[{value:"Properties",id:"properties",level:2},{value:"connection",id:"connection",level:3},{value:"statement",id:"statement",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnNew",id:"onnew",level:3},{value:"Prepare",id:"prepare",level:3},{value:"GetTables",id:"gettables",level:3},{value:"GetTablePriviligies",id:"gettablepriviligies",level:3},{value:"ExecuteDirect",id:"executedirect",level:3},{value:"Execute",id:"execute",level:3},{value:"ExecuteQuery",id:"executequery",level:3},{value:"GetConnection",id:"getconnection",level:3},{value:"ExecuteUpdate",id:"executeupdate",level:3},{value:"GetResultSet",id:"getresultset",level:3},{value:"GetMaxRows",id:"getmaxrows",level:3},{value:"SetMaxFieldSize",id:"setmaxfieldsize",level:3},{value:"SetMaxRows",id:"setmaxrows",level:3},{value:"SetQueryTimeout",id:"setquerytimeout",level:3},{value:"GetUpdateCount",id:"getupdatecount",level:3},{value:"GetMoreResults",id:"getmoreresults",level:3},{value:"Close",id:"close",level:3},{value:"Cancel",id:"cancel",level:3},{value:"GetFetchSize",id:"getfetchsize",level:3},{value:"GetMaxFieldSize",id:"getmaxfieldsize",level:3},{value:"GetGeneratedKeys",id:"getgeneratedkeys",level:3},{value:"SetFetchSize",id:"setfetchsize",level:3},{value:"GetQueryTimeout",id:"getquerytimeout",level:3},{value:"IsClosed",id:"isclosed",level:3},{value:"AddBatch",id:"addbatch",level:3},{value:"ClearBatch",id:"clearbatch",level:3},{value:"ExecuteBatch",id:"executebatch",level:3}];function i(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"xdbcgatewayodbcstatement",children:"%XDBC.Gateway.ODBC.Statement"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XDBC.Gateway.ODBC.Statement Extends %XDBC.Gateway.Statement [ System = 4 ]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"connection",children:"connection"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property connection As %XDBC.Gateway.ODBC.Connection;\n"})}),"\n",(0,n.jsx)(t.h3,{id:"statement",children:"statement"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property statement As %ObjectHandle;\n"})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnNew(connection As %XDBC.Gateway.ODBC.Connection, statement As %ObjectHandle) As %Status\n"})}),"\n",(0,n.jsx)(t.h3,{id:"prepare",children:"Prepare"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Prepare(sql As %String) As %Status\n"})}),"\n",(0,n.jsx)(t.h3,{id:"gettables",children:"GetTables"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetTables(Catalog As %String, Schema As %String, Table As %String) As %Status\n"})}),"\n",(0,n.jsx)(t.h3,{id:"gettablepriviligies",children:"GetTablePriviligies"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetTablePriviligies(Schema As %String, Table As %String) As %Status\n"})}),"\n",(0,n.jsx)(t.h3,{id:"executedirect",children:"ExecuteDirect"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteDirect(sql As %String) As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Executes the given SQL statement, which may return multiple results"}),"\n",(0,n.jsx)(t.h3,{id:"execute",children:"Execute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Execute() As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Executes the prepared SQL statement, which may return multiple results"}),"\n",(0,n.jsx)(t.h3,{id:"executequery",children:"ExecuteQuery"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteQuery(sql As %String) As %XDBC.Gateway.ResultSet\n"})}),"\n",(0,n.jsx)(t.p,{children:"Executes the given SQL statement, which returns a single ResultSet object"}),"\n",(0,n.jsx)(t.h3,{id:"getconnection",children:"GetConnection"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetConnection() As Connection\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the Connection object that produced this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"executeupdate",children:"ExecuteUpdate"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteUpdate(sql As %String) As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Executes the given SQL statement, which may be an INSERT, UPDATE, or DELETE statement or an SQL statement that returns nothing, such as an SQL DDL statement Executes the given SQL statement and signals the driver with the given flag about whether the auto-generated keys produced by this Statement object should be made available for retrieval."}),"\n",(0,n.jsx)(t.h3,{id:"getresultset",children:"GetResultSet"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetResultSet() As %XDBC.Gateway.ResultSet\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the current result as a ResultSet object."}),"\n",(0,n.jsx)(t.h3,{id:"getmaxrows",children:"GetMaxRows"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMaxRows() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the maximum number of rows that a ResultSet object produced by this Statement object can contain"}),"\n",(0,n.jsx)(t.h3,{id:"setmaxfieldsize",children:"SetMaxFieldSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetMaxFieldSize(max As %Integer)\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"setmaxrows",children:"SetMaxRows"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetMaxRows(max As %Integer)\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"setquerytimeout",children:"SetQueryTimeout"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetQueryTimeout(seconds As %Integer)\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the number of seconds the driver will wait for a Statement object to execute to the given number of seconds."}),"\n",(0,n.jsx)(t.h3,{id:"getupdatecount",children:"GetUpdateCount"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetUpdateCount() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"getmoreresults",children:"GetMoreResults"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMoreResults() As %Boolean\n"})}),"\n",(0,n.jsx)(t.h3,{id:"close",children:"Close"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Close()\n"})}),"\n",(0,n.jsx)(t.p,{children:"Releases this Statement object's database and resources immediately instead of waiting for this to happen when it is automatically closed."}),"\n",(0,n.jsx)(t.h3,{id:"cancel",children:"Cancel"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Cancel()\n"})}),"\n",(0,n.jsx)(t.p,{children:"Cancels this Statement object if both the DBMS and driver support aborting an SQL statement."}),"\n",(0,n.jsx)(t.h3,{id:"getfetchsize",children:"GetFetchSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFetchSize() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of result set rows that is the default fetch size for ResultSet objects generated from this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getmaxfieldsize",children:"GetMaxFieldSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMaxFieldSize() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the maximum number of bytes that can be returned for character and binary column values in a ResultSet object produced by this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getgeneratedkeys",children:"GetGeneratedKeys"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetGeneratedKeys() As %XDBC.Gateway.ResultSet\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"setfetchsize",children:"SetFetchSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetFetchSize(rows As %Integer)\n"})}),"\n",(0,n.jsx)(t.p,{children:"Gives the driver a hint as to the number of rows that should be fetched from the database when more rows are needed for ResultSet objects genrated by this Statement."}),"\n",(0,n.jsx)(t.h3,{id:"getquerytimeout",children:"GetQueryTimeout"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetQueryTimeout() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of seconds the driver will wait for a Statement object to execute."}),"\n",(0,n.jsx)(t.h3,{id:"isclosed",children:"IsClosed"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsClosed() As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"addbatch",children:"AddBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method AddBatch(sql As %String, ColumnBinding As %Boolean, size As %Integer, statusArray As %Boolean)\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported, use PreparedStatement.AddBatchEx"}),"\n",(0,n.jsx)(t.h3,{id:"clearbatch",children:"ClearBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ClearBatch()\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported"}),"\n",(0,n.jsx)(t.h3,{id:"executebatch",children:"ExecuteBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteBatch() As %ListOfDataTypes\n"})}),"\n",(0,n.jsx)(t.p,{children:"Method Not Supported, use PreparedStatement.ExecuteBatchEx"})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>r});var n=s(96540);const c={},a=n.createContext(c);function l(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);