"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[62723],{25174:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>s,toc:()=>c});var r=n(74848),i=n(28453);const s={pagination_prev:null,pagination_next:null},a="%XML.Security.KeyInfo",c=[{value:"Parameters",id:"parameters",level:2},{value:"XMLFORMAT",id:"xmlformat",level:3},{value:"NAMESPACE",id:"namespace",level:3},{value:"ELEMENTQUALIFIED",id:"elementqualified",level:3},{value:"Properties",id:"properties",level:2},{value:"KeyInfoClauseList",id:"keyinfoclauselist",level:3},{value:"Id",id:"id",level:3},{value:"RetrievalMethod",id:"retrievalmethod",level:3},{value:"KeyType",id:"keytype",level:3},{value:"TokenType",id:"tokentype",level:3},{value:"X509Credentials",id:"x509credentials",level:3},{value:"Methods",id:"methods",level:2},{value:"CreateX509",id:"createx509",level:3},{value:"CreateEncryptedKey",id:"createencryptedkey",level:3},{value:"CreateBinarySecret",id:"createbinarysecret",level:3},{value:"SetIdentifier",id:"setidentifier",level:3},{value:"ValidateTokenRef",id:"validatetokenref",level:3},{value:"ValidateKeyElement",id:"validatekeyelement",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"xmlsecuritykeyinfo",children:"%XML.Security.KeyInfo"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XML.Security.KeyInfo Extends (%RegisteredObject, %XML.Adaptor) [ Inheritance = right, System = 4 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"XML Signature element. This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"xmlformat",children:"XMLFORMAT"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter XMLFORMAT = "literal";\n'})}),"\n",(0,r.jsx)(t.h3,{id:"namespace",children:"NAMESPACE"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter NAMESPACE = "http://www.w3.org/2000/09/xmldsig#";\n'})}),"\n",(0,r.jsx)(t.h3,{id:"elementqualified",children:"ELEMENTQUALIFIED"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter ELEMENTQUALIFIED = 1;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"keyinfoclauselist",children:"KeyInfoClauseList"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property KeyInfoClauseList As list Of %XML.Security.KeyInfoClause(XMLPROJECTION = "element", XMLREF = 1, XMLTYPECONSTRAINT = "choice") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.h3,{id:"id",children:"Id"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property Id As %String(MAXLEN = "", XMLPROJECTION = "attribute") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.h3,{id:"retrievalmethod",children:"RetrievalMethod"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property RetrievalMethod As %XML.Security.RetrievalMethod(XMLPROJECTION = "element") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"This property is provided to support parsing of XML containing this tag but not as a means to access the EncryptedKey. The URI value is not validated."}),"\n",(0,r.jsx)(t.h3,{id:"keytype",children:"KeyType"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property KeyType As %String(MAXLEN = "", XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:'Key material on input is identified by KeyType, TokenType and Credentials: SAML \tTokenType = $$$SOAPWSSAML \tKeyType = $$$SOAPWSX509v3 or $$$SOAPWSEncryptedKey \tCredentials = %XML.Security.RSAKeyValue or %SYS.X509Credentials or %XML.Security.EncryptedKey KeyIdentifier #EncryptedKeySHA1 \tTokenType = $$$SOAPWSEncryptedKeySHA1 \tKeyType = $$$SOAPWSEncryptedKeySHA1 \tCredentials = SHA1 hash of key Direct Reference to #EncryptedKey or contained EncryptedKey element \tTokenType = $$$SOAPWSEncryptedKey \tKeyType = $$$SOAPWSEncryptedKey \tCredentials = %XML.Security.EncryptedKey Direct Reference to #DerivedKey \tTokenType = $$$SOAPWSDerivedKey \tKeyType = $$$SOAPWSDerivedKey \tCredentials = %SOAP.WSSC.DerivedKey Direct Reference  or reference by Identifier to SecurityContextToken \tTokenType = $$$SOAPWSSCToken \tKeyType = $$$SOAPWSSCToken \tCredentials = %SOAP.WSSC.SecurityContextToken Direct Reference  to BinarySecret \tTokenType = $$$SOAPWSTSecretSymKey \tKeyType = $$$SOAPWSTSecretSymKey \tCredentials = %SOAP.WSSC.SecurityContextToken RSA Key Value \tTokenType = "KeyValue" \tKeyType = $$$SOAPWSX509v3 \tCredentials = %XML.Security.RSAKeyValue X.509 certificate \tTokenType = $$$SOAPWSX509v3 \tKeyType = $$$SOAPWSX509v3 \tX509Credentials = %SYS.X509Credentials'}),"\n",(0,r.jsx)(t.p,{children:"Type of key information."}),"\n",(0,r.jsx)(t.h3,{id:"tokentype",children:"TokenType"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property TokenType As %String(MAXLEN = "", XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Type of token."}),"\n",(0,r.jsx)(t.h3,{id:"x509credentials",children:"X509Credentials"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property X509Credentials As %RawString(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Credentials that stores key information. Name X509Credentials is from original implementation and has been extended to also allow binary key, %XML.Security.RSAKeyValue, %XML.Security.EncryptedKey or %SOAP.WSSC.DerivedKeyToken."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"createx509",children:"CreateX509"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateX509(ByRef credentials As %SYS.X509Credentials, referenceOption As %Integer, Output status As %Status) As %XML.Security.KeyInfo\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Create a KeyInfo associated with the specified X509 certificate.",(0,r.jsx)(t.br,{}),"\n- The certificate is specified in the token argument by a %SYS.X509Credentials instance containing the certificate, a BinarySecurityToken containing the X509 certificate or a SAML Assertion whose SubjectConfirmation is based on X.509 credentials. A binary security token must be used for a direct reference.",(0,r.jsx)(t.br,{}),"\n- The referenceOption argument specifies the type of reference to create. See %soap.inc definitions of $$$SOAPWSReference.... and $$$KeyInfoX509.... The default is to use a direct reference if the first argument is a binary security token or to use the Thumbprint if the first argument is a %SYS.X509Credentials instance.",(0,r.jsx)(t.br,{}),"\n- If no KeyInfo is returned the status argument is set to the error %Status."]}),"\n",(0,r.jsx)(t.h3,{id:"createencryptedkey",children:"CreateEncryptedKey"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateEncryptedKey(encryptedKey As %XML.Security.EncryptedKey, Output status As %Status) As %XML.Security.KeyInfo\n"})}),"\n",(0,r.jsx)(t.p,{children:"Create a KeyInfo containing the specified EncryptedKey."}),"\n",(0,r.jsx)(t.h3,{id:"createbinarysecret",children:"CreateBinarySecret"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateBinarySecret(binarySecret As %SOAP.WST.BinarySecret, Output status As %Status) As %XML.Security.KeyInfo\n"})}),"\n",(0,r.jsx)(t.p,{children:"Create a KeyInfo containing the specified EncryptedKey."}),"\n",(0,r.jsx)(t.h3,{id:"setidentifier",children:"SetIdentifier"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetIdentifier(key As %Binary) [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:'Set the Identifier of %XML.SecurityTokenReference if it is ""'}),"\n",(0,r.jsx)(t.h3,{id:"validatetokenref",children:"ValidateTokenRef"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method ValidateTokenRef(service As %SOAP.WebBase = "") As %String [ Internal ]\n'})}),"\n",(0,r.jsx)(t.p,{children:'Validate this input KeyInfo. If valid, set KeyType, TokenType and Credentials properties to indicate type of KeyInfo and return "". If not valid, return error code.'}),"\n",(0,r.jsx)(t.h3,{id:"validatekeyelement",children:"ValidateKeyElement"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ValidateKeyElement(service As %SOAP.WebBase, Output key As %Binary, signingKey As %Boolean) As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Validate this input KeyInfo where a symmetric key is expected. If not valid, return error code."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(96540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);