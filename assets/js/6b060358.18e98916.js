"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[31437],{11044:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>r,toc:()=>a});var t=n(74848),l=n(28453);const r={pagination_prev:null,pagination_next:null},i="%ZEN.Report.reportPage",a=[{value:"Parameters",id:"parameters",level:2},{value:"APPLICATION",id:"application",level:3},{value:"REPORTNAME",id:"reportname",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"Properties",id:"properties",level:2},{value:"ReportDir",id:"reportdir",level:3},{value:"ConnectTimeOut",id:"connecttimeout",level:3},{value:"RenderTimeOut",id:"rendertimeout",level:3},{value:"RenderDirectlyOnTimeout",id:"renderdirectlyontimeout",level:3},{value:"PrintServer",id:"printserver",level:3},{value:"PrintTimeOut",id:"printtimeout",level:3},{value:"ExcelServer",id:"excelserver",level:3},{value:"ExcelServerTimeOut",id:"excelservertimeout",level:3},{value:"PS",id:"ps",level:3},{value:"TimeOut",id:"timeout",level:3},{value:"%display",id:"display",level:3},{value:"Datasource",id:"datasource",level:3},{value:"StripPI",id:"strippi",level:3},{value:"SubReport",id:"subreport",level:3},{value:"MainReport",id:"mainreport",level:3},{value:"TooLongText",id:"toolongtext",level:3},{value:"SuppressExcelHeaders",id:"suppressexcelheaders",level:3},{value:"XsltVersion",id:"xsltversion",level:3},{value:"ReportXMLNameSpace",id:"reportxmlnamespace",level:3},{value:"ReportXMLNameSpacePrefix",id:"reportxmlnamespaceprefix",level:3},{value:"NamespaceDeclarations",id:"namespacedeclarations",level:3},{value:"%disableBreak",id:"disablebreak",level:3},{value:"xmlstream",id:"xmlstream",level:3},{value:"tohtmlstream",id:"tohtmlstream",level:3},{value:"toxslfostream",id:"toxslfostream",level:3},{value:"toexcelstream",id:"toexcelstream",level:3},{value:"xmlstylesheet",id:"xmlstylesheet",level:3},{value:"getxmlstylesheet",id:"getxmlstylesheet",level:3},{value:"xmlstylesheetarg",id:"xmlstylesheetarg",level:3},{value:"TableAltColor",id:"tablealtcolor",level:3},{value:"SplitAndMerge",id:"splitandmerge",level:3},{value:"RepeatingElement",id:"repeatingelement",level:3},{value:"CountRepeatingElement",id:"countrepeatingelement",level:3},{value:"CheckPDFNotZeroLength",id:"checkpdfnotzerolength",level:3},{value:"SplitOnly",id:"splitonly",level:3},{value:"SplitDir",id:"splitdir",level:3},{value:"SplitRootName",id:"splitrootname",level:3},{value:"%SplitReturnedPDFs",id:"splitreturnedpdfs",level:3},{value:"OutputFileName",id:"outputfilename",level:3},{value:"UseRawIOForXML",id:"userawioforxml",level:3},{value:"DefaultFontFaceCopyHTML",id:"defaultfontfacecopyhtml",level:3},{value:"DefaultFontSizeCopyHTML",id:"defaultfontsizecopyhtml",level:3},{value:"SetProcessWideRunTimeMode",id:"setprocesswideruntimemode",level:3},{value:"%ArrayLogFiles",id:"arraylogfiles",level:3},{value:"isServer",id:"isserver",level:3},{value:"isHTML5",id:"ishtml5",level:3},{value:"xmlfile",id:"xmlfile",level:3},{value:"OptionLang",id:"optionlang",level:3},{value:"OptionNoComplexScript",id:"optionnocomplexscript",level:3},{value:"OptionRelaxed",id:"optionrelaxed",level:3},{value:"OptionDPI",id:"optiondpi",level:3},{value:"OptionOwnerPassword",id:"optionownerpassword",level:3},{value:"OptionUserPassword",id:"optionuserpassword",level:3},{value:"OptionNoPrint",id:"optionnoprint",level:3},{value:"OptionNoCopy",id:"optionnocopy",level:3},{value:"OptionNoEdit",id:"optionnoedit",level:3},{value:"OptionNoAnnotations",id:"optionnoannotations",level:3},{value:"OptionNoFillInForms",id:"optionnofillinforms",level:3},{value:"OptionNoAccessContent",id:"optionnoaccesscontent",level:3},{value:"OptionNoAssembleDoc",id:"optionnoassembledoc",level:3},{value:"OptionNoPrintHq",id:"optionnoprinthq",level:3},{value:"OptionEnableAccessibility",id:"optionenableaccessibility",level:3},{value:"OptionPDFProfile",id:"optionpdfprofile",level:3},{value:"OptionConserve",id:"optionconserve",level:3},{value:"OptionCachePath",id:"optioncachepath",level:3},{value:"OptionFlush",id:"optionflush",level:3},{value:"UseHTML5",id:"usehtml5",level:3},{value:"UseSemaphore",id:"usesemaphore",level:3},{value:"AggregatesIgnoreNLS",id:"aggregatesignorenls",level:3},{value:"SaxMemSize",id:"saxmemsize",level:3},{value:"PDFMergeMemSize",id:"pdfmergememsize",level:3},{value:"Mode",id:"mode",level:3},{value:"FileLifeTime",id:"filelifetime",level:3},{value:"OldBehaviorLineFeedOnBreak",id:"oldbehaviorlinefeedonbreak",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"ReportDefinition",id:"reportdefinition",level:3},{value:"ReportDisplay",id:"reportdisplay",level:3},{value:"HtmlXslt",id:"htmlxslt",level:3},{value:"XslFoXslt",id:"xslfoxslt",level:3},{value:"AllXslt",id:"allxslt",level:3},{value:"CommonXslFo",id:"commonxslfo",level:3},{value:"CommonHtml",id:"commonhtml",level:3},{value:"SmallMultipleCommonXSL",id:"smallmultiplecommonxsl",level:3},{value:"SmallMultipleHTMLXSL",id:"smallmultiplehtmlxsl",level:3},{value:"SmallMultipleFOXSL",id:"smallmultiplefoxsl",level:3},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"%InitProperties",id:"initproperties",level:3},{value:"%InitProperties1",id:"initproperties1",level:3},{value:"%ApplyURLParms",id:"applyurlparms",level:3},{value:"OnPreHTTP",id:"onprehttp",level:3},{value:"%OnPreHTTP",id:"onprehttp-1",level:3},{value:"OnPage",id:"onpage",level:3},{value:"GenerateToFile",id:"generatetofile",level:3},{value:"GenerateReport",id:"generatereport",level:3},{value:"CallReport",id:"callreport",level:3},{value:"AsynchGenerateReport",id:"asynchgeneratereport",level:3},{value:"GenerateReportToStream",id:"generatereporttostream",level:3},{value:"GenerateStream",id:"generatestream",level:3},{value:"%RunReport",id:"runreport",level:3},{value:"CreateOutputStream",id:"createoutputstream",level:3},{value:"GetXMLStyleSheet",id:"getxmlstylesheet-1",level:3},{value:"%DrawXML",id:"drawxml",level:3},{value:"XSLPreamble",id:"xslpreamble",level:3},{value:"%DrawToHTML",id:"drawtohtml",level:3},{value:"%DrawToExcel",id:"drawtoexcel",level:3},{value:"%DrawToXSLFO",id:"drawtoxslfo",level:3},{value:"%DisplayHTML",id:"displayhtml",level:3},{value:"%DisplayAnnotatedExcel",id:"displayannotatedexcel",level:3},{value:"%DisplayExcel",id:"displayexcel",level:3},{value:"%DisplayXlsx",id:"displayxlsx",level:3},{value:"%DisplayXlsxFromXML",id:"displayxlsxfromxml",level:3},{value:"%DisplayFO",id:"displayfo",level:3},{value:"%PerformTransform",id:"performtransform",level:3},{value:"%PerformFOTransform",id:"performfotransform",level:3},{value:"%PerformTIFFTransform",id:"performtifftransform",level:3},{value:"%PerformTransformAndPrint",id:"performtransformandprint",level:3},{value:"%PerformPSTransform",id:"performpstransform",level:3},{value:"%DisplayPDF",id:"displaypdf",level:3},{value:"%DisplayFO2PDF",id:"displayfo2pdf",level:3},{value:"%DisplayTIFF",id:"displaytiff",level:3},{value:"%DisplayPDF1",id:"displaypdf1",level:3},{value:"%DisplayFO2PDF1",id:"displayfo2pdf1",level:3},{value:"%DisplayTIFF1",id:"displaytiff1",level:3},{value:"%PrintPDF",id:"printpdf",level:3},{value:"%PrintPS",id:"printps",level:3},{value:"%ToHTMLStyleSheetLink",id:"tohtmlstylesheetlink",level:3},{value:"%ToExcelStyleSheetLink",id:"toexcelstylesheetlink",level:3},{value:"%ToXSLFOStyleSheetLink",id:"toxslfostylesheetlink",level:3},{value:"%MakeXMLDataFile",id:"makexmldatafile",level:3},{value:"%MakeTransformedXMLFile",id:"maketransformedxmlfile",level:3},{value:"%DeleteTempFiles",id:"deletetempfiles",level:3},{value:"%MakeToHTMLFile",id:"maketohtmlfile",level:3},{value:"%MakeToExcelFile",id:"maketoexcelfile",level:3},{value:"%MakeToXSLFOFile",id:"maketoxslfofile",level:3},{value:"%GetFileByRelativeURL",id:"getfilebyrelativeurl",level:3},{value:"%GetFileByAbsoluteURL",id:"getfilebyabsoluteurl",level:3},{value:"%OutputStream",id:"outputstream",level:3},{value:"%LogError",id:"logerror",level:3},{value:"%OnBeforeReport",id:"onbeforereport",level:3},{value:"%OnAfterReport",id:"onafterreport",level:3},{value:"%OnReportTag",id:"onreporttag",level:3},{value:"%TagNameSpace",id:"tagnamespace",level:3},{value:"%WriteNameSpace",id:"writenamespace",level:3},{value:"%GetTempDir",id:"gettempdir",level:3},{value:"%CreateDisplay",id:"createdisplay",level:3},{value:"DeleteTempFiles",id:"deletetempfiles-1",level:3},{value:"UnLockTempFiles",id:"unlocktempfiles",level:3},{value:"InitReport",id:"initreport",level:3},{value:"%SetContextFromProperties",id:"setcontextfromproperties",level:3},{value:"%initNameSpace",id:"initnamespace",level:3},{value:"%checkNameSpace",id:"checknamespace",level:3},{value:"hasDataSource",id:"hasdatasource",level:3},{value:"MakeFileName",id:"makefilename",level:3},{value:"GetSafeRootName",id:"getsaferootname",level:3},{value:"GetRootDir",id:"getrootdir",level:3},{value:"GetRootDirFromParam",id:"getrootdirfromparam",level:3},{value:"%OnSubmit",id:"onsubmit",level:3},{value:"TestPDFGeneration",id:"testpdfgeneration",level:3},{value:"OnAfterCreateDisplay",id:"onaftercreatedisplay",level:3},{value:"%OnAfterCreateDisplay",id:"onaftercreatedisplay-1",level:3},{value:"%GetComponentById",id:"getcomponentbyid",level:3},{value:"replace",id:"replace",level:3},{value:"GetIOTable",id:"getiotable",level:3},{value:"%GetParam",id:"getparam",level:3},{value:"%GetClassParam",id:"getclassparam",level:3},{value:"%GetCodeGenParam",id:"getcodegenparam",level:3},{value:"%HasHtml5",id:"hashtml5",level:3},{value:"%getUniqueExcelSheetName",id:"getuniqueexcelsheetname",level:3},{value:"%getDisplayUniqueExcelSheetName",id:"getdisplayuniqueexcelsheetname",level:3},{value:"%ResolveText",id:"resolvetext",level:3},{value:"Purge",id:"purge",level:3},{value:"UnLock",id:"unlock",level:3},{value:"GetTempFileName",id:"gettempfilename",level:3},{value:"ToExcelDate",id:"toexceldate",level:3}];function o(e){const s={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"zenreportreportpage",children:"%ZEN.Report.reportPage"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.reportPage Extends (%RegisteredObject, %CSP.Page, %ZEN.DataModel.Adaptor) [ Abstract, DependsOn = %ZEN.Report.Display.report, Deprecated, Inheritance = right, PropertyClass = %ZEN.Report.reportParameters, System = 4 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Represents a Report within a ZEN application. This is the base class used for all user reports.",(0,t.jsx)(s.br,{}),"\nNote that a report is ",(0,t.jsx)(s.em,{children:"not"})," a ZEN page; all logic for a report is executed on the server. The client is sent the final output for viewing and printing."]}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"application",children:"APPLICATION"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter APPLICATION As CLASSNAME;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This is the class name of this application this report belongs to.",(0,t.jsx)(s.br,{}),"\nIf not defined, this report does not belong to an application.",(0,t.jsx)(s.br,{}),"\nThe application can be the source of ZEN Report parameters.",(0,t.jsx)(s.br,{}),"\nIf APPLICATION is not defined or if parameter is null in APPLICATION class %ZEN.Report.defaultApplication is the source of ZEN Report parameters."]}),"\n",(0,t.jsx)(s.h3,{id:"reportname",children:"REPORTNAME"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter REPORTNAME As STRING;\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is the logical name of this report. If not provided, class name is used."}),"\n",(0,t.jsx)(s.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DOMAIN As STRING;\n"})}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"reportdir",children:"ReportDir"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ReportDir As %String;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"connecttimeout",children:"ConnectTimeOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property ConnectTimeOut As %ZEN.Datatype.integer(ZENURL = "$CONNECTTIMEOUT");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["-1 for RenderConnectTimeOut means never timeout.",(0,t.jsx)(s.br,{}),"\nThe units are seconds.",(0,t.jsx)(s.br,{}),"\nThe Zen Report makes a connection using open to connect to the Render Server. This is the timeout on the open (the connect timeout)"]}),"\n",(0,t.jsx)(s.h3,{id:"rendertimeout",children:"RenderTimeOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property RenderTimeOut As %ZEN.Datatype.integer(ZENURL = "$RENDERTIMEOUT");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["-1 for RenderTimeOut means never timeout.",(0,t.jsx)(s.br,{}),"\nThe units are seconds."]}),"\n",(0,t.jsx)(s.h3,{id:"renderdirectlyontimeout",children:"RenderDirectlyOnTimeout"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property RenderDirectlyOnTimeout As %ZEN.Datatype.boolean(ZENURL = "$RENDERDIRECTLYONTIMEOUT");\n'})}),"\n",(0,t.jsx)(s.p,{children:"if we do not render directly to Render Server in RENDERTIMEOUT, Zen Reports renders directly, spawing new JVM"}),"\n",(0,t.jsx)(s.h3,{id:"printserver",children:"PrintServer"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property PrintServer As %ZEN.Datatype.string(ZENURL = "$PRINTSERVER");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["specifies PrintServer port of PrintServer which prints PDFs",(0,t.jsx)(s.br,{}),"\nCan be overriden by $PRINTSERVER on URL"]}),"\n",(0,t.jsx)(s.h3,{id:"printtimeout",children:"PrintTimeOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property PrintTimeOut As %ZEN.Datatype.integer(ZENURL = "$PRINTTIMEOUT");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["-1 for PrintTimeOut means never timeout.",(0,t.jsx)(s.br,{}),"\nThe units are seconds."]}),"\n",(0,t.jsx)(s.h3,{id:"excelserver",children:"ExcelServer"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property ExcelServer As %ZEN.Datatype.string(ZENURL = "$EXCELSERVER");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["specifies ExcelServer port of ExcelServer which renders Excel spreadsheets",(0,t.jsx)(s.br,{}),"\nCan be overriden by $EXCELSERVER on URL"]}),"\n",(0,t.jsx)(s.h3,{id:"excelservertimeout",children:"ExcelServerTimeOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property ExcelServerTimeOut As %ZEN.Datatype.integer(ZENURL = "$EXCELSERVERTIMEOUT");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["-1 for ExcelServerTimeOut means never timeout.",(0,t.jsx)(s.br,{}),"\nThe units are seconds."]}),"\n",(0,t.jsx)(s.h3,{id:"ps",children:"PS"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property PS As %ZEN.Datatype.string(ZENURL = "$PS");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Postscript Printer or Printer used by pdfprint/PrintServer"}),"\n",(0,t.jsx)(s.h3,{id:"timeout",children:"TimeOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property TimeOut As %ZEN.Datatype.integer;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"display",children:"%display"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property %display As %ZEN.Report.Display.report;\n"})}),"\n",(0,t.jsx)(s.p,{children:"backpointer to display object that belongs to this report"}),"\n",(0,t.jsx)(s.h3,{id:"datasource",children:"Datasource"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property Datasource As %String(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.p,{children:"See the DATASOURCE parameter for details."}),"\n",(0,t.jsx)(s.h3,{id:"strippi",children:"StripPI"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property StripPI As %String;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"subreport",children:"SubReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SubReport As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"This property is used on toxslfo and tohtml to indicate they are being fetched as sub-reports"}),"\n",(0,t.jsx)(s.h3,{id:"mainreport",children:"MainReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property MainReport As %String;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"toolongtext",children:"TooLongText"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property TooLongText As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"suppressexcelheaders",children:"SuppressExcelHeaders"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SuppressExcelHeaders As %ZEN.Datatype.boolean(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"xsltversion",children:"XsltVersion"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property XsltVersion As %ZEN.Datatype.string(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"reportxmlnamespace",children:"ReportXMLNameSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ReportXMLNameSpace As %ZEN.Datatype.string(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"reportxmlnamespaceprefix",children:"ReportXMLNameSpacePrefix"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ReportXMLNameSpacePrefix As %ZEN.Datatype.string(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"namespacedeclarations",children:"NamespaceDeclarations"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property NamespaceDeclarations As %ZEN.Datatype.string(ZENURL = "$NAMESPACEDECLARATIONS");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If provided, this is a string of XML namespace declarations.",(0,t.jsx)(s.br,{}),"\nFor example, \"xmlns='",(0,t.jsx)(s.a,{href:"http://mydefault",children:"http://mydefault"}),"' xmlns:ns1='",(0,t.jsx)(s.a,{href:"http://namespace1",children:"http://namespace1"}),"'\".",(0,t.jsx)(s.br,{}),"\nThe namespace declarations will go on the root element of the generated XML and also on the stylesheet element of the generated XSL."]}),"\n",(0,t.jsx)(s.h3,{id:"disablebreak",children:"%disableBreak"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %disableBreak As %ZEN.Datatype.integer(XMLPROJECTION = "none", ZENHIDDEN = 1) [ Internal ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xmlstream",children:"xmlstream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property xmlstream As %Library.RegisteredObject(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"tohtmlstream",children:"tohtmlstream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property tohtmlstream As %Library.RegisteredObject(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"toxslfostream",children:"toxslfostream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property toxslfostream As %Library.RegisteredObject(ZENHIDDEN = 1);\n"})}),"\n",(0,t.jsx)(s.h3,{id:"toexcelstream",children:"toexcelstream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property toexcelstream As %Library.RegisteredObject;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"xmlstylesheet",children:"xmlstylesheet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property xmlstylesheet As %Library.RegisteredObject;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getxmlstylesheet",children:"getxmlstylesheet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property getxmlstylesheet As %String;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"xmlstylesheetarg",children:"xmlstylesheetarg"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property xmlstylesheetarg As %ZEN.Datatype.string(ZENURL = "$XMLSTYLESHEETARG");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"tablealtcolor",children:"TableAltColor"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property TableAltColor As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"splitandmerge",children:"SplitAndMerge"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SplitAndMerge As %ZEN.Datatype.boolean;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"repeatingelement",children:"RepeatingElement"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property RepeatingElement As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"countrepeatingelement",children:"CountRepeatingElement"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property CountRepeatingElement As %ZEN.Datatype.integer;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"checkpdfnotzerolength",children:"CheckPDFNotZeroLength"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property CheckPDFNotZeroLength As %ZEN.Datatype.boolean;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"splitonly",children:"SplitOnly"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SplitOnly As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If SPLITANDMERGE set, split only, don't merge at end"}),"\n",(0,t.jsx)(s.h3,{id:"splitdir",children:"SplitDir"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SplitDir As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is directory where PDF files produced by split will go"}),"\n",(0,t.jsx)(s.h3,{id:"splitrootname",children:"SplitRootName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property SplitRootName As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Instead of generating temporary names for split PDF files, use this as a root name, and add an integer suffix to file"}),"\n",(0,t.jsx)(s.h3,{id:"splitreturnedpdfs",children:"%SplitReturnedPDFs"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property %SplitReturnedPDFs As %ZEN.Datatype.string [ MultiDimensional ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"This property hold returned PDFs"}),"\n",(0,t.jsx)(s.h3,{id:"outputfilename",children:"OutputFileName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property OutputFileName [ Internal ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"This is an internal property used to hold the outputfilename"}),"\n",(0,t.jsx)(s.h3,{id:"userawioforxml",children:"UseRawIOForXML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property UseRawIOForXML As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"UseRawIOForXML - set to 1 to use RawIO in XML output, otherwise use translation tables"}),"\n",(0,t.jsx)(s.h3,{id:"defaultfontfacecopyhtml",children:"DefaultFontFaceCopyHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property DefaultFontFaceCopyHTML As %ZEN.Datatype.string(ZENURL = "$DEFAULTFONTFACECOPYHTML");\n'})}),"\n",(0,t.jsx)(s.p,{children:'Used on item when copyhtml="true" to specify a default font face'}),"\n",(0,t.jsx)(s.h3,{id:"defaultfontsizecopyhtml",children:"DefaultFontSizeCopyHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property DefaultFontSizeCopyHTML As %ZEN.Datatype.string(ZENURL = "$DEFAULTFONTSIZECOPYHTML");\n'})}),"\n",(0,t.jsx)(s.p,{children:'Used on item when copyhtml="true" to specify a default font size'}),"\n",(0,t.jsx)(s.h3,{id:"setprocesswideruntimemode",children:"SetProcessWideRunTimeMode"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property SetProcessWideRunTimeMode As %ZEN.Datatype.boolean(ZENURL = "$SETPROCESSWIDERUNTIMEMODE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Process wide runtime mode Set on a sql statement from the runtime mode passed into the ZEN Report if this is 1"}),"\n",(0,t.jsx)(s.h3,{id:"arraylogfiles",children:"%ArrayLogFiles"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property %ArrayLogFiles [ MultiDimensional ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Place to hold temporary logfiles"}),"\n",(0,t.jsx)(s.h3,{id:"isserver",children:"isServer"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property isServer As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"ishtml5",children:"isHTML5"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property isHTML5 As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"xmlfile",children:"xmlfile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property xmlfile As %String;\n"})}),"\n",(0,t.jsx)(s.p,{children:"xmlfile generated by ZEN Report"}),"\n",(0,t.jsx)(s.h3,{id:"optionlang",children:"OptionLang"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionLang As %ZEN.Datatype.string(ZENURL = "$OptionLang");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, the language to use for user information with value in OptionLang",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-l lang the language to use for user information",(0,t.jsx)(s.br,{}),"\nDoes not work with HotJVM RenderServer"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnocomplexscript",children:"OptionNoComplexScript"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoComplexScript As %ZEN.Datatype.boolean(ZENURL = "$OptionNoComplexScript");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, disable complex script features when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-nocs disable complex script features"]}),"\n",(0,t.jsx)(s.h3,{id:"optionrelaxed",children:"OptionRelaxed"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionRelaxed As %ZEN.Datatype.boolean(ZENURL = "$OptionRelaxed");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, relaxed/less strict validation (where available) when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-r relaxed/less strict validation (where available)",(0,t.jsx)(s.br,{}),"\nDoes not work with HotJVM RenderServer"]}),"\n",(0,t.jsx)(s.h3,{id:"optiondpi",children:"OptionDPI"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionDPI As %ZEN.Datatype.string(ZENURL = "$OptionDPI");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, target resolution in dots per inch (dpi) where xxx is a number with value in OptionDPI",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-dpi xxx target resolution in dots per inch (dpi) where xxx is a number"]}),"\n",(0,t.jsx)(s.h3,{id:"optionownerpassword",children:"OptionOwnerPassword"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionOwnerPassword As %ZEN.Datatype.string(ZENURL = "$OptionOwnerPassword");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted with value in OptionOwnerPassword",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-o [password] PDF file will be encrypted with option owner password"]}),"\n",(0,t.jsx)(s.h3,{id:"optionuserpassword",children:"OptionUserPassword"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionUserPassword As %ZEN.Datatype.string(ZENURL = "$OptionUserPassword");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted with value in OptionUserPassword",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-u [password] PDF file will be encrypted with option user password"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoprint",children:"OptionNoPrint"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoPrint As %ZEN.Datatype.boolean(ZENURL = "$OptionNoPrint");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without printing permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noprint PDF file will be encrypted without printing permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnocopy",children:"OptionNoCopy"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoCopy As %ZEN.Datatype.boolean(ZENURL = "$OptionNoCopy");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without copy content permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-nocopy PDF file will be encrypted without copy content permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoedit",children:"OptionNoEdit"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoEdit As %ZEN.Datatype.boolean(ZENURL = "$OptionNoEdit");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without edit content permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noedit PDF file will be encrypted without edit content permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoannotations",children:"OptionNoAnnotations"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoAnnotations As %ZEN.Datatype.boolean(ZENURL = "$OptionNoAnnotations");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without edit annotation permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noannotations PDF file will be encrypted without edit annotation permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnofillinforms",children:"OptionNoFillInForms"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoFillInForms As %ZEN.Datatype.boolean(ZENURL = "$OptionNoFillInForms");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without fill in interactive form fields when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-nofillinforms PDF file will be encrypted without fill in interactive form fields permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoaccesscontent",children:"OptionNoAccessContent"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoAccessContent As %ZEN.Datatype.boolean(ZENURL = "$OptionNoAccessContent");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without extract text and graphics permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noaccesscontent PDF file will be encrypted without extract text and graphics permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoassembledoc",children:"OptionNoAssembleDoc"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoAssembleDoc As %ZEN.Datatype.boolean(ZENURL = "$OptionNoAssembleDoc");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without assemble the document permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noassembledoc PDF file will be encrypted without assemble the document permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionnoprinthq",children:"OptionNoPrintHq"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionNoPrintHq As %ZEN.Datatype.boolean(ZENURL = "$OptionNoPrintHq");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be encrypted without print high quality permission when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-noprinthq PDF file will be encrypted without print high quality permission"]}),"\n",(0,t.jsx)(s.h3,{id:"optionenableaccessibility",children:"OptionEnableAccessibility"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionEnableAccessibility As %ZEN.Datatype.boolean(ZENURL = "$OptionEnableAccessibility");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, enables accessibility features (Tagged PDF etc., default off) when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-a enables accessibility features (Tagged PDF etc., default off)"]}),"\n",(0,t.jsx)(s.h3,{id:"optionpdfprofile",children:"OptionPDFProfile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionPDFProfile As %ZEN.Datatype.string(ZENURL = "$OptionPDFProfile");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, PDF file will be generated with the specified profile with value in OptionPDFProfile",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-pdfprofile prof PDF file will be generated with the specified profile",(0,t.jsx)(s.br,{}),"\n(Examples for prof: PDF/A-1b or PDF/X-3:2003)",(0,t.jsx)(s.br,{}),"\nDoes not work with HotJVM RenderServer"]}),"\n",(0,t.jsx)(s.h3,{id:"optionconserve",children:"OptionConserve"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionConserve As %ZEN.Datatype.boolean(ZENURL = "$OptionConserve");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, enable memory-conservation policy (trades memory-consumption for disk I/O) when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-conserve enable memory-conservation policy (trades memory-consumption for disk I/O)",(0,t.jsx)(s.br,{}),"\n(Note: currently only influences whether the area tree is serialized.)"]}),"\n",(0,t.jsx)(s.h3,{id:"optioncachepath",children:"OptionCachePath"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionCachePath As %ZEN.Datatype.string(ZENURL = "$OptionCachePath");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, specifies a file/directory path location for the font cache file with value in OptionCachePath",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-cache path specifies a file/directory path location for the font cache file",(0,t.jsx)(s.br,{}),"\nDoes not work with HotJVM RenderServer"]}),"\n",(0,t.jsx)(s.h3,{id:"optionflush",children:"OptionFlush"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OptionFlush As %ZEN.Datatype.boolean(ZENURL = "$OptionFlush");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For Fop only, flushes the current font cache file when true or 1",(0,t.jsx)(s.br,{}),"\nHere is FOP option",(0,t.jsx)(s.br,{}),"\n-flush flushes the current font cache file",(0,t.jsx)(s.br,{}),"\nDoes not work with HotJVM RenderServer"]}),"\n",(0,t.jsx)(s.h3,{id:"usehtml5",children:"UseHTML5"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property UseHTML5 As %ZEN.Datatype.boolean(ZENURL = "$USEHTML5");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Set to true in order to generate HTML5 regardless of browser support Set to false in order to *not* generate HTML5 regardless of browser support"}),"\n",(0,t.jsx)(s.h3,{id:"usesemaphore",children:"UseSemaphore"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property UseSemaphore As %ZEN.Datatype.boolean(ZENURL = "$USESEMAPHORE") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Set to true to cause ZEN Report to control going to RenderServer with Semaphore"}),"\n",(0,t.jsx)(s.h3,{id:"aggregatesignorenls",children:"AggregatesIgnoreNLS"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property AggregatesIgnoreNLS As %ZEN.Datatype.boolean(ZENURL = "$AGGREGATESIGNORENLS");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Aggregates Ignore NLS if this is true"}),"\n",(0,t.jsx)(s.h3,{id:"saxmemsize",children:"SaxMemSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property SaxMemSize As %ZEN.Datatype.string(ZENURL = "$SAXMEMSIZE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Specify amount of memory used by SAXON processing (especially used when XSLTVERSION=2.0), defaults to 512m"}),"\n",(0,t.jsx)(s.h3,{id:"pdfmergememsize",children:"PDFMergeMemSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property PDFMergeMemSize As %ZEN.Datatype.string(ZENURL = "$PDFMERGEMEMSIZE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Specify amount of memory used by SAXON processing (especially used when XSLTVERSION=2.0), defaults to 512m"}),"\n",(0,t.jsx)(s.h3,{id:"mode",children:"Mode"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property Mode As %ZEN.Datatype.string(ZENURL = "$MODE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Specify report mode"}),"\n",(0,t.jsx)(s.h3,{id:"filelifetime",children:"FileLifeTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property FileLifeTime As %ZEN.Datatype.integer(ZENURL = "$FILELIFETIME");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Specify file life time, when life time exceeded, purge task will delete it"}),"\n",(0,t.jsx)(s.h3,{id:"oldbehaviorlinefeedonbreak",children:"OldBehaviorLineFeedOnBreak"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property OldBehaviorLineFeedOnBreak As %ZEN.Datatype.boolean(ZENURL = "$OLDBEHAVIORLINEFEED");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Old behavior of linefeedOnBreak, where for PDF we issue  not a line feed"}),"\n",(0,t.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(s.h3,{id:"reportdefinition",children:"ReportDefinition"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData ReportDefinition\n"})}),"\n",(0,t.jsx)(s.p,{children:"XML that defines the contents of this report."}),"\n",(0,t.jsx)(s.h3,{id:"reportdisplay",children:"ReportDisplay"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData ReportDisplay\n"})}),"\n",(0,t.jsx)(s.p,{children:"XML that defines how the report generates its XSLT stylesheets for the HTML and PDF reports."}),"\n",(0,t.jsx)(s.h3,{id:"htmlxslt",children:"HtmlXslt"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData HtmlXslt\n"})}),"\n",(0,t.jsx)(s.p,{children:"Placeholders for XSLT"}),"\n",(0,t.jsx)(s.h3,{id:"xslfoxslt",children:"XslFoXslt"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData XslFoXslt\n"})}),"\n",(0,t.jsx)(s.h3,{id:"allxslt",children:"AllXslt"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData AllXslt\n"})}),"\n",(0,t.jsx)(s.h3,{id:"commonxslfo",children:"CommonXslFo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData CommonXslFo\n"})}),"\n",(0,t.jsx)(s.h3,{id:"commonhtml",children:"CommonHtml"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData CommonHtml\n"})}),"\n",(0,t.jsx)(s.h3,{id:"smallmultiplecommonxsl",children:"SmallMultipleCommonXSL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SmallMultipleCommonXSL\n"})}),"\n",(0,t.jsx)(s.h3,{id:"smallmultiplehtmlxsl",children:"SmallMultipleHTMLXSL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SmallMultipleHTMLXSL\n"})}),"\n",(0,t.jsx)(s.h3,{id:"smallmultiplefoxsl",children:"SmallMultipleFOXSL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SmallMultipleFOXSL\n"})}),"\n",(0,t.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"initproperties",children:"%InitProperties"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %InitProperties() As %Status [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"initproperties1",children:"%InitProperties1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %InitProperties1()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"applyurlparms",children:"%ApplyURLParms"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %ApplyURLParms() As %Status [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Copy URL parameters supplied to this page into the appropriate properties of this reportPage object."}),"\n",(0,t.jsx)(s.h3,{id:"onprehttp",children:"OnPreHTTP"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OnPreHTTP() As %Boolean [ ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"PreHTTP handler. Sets content-type and content-dispositon depending on $MODE and $LOG"}),"\n",(0,t.jsx)(s.h3,{id:"onprehttp-1",children:"%OnPreHTTP"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnPreHTTP() As %Boolean [ ServerOnly = 1 ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onpage",children:"OnPage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OnPage() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"Render the contents of this ZEN report."}),"\n",(0,t.jsx)(s.h3,{id:"generatetofile",children:"GenerateToFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GenerateToFile(outputfile As %String, mode As %Integer = 0, log As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Generate the report and save it to outputfile.",(0,t.jsx)(s.br,{}),"\nChoices for mode are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"0 = XML"}),"\n",(0,t.jsx)(s.li,{children:"1 = HTML"}),"\n",(0,t.jsx)(s.li,{children:"2 = PDF"}),"\n",(0,t.jsx)(s.li,{children:"3 = ToHTML Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"4 = ToXSLFO Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"5 = XSD Schema"}),"\n",(0,t.jsx)(s.li,{children:"6 = PrintPS"}),"\n",(0,t.jsx)(s.li,{children:"7 = Excel"}),"\n",(0,t.jsx)(s.li,{children:"8 = XSLFO"}),"\n",(0,t.jsx)(s.li,{children:"9 = ToEXCEL"}),"\n",(0,t.jsx)(s.li,{children:"10=xlsx"}),"\n",(0,t.jsx)(s.li,{children:"11=TIFF"}),"\n",(0,t.jsx)(s.li,{children:"12=pdfprint"}),"\n",(0,t.jsx)(s.li,{children:"13=displayxlsx"}),"\n",(0,t.jsx)(s.li,{children:"14=fo2pdf"}),"\n",(0,t.jsx)(s.li,{children:"15=foandpdf"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If log is true, the log file is returned instead of the report This is a class method wrapper for the GenerateReport method provided for convenience."}),"\n",(0,t.jsx)(s.h3,{id:"generatereport",children:"GenerateReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method GenerateReport(outputfile As %String, mode As %Integer = 0, log As %Boolean = 0, renderServer As %String = "", ExcelMode As %String = "", pStr As %String, Output RenderDirect As %Integer = 1) As %Status\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Generate the report and save it to outputfile.",(0,t.jsx)(s.br,{}),"\nChoices for mode are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"0 = XML"}),"\n",(0,t.jsx)(s.li,{children:"1 = HTML"}),"\n",(0,t.jsx)(s.li,{children:"2 = PDF"}),"\n",(0,t.jsx)(s.li,{children:"3 = ToHTML Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"4 = ToXSLFO Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"5 = XSD Schema"}),"\n",(0,t.jsx)(s.li,{children:"6 = PrintPS"}),"\n",(0,t.jsx)(s.li,{children:"7 = Excel"}),"\n",(0,t.jsx)(s.li,{children:"8 = XSLFO"}),"\n",(0,t.jsx)(s.li,{children:"9 = ToEXCEL"}),"\n",(0,t.jsx)(s.li,{children:"10=xlsx"}),"\n",(0,t.jsx)(s.li,{children:"11=TIFF"}),"\n",(0,t.jsx)(s.li,{children:"12=pdfprint"}),"\n",(0,t.jsx)(s.li,{children:"13=displayxlsx"}),"\n",(0,t.jsx)(s.li,{children:"14=fo2pdf"}),"\n",(0,t.jsx)(s.li,{children:"15=foandpdf"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If log is true, the log file is returned instead of the report"}),"\n",(0,t.jsx)(s.h3,{id:"callreport",children:"CallReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method CallReport(ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream, outputfile As %String, mode As %Integer = 0, log As %Boolean = 0, renderServer As %String = "", ExcelMode As %String = "", Output RenderDirect As %Integer = 1) [ Internal ]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"asynchgeneratereport",children:"AsynchGenerateReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method AsynchGenerateReport(renderServer As %String = "", ByRef xmlfile As %String, ByRef xsltfile As %String, ByRef pdffile As %String, ByRef lockfile As %String) As %Status\n'})}),"\n",(0,t.jsx)(s.p,{children:"Queue the report for rendering to the Queuing Hot JVM server input is the port on which the Queuing Hot JVM Server is listening returns by reference xmlfile, xsltfile, pdffile, and lockfile which are names of files either queued or created by queuer Arguments: renderServer"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"xmlfile - returned by reference"}),"\n",(0,t.jsx)(s.li,{children:"xsltfile - returned by reference"}),"\n",(0,t.jsx)(s.li,{children:"pdffile - returned by reference"}),"\n",(0,t.jsx)(s.li,{children:"lockfile - returned by reference\nwhen the lockfile exists theQueuing Hot JVM Server has created the pdf file"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"generatereporttostream",children:"GenerateReportToStream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GenerateReportToStream(ByRef stream As %Stream.Object, mode As %Integer = 0, log As %Boolean = 0) As %Status\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Generate the report and save it to stream.",(0,t.jsx)(s.br,{}),"\nChoices for mode are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"0 = XML"}),"\n",(0,t.jsx)(s.li,{children:"1 = HTML"}),"\n",(0,t.jsx)(s.li,{children:"2 = PDF"}),"\n",(0,t.jsx)(s.li,{children:"3 = ToHTML Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"4 = ToXSLFO Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"5 = XSD Schema"}),"\n",(0,t.jsx)(s.li,{children:"6 = PrintPS"}),"\n",(0,t.jsx)(s.li,{children:"7 = Excel"}),"\n",(0,t.jsx)(s.li,{children:"8 = XSLFO"}),"\n",(0,t.jsx)(s.li,{children:"9 = ToEXCEL"}),"\n",(0,t.jsx)(s.li,{children:"10 = xlsx"}),"\n",(0,t.jsx)(s.li,{children:"11=TIFF"}),"\n",(0,t.jsx)(s.li,{children:"12=pdfprint"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"If log is true, the log file is returned instead of the report"}),"\n",(0,t.jsx)(s.h3,{id:"generatestream",children:"GenerateStream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method GenerateStream(ByRef stream As %Stream.Object, mode As %Integer = 0, log As %Boolean = 0, pTranslateTable = "UTF8") As %Status [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Note: this method is DEPRECATED! Use GenerateReportToStream instead!!!",(0,t.jsx)(s.br,{}),"\nGenerate the report and save it to stream.",(0,t.jsx)(s.br,{}),"\nChoices for mode are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"0 = XML"}),"\n",(0,t.jsx)(s.li,{children:"1 = HTML"}),"\n",(0,t.jsx)(s.li,{children:"2 = PDF"}),"\n",(0,t.jsx)(s.li,{children:"3 = ToHTML Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"4 = ToXSLFO Stylesheet"}),"\n",(0,t.jsx)(s.li,{children:"5 = XSD Schema"}),"\n",(0,t.jsx)(s.li,{children:"6 = PrintPS"}),"\n",(0,t.jsx)(s.li,{children:"7 = Excel"}),"\n",(0,t.jsx)(s.li,{children:"8 = XSLFO"}),"\n",(0,t.jsx)(s.li,{children:"9 = ToEXCEL"}),"\n",(0,t.jsx)(s.li,{children:"10 = xlsx"}),"\n",(0,t.jsx)(s.li,{children:"11=TIFF"}),"\n",(0,t.jsx)(s.li,{children:"12=pdfprint"}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["If log is true, the log file is returned instead of the report",(0,t.jsx)(s.br,{}),"\nNote: this method is DEPRECATED! Use GenerateReportToStream instead!!!"]}),"\n",(0,t.jsx)(s.h3,{id:"runreport",children:"%RunReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %RunReport(embedXSL As %Boolean = 0, setProcessWideRunTimeMode As %Boolean = 0, pMode As %String = "") As %Status [ CodeMode = objectgenerator, Final, Internal, ProcedureBlock = 0 ]\n'})}),"\n",(0,t.jsx)(s.p,{children:'Run the report defined in this class and output the data as XML. This method is automatically generated using the report definition in the XData block "ReportDefinition".'}),"\n",(0,t.jsx)(s.h3,{id:"createoutputstream",children:"CreateOutputStream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateOutputStream(source As %String, norecurse As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:'This method creates a binary stream that contains source data when the source is a file or URL. %zenStream is the stream containing the data. If %zenStream="", then %zenStreamError is the error message for missing stream. %response.CharSet is set according to the ?xml directive in the stream.'}),"\n",(0,t.jsx)(s.h3,{id:"getxmlstylesheet-1",children:"GetXMLStyleSheet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetXMLStyleSheet(ByRef stylesheet, norecurse As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"From xmlstylesheet property or from getxmlstylesheet callback or from XMLSTYLESHEET parameter get stylesheet as stream"}),"\n",(0,t.jsx)(s.h3,{id:"drawxml",children:"%DrawXML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawXML(stripinstructions As %Boolean = 0, embedXSL As %Boolean = 0, embedType As %String, pMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the XML data indicated by the DATASOURCE parameter, or %RunReport() if no DATASOURCE is provided."}),"\n",(0,t.jsx)(s.h3,{id:"xslpreamble",children:"XSLPreamble"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method XSLPreamble(hrefvalue) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"drawtohtml",children:"%DrawToHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToHTML(stripinstructions As %Boolean = 0, embedXSL As %Boolean = 0, UseInternalXSLT As %Boolean = 0, SubReport As %String, ByRef XSLT As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream, pXSLTMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method parses the report display information contained in the ReportDisplay XData block, and returns the %ZEN.Report.Display.report object corresponding to the top-level report tag. For HTML reports that draw their own XSLT style sheet, this method is called to render the XSLT style sheet."}),"\n",(0,t.jsx)(s.h3,{id:"drawtoexcel",children:"%DrawToExcel"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToExcel(stripinstructions As %Boolean = 0, embedXSL As %Boolean = 0, UseInternalXSLT As %Boolean = 0, ExcelMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method parses the report display information contained in the ReportDisplay XData block, and returns the %ZEN.Report.Display.report object corresponding to the top-level report tag. For HTML reports that draw their own XSLT style sheet, this method is called to render the XSLT style sheet."}),"\n",(0,t.jsx)(s.h3,{id:"drawtoxslfo",children:"%DrawToXSLFO"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToXSLFO(stripinstructions As %Boolean = 0, SubReport As %String, ByRef XSLT As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream, xmlfile As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"For PDF reports that draw their own XSLT style sheet, this method is called to render the XSLT style sheet."}),"\n",(0,t.jsx)(s.h3,{id:"displayhtml",children:"%DisplayHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayHTML(DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, UseTempFiles As %Boolean = 0, embedXSL As %Boolean = 0, ByRef xslfile As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the HTML report"}),"\n",(0,t.jsx)(s.h3,{id:"displayannotatedexcel",children:"%DisplayAnnotatedExcel"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DisplayAnnotatedExcel(DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, UseTempFiles As %Boolean = 0, embedXSL As %Boolean = 0, ExcelMode As %String)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"displayexcel",children:"%DisplayExcel"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DisplayExcel(DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, UseTempFiles As %Boolean = 0, embedXSL As %Boolean = 0, ExcelMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method exports the XML for the report as Excel Office 2003 spreadsheet"}),"\n",(0,t.jsx)(s.h3,{id:"displayxlsx",children:"%DisplayXlsx"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DisplayXlsx(DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, UseTempFiles As %Boolean = 0, embedXSL As %Boolean = 0, ExcelMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the xml for the report as an Office 2007 or 2010 xlsx spreadsheet file"}),"\n",(0,t.jsx)(s.h3,{id:"displayxlsxfromxml",children:"%DisplayXlsxFromXML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DisplayXlsxFromXML(xmlfile As %String, DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, UseTempFiles As %Boolean = 0, embedXSL As %Boolean = 0, ExcelMode As %String, isExcelMultiSheet As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the xml for the report as an Office 2007 or 2010 xlsx spreadsheet file"}),"\n",(0,t.jsx)(s.h3,{id:"displayfo",children:"%DisplayFO"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayFO(DisplayLog As %Boolean = 0, ApplyTransform As %Boolean = 0, UseInternalXSLT As %Boolean = 0, ByRef fofile, toFile As %Boolean = 0, pMode = "") As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the XSL-FO source of the PDF report, before it is transformed to PDF."}),"\n",(0,t.jsx)(s.h3,{id:"performtransform",children:"%PerformTransform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %PerformTransform(xmlfile As %String, xslfile As %String, outfile As %String, logfile As %String, convertToPDF As %Boolean, renderServer As %String = "", async As %Boolean = 0, lockfile As %String = "", DisplayLog As %Boolean = 0, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method performs the callout to the command line that performs an XSLT or XSL-FO to PDF transformation."}),"\n",(0,t.jsx)(s.h3,{id:"performfotransform",children:"%PerformFOTransform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %PerformFOTransform(xmlfile As %String, xslfile As %String, outfile As %String, logfile As %String, convertToPDF As %Boolean, renderServer As %String = "", async As %Boolean = 0, lockfile As %String = "", DisplayLog As %Boolean = 0, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method performs the callout to the command line that performs an XSLT or XSL-FO to PDF transformation."}),"\n",(0,t.jsx)(s.h3,{id:"performtifftransform",children:"%PerformTIFFTransform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %PerformTIFFTransform(xmlfile As %String, xslfile As %String, outfile As %String, logfile As %String, convertToPDF As %Boolean, renderServer As %String = "", async As %Boolean = 0, lockfile As %String = "", DisplayLog As %Boolean = 0, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method performs the callout to the command line that performs an XSLT or XSL-FO to TIFF transformation."}),"\n",(0,t.jsx)(s.h3,{id:"performtransformandprint",children:"%PerformTransformAndPrint"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PerformTransformAndPrint(xmlfile As %String, xslfile As %String, outfile As %String, printer As %String, logfile As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method performs the callout to the command line that performs an XSLT or XSL-FO to PDF transformation."}),"\n",(0,t.jsx)(s.h3,{id:"performpstransform",children:"%PerformPSTransform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PerformPSTransform(xmlfile As %String, xslfile As %String, ps As %String, logfile As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method performs the callout to the command line that performs an XSLT or XSL-FO to PDF transformation."}),"\n",(0,t.jsx)(s.h3,{id:"displaypdf",children:"%DisplayPDF"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayPDF(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report RenderServer is set to the port of the hot JVM server There is also a queuing hot JVM server which queues files for PDF rendering later This is queuing mechanism is never called visually but only by AsynchGenerateReport which always generates PDFs"}),"\n",(0,t.jsx)(s.h3,{id:"displayfo2pdf",children:"%DisplayFO2PDF"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayFO2PDF(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, isFO As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report"}),"\n",(0,t.jsx)(s.h3,{id:"displaytiff",children:"%DisplayTIFF"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayTIFF(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the TIFF report"}),"\n",(0,t.jsx)(s.h3,{id:"displaypdf1",children:"%DisplayPDF1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayPDF1(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report RenderServer is set to the port of the hot JVM server There is also a queuing hot JVM server which queues files for PDF rendering later This is queuing mechanism is never called visually but only by AsynchGenerateReport which always generates PDFs"}),"\n",(0,t.jsx)(s.h3,{id:"displayfo2pdf1",children:"%DisplayFO2PDF1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayFO2PDF1(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, isFO As %Boolean = 0) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report RenderServer is set to the port of the hot JVM server There is also a queuing hot JVM server which queues files for PDF rendering later This is queuing mechanism is never called visually but only by AsynchGenerateReport which always generates PDFs"}),"\n",(0,t.jsx)(s.h3,{id:"displaytiff1",children:"%DisplayTIFF1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %DisplayTIFF1(DisplayLog As %Boolean = 0, RenderServer As %String = "", async As %Boolean = 0, ByRef xmlfile As %String, ByRef xslfile As %String, ByRef pdffile As %String, ByRef lockfile As %String, fromGenerateReport As %Boolean, outputfilename As %String, Output RenderDirect As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the TIFF report Note on March 03/02/2012 - support for generation of TIFF files in a RenderServer was not yet available!"}),"\n",(0,t.jsx)(s.h3,{id:"printpdf",children:"%PrintPDF"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PrintPDF(DisplayLog As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report"}),"\n",(0,t.jsx)(s.h3,{id:"printps",children:"%PrintPS"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %PrintPS(DisplayLog As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method outputs the contents of the PDF report"}),"\n",(0,t.jsx)(s.h3,{id:"tohtmlstylesheetlink",children:"%ToHTMLStyleSheetLink"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %ToHTMLStyleSheetLink(xslfile As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Outputs an "," that references the XSLT stylesheet used to transform the XML data into an HTML report. Currently, this is always ReportClassName.cls?$MODE=tohtml, which will return the stylesheet indicated by the HTMLSTYLESHEET parameter, or the stylesheet generated by %DrawToHTML() if HTMLSTYLESHEET is not supplied."]}),"\n",(0,t.jsx)(s.h3,{id:"toexcelstylesheetlink",children:"%ToExcelStyleSheetLink"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %ToExcelStyleSheetLink(xslfile As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Outputs an "," that references the XSLT stylesheet used to transform the XML data into an Excel report. Currently, this is always ReportClassName.cls?$MODE=toexcel, which will return the stylesheet indicated by the EXCELSTYLESHEET parameter, or the stylesheet generated by %DrawToExcel() if EXCELSTYLESHEET is not supplied."]}),"\n",(0,t.jsx)(s.h3,{id:"toxslfostylesheetlink",children:"%ToXSLFOStyleSheetLink"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method %ToXSLFOStyleSheetLink(xslfile As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Outputs an "," that references the XSLT stylesheet used to transform the XML data into XSL-FO report. Currently, this is always ReportClassName.cls?$MODE=toxslfo, which will return the stylesheet indicated by the XSLFOSTYLESHEET parameter, or the stylesheet generated by %DrawToXSLFO() if XSLFOSTYLESHEET is not supplied."]}),"\n",(0,t.jsx)(s.h3,{id:"makexmldatafile",children:"%MakeXMLDataFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeXMLDataFile(ByRef filename As %String, stripPI As %Boolean = 0, async As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method creates a temporary local file that contains the XML data indicated by the DATASOURCE parameter or generated by %RunReport if no DATASOURCE is specified."}),"\n",(0,t.jsx)(s.h3,{id:"maketransformedxmlfile",children:"%MakeTransformedXMLFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeTransformedXMLFile(ByRef filename, ByRef xmlfile, ByRef xslfile, stripPI = 0, embedXSL = 0, async = 0)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"deletetempfiles",children:"%DeleteTempFiles"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteTempFiles() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method is used to delete the temporary files used to hold XSLT"}),"\n",(0,t.jsx)(s.h3,{id:"maketohtmlfile",children:"%MakeToHTMLFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeToHTMLFile(ByRef filename As %String, Here As %Boolean = 0, ByRef url As %String, UseInternalXSLT As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method creates a temporary local copy of the XSLT stylesheet used to transform the XML data into an HTML report."}),"\n",(0,t.jsx)(s.h3,{id:"maketoexcelfile",children:"%MakeToExcelFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeToExcelFile(ByRef filename As %String, Here As %Boolean = 0, ByRef url As %String, UseInternalXSLT As %Boolean = 0, ExcelMode As %String) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method creates a temporary local copy of the XSLT stylesheet used to transform the XML data into an Excel report."}),"\n",(0,t.jsx)(s.h3,{id:"maketoxslfofile",children:"%MakeToXSLFOFile"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %MakeToXSLFOFile(ByRef filename As %String, xmlfile As %String, async) As %Status [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method creates a temporary local copy of the XSLT stylesheet used to transform the XML data into XSL-FO."}),"\n",(0,t.jsx)(s.h3,{id:"getfilebyrelativeurl",children:"%GetFileByRelativeURL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetFileByRelativeURL(url As %String, ByRef sc As %Status, norecurse As %Boolean = 0) As %Stream.Object [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method returns a stream of the contents of the file indicated by a relative URL. The relative URL must indicate a file that is actually on disk (i.e. not a .csp for .cls file)"}),"\n",(0,t.jsx)(s.h3,{id:"getfilebyabsoluteurl",children:"%GetFileByAbsoluteURL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetFileByAbsoluteURL(url As %String, ByRef sc As %Status, norecurse As %Boolean = 0) As %Net.HttpResponse [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method returns a stream of the contents of the file indicated by an absolute URL."}),"\n",(0,t.jsx)(s.h3,{id:"outputstream",children:"%OutputStream"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OutputStream(xml As %Stream.Object, stripinstructions As %Boolean = 0) As %Status [ Internal ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This method outputs the contents of a stream, and if stripinstructions=1 it removes anything of the form "," from the stream."]}),"\n",(0,t.jsx)(s.h3,{id:"logerror",children:"%LogError"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %LogError(pSC As %Status) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Log run-time error encountered by this report."}),"\n",(0,t.jsx)(s.h3,{id:"onbeforereport",children:"%OnBeforeReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnBeforeReport() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This callback is invoked after this report is instantiated and before it is run."}),"\n",(0,t.jsx)(s.h3,{id:"onafterreport",children:"%OnAfterReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterReport() As %Status\n"})}),"\n",(0,t.jsx)(s.p,{children:"This callback is invoked after this report is run and before it is closed."}),"\n",(0,t.jsx)(s.h3,{id:"onreporttag",children:"%OnReportTag"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnReportTag()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Notification that we are writing out the attributes for the opening tag."}),"\n",(0,t.jsx)(s.h3,{id:"tagnamespace",children:"%TagNameSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %TagNameSpace(embedXSL As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"writenamespace",children:"%WriteNameSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %WriteNameSpace(ByRef XSL, embedXSL As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"gettempdir",children:"%GetTempDir"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetTempDir() As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the temp directory for this system."}),"\n",(0,t.jsx)(s.h3,{id:"createdisplay",children:"%CreateDisplay"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %CreateDisplay() As %ZEN.Report.Display.report [ CodeMode = objectgenerator, Final, Internal, ProcedureBlock = 0 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Internal method.",(0,t.jsx)(s.br,{}),"\nCreate set of ReportDisplay objects needs to format this report."]}),"\n",(0,t.jsx)(s.h3,{id:"deletetempfiles-1",children:"DeleteTempFiles"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method DeleteTempFiles(ByRef xmlfile As %String, ByRef xslfile As %String, ByRef outputfile As %String, ByRef logfile As %String, ByRef xmlfiles As %String, ByRef pdffiles As %String, ByRef oldxmlfile, ByRef transformfile, SplitOnly As %Boolean = 0, fromGenerateReport As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"unlocktempfiles",children:"UnLockTempFiles"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method UnLockTempFiles(ByRef xmlfile As %String, ByRef xslfile As %String, ByRef outputfile As %String, ByRef logfile As %String, ByRef xmlfiles As %String, ByRef pdffiles As %String, ByRef oldxmlfile, ByRef transformfile, SplitOnly As %Boolean = 0, fromGenerateReport As %Boolean = 0, asynch As %Boolean = 0) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"initreport",children:"InitReport"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method InitReport(embedXSL As %Boolean = 0, report As %ZEN.Report.Display.report, ByRef context As %String) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"setcontextfromproperties",children:"%SetContextFromProperties"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %SetContextFromProperties(ByRef context As %String) [ CodeMode = objectgenerator, Final, Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"initnamespace",children:"%initNameSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %initNameSpace(embedXSL As %Boolean = 0, ByRef context As %String, ByRef xmlns As %String, ByRef xmlprefix As %String) [ Final, Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"checknamespace",children:"%checkNameSpace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %checkNameSpace(embedXSL As %Boolean, report As %ZEN.Report.reportPage) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"hasdatasource",children:"hasDataSource"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod hasDataSource() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"makefilename",children:"MakeFileName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod MakeFileName(dir As %String, name As %String, ext As %String) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getsaferootname",children:"GetSafeRootName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetSafeRootName() As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getrootdir",children:"GetRootDir"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetRootDir() As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getrootdirfromparam",children:"GetRootDirFromParam"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetRootDirFromParam() As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onsubmit",children:"%OnSubmit"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnSubmit(pSubmit As %ZEN.Submit) As %Status [ CodeMode = objectgenerator ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If defined, this callback is called when a form connected to this DataModel is submitted.",(0,t.jsx)(s.br,{}),"\nThe contents of this DataModel will be filled in from the submitted values before this callback is invoked.",(0,t.jsx)(s.br,{}),"\nThe default implementation is to store the submitted values back to the model."]}),"\n",(0,t.jsx)(s.h3,{id:"testpdfgeneration",children:"TestPDFGeneration"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod TestPDFGeneration() As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onaftercreatedisplay",children:"OnAfterCreateDisplay"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod OnAfterCreateDisplay()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"onaftercreatedisplay-1",children:"%OnAfterCreateDisplay"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnAfterCreateDisplay(pDisplay As %ZEN.Report.Display.report)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getcomponentbyid",children:"%GetComponentById"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %GetComponentById(id As %String) As %ZEN.Component.object [ CodeMode = expression, Final ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Server-only method for finding a ZEN Report Display node within this report display given its id."}),"\n",(0,t.jsx)(s.h3,{id:"replace",children:"replace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod replace(s As %String, old As %String, new As %String) As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getiotable",children:"GetIOTable"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetIOTable(index As %Integer) As %String [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Gets the name of an I/O table"}),"\n",(0,t.jsx)(s.p,{children:"Parameter: index - table index"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Process"}),"\n",(0,t.jsx)(s.li,{children:"InterSystems IRIS Terminal"}),"\n",(0,t.jsx)(s.li,{children:"Other terminal"}),"\n",(0,t.jsx)(s.li,{children:"File"}),"\n",(0,t.jsx)(s.li,{children:"Magtape"}),"\n",(0,t.jsx)(s.li,{children:"TCP/IP"}),"\n",(0,t.jsx)(s.li,{children:"DSM-DDP"}),"\n",(0,t.jsx)(s.li,{children:"DTM-DCP"}),"\n",(0,t.jsx)(s.li,{children:"System call"}),"\n",(0,t.jsx)(s.li,{children:"Printer"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"getparam",children:"%GetParam"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetParam(parameterName As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"getclassparam",children:"%GetClassParam"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetClassParam(parameterName As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"getcodegenparam",children:"%GetCodeGenParam"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod %GetCodeGenParam(parameterName As %String = "") [ Internal ]\n'})}),"\n",(0,t.jsx)(s.h3,{id:"hashtml5",children:"%HasHtml5"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %HasHtml5() As %Integer [ CodeMode = expression, Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Helper method to trigger the use of HTML5 mode if it is available. The %BrowserSupportsHTML5() method assumes %request object is defined."}),"\n",(0,t.jsx)(s.h3,{id:"getuniqueexcelsheetname",children:"%getUniqueExcelSheetName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %getUniqueExcelSheetName(excelSheetName As %String) As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getdisplayuniqueexcelsheetname",children:"%getDisplayUniqueExcelSheetName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %getDisplayUniqueExcelSheetName(excelSheetName As %String, ByRef context) As %String\n"})}),"\n",(0,t.jsx)(s.h3,{id:"resolvetext",children:"%ResolveText"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %ResolveText(pText As %String, ByRef context) As %String\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Resolve a localized text string at run time. A localized string can take the following forms:",(0,t.jsx)(s.br,{}),'\n"String" -- not localized.',(0,t.jsx)(s.br,{}),'\n"$$$String" -- equivalent to $$$Text("String","DeepSeeUser")',(0,t.jsx)(s.br,{}),'\n"$$$String/Domain" -- equivalent to $$$Text("String","Domain")']}),"\n",(0,t.jsx)(s.h3,{id:"purge",children:"Purge"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method Purge(filename)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"unlock",children:"UnLock"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method UnLock(filename)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"gettempfilename",children:"GetTempFileName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Method GetTempFileName(ext, isFileBeingPrinted, async, suffix = "", Here = 0, pMode = "")\n'})}),"\n",(0,t.jsx)(s.h3,{id:"toexceldate",children:"ToExcelDate"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ToExcelDate(horlog)\n"})}),"\n",(0,t.jsx)(s.p,{children:"convenience method for converting an horlog to an Excel date"})]})}function c(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var t=n(96540);const l={},r=t.createContext(l);function i(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);