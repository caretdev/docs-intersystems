"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[66470],{93577:(e,i,n)=>{n.r(i),n.d(i,{contentTitle:()=>r,default:()=>o,frontMatter:()=>t,toc:()=>a});var l=n(74848),s=n(28453);const t={pagination_prev:null,pagination_next:null},r="%ZEN.Dialog.fileSelect",a=[{value:"How to Use This Dialog",id:"how-to-use-this-dialog",level:3},{value:"Example invoking the fileSelect dialog to open in a popup window:",id:"example-invoking-the-fileselect-dialog-to-open-in-a-popup-window",level:4},{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"VALIDATEXML",id:"validatexml",level:3},{value:"Properties",id:"properties",level:2},{value:"showdirectoryonly",id:"showdirectoryonly",level:3},{value:"DirFile",id:"dirfile",level:3},{value:"DefaultDirectory",id:"defaultdirectory",level:3},{value:"FileName",id:"filename",level:3},{value:"ExtFilter",id:"extfilter",level:3},{value:"isWINDOWS",id:"iswindows",level:3},{value:"isVMS",id:"isvms",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"dialogBody",id:"dialogbody",level:3},{value:"Methods",id:"methods",level:2},{value:"%OnPreHTTP",id:"onprehttp",level:3},{value:"%OnGetTitle",id:"ongettitle",level:3},{value:"%OnGetSubtitle",id:"ongetsubtitle",level:3},{value:"changeDrive",id:"changedrive",level:3},{value:"changeSortOrder",id:"changesortorder",level:3},{value:"reloadLookin",id:"reloadlookin",level:3},{value:"changeView",id:"changeview",level:3},{value:"upOneLevel",id:"uponelevel",level:3},{value:"changeFileType",id:"changefiletype",level:3},{value:"onkeydownHandler",id:"onkeydownhandler",level:3},{value:"GetViewContents",id:"getviewcontents",level:3},{value:"%OnAfterCreatePage",id:"onaftercreatepage",level:3},{value:"BuildDrive",id:"builddrive",level:3},{value:"FindRoot",id:"findroot",level:3},{value:"getDialogValue",id:"getdialogvalue",level:3},{value:"itemClicked",id:"itemclicked",level:3},{value:"itemSelected",id:"itemselected",level:3},{value:"GetSubDir",id:"getsubdir",level:3},{value:"RebuildLookin",id:"rebuildlookin",level:3},{value:"GetDirectory",id:"getdirectory",level:3},{value:"ondialogFinish",id:"ondialogfinish",level:3},{value:"hasdelimiter",id:"hasdelimiter",level:3},{value:"CheckPath",id:"checkpath",level:3},{value:"CheckRootDir",id:"checkrootdir",level:3},{value:"GetDirFile",id:"getdirfile",level:3},{value:"CheckFileExt",id:"checkfileext",level:3},{value:"ondialogStart",id:"ondialogstart",level:3},{value:"onresizeHandler",id:"onresizehandler",level:3}];function d(e){const i={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"zendialogfileselect",children:"%ZEN.Dialog.fileSelect"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Class %ZEN.Dialog.fileSelect Extends %CSP.Portal.standardDialog [ Deprecated, System = 4 ]\n"})}),"\n",(0,l.jsxs)(i.p,{children:["This dialog page displays a file selection window listing directories and files on the ",(0,l.jsx)(i.em,{children:"server"}),". This is intended for use within server portal pages.",(0,l.jsx)(i.br,{}),"\nTo use this dialog, the current user must hold USE privileges on one of the following resources:",(0,l.jsx)(i.br,{}),"\n%Admin_Manage,%Admin_Operate,%Admin_Secure,%Development",(0,l.jsx)(i.br,{}),"\nFor an production-enabled namespace, resource %Ens_ViewFileSystem is required."]}),"\n",(0,l.jsx)(i.h3,{id:"how-to-use-this-dialog",children:"How to Use This Dialog"}),"\n",(0,l.jsx)(i.p,{children:"The following arguments maybe passed in:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"Dir:"})," This is the default directory path and optionally with a filename. It is encouraged that you provide a default directory and filename whenever possible. Alternatively you can pass in the filename using a separate argument ",(0,l.jsx)(i.strong,{children:"File"})]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"showdirectoryonly:"})," 1 or 0. If 1, then the dialog will show directories only. Default is 0."]}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"wildcard:"}),' a wildcard for "Type of files" to filter the files. Examples:*.xml, *.txt, *.log, etc. Default is *.*, i.e if nothing passed in then files of all types are shown.']}),"\n",(0,l.jsxs)(i.li,{children:[(0,l.jsx)(i.strong,{children:"extfilter:"})," only display files whose extension appears in the list. Values should be specified in the same format as ",(0,l.jsx)(i.strong,{children:"wildcard"}),". If this parameter is specified ",(0,l.jsx)(i.strong,{children:"wildcard"})," is ignored. This will remove the option to display all files (*) and files with no extension will never be displayed. Note that on UNIX platforms the extensions are case sensitive. To display files with the extension .TXT or .txt, you should use 'extfilter=*.txt;*.TXT'."]}),"\n"]}),"\n",(0,l.jsx)(i.h4,{id:"example-invoking-the-fileselect-dialog-to-open-in-a-popup-window",children:"Example invoking the fileSelect dialog to open in a popup window:"}),"\n",(0,l.jsx)(i.p,{children:(0,l.jsx)(i.code,{children:"zenLaunchPopupWindow('%ZEN.Dialog.fileSelect.cls?Dir='+encodeURIComponent(Dir)+'&wildcard='+wildcard,'FileSelect','resizable,width=600,height=700');"})}),"\n",(0,l.jsxs)(i.p,{children:["If ",(0,l.jsx)(i.strong,{children:"Dir"})," is null, then the manager directory is used when the dialog is opened. If ",(0,l.jsx)(i.strong,{children:"Dir"})," contains a partial directory, then the last valid level of directory, if can be found, is used. If ",(0,l.jsx)(i.strong,{children:"Dir"})," contains a filename or a partical name without a directory then the manager directory is used for the filename. When OK is pressed, whatever is shown in the ",(0,l.jsx)(i.strong,{children:"File name"})," field is returned to the calling page."]}),"\n",(0,l.jsxs)(i.p,{children:['If you are opening the dialog as a popup window such as shown in the above example, then you should have an onPopupAction method defined on the calling page. In the following example, a Zen control "FileName" is defined on your calling page, and upon returning from the fileSelect dialog by clicking "OK", the returned value will be set into your Zen control "FileName": ',(0,l.jsx)(i.code,{children:'ClientMethod onPopupAction(popupName, action, value) [ Language = javascript ] { if (action == "ok") { if (popupName == "FileSelect") zen("FileName").setValue(value); } }'})]}),"\n",(0,l.jsx)(i.p,{children:"ISC Developers: Please use caution when modifying logic in this class. Your change needs to be tested in Windows, Unix, and VMS for all cases."}),"\n",(0,l.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(i.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%ZEN";\n'})}),"\n",(0,l.jsx)(i.h3,{id:"validatexml",children:"VALIDATEXML"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Parameter VALIDATEXML = 0;\n"})}),"\n",(0,l.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(i.h3,{id:"showdirectoryonly",children:"showdirectoryonly"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property showdirectoryonly As %ZEN.Datatype.string(ZENURL = "showdirectoryonly");\n'})}),"\n",(0,l.jsx)(i.p,{children:"Whether to show directory only or with files"}),"\n",(0,l.jsx)(i.h3,{id:"dirfile",children:"DirFile"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property DirFile As %ZEN.Datatype.string(ZENURL = "Dir");\n'})}),"\n",(0,l.jsx)(i.p,{children:"Original Directory path and/or filename passed in. If null is passed in, then manager directory will be used."}),"\n",(0,l.jsx)(i.h3,{id:"defaultdirectory",children:"DefaultDirectory"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Property DefaultDirectory As %ZEN.Datatype.string;\n"})}),"\n",(0,l.jsx)(i.p,{children:"Composed Default Directory path. After much checking, this is the final default directory that is used as default."}),"\n",(0,l.jsx)(i.h3,{id:"filename",children:"FileName"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property FileName As %ZEN.Datatype.string(ZENURL = "File");\n'})}),"\n",(0,l.jsx)(i.p,{children:"Original File name passed in (optional)"}),"\n",(0,l.jsx)(i.h3,{id:"extfilter",children:"ExtFilter"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property ExtFilter As %ZEN.Datatype.string(ZENURL = "extfilter");\n'})}),"\n",(0,l.jsx)(i.h3,{id:"iswindows",children:"isWINDOWS"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property isWINDOWS As %Boolean [ InitialExpression = "0" ];\n'})}),"\n",(0,l.jsx)(i.h3,{id:"isvms",children:"isVMS"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property isVMS As %Boolean [ InitialExpression = "0" ];\n'})}),"\n",(0,l.jsx)(i.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,l.jsx)(i.h3,{id:"style",children:"Style"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,l.jsx)(i.h3,{id:"dialogbody",children:"dialogBody"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'XData dialogBody [ XMLNamespace = "http://www.intersystems.com/zen" ]\n'})}),"\n",(0,l.jsx)(i.p,{children:"Contents of the dialog body."}),"\n",(0,l.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(i.h3,{id:"onprehttp",children:"%OnPreHTTP"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod %OnPreHTTP() As %Boolean [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Zen page notification of an HTTP request."}),"\n",(0,l.jsx)(i.h3,{id:"ongettitle",children:"%OnGetTitle"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method %OnGetTitle() As %String\n"})}),"\n",(0,l.jsx)(i.p,{children:"Get the (localized) title string for the dialog. This should be implemented in a subclass."}),"\n",(0,l.jsx)(i.h3,{id:"ongetsubtitle",children:"%OnGetSubtitle"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method %OnGetSubtitle() As %String\n"})}),"\n",(0,l.jsx)(i.p,{children:"Get the (localized) subtitle string for the dialog. This should be implemented in a subclass."}),"\n",(0,l.jsx)(i.h3,{id:"changedrive",children:"changeDrive"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod changeDrive(thisobj) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:'User selected a different directory from "Lookin" drop-down. If FileName is available, add to the newly selected directory.'}),"\n",(0,l.jsx)(i.h3,{id:"changesortorder",children:"changeSortOrder"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod changeSortOrder(value) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.h3,{id:"reloadlookin",children:"reloadLookin"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod reloadLookin(driveobj, tvalue) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.h3,{id:"changeview",children:"changeView"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod changeView(viewtype) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"changeView"}),"\n",(0,l.jsx)(i.h3,{id:"uponelevel",children:"upOneLevel"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod upOneLevel() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"up one level"}),"\n",(0,l.jsx)(i.h3,{id:"changefiletype",children:"changeFileType"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod changeFileType() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"This method refreshes the contents with the current file type and directory/file name"}),"\n",(0,l.jsx)(i.h3,{id:"onkeydownhandler",children:"onkeydownHandler"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod onkeydownHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Examine if user hit the Return key. If yes, start the search. This method handles all keydown events on the window."}),"\n",(0,l.jsx)(i.h3,{id:"getviewcontents",children:"GetViewContents"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method GetViewContents(ByRef pParms As %String, Output pContents As %String, ByRef pHeader As %String) As %Status\n"})}),"\n",(0,l.jsx)(i.p,{children:"Build file and directory list"}),"\n",(0,l.jsx)(i.h3,{id:"onaftercreatepage",children:"%OnAfterCreatePage"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method %OnAfterCreatePage() As %Status\n"})}),"\n",(0,l.jsxs)(i.p,{children:["This callback is called after the server-side page object and all of its children are created.",(0,l.jsx)(i.br,{}),"\nSubclasses can override this to add, remove, or modify items within the page object model, or to provide values for controls."]}),"\n",(0,l.jsx)(i.h3,{id:"builddrive",children:"BuildDrive"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method BuildDrive(Output drives As %String, ByRef drive As %String, Output lastexistingdir As %String)\n"})}),"\n",(0,l.jsx)(i.p,{children:'This method builds the list of drives for the "look in" window. It will contain the available drives (mount points), or the user-configured set of available directories. In addition, it will contain the set of parent directories for the specified directory.'}),"\n",(0,l.jsx)(i.h3,{id:"findroot",children:"FindRoot"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method FindRoot(path As %String, ByRef roots As %String) As %String [ Private ]\n"})}),"\n",(0,l.jsx)(i.p,{children:'Given a file path, return the matching root path, or "" if it is invalid. The values must be normalized prior to calling, otherwise this will be vulnerable to directory traversal attacks, and because Windows file paths are case insensitive.'}),"\n",(0,l.jsx)(i.h3,{id:"getdialogvalue",children:"getDialogValue"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod getDialogValue() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.h3,{id:"itemclicked",children:"itemClicked"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod itemClicked(viewobj) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"User clicked an item. We put it in the File name field. User can OK it or [Enter] to drill down."}),"\n",(0,l.jsx)(i.h3,{id:"itemselected",children:"itemSelected"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod itemSelected(viewobj) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"User has selected a new item (double click)."}),"\n",(0,l.jsx)(i.h3,{id:"getsubdir",children:"GetSubDir"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod GetSubDir(LookinDir, Dir) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Construct new directory given the Look in directory and selected directory from the middle frame"}),"\n",(0,l.jsx)(i.h3,{id:"rebuildlookin",children:"RebuildLookin"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method RebuildLookin(Dir, wildcard) [ ZenMethod ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Construct new directory given the Look in directory and selected directory from the middle frame"}),"\n",(0,l.jsx)(i.h3,{id:"getdirectory",children:"GetDirectory"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method GetDirectory(Dir As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Check if user entered directory exists. Return a valid directory."}),"\n",(0,l.jsx)(i.h3,{id:"ondialogfinish",children:"ondialogFinish"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod ondialogFinish(action) As %Boolean [ Language = javascript ]\n"})}),"\n",(0,l.jsxs)(i.p,{children:["This callback, if defined, is called when the user presses the OK or Apply action buttons. If this returns false, then the action is cancelled.",(0,l.jsx)(i.br,{}),"\nCheck FileName value. If user entered a path, then return as is.",(0,l.jsx)(i.br,{}),"\nIf user enters something but not including a path, then add selected path in front of it.",(0,l.jsx)(i.br,{}),"\nIt is possible that user is entering a sub directory or file, therefore as a curtersey we add the path for them.",(0,l.jsx)(i.br,{}),"\nIn addition, if user enters a filename without a file extension, then we add the filetype choice from the drop-down."]}),"\n",(0,l.jsx)(i.h3,{id:"hasdelimiter",children:"hasdelimiter"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod hasdelimiter(file) [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.h3,{id:"checkpath",children:"CheckPath"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod CheckPath(Path As %String, File As %String, FileType As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsxs)(i.p,{children:["****** The Following Methods are Called from UtilFile*.csp Also ******",(0,l.jsx)(i.br,{}),'\nIf user enters a directory but without drive, we add the drive here. This overrides the "Look in" directory. For Windows and VMS only.']}),"\n",(0,l.jsx)(i.h3,{id:"checkrootdir",children:"CheckRootDir"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod CheckRootDir(File As %String) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsxs)(i.p,{children:['Check if user entered filename ends with ":". If yes, then we should add "/" or [000000] to make valid drive.',(0,l.jsx)(i.br,{}),"\nFor Windows: If user enters : without \\ then we add it here.",(0,l.jsx)(i.br,{}),"\nFor VMS: If user enters : without any [directory] then add [000000] here.",(0,l.jsx)(i.br,{}),"\nIf we don't do this then directory would be invalid."]}),"\n",(0,l.jsx)(i.h3,{id:"getdirfile",children:"GetDirFile"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod GetDirFile(LookinDir, File, FileType) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Construct new new file name, if it does not have dir yet"}),"\n",(0,l.jsx)(i.h3,{id:"checkfileext",children:"CheckFileExt"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod CheckFileExt(File, FileType) As %String [ ZenMethod ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Check if file has extension. If not, add it."}),"\n",(0,l.jsx)(i.h3,{id:"ondialogstart",children:"ondialogStart"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod ondialogStart() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"This callback, if defined, is called when the dialog page is loaded."}),"\n",(0,l.jsx)(i.h3,{id:"onresizehandler",children:"onresizeHandler"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"ClientMethod onresizeHandler() [ Language = javascript ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"This client event, if present, is fired when the page is resized."})]})}function o(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var l=n(96540);const s={},t=l.createContext(s);function r(e){const i=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:i},e.children)}}}]);