"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[77365],{28406:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>a,default:()=>l,frontMatter:()=>i,toc:()=>o});var r=n(74848),t=n(28453);const i={pagination_prev:null,pagination_next:null},a="%DeepSee.extensions.Statistics",o=[{value:"Parameters",id:"parameters",level:2},{value:"TRANSFORMXSL",id:"transformxsl",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Statistics",id:"statistics",level:3}];function c(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"deepseeextensionsstatistics",children:"%DeepSee.extensions.Statistics"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.extensions.Statistics [ System = 4 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"This class defines some common statistical functions to use in DeepSee"}),"\n",(0,r.jsx)(s.p,{children:"The Following tags are defined here:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"dsstat:variance",children:"dsstat:variance"})," Takes two attributes:\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"sourceProperty"}),". Defines a measure that represents variance for the source property defined."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"stderr"})," possible values ",(0,r.jsx)(s.code,{children:"true/false"}),". If true then another measure representing standard error of the mean is added.",(0,r.jsx)(s.br,{}),'\nExample: <dsstat:variance sourceProperty = "Value" stderr="true"/>']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"dsstat:regression",children:"dsstat:regression"})," Creates 3 measures for simple linear regression between two properties. Takes two attributes:\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"sourceProperty1"})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"sourceProperty2"}),(0,r.jsx)(s.br,{}),'\nFor example the following tag: <dsstat:regression sourceProperty1 = "LandArea" sourceProperty2 = "Value"/> creates 3 measures:']}),"\n",(0,r.jsx)(s.li,{children:"LivingAreaValue Correlation"}),"\n",(0,r.jsx)(s.li,{children:"LivingAreaValue Slope"}),"\n",(0,r.jsxs)(s.li,{children:["LivingAreaValue Intercept\nNote: ",(0,r.jsx)(s.a,{href:"dsstat:regression",children:"dsstat:regression"})," tag requires variance to be defined for both properties."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.h3,{id:"transformxsl",children:"TRANSFORMXSL"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter TRANSFORMXSL = "Statistics";\n'})}),"\n",(0,r.jsx)(s.p,{children:"This paramter is used to transform original cube definition. If it is defined in subcalss then the cube definition is piped through XSLT transformation. XSL is taken from XData block named in this paramter."}),"\n",(0,r.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,r.jsx)(s.h3,{id:"statistics",children:"Statistics"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"XData Statistics\n"})})]})}function l(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var r=n(96540);const t={},i=r.createContext(t);function a(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);