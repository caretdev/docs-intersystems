"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[60850],{24899:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>l,default:()=>d,frontMatter:()=>n,toc:()=>i});var r=t(74848),a=t(28453);const n={pagination_prev:null,pagination_next:null},l="SYS.History.UserAbstract",i=[{value:"Properties",id:"properties",level:2},{value:"DateTime",id:"datetime",level:3},{value:"ZDATE",id:"zdate",level:3},{value:"ZTIME",id:"ztime",level:3},{value:"Methods",id:"methods",level:2},{value:"Sample",id:"sample",level:3},{value:"Purge",id:"purge",level:3},{value:"Export",id:"export",level:3},{value:"Summary",id:"summary",level:3}];function o(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"syshistoryuserabstract",children:"SYS.History.UserAbstract"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class SYS.History.UserAbstract [ Abstract, System = 4 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Abstract class used as the parent of all collection classes for user-defined metrics. The SYS.History.User* classes are generated by inheriting from this class and then adding the user-defined classes as embedded objects. This includes User, UserPerf, UserSys, UserHourly and UserDaily."}),"\n",(0,r.jsx)(s.p,{children:"See SYS.History.Adaptor for details about how to create user-defined metrics for SYS.History"}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"datetime",children:"DateTime"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property DateTime As %TimeStamp;\n"})}),"\n",(0,r.jsx)(s.p,{children:"Time of sample"}),"\n",(0,r.jsx)(s.h3,{id:"zdate",children:"ZDATE"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property ZDATE As %Integer;\n"})}),"\n",(0,r.jsx)(s.p,{children:"UTC date key"}),"\n",(0,r.jsx)(s.h3,{id:"ztime",children:"ZTIME"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Property ZTIME As %Integer;\n"})}),"\n",(0,r.jsx)(s.p,{children:"UTC time key"}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"sample",children:"Sample"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Sample() As %RegisteredObject\n"})}),"\n",(0,r.jsx)(s.p,{children:"Instantiate the class and fetch current values for all metric properties."}),"\n",(0,r.jsx)(s.h3,{id:"purge",children:"Purge"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Purge(Keep As %Integer = 0) As %Integer\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Purge user-defined interval data, keeping the last 'Keep' days. For Interval and Hourly data this is typically called at the start of each day from the %Monitor.System.History class using the current system default for 'Keep' (see the SetPurge() method in PerfData and Hourly). For Daily data it must be manually called.",(0,r.jsx)(s.br,{}),'\nThe \'Keep\' argument allows you to over ride the system default (a value of "0" or "" uses the system default)']}),"\n",(0,r.jsx)(s.p,{children:"Returns the number of entries purged."}),"\n",(0,r.jsx)(s.h3,{id:"export",children:"Export"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Export(Property As %String, FileName As %String, Start As %TimeStamp, End As %TimeStamp, Function As %String) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Export user-defined data for time range in CSV format. The default is all of the data currently in the user-defined class, except those defined as %ArrayOfObjects in the User class, or ARRAY=1 and ARRAYSUM=0 in the Hourly/Daily classes."}),"\n",(0,r.jsxs)(s.p,{children:["- The 'Property' argument allows you to select a single user-defined class, including ones which are defined as %ArrayOfObjects, by specifying the string used as the embedded property name.",(0,r.jsx)(s.br,{}),"\n- The default FileName is HistoryUser_config_date_time.csv in the MGR directory.",(0,r.jsx)(s.br,{}),"\n- 'Start' and 'End' times (if necessary) are in YYYY-MM-DD HH:MM:SS format.",(0,r.jsx)(s.br,{}),'\n- \'Function\' can be a comma-delimited list one or more of these summary functions: "Avg", "Max", "Min", StDev", Med" or "Tot". The default is to include all summary functions. Only used for Hourly/Daily summary classes, otherwise ignored.']}),"\n",(0,r.jsx)(s.h3,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Summary(Day As %Integer = 0) As %Status\n"})}),"\n",(0,r.jsx)(s.p,{children:"Collect summaries of the user-defined metrics for a day into the Hourly/Daily database. This is typically done automatically by the %Monitor.System.History* classes at beginning of each day (for the previous day), but could be called manually if there's a problem. Not valid for UserDaily or UserHourly classes."}),"\n",(0,r.jsx)(s.p,{children:'The \'Day\' argument sets the end date of the collection, with the default of "0" being the start of today (i.e. $H+Day), which would collect everything for yesterday. A "-1" would collect the day before yesterday; a "1" would collect today (as much as there is).'})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>i});var r=t(96540);const a={},n=r.createContext(a);function l(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);