"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[26708],{82738:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>d,frontMatter:()=>i,toc:()=>o});var s=n(74848),r=n(28453);const i={pagination_prev:null,pagination_next:null},c="%Compiler.Type.Object",o=[{value:"Parameters",id:"parameters",level:2},{value:"CLASSNAME",id:"classname",level:3},{value:"Methods",id:"methods",level:2},{value:"Get",id:"get",level:3},{value:"GetSwizzled",id:"getswizzled",level:3},{value:"GetObject",id:"getobject",level:3},{value:"GetObjectId",id:"getobjectid",level:3},{value:"IsEmpty",id:"isempty",level:3},{value:"NewObject",id:"newobject",level:3},{value:"Set",id:"set",level:3},{value:"SetObject",id:"setobject",level:3},{value:"SetObjectId",id:"setobjectid",level:3},{value:"UnSwizzle",id:"unswizzle",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"compilertypeobject",children:"%Compiler.Type.Object"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Compiler.Type.Object Extends %Compiler.Type.Literal [ NoContext, System = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Property superclass for object values, for internal use only"}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"classname",children:"CLASSNAME"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter CLASSNAME As INTEGER [ Constraint = "0,1,2", Flags = ENUM ] = 0;\n'})}),"\n",(0,s.jsx)(t.p,{children:"A logical value determines if classnames of referenced properties are stored. 0 - store only the ID; 1 - store the two element form of the OID 2 - store the three element form of the OID (applies only to streams currently)"}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Get() As %RawString [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Returns an oref, performing swizzling if necessary it returns "" ($$$NULLOREF) if there is no oref and the id=""'}),"\n",(0,s.jsx)(t.h3,{id:"getswizzled",children:"GetSwizzled"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSwizzled(noswizzle As %Boolean = 0) As %RegisteredObject [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Returns an oref, performing swizzling if necessary it returns "" ($$$NULLOREF) if there is no oref and the id="". If noswizzle is passed as true then this will just return the current value for the property, so if it has been swizzled already then it will return the oref, if it has not been swizzled it will return "" ($$$NULLOREF).'}),"\n",(0,s.jsx)(t.h3,{id:"getobject",children:"GetObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetObject(force As %Integer = 0) As %ObjectIdentity [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Obtains the state/id of the referenced object if swizzling has not occurred, it simply returns the stored state else it references the specified object force = an optional parameter, if its value is 1 then if the referenced object is an ID object it must return its ID, which may force it to file itself. no code for this method if the property is a datatype"}),"\n",(0,s.jsx)(t.h3,{id:"getobjectid",children:"GetObjectId"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetObjectId(force As %Integer = 0) As %String [ CodeMode = generator, GenerateAfter = GetObject, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Stores simply calls GetObject() with decomposes Oid into Id"}),"\n",(0,s.jsx)(t.h3,{id:"isempty",children:"IsEmpty"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsEmpty() As %Integer [ CodeMode = generator, GenerateAfter = GetObject, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Can be used to test whether an embedded object is in NULL state exists for embedded object only, not for persistent objects"}),"\n",(0,s.jsx)(t.h3,{id:"newobject",children:"NewObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method NewObject() As %ObjectHandle [ CodeMode = generator, GenerateAfter = Set, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Creates a new object for the referenced property"}),"\n",(0,s.jsx)(t.h3,{id:"set",children:"Set"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Set(newvalue As %RawString) As %Status [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Set the property to an oref value if the new oref is different from an old oref, the old object is closed"}),"\n",(0,s.jsx)(t.h3,{id:"setobject",children:"SetObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetObject(newvalue As %ObjectIdentity) As %Status [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Stores a new value for the OID of the referenced object. if swizzling has not occurred, it simply stores the OID (after perhaps stripping the class name if CLASSNAME=0). if swizzling has occurred, then it references the object to obtain its OID. If it is the same, then nothing happens. If they are different then the old object is closed and the new OID is stored."}),"\n",(0,s.jsx)(t.h3,{id:"setobjectid",children:"SetObjectId"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetObjectId(newid As %String) As %Status [ CodeMode = generator, GenerateAfter = SetObject, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Stores simply calls SetObject() with constructed Oid"}),"\n",(0,s.jsx)(t.h3,{id:"unswizzle",children:"UnSwizzle"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method UnSwizzle(force As %Integer = 0) As %Status [ CodeMode = generator, Private, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Unswizzles a property, if it has an oref"})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(96540);const r={},i=s.createContext(r);function c(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);