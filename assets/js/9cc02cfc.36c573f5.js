"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[4117],{88321:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,toc:()=>l});var r=s(74848),n=s(28453);const a={pagination_prev:null,pagination_next:null},i="%SQL.FDW.Abstract",l=[{value:"Parameters",id:"parameters",level:2},{value:"PREDICATEPUSHDOWN",id:"predicatepushdown",level:3},{value:"PASSTHROUGH",id:"passthrough",level:3},{value:"Properties",id:"properties",level:2},{value:"RemainingBuffers",id:"remainingbuffers",level:3},{value:"Buffer",id:"buffer",level:3},{value:"BufferPointer",id:"bufferpointer",level:3},{value:"BufferLength",id:"bufferlength",level:3},{value:"%AtEnd",id:"atend",level:3},{value:"%GetData",id:"getdata",level:3},{value:"%IsOpened",id:"isopened",level:3},{value:"%ResultSetColumnCount",id:"resultsetcolumncount",level:3},{value:"Methods",id:"methods",level:2},{value:"CleanUp",id:"cleanup",level:3},{value:"GetRequestObject",id:"getrequestobject",level:3},{value:"Prepare",id:"prepare",level:3},{value:"Execute",id:"execute",level:3},{value:"Reset",id:"reset",level:3},{value:"%Next",id:"next",level:3},{value:"Close",id:"close",level:3},{value:"GetSQLMetaData",id:"getsqlmetadata",level:3},{value:"QuoteIdentifier",id:"quoteidentifier",level:3},{value:"SetSQLCODEFromStatus",id:"setsqlcodefromstatus",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"sqlfdwabstract",children:"%SQL.FDW.Abstract"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SQL.FDW.Abstract Extends (%RegisteredObject, %SQL.StatementResult) [ Abstract, System = 4 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Abstract class providing interface for Foreign Data Wrappers. Foreign Data Wrappers provide the API for interacting with data stored in foreign sources such as CSV files, external databases, distributed file servers etc."}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h3,{id:"predicatepushdown",children:"PREDICATEPUSHDOWN"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter PREDICATEPUSHDOWN = 0;\n"})}),"\n",(0,r.jsx)(t.p,{children:"Specifies whether this foreign data wrapper supports pushing logical predicates to its source. 0 by default, overridden to be 1 by the XDBC FDW"}),"\n",(0,r.jsx)(t.h3,{id:"passthrough",children:"PASSTHROUGH"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter PASSTHROUGH = 0;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"remainingbuffers",children:"RemainingBuffers"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property RemainingBuffers As %Boolean;\n"})}),"\n",(0,r.jsx)(t.p,{children:"Whether there are more buffers (batches of rows) that the source can return"}),"\n",(0,r.jsx)(t.h3,{id:"buffer",children:"Buffer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property Buffer As %List;\n"})}),"\n",(0,r.jsx)(t.p,{children:"The current buffer (batch of rows - a $lb of $lb's)"}),"\n",(0,r.jsx)(t.h3,{id:"bufferpointer",children:"BufferPointer"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property BufferPointer As %Integer;\n"})}),"\n",(0,r.jsx)(t.p,{children:"Maintains the pointer output by $listnext"}),"\n",(0,r.jsx)(t.h3,{id:"bufferlength",children:"BufferLength"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property BufferLength As %Integer;\n"})}),"\n",(0,r.jsx)(t.p,{children:"The size of the buffer (number of characters)"}),"\n",(0,r.jsx)(t.h3,{id:"atend",children:"%AtEnd"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %AtEnd As %Boolean;\n"})}),"\n",(0,r.jsx)(t.p,{children:"Whether we are at the end of the entire result set"}),"\n",(0,r.jsx)(t.h3,{id:"getdata",children:"%GetData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %GetData As %String [ MultiDimensional ];\n"})}),"\n",(0,r.jsx)(t.p,{children:'Multidimensional property that stores the current row being fetched, where each node of the property is indexed by column number and the node data is the field value. This is where the field data is accessed by cached queries and "overrides" the %GetData() method of the %SQL.StatementResult parent class'}),"\n",(0,r.jsx)(t.h3,{id:"isopened",children:"%IsOpened"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %IsOpened As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,r.jsx)(t.p,{children:'If this FDW/result is "open", set in %OnNew once the FDW has been instantiated'}),"\n",(0,r.jsx)(t.h3,{id:"resultsetcolumncount",children:"%ResultSetColumnCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ResultSetColumnCount As %Integer;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"cleanup",children:"CleanUp"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CleanUp(StopLanguageServer As %Boolean) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Disconnect Gateway, optionally stop External Language Server (costly to start it again)."}),"\n",(0,r.jsx)(t.h3,{id:"getrequestobject",children:"GetRequestObject"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRequestObject(Server As %String, FTClassName As %String) As %Library.DynamicObject\n"})}),"\n",(0,r.jsx)(t.p,{children:"Create the request string sent to Java"}),"\n",(0,r.jsx)(t.h3,{id:"prepare",children:"Prepare"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Prepare(Server As %String, FTClassName As %String, Query As %String, Parameters As %List) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Prepare the Query to be executed against the Server"}),"\n",(0,r.jsx)(t.h3,{id:"execute",children:"Execute"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Execute(Parameters As %List) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Execute the query, binding the given parameters first if necessary."}),"\n",(0,r.jsx)(t.h3,{id:"reset",children:"Reset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Reset() As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Reset the result set back to the first row. Note this may entail a full re-execution depending on the specific implmentation of the foreign data wrapper."}),"\n",(0,r.jsx)(t.h3,{id:"next",children:"%Next"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Next(ByRef sc As %Library.Status = {$$$OK}) As %Library.Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Advance the result set cursor to the next row. Returns 0 if the cursor is at the end of the result set.. An optional argument contains a %Library.Status value on return. This %Status value indicates success or failure of the %Next call. %SQLCODE is also set by %Next."}),"\n",(0,r.jsx)(t.h3,{id:"close",children:"Close"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Close() As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getsqlmetadata",children:"GetSQLMetaData"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSQLMetaData(Output metadata) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Every foreign data wrapper should build it's own version of this method to return metadata about the columns that will be provided by the foreign data wrapper. Each one should return metadata as specified below. This metadata should be made available as requested after the Prepare() stage of the foreign data wrapper. If desired, a foreign data wrapper can wait until this method is called to retrieve and then build the corresponding metadata structure. see also %SQL.StatementMetadata:%GenerateMetadata() metadata = $lb() 1 - # of SELECT columns 2 - i:  1) Name 2) ODBC Type 3) Precision 4) Scale 5) NULLABLE (integer) 6) Column Label (same as Name) 7) Column Table Name 8) Column Schema Name 9) Column Qualifier Name - NULL 10) $Char(1)/$Char(0) string / $Extract position: 1) isAutoIncrement 2) isCaseSensitive 3) isCurrency 4) IsReadOnly 5) IsRowVersion 6) IsUnique 7) IsAliased 8) IsExpression 9) IsHidden 10) IsIdentity 11) IsKeyColumn 12) IsRowid 13) IsList"}),"\n",(0,r.jsx)(t.h3,{id:"quoteidentifier",children:"QuoteIdentifier"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod QuoteIdentifier(identifier As %String, supportsDelimitedIdentifiers As %Boolean) As %String\n"})}),"\n",(0,r.jsx)(t.p,{children:"Quote identifiers appropriately for the data source type that this foreign data wrapper wraps based on whether delimited identifiers should be supported. Default implementation returns the identifier as is. It is up to the subclass to implement the behavior appropriate for the data source type."}),"\n",(0,r.jsx)(t.h3,{id:"setsqlcodefromstatus",children:"SetSQLCODEFromStatus"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method SetSQLCODEFromStatus(sc As %Status, optionalMessage As %String = "")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(96540);const n={},a=r.createContext(n);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);