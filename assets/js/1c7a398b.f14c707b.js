"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[93433],{81767:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>r,default:()=>o,frontMatter:()=>l,toc:()=>i});var a=t(74848),n=t(28453);const l={pagination_prev:null,pagination_next:null},r="%ZEN.Report.Display.COSChart.ctreeMapChart",i=[{value:"Properties",id:"properties",level:2},{value:"showPercentage",id:"showpercentage",level:3},{value:"%totalValue",id:"totalvalue",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"hasAxes",id:"hasaxes",level:3},{value:"is3D",id:"is3d",level:3},{value:"renderSeries",id:"renderseries",level:3},{value:"plotItems",id:"plotitems",level:3},{value:"plotOneBox",id:"plotonebox",level:3},{value:"hasMultiples",id:"hasmultiples",level:3},{value:"getLegendLabels",id:"getlegendlabels",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"zenreportdisplaycoschartctreemapchart",children:"%ZEN.Report.Display.COSChart.ctreeMapChart"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.COSChart.ctreeMapChart Extends cchart [ Deprecated, System = 4 ]\n"})}),"\n",(0,a.jsxs)(s.p,{children:["This is an SVG chart component that displays a tree map.",(0,a.jsx)(s.br,{}),"\nA tree map displays a series of values as a set of rectangles. The area of each rectangle is proportional to its value. Negative values are ignored."]}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"showpercentage",children:"showPercentage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Property showPercentage As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,a.jsx)(s.p,{children:"If true, percentage values (rounded to 2 decimal places integer) are displayed as part of the label for each box."}),"\n",(0,a.jsx)(s.h3,{id:"totalvalue",children:"%totalValue"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Property %totalValue As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,a.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,a.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"hasaxes",children:"hasAxes"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasAxes()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Indicates that this chart has no axes and associated grids"}),"\n",(0,a.jsx)(s.h3,{id:"is3d",children:"is3D"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method is3D()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Do not show 3-D plot area."}),"\n",(0,a.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeries(group)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Draw data series for this chart. group is the SVG container for the chart components."}),"\n",(0,a.jsx)(s.h3,{id:"plotitems",children:"plotItems"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method plotItems(group, dataItems, width, height, x, y, qCount)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Plot map items onto the chart."}),"\n",(0,a.jsx)(s.h3,{id:"plotonebox",children:"plotOneBox"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method plotOneBox(group, seriesNo, itemNo, x, y, width, height, value)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Render one item in the chart."}),"\n",(0,a.jsx)(s.h3,{id:"hasmultiples",children:"hasMultiples"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasMultiples()\n"})}),"\n",(0,a.jsx)(s.p,{children:'Indicates that this chart supports "show multiples" mode.'}),"\n",(0,a.jsx)(s.h3,{id:"getlegendlabels",children:"getLegendLabels"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Method getLegendLabels()\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Return an array of labels to display within the Legend box.",(0,a.jsx)(s.br,{}),"\nOverride to get appropriate labels for TreeMap Chart."]})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>i});var a=t(96540);const n={},l=a.createContext(n);function r(e){const s=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(l.Provider,{value:s},e.children)}}}]);