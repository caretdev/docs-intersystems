"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[87366],{79399:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,toc:()=>c});var a=t(74848),n=t(28453);const i={pagination_prev:null,pagination_next:null},r="%Atelier.v1.Utils.General",c=[{value:"Methods",id:"methods",level:2},{value:"GetCSPAppPath",id:"getcspapppath",level:3},{value:"GetNameFromDocArray",id:"getnamefromdocarray",level:3},{value:"AccessibleNamespaces",id:"accessiblenamespaces",level:3},{value:"GetDocHash",id:"getdochash",level:3},{value:"CalcHash",id:"calchash",level:3},{value:"BeginCaptureOutput",id:"begincaptureoutput",level:3},{value:"EndCaptureOutput",id:"endcaptureoutput",level:3},{value:"ValidateDocName",id:"validatedocname",level:3},{value:"GetDocCategory",id:"getdoccategory",level:3},{value:"NormalizeDocName",id:"normalizedocname",level:3},{value:"ExistsDoc",id:"existsdoc",level:3},{value:"ValidType",id:"validtype",level:3},{value:"ValidLANG",id:"validlang",level:3},{value:"WrapRtnDocWithXML",id:"wraprtndocwithxml",level:3},{value:"TS",id:"ts",level:3},{value:"GetDbForDoc",id:"getdbfordoc",level:3},{value:"GetModifiedDocuments",id:"getmodifieddocuments",level:3},{value:"GetModifiedClassesIndex",id:"getmodifiedclassesindex",level:3},{value:"GetModifiedRoutinesIndex",id:"getmodifiedroutinesindex",level:3},{value:"GetModifiedDocumentsDB",id:"getmodifieddocumentsdb",level:3},{value:"GetDbNameFromDir",id:"getdbnamefromdir",level:3},{value:"CreateDocumentObject",id:"createdocumentobject",level:3},{value:"CreateDocumentCollection",id:"createdocumentcollection",level:3},{value:"WriteMsg",id:"writemsg",level:3},{value:"Hash",id:"hash",level:3},{value:"Base64FromStream",id:"base64fromstream",level:3},{value:"NamespaceDbList",id:"namespacedblist",level:3},{value:"GetDbdirCrhash",id:"getdbdircrhash",level:3},{value:"Compile",id:"compile",level:3},{value:"GetCSPToken",id:"getcsptoken",level:3},{value:"GetRoutineMappings",id:"getroutinemappings",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"atelierv1utilsgeneral",children:"%Atelier.v1.Utils.General"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Atelier.v1.Utils.General Extends %RegisteredObject [ Owner = {%Developer} ]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"getcspapppath",children:"GetCSPAppPath"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetCSPAppPath(pName As %String, Output pPath) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method returns the path for the named CSP application"}),"\n",(0,a.jsx)(s.h3,{id:"getnamefromdocarray",children:"GetNameFromDocArray"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetNameFromDocArray(ByRef pTextArray, Output pName)\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method parses a document header and extracts the name"}),"\n",(0,a.jsx)(s.h3,{id:"accessiblenamespaces",children:"AccessibleNamespaces"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AccessibleNamespaces(Output pList As %String)\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method returns a list of accessible namespaces"}),"\n",(0,a.jsx)(s.h3,{id:"getdochash",children:"GetDocHash"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDocHash(pName As %String, Output pHash As %String, Output pTextArray As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method takes a document name and computes a hash value by applying the sha1 hash function to normalized source"}),"\n",(0,a.jsx)(s.h3,{id:"calchash",children:"CalcHash"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CalcHash(ByRef pTextArray As %String, Output pHash) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given an array of normalized text lines, compute the textual hash value"}),"\n",(0,a.jsx)(s.h3,{id:"begincaptureoutput",children:"BeginCaptureOutput"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod BeginCaptureOutput(Output pCookie As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method starts capturing the output from a program"}),"\n",(0,a.jsx)(s.h3,{id:"endcaptureoutput",children:"EndCaptureOutput"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod EndCaptureOutput(pCookie As %String, Output pText As %DynamicArray) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method retrieves the captured output and delivers it as an array of lines"}),"\n",(0,a.jsx)(s.h3,{id:"validatedocname",children:"ValidateDocName"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ValidateDocName(pDocName As %String, Output pStatus, Output pCategory As %String, Output pBinary As %Boolean) As %Boolean\n"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ValidateDocName"})," tests that a DocName has legal syntax"]}),"\n",(0,a.jsx)(s.p,{children:"Returns a %Boolean:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"1 - If pDocName has legal DocName syntax"}),"\n",(0,a.jsx)(s.li,{children:"0 - Otherwise"}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"Also returns the Category of the document and a Boolean of whether the document needs to be transmitted as binary or not."}),"\n",(0,a.jsx)(s.h3,{id:"getdoccategory",children:"GetDocCategory"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDocCategory(pDocName As %String, Output pCategory As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given a document name, return the category. The %Status value is from ValidateDocName."}),"\n",(0,a.jsx)(s.h3,{id:"normalizedocname",children:"NormalizeDocName"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod NormalizeDocName(pDocName As %String) As %String\n"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"NormalizeDocName"})," adds the default package name to .cls files. It also down cases the DocName type for class and routine types."]}),"\n",(0,a.jsx)(s.p,{children:"The pDocName is assumed to have been validated by ..ValidateDocName."}),"\n",(0,a.jsx)(s.p,{children:"Returns the normalized DocName as a %String."}),"\n",(0,a.jsx)(s.h3,{id:"existsdoc",children:"ExistsDoc"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ExistsDoc(pDocName As %String, Output pStatus) As %Boolean\n"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ExistsDoc"})," checks that the item named by pDocName exists and returns the appropriate %Boolean value."]}),"\n",(0,a.jsx)(s.h3,{id:"validtype",children:"ValidType"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ValidType(pType As %String, ByRef pKeywords As %String) As %String\n"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ValidType"}),"(pType,pKeyword) checks that a Type attribute is valid. If the type is valid then it is changed to upper case, inserted into the pKeywords array (passsed by reference) and returned as the result of ",(0,a.jsx)(s.strong,{children:"ValidType"})]}),"\n",(0,a.jsxs)(s.p,{children:["If the type is invalid then ",(0,a.jsx)(s.strong,{children:"ValidType"}),' returns "".']}),"\n",(0,a.jsx)(s.p,{children:"Note: If the pKeywords array contains a conflicting Type value or a conflicting LanguageMode value then the Type attribute is invalid."}),"\n",(0,a.jsx)(s.h3,{id:"validlang",children:"ValidLANG"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ValidLANG(pMode As %String, ByRef pKeywords As %String) As %String\n"})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"ValidLANG"}),"(pMode,pKeyword) checks that a LanguageMode attribute is valid. If the mode is valid then it is inserted into the pKeywords array (passed by reference) and returned as the result of ",(0,a.jsx)(s.strong,{children:"ValidLANG"})]}),"\n",(0,a.jsxs)(s.p,{children:["If the mode is invalid then ",(0,a.jsx)(s.strong,{children:"ValidLANG"}),' returns "".']}),"\n",(0,a.jsx)(s.p,{children:"Note: If the pKeywords array contains a conflicting Type value or a conflicting LanguageMode value then the mode attribute is invalid."}),"\n",(0,a.jsx)(s.h3,{id:"wraprtndocwithxml",children:"WrapRtnDocWithXML"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod WrapRtnDocWithXML(pDocumentArray As %String, Output pWrappedDocument As %Stream) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"This method wraps a client document with an XML wrapper which allows it to be imported into InterSystems IRIS"}),"\n",(0,a.jsx)(s.h3,{id:"ts",children:"TS"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod TS(pDocName, ByRef pUpToDate) As %String\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return a normalized timestamp for a document"}),"\n",(0,a.jsx)(s.h3,{id:"getdbfordoc",children:"GetDbForDoc"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDbForDoc(pDocName As %String, Output pDatabase) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given the name of a class, return the database to which it is mapped"}),"\n",(0,a.jsx)(s.h3,{id:"getmodifieddocuments",children:"GetModifiedDocuments"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetModifiedDocuments(ByRef pHashes, pType As %String, ByRef pGbl As %String, pShowGenerated As %Boolean = 1) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given an array of hashes which represent databases, and using the database mappings for the current namespace, return a list of documents of the requested type which have been modified after the given hash was generated. The list is in the returned process private global."}),"\n",(0,a.jsx)(s.h3,{id:"getmodifiedclassesindex",children:"GetModifiedClassesIndex"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetModifiedClassesIndex(ByRef dirlist, dbdir As %String, dbname As %String, pShowGenerated As %Boolean, hashIn As %String, ByRef hashOut As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"getmodifiedroutinesindex",children:"GetModifiedRoutinesIndex"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetModifiedRoutinesIndex(pType As %String, ByRef dirlist, dbdir As %String, dbname As %String, pShowGenerated As %Boolean, hashIn As %String, ByRef hashOut As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"getmodifieddocumentsdb",children:"GetModifiedDocumentsDB"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetModifiedDocumentsDB(pDatabase As %String, ByRef pHash As %String, pType As %String, Output pDocs As %String, pShowGenerated As %Boolean = 1) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given a database name and a hash value, return a list of documents of the requested type which have been modified after the given hash was generated. The current hash value will be returned in the pHash argument."}),"\n",(0,a.jsx)(s.h3,{id:"getdbnamefromdir",children:"GetDbNameFromDir"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDbNameFromDir(pDir As %String) As %String\n"})}),"\n",(0,a.jsx)(s.h3,{id:"createdocumentobject",children:"CreateDocumentObject"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateDocumentObject(Output pDocObject As %DynamicObject, ByRef pDocArray, pName As %String, pDocStatus As %Status, pTimeStamp As %String, pUpToDate As %Boolean) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Create a document object"}),"\n",(0,a.jsx)(s.h3,{id:"createdocumentcollection",children:"CreateDocumentCollection"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CreateDocumentCollection(ByRef pArray) As %Atelier.v1.Utils.LazyCollection\n"})}),"\n",(0,a.jsx)(s.p,{children:"Create a document collection object from an array of document objects"}),"\n",(0,a.jsx)(s.h3,{id:"writemsg",children:"WriteMsg"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod WriteMsg(ByRef pMsgArray As %String)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Output a message array"}),"\n",(0,a.jsx)(s.h3,{id:"hash",children:"Hash"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Hash(pValue As %String) As %String [ CodeMode = expression ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Compute a hash value but replace potentially problematic characters"}),"\n",(0,a.jsx)(s.h3,{id:"base64fromstream",children:"Base64FromStream"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Base64FromStream(pStream As %Stream, Output pEncoded As %Stream) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Encode a stream as BASE64"}),"\n",(0,a.jsx)(s.h3,{id:"namespacedblist",children:"NamespaceDbList"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod NamespaceDbList(pNamespace As %String, Output pDB As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return list of databases where the routines for a namespace are mapped. It does not include the default database."}),"\n",(0,a.jsx)(s.h3,{id:"getdbdircrhash",children:"GetDbdirCrhash"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDbdirCrhash(pDbdir As %String, Output pHash As %String) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Given the database directory definition, get the creation time hash value"}),"\n",(0,a.jsx)(s.h3,{id:"compile",children:"Compile"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Compile(ByRef pItemArray As %String, pFlags As %String, pGetSource As %Boolean = 1, Output pResult As %DynamicObject) As %Status\n"})}),"\n",(0,a.jsx)(s.h3,{id:"getcsptoken",children:"GetCSPToken"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetCSPToken(pPage As %String, pToken As %String = "") As %String [ SqlProc ]\n'})}),"\n",(0,a.jsx)(s.p,{children:"For use via the Query API (/:namespace/action/query): Returns a token for use in CSPCHD in a URL May validate and extend an existing token (pToken)"}),"\n",(0,a.jsx)(s.h3,{id:"getroutinemappings",children:"GetRoutineMappings"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetRoutineMappings(Output rtndir) As %Status\n"})}),"\n",(0,a.jsx)(s.p,{children:"Get the routine mappings and break them out into lists for each routine type"})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var a=t(96540);const n={},i=a.createContext(n);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);