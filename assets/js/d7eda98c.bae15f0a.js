"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[79358],{10016:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>i,frontMatter:()=>r,toc:()=>c});var l=t(74848),a=t(28453);const r={pagination_prev:null,pagination_next:null},s="%XSQL.Catalog.Informix.syscolumns",c=[{value:"Parameters",id:"parameters",level:2},{value:"READONLY",id:"readonly",level:3},{value:"Properties",id:"properties",level:2},{value:"colname",id:"colname",level:3},{value:"tabid",id:"tabid",level:3},{value:"colno",id:"colno",level:3},{value:"coltype",id:"coltype",level:3},{value:"maxlen",id:"maxlen",level:3},{value:"schema",id:"schema",level:3},{value:"colid",id:"colid",level:3},{value:"parentobjname",id:"parentobjname",level:3},{value:"extentname",id:"extentname",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"xsqlcataloginformixsyscolumns",children:"%XSQL.Catalog.Informix.syscolumns"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Class %XSQL.Catalog.Informix.syscolumns Extends %Persistent [ SqlRowIdPrivate, StorageStrategy = SQLStorage, System = 4 ]\n"})}),"\n",(0,l.jsx)(n.p,{children:"Contains one row for every column in every table and view, and a row for each parameter in a stored procedure."}),"\n",(0,l.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(n.h3,{id:"readonly",children:"READONLY"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter READONLY = 1;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(n.h3,{id:"colname",children:"colname"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property colname As %String(MAXLEN = 128) [ SqlColumnNumber = 2 ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Name of the column"}),"\n",(0,l.jsx)(n.h3,{id:"tabid",children:"tabid"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property tabid As %Integer [ SqlColumnNumber = 3 ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Object ID of the table to which this column belongs"}),"\n",(0,l.jsx)(n.h3,{id:"colno",children:"colno"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:'Property colno As %SmallInt [ SqlColumnNumber = 4, SqlComputeCode = {Set {colno}=$Listget($Get(^oddEXTR({extentname},"b",{colname},91)),1)}, SqlComputed, Transient ];\n'})}),"\n",(0,l.jsx)(n.p,{children:"Column number sequentially assigned by the system (from left to right within each table)"}),"\n",(0,l.jsx)(n.h3,{id:"coltype",children:"coltype"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:'Property coltype As %SmallInt [ SqlColumnNumber = 5, SqlComputeCode = {New data Set data=$ListGet($Get(^oddEXTR({extentname},"b",{colname},91)),9)\n'})}),"\n",(0,l.jsx)(n.p,{children:"Code (identifier) for column data type: 0 = CHAR 14 = INTERVAL 1 = SMALLINT 15 = NCHAR 2 = INTEGER 16 = NVARCHAR 3 = FLOAT 17 = INT8 4 = SMALLFLOAT 18 = SERIAL8* 5 = DECIMAL 19 = SET 6 = SERIAL* 20 = MULTISET 7 = DATE 21 = LIST 8 = MONEY 22 = ROW 9 = NULL 23 = COLLECTION 10 = DATETIME 24 = ROWREF 11 = BYTE 40 = Variable-length opaque type 12 = TEXT 41 = Fixed-length opaque type 13 = VARCHAR 4118 = Named row type"}),"\n",(0,l.jsx)(n.h3,{id:"maxlen",children:"maxlen"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property maxlen As %Integer [ SqlColumnNumber = 10 ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Maximum column length (in bytes)"}),"\n",(0,l.jsx)(n.h3,{id:"schema",children:"schema"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property schema As %String(MAXLEN = 128) [ Private, SqlColumnNumber = 12 ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Name of the schema the column resides in"}),"\n",(0,l.jsx)(n.h3,{id:"colid",children:"colid"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property colid As %Integer [ Private, SqlColumnNumber = 13 ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Internal Column id value"}),"\n",(0,l.jsx)(n.h3,{id:"parentobjname",children:"parentobjname"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:"Property parentobjname As %String(MAXLEN = 128) [ Private, SqlColumnNumber = 14, SqlFieldName = parent_obj_name ];\n"})}),"\n",(0,l.jsx)(n.p,{children:"Parent Object name Object name of the parent_obj."}),"\n",(0,l.jsx)(n.h3,{id:"extentname",children:"extentname"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-objectscript-class",children:'Property extentname As %String(MAXLEN = 128) [ Internal, Private, SqlColumnNumber = 15, SqlComputeCode = { Set {extentname}=$ListGet($Get(^rINDEXSQL("rv",$zcvt($Listget($Get(^oddTSQL({tabid}))),"U"),$zcvt($Listget($Get(^oddTSQL({tabid})),2),"U"))),2)}, SqlComputed, Transient ];\n'})}),"\n",(0,l.jsx)(n.p,{children:"Name of the extent that projected this table"})]})}function i(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var l=t(96540);const a={},r=l.createContext(a);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);