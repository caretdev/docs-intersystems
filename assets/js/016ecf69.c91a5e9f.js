"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[25469],{73428:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,toc:()=>l});var t=r(74848),n=r(28453);const a={pagination_prev:null,pagination_next:null},i="%ZEN.Report.Display.COSChart.cdiffChart",l=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"Properties",id:"properties",level:2},{value:"refLineStyle",id:"reflinestyle",level:3},{value:"seriesYAxes",id:"seriesyaxes",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"Methods",id:"methods",level:2},{value:"renderSeries",id:"renderseries",level:3},{value:"useSumForRange",id:"usesumforrange",level:3}];function c(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"zenreportdisplaycoschartcdiffchart",children:"%ZEN.Report.Display.COSChart.cdiffChart"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.COSChart.cdiffChart Extends cchart [ Deprecated, System = 4 ]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE = 1;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This is an SVG chart component that displays a difference chart.",(0,t.jsx)(s.br,{}),"\nThis is a specialized type of line chart that displays the difference between a reference data series (the first data series) and an actual data series (the second data series). Default value for plotToEdge property."]}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"reflinestyle",children:"refLineStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property refLineStyle As %ZEN.Datatype.svgStyle [ InitialExpression = "stroke-dasharray: 1,1;" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: default style applied to the reference line elements used for plotting data by this chart."}),"\n",(0,t.jsx)(s.h3,{id:"seriesyaxes",children:"seriesYAxes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property seriesYAxes As %ZEN.Datatype.csv(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeries(group)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw data series for this chart. group is the SVG container for the chart components."}),"\n",(0,t.jsx)(s.h3,{id:"usesumforrange",children:"useSumForRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method useSumForRange()\n"})}),"\n",(0,t.jsx)(s.p,{children:"This method returns true if data series should be summed when calculating data range for the chart."})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>l});var t=r(96540);const n={},a=t.createContext(n);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);