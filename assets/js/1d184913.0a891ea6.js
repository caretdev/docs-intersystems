"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[17490],{83826:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,toc:()=>d});var n=t(74848),r=t(28453);const a={pagination_prev:null,pagination_next:null},i="%Net.SMTP",d=[{value:"Parameters",id:"parameters",level:2},{value:"Base64Seq",id:"base64seq",level:3},{value:"PrintableAscii",id:"printableascii",level:3},{value:"Properties",id:"properties",level:2},{value:"localhost",id:"localhost",level:3},{value:"port",id:"port",level:3},{value:"smtpserver",id:"smtpserver",level:3},{value:"SSLConfiguration",id:"sslconfiguration",level:3},{value:"UseSTARTTLS",id:"usestarttls",level:3},{value:"SSLCheckServerIdentity",id:"sslcheckserveridentity",level:3},{value:"IgnoreFailedAuth",id:"ignorefailedauth",level:3},{value:"timezone",id:"timezone",level:3},{value:"ShowBcc",id:"showbcc",level:3},{value:"authenticator",id:"authenticator",level:3},{value:"AuthFrom",id:"authfrom",level:3},{value:"AllowHeaderEncoding",id:"allowheaderencoding",level:3},{value:"Error",id:"error",level:3},{value:"ContinueAfterBadSend",id:"continueafterbadsend",level:3},{value:"FailedSend",id:"failedsend",level:3},{value:"IPVersion",id:"ipversion",level:3},{value:"Status",id:"status",level:3},{value:"HeaderCharset",id:"headercharset",level:3},{value:"HeaderTable",id:"headertable",level:3},{value:"bufcount",id:"bufcount",level:3},{value:"Debug",id:"debug",level:3},{value:"Methods",id:"methods",level:2},{value:"portGet",id:"portget",level:3},{value:"GetResponse",id:"getresponse",level:3},{value:"GetEmail",id:"getemail",level:3},{value:"Send",id:"send",level:3},{value:"SendMessage",id:"sendmessage",level:3},{value:"Login",id:"login",level:3},{value:"WriteHeader",id:"writeheader",level:3},{value:"EncodeStructuredHeader",id:"encodestructuredheader",level:3},{value:"EncodeQuotedHeader",id:"encodequotedheader",level:3},{value:"EncodeQuotedHeaderPart",id:"encodequotedheaderpart",level:3},{value:"EncodeHeaderPart",id:"encodeheaderpart",level:3},{value:"endJISInASCII",id:"endjisinascii",level:3},{value:"extractJIStext",id:"extractjistext",level:3},{value:"EncodeQ",id:"encodeq",level:3},{value:"EncodeB",id:"encodeb",level:3},{value:"SetHeaderCharset",id:"setheadercharset",level:3},{value:"UnexpectedResponse",id:"unexpectedresponse",level:3},{value:"zone",id:"zone",level:3},{value:"pad2",id:"pad2",level:3},{value:"GetStatus",id:"getstatus",level:3},{value:"SetStatus",id:"setstatus",level:3},{value:"zzErrorTrap",id:"zzerrortrap",level:3},{value:"OutputNoEncoding",id:"outputnoencoding",level:3},{value:"EncodeStreamBase64",id:"encodestreambase64",level:3},{value:"Base64Encode",id:"base64encode",level:3},{value:"ProcessLine",id:"processline",level:3},{value:"SendMultiPart",id:"sendmultipart",level:3},{value:"IsPartEmpty",id:"ispartempty",level:3},{value:"SendMessagePart",id:"sendmessagepart",level:3},{value:"EncodeStreamQuotedPrintable",id:"encodestreamquotedprintable",level:3},{value:"EncodeXtext",id:"encodextext",level:3},{value:"AppendToOutput",id:"appendtooutput",level:3},{value:"IsAscii",id:"isascii",level:3}];function l(e){const s={a:"a",addr:"addr",br:"br",code:"code",em:"em",email:"email",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"netsmtp",children:"%Net.SMTP"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Net.SMTP Extends %RegisteredObject [ System = 3 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"For information on using this class"}),", see ",(0,n.jsx)(s.a,{href:"/csp/docbook/DocBook.UI.Page.cls?FIND=CLASSES+%25Net.SMTP",children:"Sending and Receiving Email"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Send a SMTP mail message"}),"\n",(0,n.jsx)(s.p,{children:"The Charset property of each %Net.MailMessagePart determines the charset for text MIME parts. The charset property is ignored unless ContentType=text/... Charset sets the Character Set for the content-type header. IMPORTANT: Charset must be set before any data is written to the TextData stream associated with this %Net.MailMessagePart. The Charset may also be initialized when the message is created by ##Class(%Net.MailMessagePart).%New(charset) or ##Class(%Net.MailMessage).%New(charset). For Unicode locale, the default Charset for ##Class(%Net.SMTP).%New() is utf-8."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'#include %occOptions #include %occStatus testmailsend3 ; ; Replace information marked with [[ ]] new attached,err,m,nestedm,s,status set s=##class(%Net.SMTP).%New() set s.smtpserver=[["SMTP server name"]] set s.timezone=[["-0400"]] may remove this line to get Universal Time set m=##class(%Net.MailMessage).%New() set m.From=[["test@company.com"]] // Either address with name or just email address supported. do m.To.Insert([["receiver@another.com"]]) do m.To.Insert([["Joe Smith <jsmith@another.com>"]]) write !,"s.port="_s.port write !,"s.localhost="_s.localhost set m.Subject="Sent by InterSystems IRIS mail" set m.Charset="iso-8859-1" set status=m.TextData.Write("This is the main body.") if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit set status=m.TextData.Write($char(13,10)) if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit set status=m.TextData.Write("This is the second line.") if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit set status=m.TextData.Write($char(13,10)) if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit set status=m.AttachFile("c:\\winnt","notepad.exe") if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit // Attach a text file with charset=iso-8859-1 set status=m.AttachFile("d:\\temp","test.txt",0,"iso-8859-1") if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit set nestedm=m.AttachNewMessage() // Attach a binary file set status=nestedm.AttachFile("c:\\irissys\\bin","test.bin") if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit write !,"m.Parts.Count()="_m.Parts.Count() write !,"m.Parts.GetAt(3).Parts.GetAt(1).FileName="_m.Parts.GetAt(3).Parts.GetAt(1).FileName write !,"m.Parts.GetAt(3).Parts.Count()="_m.Parts.GetAt(3).Parts.Count() set status=s.Send(m) if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit'})}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"base64seq",children:"Base64Seq"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter Base64Seq = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";\n'})}),"\n",(0,n.jsx)(s.h3,{id:"printableascii",children:"PrintableAscii"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter PrintableAscii = " !""""#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";\n'})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"localhost",children:"localhost"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property localhost As %String(TRUNCATE = 1) [ InitialExpression = {$ZU(110)} ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The sending host, default is $ZU(110)."}),"\n",(0,n.jsx)(s.h3,{id:"port",children:"port"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property port As %String(MAXLEN = 100, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:"The port of the SMTP server, the default is 25 for plain text and 465 for SSL."}),"\n",(0,n.jsx)(s.h3,{id:"smtpserver",children:"smtpserver"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property smtpserver As %String(MAXLEN = 100, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:"the name of the SMTP server"}),"\n",(0,n.jsx)(s.h3,{id:"sslconfiguration",children:"SSLConfiguration"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SSLConfiguration As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The name of the activated TLS/SSL configuration to use for smpts requests."}),"\n",(0,n.jsx)(s.h3,{id:"usestarttls",children:"UseSTARTTLS"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property UseSTARTTLS As %Boolean;\n"})}),"\n",(0,n.jsx)(s.p,{children:"If true then the STARTTLS extension to SMTP (RFC 3207) should be used to authenticate to the SMTP server on the normal SMTP port. The SSLConfiguration must be specified."}),"\n",(0,n.jsx)(s.h3,{id:"sslcheckserveridentity",children:"SSLCheckServerIdentity"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SSLCheckServerIdentity As %Boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"When making an SSL connection check the server identity in the server certificate matches the name of the system we are connecting to. This defaults to being on and matches based on the rules layed out in section 3.1 of RFC 2818."}),"\n",(0,n.jsx)(s.h3,{id:"ignorefailedauth",children:"IgnoreFailedAuth"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property IgnoreFailedAuth As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"If false (as is the default), Send() will fail if there is an authenticator present but authentication with the server fails. If true, Send() will ignore a failure to authenticate and proceed with sending without authentication. If no authenticator is present, authentication is never attempted and so this property is ignored."}),"\n",(0,n.jsx)(s.h3,{id:"timezone",children:"timezone"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property timezone As %String(MAXLEN = 100, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:'timezone as specified by RFC822, for example "EST", "PDT", "-0400". If timezone is "LOCAL", then the local timezone expressed as "+nnnn" or "-nnnn" is used. If timezone is not set, then "UT" is used for the timezone and universal time is used in the message.'}),"\n",(0,n.jsx)(s.h3,{id:"showbcc",children:"ShowBcc"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ShowBcc As %Boolean;\n"})}),"\n",(0,n.jsx)(s.p,{children:"If ShowBcc = true (1), then Bcc headers will be written to the email message. The Bcc headers will usually be filtered out by the SMTP server."}),"\n",(0,n.jsx)(s.h3,{id:"authenticator",children:"authenticator"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property authenticator As %Net.Authenticator;\n"})}),"\n",(0,n.jsxs)(s.p,{children:["To do SMTP authentication with the SMTP server (as defined by RFC 2554), instantiate a %Net.Authenticator object, set UserName and Password properties of the authenticator and assign it to this property. An example of the use of authenticator follows. ",(0,n.jsx)(s.code,{children:'#include %occOptions #include %occStatus authtestmailsend ; ; Replace information marked with [[ ]] new auth,m,s,status set s=##class(%Net.SMTP).%New() set auth=##class(%Net.Authenticator).%New() ; use default authentication list set auth.UserName=[["myUser"]] set auth.Password=[["myPassword"]] set s.authenticator=auth set s.smtpserver=[["SMTP server name"]] set s.timezone=[["-0400"]] may remove this line to get Universal Time set m=##class(%Net.MailMessage).%New() set m.From=[["test@company.com"]] do m.To.Insert([["receiver@another.com"]]) do m.To.Insert([["Joe Smith <jsmith@another.com>"]]) set m.Subject="Sent by InterSystems IRIS mail" set m.Charset="iso-8859-1" do m.TextData.Write("This message has been sent using an SMTP server with Authentication.") set status=s.Send(m) if $$$ISERR(status) do $system.OBJ.DisplayError(status) quit'})]}),"\n",(0,n.jsx)(s.h3,{id:"authfrom",children:"AuthFrom"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AuthFrom As %String(MAXLEN = 255, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:'AuthFrom specifies the address to be used for the AUTH parameter of the MAIL FROM SMTP command for SMTP authenticated session. If specified, this property will be the argument of the AUTH= extension to the MAIL FROM command. This property may be specified as "<>" to indicate that the original submitter of the messge is not known.'}),"\n",(0,n.jsx)(s.h3,{id:"allowheaderencoding",children:"AllowHeaderEncoding"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property AllowHeaderEncoding As %Boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"If true, the Send method will encode non-ASCII header text according to the rules specified by RFC 2047. This is the default. Some mail readers do not accept the encoding specified by RFC 2047 and thus we allow disabling this encoding by setting AllowHeaderEncoding=false."}),"\n",(0,n.jsx)(s.h3,{id:"error",children:"Error"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Error As %String(MAXLEN = 255, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:"If Send is called and returns an error status, the error message is in the Error property."}),"\n",(0,n.jsx)(s.h3,{id:"continueafterbadsend",children:"ContinueAfterBadSend"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ContinueAfterBadSend As %Boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"If true, sending the email will continue if a send fails and failed email addresses will be added to the FailedSend list."}),"\n",(0,n.jsx)(s.h3,{id:"failedsend",children:"FailedSend"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property FailedSend As list Of %String(MAXLEN = 8000, TRUNCATE = 1);\n"})}),"\n",(0,n.jsx)(s.p,{children:"A list of email addresses for which the Send failed. If the Send for any address is successful, then a %Status of $$$OK is returned by Send and this list contains any failed addresses. If Send is not successful for any email address, then an %Status of $$$SMTPNoSend and all address on this list. Use (sender.FailedSend.Count()=0) to test if all sends succeeded."}),"\n",(0,n.jsx)(s.h3,{id:"ipversion",children:"IPVersion"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property IPVersion As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["IPVersion specifies the versin of IP address to be used to connect SMTP server. The valid values are:",(0,n.jsx)(s.br,{}),"\n0 - Try to connect with IPV4 first if failed then try it again with IPV6.",(0,n.jsx)(s.br,{}),"\n4 - Connect to SMTP server with IPV4 address.",(0,n.jsx)(s.br,{}),"\n6 - Connect to SMTP server with IPV6 address.",(0,n.jsx)(s.br,{}),"\nAll other values are treated as 0."]}),"\n",(0,n.jsx)(s.h3,{id:"status",children:"Status"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Status As %Status [ Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The %Status to be returned by send. Do not set directly, use SetStatus."}),"\n",(0,n.jsx)(s.h3,{id:"headercharset",children:"HeaderCharset"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property HeaderCharset As %String(TRUNCATE = 1) [ Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The charset to be used for header fields"}),"\n",(0,n.jsx)(s.h3,{id:"headertable",children:"HeaderTable"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property HeaderTable As %String(TRUNCATE = 1) [ Internal, Private ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"The translate table to be used for header fields"}),"\n",(0,n.jsx)(s.h3,{id:"bufcount",children:"bufcount"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property bufcount As %Integer [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(s.h3,{id:"debug",children:"Debug"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Debug As %Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"portget",children:"portGet"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method portGet() As %String [ CodeMode = expression, Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Default port is 25 for plain text and 465 for SSL."}),"\n",(0,n.jsx)(s.h3,{id:"getresponse",children:"GetResponse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetResponse(timeout As %Integer, ByRef responseArray As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get response to mail command. Use timeout as specified by RFC1123."}),"\n",(0,n.jsx)(s.h3,{id:"getemail",children:"GetEmail"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetEmail(s As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Get the email part of a full address."}),"\n",(0,n.jsx)(s.h3,{id:"send",children:"Send"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Send(msg As %Net.MailMessage) As %Status [ ProcedureBlock = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Used to send msg to SMTP server."}),"\n",(0,n.jsx)(s.p,{children:"Returns a %Status to indicate success or failure."}),"\n",(0,n.jsx)(s.p,{children:"The send supports the following small subset of permissible message header fields. Set the corresponding MailMessage properties before invoking send."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Date - set from msg.Date; will be set to the current date and time if not specified"}),"\n",(0,n.jsx)(s.li,{children:"From - set from msg.From"}),"\n",(0,n.jsx)(s.li,{children:"Subject - set from msg.Subject"}),"\n",(0,n.jsx)(s.li,{children:'To - set from msg.To by converting to "," separated list'}),"\n",(0,n.jsx)(s.li,{children:'Cc - optionally set from msg.Cc by converting to "," separated list'}),"\n",(0,n.jsx)(s.li,{children:'Bcc - optionally set from msg.Bcc by converting to "," separated list'}),"\n",(0,n.jsx)(s.li,{children:"Sender - optionally set from msg.Sender"}),"\n",(0,n.jsx)(s.li,{children:"Reply-To - optionally set from msg.ReplyTo"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:['The "MAIL FROM:" SMTP command uses the Sender field if specified, otherwise the From field.',(0,n.jsx)(s.br,{}),'\nThe "RCPT TO:" SMTP command uses the To and Cc lists joined by commas.',(0,n.jsx)(s.br,{}),"\nsimple e-mail address must be passed to MAIL and RCPT. Therefore if the address is of the form ",(0,n.jsxs)(s.em,{children:["name ",(0,n.jsx)(s.email,{})]}),", the value passed to the SMTP command is just ",(0,n.jsx)(s.em,{children:"email"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"sendmessage",children:"SendMessage"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SendMessage(msg As %Net.MailMessage) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Send the mail message data to the SMTP server"}),"\n",(0,n.jsx)(s.h3,{id:"login",children:"Login"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Login(ByRef authenticated As %Boolean) [ ProcedureBlock = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Setup session with the SMTP server. We will use the EHLO command and SMTP authentication as supplied by the authenticator property where possible. If EHLO is not accepted or authentication fails, we will attempt to use the HELO command."}),"\n",(0,n.jsx)(s.h3,{id:"writeheader",children:"WriteHeader"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method WriteHeader(name As %String, text As %String) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Encode headers according to rules in RFC 2045."}),"\n",(0,n.jsx)(s.h3,{id:"encodestructuredheader",children:"EncodeStructuredHeader"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeStructuredHeader(header As %String, input As %String, keywords As %Boolean) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Handle of large subset of encoding required for structured headers in RFC 2045.",(0,n.jsx)(s.br,{}),"\nReturn the encoded header.",(0,n.jsx)(s.br,{}),"\nThe following formats are supported:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["address comma separated list: display [",(0,n.jsx)(s.addr,{children:"],..."})]}),"\n",(0,n.jsxs)(s.li,{children:["message id (not comma separated list: ",(0,n.jsx)(s.addr,{children:" .."})]}),"\n",(0,n.jsxs)(s.li,{children:["keyword comma separated list: display, ...\nkeyword list is different from address list because display part",(0,n.jsx)(s.br,{}),"\nof address list part is considered an address if no address is specified.",(0,n.jsx)(s.br,{}),"\nParenthesized comments are not supported for any of these formats."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"encodequotedheader",children:"EncodeQuotedHeader"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeQuotedHeader(header As %String, input As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Handle the structured headers in RFC 2045 that contain quoted strings which may be encoded, but no other part of the header is encoded.",(0,n.jsx)(s.br,{}),"\nReturn the encoded header."]}),"\n",(0,n.jsx)(s.h3,{id:"encodequotedheaderpart",children:"EncodeQuotedHeaderPart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeQuotedHeaderPart(input As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Handle the ; separated parts of the structured headers in RFC 2045 that contain quoted strings which may be encoded, but no other part of the header is encoded.",(0,n.jsx)(s.br,{}),"\nReturn the encoded header part."]}),"\n",(0,n.jsx)(s.h3,{id:"encodeheaderpart",children:"EncodeHeaderPart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Method EncodeHeaderPart(header As %String, part As %String, addr As %String, first As %Boolean, termChar As %String, sepChar As %String = " ") As %String [ Private ]\n'})}),"\n",(0,n.jsx)(s.h3,{id:"endjisinascii",children:"endJISInASCII"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method endJISInASCII(input As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Force JIS string to end in ASCII mode per RFC 1468."}),"\n",(0,n.jsx)(s.h3,{id:"extractjistext",children:"extractJIStext"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method extractJIStext(len As %Integer, ByRef text As %String, ByRef JIStext As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Extract and base64 encode enough JIS text to fill out the available space on this line."}),"\n",(0,n.jsx)(s.h3,{id:"encodeq",children:"EncodeQ"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeQ(input As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Encode header using special quoted printable encoding defined in RFC 2045 for header fields."}),"\n",(0,n.jsx)(s.h3,{id:"encodeb",children:"EncodeB"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeB(input As %String) As %String [ CodeMode = expression, Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Encode header using base64 encoding"}),"\n",(0,n.jsx)(s.h3,{id:"setheadercharset",children:"SetHeaderCharset"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetHeaderCharset(msg As %Net.MailMessagePart) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Find the translate table for any non ASCII headers"}),"\n",(0,n.jsx)(s.h3,{id:"unexpectedresponse",children:"UnexpectedResponse"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method UnexpectedResponse(msg As %String, response As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Generate message for unexpected response."}),"\n",(0,n.jsx)(s.h3,{id:"zone",children:"zone"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method zone() As %String\n"})}),"\n",(0,n.jsx)(s.p,{children:"Return timezone converted to RFC822 format"}),"\n",(0,n.jsx)(s.h3,{id:"pad2",children:"pad2"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method pad2(n As %String) As %String [ CodeMode = expression, Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Return integer or hex padded to 2 place with leading zeros"}),"\n",(0,n.jsx)(s.h3,{id:"getstatus",children:"GetStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetStatus() As %Status [ CodeMode = expression, Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Return %Status object"}),"\n",(0,n.jsx)(s.h3,{id:"setstatus",children:"SetStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetStatus(status As %Status) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set Status for Send function."}),"\n",(0,n.jsx)(s.h3,{id:"zzerrortrap",children:"zzErrorTrap"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method zzErrorTrap() As %String [ CodeMode = generator, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Error trap"}),"\n",(0,n.jsx)(s.h3,{id:"outputnoencoding",children:"OutputNoEncoding"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method OutputNoEncoding(stream As %Stream.Object) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Output stream to SMTP server with no encoding"}),"\n",(0,n.jsx)(s.h3,{id:"encodestreambase64",children:"EncodeStreamBase64"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeStreamBase64(stream As %Stream.Object) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Output stream to SMTP server with base64 encoding"}),"\n",(0,n.jsx)(s.h3,{id:"base64encode",children:"Base64Encode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Base64Encode(b1 As %String, b2 As %String, b3 As %String) As %String [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Base64 encode a string."}),"\n",(0,n.jsx)(s.h3,{id:"processline",children:"ProcessLine"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ProcessLine(line As %String) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Send as many lines together as will fit in 512 byte buffer"}),"\n",(0,n.jsx)(s.h3,{id:"sendmultipart",children:"SendMultiPart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SendMultiPart(msg As %Net.MailMessagePart, boundary As %String) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Send a, possibly multi-part, message part,"}),"\n",(0,n.jsx)(s.h3,{id:"ispartempty",children:"IsPartEmpty"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method IsPartEmpty(msg As %Net.MailMessagePart) As %Boolean [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Check if message part is empty"}),"\n",(0,n.jsx)(s.h3,{id:"sendmessagepart",children:"SendMessagePart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SendMessagePart(msg As %Net.MailMessagePart) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Send a single (non multi-part message part."}),"\n",(0,n.jsx)(s.h3,{id:"encodestreamquotedprintable",children:"EncodeStreamQuotedPrintable"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeStreamQuotedPrintable(stream As %Stream.Object) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Encode a stream as quoted printable and output the stream."}),"\n",(0,n.jsx)(s.h3,{id:"encodextext",children:"EncodeXtext"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method EncodeXtext(text As %String) As %String [ ProcedureBlock = 1 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"xtext encoding is defined in RFC 1891 as:"}),"\n",(0,n.jsxs)(s.p,{children:['"xtext" is formally defined as follows:',(0,n.jsx)(s.br,{}),"\nxtext = *( xchar / hexchar )",(0,n.jsx)(s.br,{}),'\nxchar = any ASCII CHAR between "!" (33) and "~" (126) inclusive, except for "+" and "=".',(0,n.jsx)(s.br,{}),'\n;"hexchar"s are intended to encode octets that cannot appear',(0,n.jsx)(s.br,{}),'\n;as ASCII characters within an esmtp-value. hexchar = ASCII "+" immediately followed by two upper case hexadecimal digits']}),"\n",(0,n.jsx)(s.h3,{id:"appendtooutput",children:"AppendToOutput"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method AppendToOutput(ByRef out As %String, str As %String) [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Append to current output line. If the line becomes longer than 75 charcaters, then start a new line."}),"\n",(0,n.jsx)(s.h3,{id:"isascii",children:"IsAscii"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod IsAscii(stream As %Stream.Object) As %Integer [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Scan text to see if any non-ascii chars"})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>d});var n=t(96540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);