"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[67074],{96117:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>l,frontMatter:()=>a,toc:()=>o});var r=n(74848),s=n(28453);const a={pagination_prev:null,pagination_next:null},i="%ZEN.proxyObject",o=[{value:"Properties",id:"properties",level:2},{value:"%changed",id:"changed",level:3},{value:"%index",id:"index",level:3},{value:"%data",id:"data",level:3},{value:"Methods",id:"methods",level:2},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchSetProperty",id:"dispatchsetproperty",level:3},{value:"%Clear",id:"clear",level:3},{value:"%CopyToArray",id:"copytoarray",level:3},{value:"%CopyFromArray",id:"copyfromarray",level:3},{value:"%ZENDeserialize",id:"zendeserialize",level:3},{value:"%ObjectSynch",id:"objectsynch",level:3},{value:"%Serialize",id:"serialize",level:3},{value:"%Create",id:"create",level:3},{value:"hasJSONContent",id:"hasjsoncontent",level:3},{value:"%ToJSON",id:"tojson",level:3},{value:"%Print",id:"print",level:3},{value:"Enumerate",id:"enumerate",level:3},{value:"DeleteDocument",id:"deletedocument",level:3},{value:"DocumentExists",id:"documentexists",level:3},{value:"OpenDocument",id:"opendocument",level:3},{value:"OpenEmbeddedDocument",id:"openembeddeddocument",level:3},{value:"SaveDocument",id:"savedocument",level:3},{value:"loadObject",id:"loadobject",level:3},{value:"loadList",id:"loadlist",level:3}];function c(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"zenproxyobject",children:"%ZEN.proxyObject"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %ZEN.proxyObject Extends %RegisteredObject [ Deprecated, Final, System = 3 ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The Zen Proxy class provides a way to assemble data that can be conveniently passed between the web client and the server. It works in conjunction with the ",(0,r.jsx)(t.strong,{children:"zenProxy"})," JavaScript class defined in ",(0,r.jsx)(t.em,{children:"zenutils.js"}),". The ",(0,r.jsx)(t.strong,{children:"zenProxy"})," class is the client-side representation of the server-side %ZEN.proxyObject class and vice versa.",(0,r.jsx)(t.br,{}),"\nThe %ZEN.proxyObject class is useful for cases where you do not know what run-time properties will exist when you are designing your application (perhaps it is user-configurable).",(0,r.jsx)(t.br,{}),"\nThe proxy class can be used in several ways. You can use it to send an arbitrary set of data values from the client to a server-side method. To do this, create an instance of ",(0,r.jsx)(t.strong,{children:"zenProxy"})," in a client-side JavaScript method: ",(0,r.jsx)(t.code,{children:"// create instance of zenProxy var obj = new zenProxy(); obj.name = 'Smith'; obj.code = 'CRM114';"})," The ",(0,r.jsx)(t.strong,{children:"zenProxy"})," object is basically a generic JavaScript object with a few pre-defined behaviors. You can dynamically add properties to it simply by setting them. These properties should have ",(0,r.jsx)(t.em,{children:"literal"})," values, that is, they should not refer to other JavaScript objects.",(0,r.jsx)(t.br,{}),"\nIf you define a server-side ZenMethod whose signature includes an argument of type %ZEN.proxyObject, then you can invoke this method from the client passing it an instance of a ",(0,r.jsx)(t.strong,{children:"zenProxy"})," object. Zen will automatically marshal the values in the ",(0,r.jsx)(t.strong,{children:"zenProxy"})," object into an instance of the %ZEN.proxyObject object.",(0,r.jsx)(t.br,{}),"\nFor example, suppose you have defined a server method: ",(0,r.jsx)(t.code,{children:"ClassMethod MyMethod(pProxy as %ZEN.proxyObject) As %Boolean [ZenMethod] { Set tName = pProxy.name Set tCode = pProxy.code Quit 1 }"})," The client can invoke this method as it would any other Zen method, passing an instance of ",(0,r.jsx)(t.strong,{children:"zenProxy"})," as the pProxy argument: ",(0,r.jsx)(t.code,{children:"var obj = new zenProxy(); obj.name = 'Smith'; obj.code = 'CRM114'; var ok = this.MyMethod(obj);"})," The MyMethod method will see the values 'Smith' and 'CRM114' for the properties name and code, respectively.",(0,r.jsx)(t.br,{}),"\nYou can also use the %ZEN.proxyObject class to pass values from a server method back to the client. To do this, create a server method whose return type is %ZEN.proxyObject: ",(0,r.jsx)(t.code,{children:'ClassMethod GetServerInfo() As %ZEN.proxyObject [ZenMethod] { Set tProxy = ##class(%ZEN.proxyObject).%New() Set tProxy.whatever = "Some server value" Quit tProxy }'})," The client can invoke this method and use its return value as an object: ",(0,r.jsx)(t.code,{children:"var obj = this.GetServerInfo(); alert(obj.whatever);"})," The %ZEN.proxyObject does not actually define any properties. Instead it maintains an internal array of property names along with their corresponding values and uses dynamic dispatch to handle references to specific properties. This means that there is no name checking for properties of %ZEN.proxyObject (the same behavior as JavaScript objects). You can remove the current set of properties within a %ZEN.proxyObject object using the %Clear method. You can find out what the current set of properties is (as a local array) or supply a new set using the %CopyToArray and %CopyFromArray methods.",(0,r.jsx)(t.br,{}),"\nThe client-side ",(0,r.jsx)(t.strong,{children:"zenProxy"})," class defines only one public method, clear, which deletes the current set of properties from the object. In all other ways, you can treat is an instance of JavaScript ",(0,r.jsx)(t.strong,{children:"Object"}),".",(0,r.jsx)(t.br,{}),"\nYou can get the set of values within a %ZEN.Auxiliary.dataController objects using its getDataAsObject method.",(0,r.jsx)(t.br,{}),"\nWhen using the %ZEN.proxyObject class keep the following things in mind:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"All properties must have literal values (numbers or strings)."}),"\n",(0,r.jsxs)(t.li,{children:['You have to use property names that are valid in both the client and server environments. This means that names have to agree in case. It also means that you cannot have two properties with the same name but different case.\nNote that %ZEN.proxyObject DOES support various property names that are valid in Javascript but were not traditionally valid Objectscript property names. In general, these property names include symbols like "$" and "_" that are relatively common in Javascript. To reference such a property in a %ZEN.proxyObject instance, simply delimit the property name using quotes: ',(0,r.jsx)(t.code,{children:'Set myProperty = tProxy."my_property" Set tProxy."$$foo" = "bar"'})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"changed",children:"%changed"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %changed As %ZEN.Datatype.boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Internal property used to track if this object is modified."}),"\n",(0,r.jsx)(t.h3,{id:"index",children:"%index"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %index As %ZEN.Datatype.integer(XMLPROJECTION = "NONE") [ Internal ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Internal property used to client index of this object."}),"\n",(0,r.jsx)(t.h3,{id:"data",children:"%data"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property %data As %ZEN.Datatype.string(XMLPROJECTION = "NONE") [ Internal, MultiDimensional ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Internal array of data values within the proxy, indexed by series and property name."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(pProperty As %String) [ Final, Internal ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Property dispatch method to catch references to virtual properties.",(0,r.jsx)(t.br,{}),"\nThis should not be called directly."]}),"\n",(0,r.jsx)(t.h3,{id:"dispatchsetproperty",children:"%DispatchSetProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchSetProperty(pProperty As %String, pValue As %String) [ Final, Internal ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Property dispatch method to catch references to virtual properties.",(0,r.jsx)(t.br,{}),"\nThis should not be called directly."]}),"\n",(0,r.jsx)(t.h3,{id:"clear",children:"%Clear"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Clear() [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Delete all properties and data currently in the proxy object."}),"\n",(0,r.jsx)(t.h3,{id:"copytoarray",children:"%CopyToArray"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CopyToArray(Output pArray) [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Copy the properties in this proxyObject into a local array subscripted by property name."}),"\n",(0,r.jsx)(t.h3,{id:"copyfromarray",children:"%CopyFromArray"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %CopyFromArray(ByRef pArray) [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Copy the values from a local array (subscripted by property name) into this proxyObject."}),"\n",(0,r.jsx)(t.h3,{id:"zendeserialize",children:"%ZENDeserialize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ZENDeserialize(pState As %String, ByRef pObjSet) As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"objectsynch",children:"%ObjectSynch"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ObjectSynch() As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Synchronize this object with its client version."}),"\n",(0,r.jsx)(t.h3,{id:"serialize",children:"%Serialize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Serialize() As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Serialize this object so that it can be shipped to the client."}),"\n",(0,r.jsx)(t.h3,{id:"create",children:"%Create"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %Create(pState As %String) As %ZEN.proxyObject [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:'Given a string from the client, see if it contains a packed representation of a proxyObject. If it does, unpack and return a new object, otherwise return "".'}),"\n",(0,r.jsx)(t.h3,{id:"hasjsoncontent",children:"hasJSONContent"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method hasJSONContent(pFormat As %String) As %Boolean [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Drill down just enough to find out if the object has any content displayable as JSON given the current pFormat options"}),"\n",(0,r.jsx)(t.h3,{id:"tojson",children:"%ToJSON"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method %ToJSON(pLevel As %Integer = 0, pFormat As %String = "aelotw") As %Status [ Internal ]\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Write out the contents of this proxy object to the current device in JSON format.",(0,r.jsx)(t.br,{}),"\nThis method is called when a proxy object is used in conjunction with the %ZEN.Auxiliary.jsonProvider component.",(0,r.jsx)(t.br,{}),"\npFormat is a flags string to control output formatting options.",(0,r.jsx)(t.br,{}),"\nThe following character option codes are supported:",(0,r.jsx)(t.br,{}),"\n1-9 : indent with this number of spaces (4 is the default with the 'i' format specifier)",(0,r.jsx)(t.br,{}),"\na - output null arrays/objects",(0,r.jsx)(t.br,{}),"\nb - line break before opening { of objects",(0,r.jsx)(t.br,{}),'\nc - output the ObjectScript-specific "_class" and "_id" properties (if a child property is an instance of a concrete object class)',(0,r.jsx)(t.br,{}),"\ne - output empty object properties",(0,r.jsx)(t.br,{}),"\ni - indent with 4 spaces unless 't' or 1-9",(0,r.jsx)(t.br,{}),"\nl - output empty lists",(0,r.jsx)(t.br,{}),"\nn - newline (lf)",(0,r.jsx)(t.br,{}),"\no - output empty arrays/objects",(0,r.jsx)(t.br,{}),"\nq - output numeric values unquoted even when they come from a non-numeric property",(0,r.jsx)(t.br,{}),"\ns - use strict JSON output - ",(0,r.jsx)(t.strong,{children:"NOTE:"})," special care should be taken when sending data to a browser, as using this flag may expose you to cross site scripting (XSS) vulnerabilities if the data is sent inside ",(0,r.jsx)(t.code,{children:"<script>"})," tags. Zen uses this technique extensively, so this flag should ",(0,r.jsx)(t.strong,{children:"NOT"})," be specified for jsonProviders in Zen pages.",(0,r.jsx)(t.br,{}),"\nt - indent with tab character",(0,r.jsx)(t.br,{}),"\nu - output pre-converted to UTF-8 instead of in native internal format",(0,r.jsx)(t.br,{}),"\nw - Windows-style cr/lf newline"]}),"\n",(0,r.jsx)(t.h3,{id:"print",children:"%Print"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Print(pLevel As %Integer = 0) [ Internal ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Utility method.",(0,r.jsx)(t.br,{}),"\nPrint out contents of this proxy object to the current device."]}),"\n",(0,r.jsx)(t.h3,{id:"enumerate",children:"Enumerate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Enumerate(Client As %ZEN.proxyObjectEnumeratee, pLevel As %Integer = 0) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Enumerate the contents of this proxy object, calling Client for each node"}),"\n",(0,r.jsx)(t.h3,{id:"deletedocument",children:"DeleteDocument"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod DeleteDocument(pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string = "") As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"DeleteDocument will delete a document identified by ID from the specified global or local variable reference (GLVN). If a document with the specified ID does not exist in that GLVN then DeleteDocument will return an error in the returned %Status value."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameters"}),(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{children:"pWhere"}),(0,r.jsx)(t.th,{children:"Input"}),(0,r.jsx)(t.th,{children:"Global or local variable reference. This is the location from where the proxyObject instance will be deleted."})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pDocumentID"}),(0,r.jsx)(t.td,{children:"Input"}),(0,r.jsx)(t.td,{children:"The document ID."}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"documentexists",children:"DocumentExists"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod DocumentExists(pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string = "") As %ZEN.Datatype.boolean\n'})}),"\n",(0,r.jsx)(t.p,{children:"DocumentExists() returns a boolean value indicate whether or not the documentID exists in the global/local variable reference (GLVN)."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameters"}),(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{children:"pWhere"}),(0,r.jsx)(t.th,{children:"Input"}),(0,r.jsx)(t.th,{children:"Global or local variable reference where documents are stored."})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pDocumentID"}),(0,r.jsx)(t.td,{children:"Input"}),(0,r.jsx)(t.td,{children:"The document ID."}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"opendocument",children:"OpenDocument"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod OpenDocument(pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string, Output pStatus As %Status = "") As %ZEN.proxyObject\n'})}),"\n",(0,r.jsx)(t.p,{children:"OpenDocument will retrieve a previously saved document from the specified global or local variable reference (GLVN) with the specified pDocumentID and return an oref referencing an instance of %ZEN.proxyObject. If a document with the specified ID does not exist in that GLVN then OpenDocument will return an error in the output pStatus parameter."}),"\n",(0,r.jsx)(t.p,{children:"Parameters"}),"\n",(0,r.jsx)(t.p,{children:"pWhere"}),"\n",(0,r.jsx)(t.p,{children:"Input"}),"\n",(0,r.jsx)(t.p,{children:"Global or local variable reference. This is the location where the proxyObject instance will be saved."}),"\n",(0,r.jsx)(t.p,{children:"pDocumentID"}),"\n",(0,r.jsx)(t.p,{children:"Input"}),"\n",(0,r.jsx)(t.p,{children:"The ID of the document to be opened."}),"\n",(0,r.jsx)(t.p,{children:"pStatus"}),"\n",(0,r.jsx)(t.p,{children:"Output"}),"\n",(0,r.jsx)(t.p,{children:"The returned %Status value, indicating success or failure."}),"\n",(0,r.jsx)(t.h3,{id:"openembeddeddocument",children:"OpenEmbeddedDocument"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod OpenEmbeddedDocument(pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string, pObjectID As %ZEN.Datatype.string, Output pStatus As %Status = "") As %ZEN.proxyObject\n'})}),"\n",(0,r.jsx)(t.p,{children:"OpenEmbeddedDocument will retrieve a document embedded in a previously saved document from the specified global or local variable reference (GLVN) with the specified pDocumentID and return an oref referencing an instance of %ZEN.proxyObject. If a document with the specified documentID does not exist in that GLVN then OpenDocument will return an error in the output pStatus parameter. If an embedded document with the specified objectID does not exist in that GLVN then OpenDocument will return an error in the output pStatus parameter."}),"\n",(0,r.jsx)(t.p,{children:"Parameters"}),"\n",(0,r.jsx)(t.p,{children:"pWhere"}),"\n",(0,r.jsx)(t.p,{children:"Input"}),"\n",(0,r.jsx)(t.p,{children:"Global or local variable reference. This is the location where the proxyObject instance will be saved."}),"\n",(0,r.jsx)(t.p,{children:"pDocumentID"}),"\n",(0,r.jsx)(t.p,{children:"Input"}),"\n",(0,r.jsx)(t.p,{children:"The ID of the document containing the embedded document."}),"\n",(0,r.jsx)(t.p,{children:"pObjectID"}),"\n",(0,r.jsx)(t.p,{children:"Input"}),"\n",(0,r.jsx)(t.p,{children:"The objectID of the document embedded in the specified pDocumentID."}),"\n",(0,r.jsx)(t.p,{children:"pStatus"}),"\n",(0,r.jsx)(t.p,{children:"Output"}),"\n",(0,r.jsx)(t.p,{children:"The returned %Status value, indicating success or failure."}),"\n",(0,r.jsx)(t.h3,{id:"savedocument",children:"SaveDocument"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method SaveDocument(pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string = "") As %Status\n'})}),"\n",(0,r.jsx)(t.p,{children:"SaveDocument will save the proxyObject to a global or local variable reference (GLVN) with the specified pDocumentID. If a document with the same ID already exists in that GLVN then SaveDocument will return an error in the returned %Status value."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameters"}),(0,r.jsx)(t.th,{}),(0,r.jsx)(t.th,{children:"pWhere"}),(0,r.jsx)(t.th,{children:"Input"}),(0,r.jsx)(t.th,{children:"Global or local variable reference. This is the location where the proxyObject instance will be saved."})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pDocumentID"}),(0,r.jsx)(t.td,{children:"Input"}),(0,r.jsx)(t.td,{children:"The document ID. This value must be unique within the GLVN specified in pWhere."}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})})]}),"\n",(0,r.jsx)(t.h3,{id:"loadobject",children:"loadObject"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod loadObject(pObject As %Library.RegisteredObject, pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string, pObjectID As %ZEN.Datatype.integer, ByRef pOQ, ByRef pOREF) [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"loadlist",children:"loadList"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod loadList(pObject As %Collection.AbstractList, pWhere As %ZEN.Datatype.string, pDocumentID As %ZEN.Datatype.string, pObjectID As %ZEN.Datatype.integer, ByRef pOQ, ByRef pOREF) [ Internal ]\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(96540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);