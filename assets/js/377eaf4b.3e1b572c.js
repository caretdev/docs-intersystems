"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[56170],{15129:(e,s,r)=>{r.r(s),r.d(s,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,toc:()=>l});var n=r(74848),t=r(28453);const a={pagination_prev:null,pagination_next:null},i="Config.Startup",l=[{value:"Parameters",id:"parameters",level:2},{value:"PROPERTIESMAYBEINCPF",id:"propertiesmaybeincpf",level:3},{value:"Properties",id:"properties",level:2},{value:"CallinHalt",id:"callinhalt",level:3},{value:"CallinStart",id:"callinstart",level:3},{value:"CliSysName",id:"clisysname",level:3},{value:"DBSizesAllowed",id:"dbsizesallowed",level:3},{value:"DefaultPort",id:"defaultport",level:3},{value:"DefaultPortBindAddress",id:"defaultportbindaddress",level:3},{value:"EnableSharding",id:"enablesharding",level:3},{value:"EnableShardingPresent",id:"enableshardingpresent",level:3},{value:"EnableVSSBackup",id:"enablevssbackup",level:3},{value:"EnsembleAutoStart",id:"ensembleautostart",level:3},{value:"ErrorPurge",id:"errorpurge",level:3},{value:"FIPSMode",id:"fipsmode",level:3},{value:"IPv6",id:"ipv6",level:3},{value:"JobHalt",id:"jobhalt",level:3},{value:"JobServers",id:"jobservers",level:3},{value:"JobStart",id:"jobstart",level:3},{value:"LicenseID",id:"licenseid",level:3},{value:"MaxIRISTempSizeAtStart",id:"maxiristempsizeatstart",level:3},{value:"MaxConsoleLogSize",id:"maxconsolelogsize",level:3},{value:"PasswordHash",id:"passwordhash",level:3},{value:"ProcessHalt",id:"processhalt",level:3},{value:"ProcessStart",id:"processstart",level:3},{value:"ShutdownTimeout",id:"shutdowntimeout",level:3},{value:"SystemHalt",id:"systemhalt",level:3},{value:"SystemMode",id:"systemmode",level:3},{value:"SystemStart",id:"systemstart",level:3},{value:"TempDirectory",id:"tempdirectory",level:3},{value:"TerminalPrompt",id:"terminalprompt",level:3},{value:"WebServer",id:"webserver",level:3},{value:"WebServerName",id:"webservername",level:3},{value:"WebServerPort",id:"webserverport",level:3},{value:"WebServerProtocol",id:"webserverprotocol",level:3},{value:"WebServerSSLConfiguration",id:"webserversslconfiguration",level:3},{value:"WebServerURLPrefix",id:"webserverurlprefix",level:3},{value:"ZSTU",id:"zstu",level:3},{value:"Methods",id:"methods",level:2},{value:"Load",id:"load",level:3},{value:"InitCliSysName",id:"initclisysname",level:3},{value:"InitFIPSMode",id:"initfipsmode",level:3},{value:"ErrorPurge",id:"errorpurge-1",level:3},{value:"RestartWebServer",id:"restartwebserver",level:3},{value:"CheckWebServerStatus",id:"checkwebserverstatus",level:3},{value:"SetTerminalPrompt",id:"setterminalprompt",level:3},{value:"StopWebServer",id:"stopwebserver",level:3},{value:"SwitchConsoleLog",id:"switchconsolelog",level:3},{value:"MoveConsoleLog",id:"moveconsolelog",level:3},{value:"%OnAfterActivateCallback",id:"onafteractivatecallback",level:3},{value:"%OnBeforeSaveCallBack",id:"onbeforesavecallback",level:3},{value:"%OnValidateObject",id:"onvalidateobject",level:3},{value:"ChangePasswordHash",id:"changepasswordhash",level:3}];function o(e){const s={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"configstartup",children:"Config.Startup"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class Config.Startup Extends (%Persistent, Config.CommonSingleMethods, Config.CommonProperties, %SYSTEM.Help) [ Final, Inheritance = right, System = 4 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This class allows you to modify and view the [Startup] section of the CPF file through programmatic APIs. While properties are usually modified through the System Management portal, there may be some occasion where modifying them through the API's is best for your system. In all the Config methods, if you do not specify the CPFFile parameter, the currently active CPF file is used. If you wish to modify a CPF file which is not the currently active one, specify the CPF file you wish to modify in the method call.",(0,n.jsx)(s.br,{}),"\nThe Flags parameter does not normally need to be specified; the defaults are usually sufficient for most cases.",(0,n.jsx)(s.br,{}),"\nYou can use either the provided API's (Get/Modify) to modify the properties by passing in the correct parameters, or use Object syntax to open and directly manipulate the config objects."]}),"\n",(0,n.jsx)(s.p,{children:"EXAMPLE:"}),"\n",(0,n.jsxs)(s.p,{children:['; Use class methods to modify properties %SYS>s Status=##Class(Config.Startup).Get(.Properties) %SYS>i \'Status w !,"Error="',(0,n.jsx)(s.em,{children:'$SYSTEM.Status.GetErrorText(Status) %SYS>zw Properties("MaxConsoleLogSize") Properties("MaxConsoleLogSize")=5 %SYS>s Properties("MaxConsoleLogSize")=10 %SYS>s Status=##Class(Config.Startup).Modify(.Properties) %SYS>i \'Status w !,"Error="'}),'$SYSTEM.Status.GetErrorText(Status) ; Now use Objects to modify properties %SYS>s Obj=##Class(Config.Startup).Open() %SYS>w Obj.MaxConsoleLogSize 10 %SYS>s Obj.MaxConsoleLogSize=20 %SYS>s Status=Obj.%Save() %SYS>i \'Status w !,"Error="_$SYSTEM.Status.GetErrorText(Status)']}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"propertiesmaybeincpf",children:"PROPERTIESMAYBEINCPF"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter PROPERTIESMAYBEINCPF = "EnableSharding";\n'})}),"\n",(0,n.jsxs)(s.p,{children:["List of properties which may or may not be in the CPF file.",(0,n.jsx)(s.br,{}),'\nThey have a corresponding %Boolean property to determine if they are in the file or not. For example, the property "DebugFlags" has a %Boolean "DebugFlagsPresent" property associated with it.']}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"callinhalt",children:"CallinHalt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CallinHalt As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the CALLIN^%ZSTOP routine entry during calling Halt."}),"\n",(0,n.jsx)(s.h3,{id:"callinstart",children:"CallinStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CallinStart As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Executes the CALLIN^%ZSTART routine entry during Callin startup."}),"\n",(0,n.jsx)(s.h3,{id:"clisysname",children:"CliSysName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property CliSysName As %String(MAXLEN = 64, MINLEN = 0);\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name used to append to $J when Config.Miscellaneous.NodeNameInPid is set."}),"\n",(0,n.jsx)(s.h3,{id:"dbsizesallowed",children:"DBSizesAllowed"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property DBSizesAllowed As %String(MINLEN = 4) [ InitialExpression = "8192", Required ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Stores a list of allowed database block sizes."}),"\n",(0,n.jsx)(s.h3,{id:"defaultport",children:"DefaultPort"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultPort As %Integer [ InitialExpression = 1972, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Port for the Super Server."}),"\n",(0,n.jsx)(s.h3,{id:"defaultportbindaddress",children:"DefaultPortBindAddress"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property DefaultPortBindAddress As Config.Host(MAXLEN = 256, MINLEN = 0);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["IP Address Super Server will bind to.",(0,n.jsx)(s.br,{}),"\nBy default, the Super Server accepts requests on all addresses, but if a DefaultPortBindAddress is specified it will accept requests only on that address. You should insure that all clients, including the CSP Gateway, are also configured to connect to the address you specify. If no address is specified, the Super Server will accept requests directed to any address on the server."]}),"\n",(0,n.jsx)(s.h3,{id:"enablesharding",children:"EnableSharding"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property EnableSharding As %Boolean [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Enable Sharding."}),"\n",(0,n.jsx)(s.h3,{id:"enableshardingpresent",children:"EnableShardingPresent"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property EnableShardingPresent As %Boolean [ InitialExpression = 0, Internal ];\n"})}),"\n",(0,n.jsx)(s.h3,{id:"enablevssbackup",children:"EnableVSSBackup"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property EnableVSSBackup As %Boolean [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Start the VSS Backup Daemon."}),"\n",(0,n.jsx)(s.h3,{id:"ensembleautostart",children:"EnsembleAutoStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property EnsembleAutoStart As %Boolean [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Auto start the Interoperability productions."}),"\n",(0,n.jsx)(s.h3,{id:"errorpurge",children:"ErrorPurge"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ErrorPurge As %Integer(MAXVAL = 1000, MINVAL = 1) [ InitialExpression = 30, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Number of days to store application error logs before purging them."}),"\n",(0,n.jsx)(s.h3,{id:"fipsmode",children:"FIPSMode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property FIPSMode As %Boolean [ InitialExpression = {..InitFIPSMode()}, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Use FIPS 140-2 compliant library for database encryption."}),"\n",(0,n.jsx)(s.h3,{id:"ipv6",children:"IPv6"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property IPv6 As %Boolean [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["System is operating in an IPv6 network, with IPv6 addresses.",(0,n.jsx)(s.br,{}),"\n0 - IPv6 is not enabled.",(0,n.jsx)(s.br,{}),"\n1 - IPv6 is enabled."]}),"\n",(0,n.jsx)(s.h3,{id:"jobhalt",children:"JobHalt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property JobHalt As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the JOB^%ZSTOP routine entry during JOB process Halt."}),"\n",(0,n.jsx)(s.h3,{id:"jobservers",children:"JobServers"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property JobServers As %Integer(MAXVAL = 2000, MINVAL = 0) [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Number of job servers you want the system to start up with."}),"\n",(0,n.jsx)(s.h3,{id:"jobstart",children:"JobStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property JobStart As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the JOB^%ZSTART routine entry during JOB process startup."}),"\n",(0,n.jsx)(s.h3,{id:"licenseid",children:"LicenseID"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property LicenseID As %String(MAXLEN = 32);\n"})}),"\n",(0,n.jsx)(s.p,{children:"LicenseID is used to request the license key from the License Server at startup, if there is no local key file."}),"\n",(0,n.jsx)(s.h3,{id:"maxiristempsizeatstart",children:"MaxIRISTempSizeAtStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property MaxIRISTempSizeAtStart As %Integer(MAXVAL = 1000000, MINVAL = 0) [ InitialExpression = 0, Required ];\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Maximum size in megabytes the IRISTEMP database will be when the system is restarted.",(0,n.jsx)(s.br,{}),"\nWhen the system restarts, the IRISTEMP database will be truncated to this size. If 0, the IRISTEMP database will not be truncated."]}),"\n",(0,n.jsx)(s.h3,{id:"maxconsolelogsize",children:"MaxConsoleLogSize"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property MaxConsoleLogSize As %Integer(MAXVAL = 500, MINVAL = 1) [ InitialExpression = 5, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Maximum size in megabytes of the messages.log after which it will be automatically switched."}),"\n",(0,n.jsx)(s.h3,{id:"passwordhash",children:"PasswordHash"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property PasswordHash As %String(MAXLEN = 10000);\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Set the IRIS password using a cryptographic hash and salt.",(0,n.jsx)(s.br,{}),"\nThe format of this field is: ",(0,n.jsx)(s.em,{children:"hash"}),",",(0,n.jsx)(s.em,{children:"salt"}),",",(0,n.jsx)(s.em,{children:"workFactor"}),",",(0,n.jsx)(s.em,{children:"algorithm"})]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Hash: Hex-encoded output of PBKDF2 function. Must be correct number of bits for Algorithm."}),"\n",(0,n.jsx)(s.li,{children:"Salt: Hex-encoded salt input to PBKDF2. Must be correct number of bits for Algorithm."}),"\n",(0,n.jsx)(s.li,{children:"WorkFactor: WorkFactor input for PBKDF2."}),"\n",(0,n.jsxs)(s.li,{children:["Algorithm: A valid ",(0,n.jsx)(s.a,{href:"%25CSP.Documatic.cls?PAGE=CLASS&LIBRARY=%25SYS&CLASSNAME=Security.PBKDF2Alg",children:"Security.Datatype.PBKDF2Alg"})," value."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"processhalt",children:"ProcessHalt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ProcessHalt As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the LOGIN^%ZSTOP routine entry during terminal user Halt."}),"\n",(0,n.jsx)(s.h3,{id:"processstart",children:"ProcessStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ProcessStart As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the LOGIN^%ZSTART routine entry during terminal user startup."}),"\n",(0,n.jsx)(s.h3,{id:"shutdowntimeout",children:"ShutdownTimeout"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ShutdownTimeout As %Integer(MAXVAL = 100000, MINVAL = 120) [ InitialExpression = 300, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Enter the time, in seconds, InterSystems IRIS should wait for shutdown to complete normally before timing out and forcing a shutdown."}),"\n",(0,n.jsx)(s.h3,{id:"systemhalt",children:"SystemHalt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SystemHalt As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Execute the SYSTEM^%ZSTOP routine entry during system shutdown."}),"\n",(0,n.jsx)(s.h3,{id:"systemmode",children:"SystemMode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SystemMode As %String(MAXLEN = 32);\n"})}),"\n",(0,n.jsx)(s.p,{children:"The SystemMode is displayed in the title of the Management Portal web page. Currently, SystemMode string values recognized by the Management Portal include:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"LIVE"}),"\n",(0,n.jsx)(s.li,{children:"TEST"}),"\n",(0,n.jsx)(s.li,{children:"DEVELOPMENT"}),"\n",(0,n.jsx)(s.li,{children:"FAILOVER"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"systemstart",children:"SystemStart"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property SystemStart As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Executes the SYSTEM^%ZSTART routine entry during system startup."}),"\n",(0,n.jsx)(s.h3,{id:"tempdirectory",children:"TempDirectory"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property TempDirectory As %SysPath [ InitialExpression = "Temp" ];\n'})}),"\n",(0,n.jsx)(s.p,{children:"Directory for temporary files."}),"\n",(0,n.jsx)(s.h3,{id:"terminalprompt",children:"TerminalPrompt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property TerminalPrompt As %String [ InitialExpression = "8,2", Required ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Set the format of the terminal prompt.",(0,n.jsx)(s.br,{}),"\nThis is a comma separated string of values which set the default terminal prompt for the system.",(0,n.jsx)(s.br,{}),"\nValues:",(0,n.jsx)(s.br,{}),'\n0 - Use only ">" for the prompt.',(0,n.jsx)(s.br,{}),"\n1 - Host name, also known as the current system name. The name assigned to your computer. For example, LABLAPTOP>. This is the same for all of your terminal processes.",(0,n.jsx)(s.br,{}),"\n2 - Namespace name. For example, %SYS>. The current namespace name is contained in the $NAMESPACE special variable. It can be an explicit namespace name or an implied namespace name.",(0,n.jsx)(s.br,{}),"\n3 - Config name. The name of your system installation. For example, DEVELOPMENT>. This is the same for all of your terminal processes.",(0,n.jsx)(s.br,{}),"\n4 - Current time, expressed as local time in 24-hour format with whole seconds. For example, 15:59:36>. This is the static time value for when the prompt was returned. This value changes for each prompt.",(0,n.jsx)(s.br,{}),"\n5 - pid. The Process ID for your terminal. For example, 2336>. This is different for each terminal process. This value can also be returned from the $JOB special variable.",(0,n.jsx)(s.br,{}),"\n6 - Username. For example, fred>. This is the same for all of your terminal processes.",(0,n.jsx)(s.br,{}),"\n7 - Elapsed time executing the last command, in seconds.milliseconds. For example, .000495>. Leading and trailing zeros are suppressed. This changes for each prompt.",(0,n.jsx)(s.br,{}),"\n8 - Transaction Level. For example, TL1>."]}),"\n",(0,n.jsx)(s.p,{children:'The order of the values in the string determines the order the values appear in the prompt. For example TerminalPrompt="2,1" will give you a terminal prompt of "%SYS:HostName>"'}),"\n",(0,n.jsx)(s.h3,{id:"webserver",children:"WebServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property WebServer As %Boolean [ InitialExpression = {$$PlatformId^%SYS.LICENSE()=66}, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Start the private WebServer."}),"\n",(0,n.jsx)(s.h3,{id:"webservername",children:"WebServerName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property WebServerName As %String;\n"})}),"\n",(0,n.jsx)(s.p,{children:"An optional setting to restrict the DNS Name / IP Address for which the Private Web Server will accept incoming connections. For VMS, this is the IP address of the node where the webserver is running."}),"\n",(0,n.jsx)(s.h3,{id:"webserverport",children:"WebServerPort"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property WebServerPort As %Integer [ InitialExpression = 52773, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Private or external WebServer port."}),"\n",(0,n.jsx)(s.h3,{id:"webserverprotocol",children:"WebServerProtocol"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Property WebServerProtocol As %String(VALUELIST = ",http,https") [ InitialExpression = "http" ];\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Protocol used by WebServer.",(0,n.jsx)(s.br,{}),"\nReturned by %Studio.General GetWebServerPort().",(0,n.jsx)(s.br,{}),"\nIf empty, ",(0,n.jsx)(s.code,{children:'"http"'})," is used unless WebServerPort is ",(0,n.jsx)(s.code,{children:"443"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"webserversslconfiguration",children:"WebServerSSLConfiguration"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property WebServerSSLConfiguration As %String(MAXLEN = 64);\n"})}),"\n",(0,n.jsx)(s.p,{children:"Name of the SSL configuration used for creating CSP sessions for web pages opened by IDEs."}),"\n",(0,n.jsx)(s.h3,{id:"webserverurlprefix",children:"WebServerURLPrefix"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property WebServerURLPrefix As %SysPath;\n"})}),"\n",(0,n.jsx)(s.p,{children:"URL prefix."}),"\n",(0,n.jsx)(s.h3,{id:"zstu",children:"ZSTU"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property ZSTU As %Boolean [ InitialExpression = 1, Required ];\n"})}),"\n",(0,n.jsx)(s.p,{children:"Run the user defined startup from the ZSTU routine at system startup."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"load",children:"Load"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod Load(Obj As %ObjectHandle = "", Flags As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Load the parameters into memory and activate.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"Obj"}),' = Handle to the object which caused the load. If "", then load everything, only called from STU.',(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"Flags"})," = Type of modification.",(0,n.jsx)(s.br,{}),"\n0 - Modify",(0,n.jsx)(s.br,{}),"\n1 - Create/Insert"]}),"\n",(0,n.jsx)(s.h3,{id:"initclisysname",children:"InitCliSysName"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod InitCliSysName() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Load CliSysName and longid into memory."}),"\n",(0,n.jsx)(s.h3,{id:"initfipsmode",children:"InitFIPSMode"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod InitFIPSMode() As %Boolean\n"})}),"\n",(0,n.jsx)(s.p,{children:"get the initial FIPSMode value from OS setup."}),"\n",(0,n.jsx)(s.h3,{id:"errorpurge-1",children:"ErrorPurge"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ErrorPurge() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Purge old application errors."}),"\n",(0,n.jsx)(s.h3,{id:"restartwebserver",children:"RestartWebServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RestartWebServer() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Restart the private webserver."}),"\n",(0,n.jsx)(s.h3,{id:"checkwebserverstatus",children:"CheckWebServerStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CheckWebServerStatus(Delay As %Integer = 0, TCPPort As %Integer = 0) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Request a test page (ping) from the private webserver."}),"\n",(0,n.jsxs)(s.p,{children:["This is valid only for Windows and Unix. If run on VMS, or the web server is configured to not start, it always returns success.",(0,n.jsx)(s.br,{}),"\nParameters:",(0,n.jsx)(s.br,{}),"\nDelay - Number of seconds to wait before making request."]}),"\n",(0,n.jsx)(s.h3,{id:"setterminalprompt",children:"SetTerminalPrompt"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetTerminalPrompt() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Set the terminal prompt to the system default."}),"\n",(0,n.jsx)(s.h3,{id:"stopwebserver",children:"StopWebServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StopWebServer(Restart As %Integer = 0) As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"Restart the private webserver."}),"\n",(0,n.jsx)(s.h3,{id:"switchconsolelog",children:"SwitchConsoleLog"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SwitchConsoleLog() As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Switch the messages.log file if it is larger than the max size defined.",(0,n.jsx)(s.br,{}),"\nOn a MultiValue system, it will also switch the mv.log file if it grows too large."]}),"\n",(0,n.jsx)(s.h3,{id:"moveconsolelog",children:"MoveConsoleLog"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod MoveConsoleLog(ConsoleLog As %String, usersize As %Integer)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Rename console log file to a new file with a '.old' suffix This is separated from SwitchConsoleLog() so it can also be used by the System Monitor No return status, errors are just written to log file"}),"\n",(0,n.jsx)(s.h3,{id:"onafteractivatecallback",children:"%OnAfterActivateCallback"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnAfterActivateCallback(Obj As %ObjectHandle, Flags As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"onbeforesavecallback",children:"%OnBeforeSaveCallBack"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %OnBeforeSaveCallBack(insert As %Integer, Obj As %ObjectHandle) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"onvalidateobject",children:"%OnValidateObject"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method %OnValidateObject() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"changepasswordhash",children:"ChangePasswordHash"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod ChangePasswordHash(pHash As %String, pSalt As %String, pScope As %Integer = 0, pHashWorkFactor As %Integer = 1024, pHashAlgorithm As Security.Datatype.PBKDF2Alg = "SHA1", pInitial As %Boolean = 0, pUser As %String = "") As %Status [ Internal ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Change the password of all enabled accounts with non-empty role"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"pHash"})," Hashed password in binhex format",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"pSalt"})," Salt in binhex format",(0,n.jsx)(s.br,{}),"\npHash and pSalt must be of the same length. They must each be a number of hex-encoded bits equal to the length of the hash algorithm used: (bits/4) hex digits. ",(0,n.jsx)(s.strong,{children:"pScope"})]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"0: Set password for non-CSPSystem users"}),"\n",(0,n.jsx)(s.li,{children:"1: Set password for CSPSystem user"}),"\n",(0,n.jsxs)(s.li,{children:["2: Set password for all users\n",(0,n.jsx)(s.strong,{children:"pHashWorkFactor"})," Iterations input for PBKDF2. Must meet minimum requirements in Security.Users.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"pHashAlgorithm"})," A valid ",(0,n.jsx)(s.a,{href:"%25CSP.Documatic.cls?PAGE=CLASS&LIBRARY=%25SYS&CLASSNAME=Security.PBKDF2Alg",children:"Security.Datatype.PBKDF2Alg"})," value.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"pInitial"})," If 1, only allow password to be set if the existing hash matches a predefined value",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"pUser"})," If provided, limits the password change to this user. Password will be changed even if the user is disabled and/or no roles are assigned."]}),"\n"]})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>l});var n=r(96540);const t={},a=n.createContext(t);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);