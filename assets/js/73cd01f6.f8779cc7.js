"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[38529],{28625:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>l,frontMatter:()=>o,toc:()=>a});var r=n(74848),s=n(28453);const o={pagination_prev:null,pagination_next:null},i="%DeepSee.Connector.property",a=[{value:"Properties",id:"properties",level:2},{value:"connector",id:"connector",level:3},{value:"idKey",id:"idkey",level:3},{value:"type",id:"type",level:3},{value:"displayName",id:"displayname",level:3},{value:"sourceProperty",id:"sourceproperty",level:3},{value:"transform",id:"transform",level:3},{value:"Methods",id:"methods",level:2},{value:"typeIsValid",id:"typeisvalid",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"deepseeconnectorproperty",children:"%DeepSee.Connector.property"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Connector.property Extends node [ System = 3 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Meta-data for a property within a DeepSee Connector definition."}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"connector",children:"connector"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Relationship connector As %DeepSee.Connector.connector(XMLPROJECTION = "none") [ Cardinality = one, Inverse = properties ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"Connector that this dimension belongs to."}),"\n",(0,r.jsx)(t.h3,{id:"idkey",children:"idKey"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property idKey As %ZEN.Datatype.boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,r.jsx)(t.p,{children:"If true, then this property is (or is part of) the IDKEY of the data source supplied by the connector."}),"\n",(0,r.jsx)(t.h3,{id:"type",children:"type"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property type As %ZEN.Datatype.string(VALUELIST = ",%String,%Integer,%Double,%Numeric,%Date,%TimeStamp", XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsxs)(t.p,{children:['Type (name of datatype class) of this property. If not supplied, the default is "%String".',(0,r.jsx)(t.br,{}),"\n(note, the VALUELIST is only supplied to provide some drop down values in Studio)."]}),"\n",(0,r.jsx)(t.h3,{id:"displayname",children:"displayName"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property displayName As %ZEN.Datatype.caption(XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsx)(t.p,{children:"(Localized) Display name to use for this property."}),"\n",(0,r.jsx)(t.h3,{id:"sourceproperty",children:"sourceProperty"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property sourceProperty As %ZEN.Datatype.classMember(XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsx)(t.p,{children:"Name of property in record source that provides data for this property."}),"\n",(0,r.jsx)(t.h3,{id:"transform",children:"transform"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Property transform As %ZEN.Datatype.expression(LANGUAGE = "OBJECTSCRIPT", XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsxs)(t.p,{children:["ObjectScript expression used to transform the value of this property.",(0,r.jsx)(t.br,{}),"\nThis is applied to the value fetched by sourceExpression.",(0,r.jsx)(t.br,{}),"\nNull values are not transformed."]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"typeisvalid",children:"typeIsValid"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod typeIsValid(%val) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Override default validation to allow for additional type classes."})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);