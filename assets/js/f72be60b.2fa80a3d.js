"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[14082],{65330:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>r,toc:()=>a});var n=s(74848),i=s(28453);const r={pagination_prev:null,pagination_next:null},o="%Library.GlobalIdentifier",a=[{value:"Properties",id:"properties",level:2},{value:"&quot;%%GUID&quot;",id:"guid",level:3},{value:"Methods",id:"methods",level:2},{value:"&quot;%%GUIDGet&quot;",id:"guidget",level:3},{value:"%OverrideGuidAssignment",id:"overrideguidassignment",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"libraryglobalidentifier",children:"%Library.GlobalIdentifier"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Library.GlobalIdentifier [ Abstract, ClassType = persistent, NoExtent, System = 3 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"The GlobalIdentifier class implements the %%GUID override property. This class is not for general use. It is automatically included in the super class list of a persistent class that is GUIDENABLED."}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"guid",children:'"%%GUID"'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Property "%%GUID" As %Library.RawString [ Internal, Private, ServerOnly = 1, SqlComputeCode = { s {*}=$Select($Get(%oper)="INSERT":$Get({%GUID}),{%%ID}="":"",1:$Get(^OBJ.GUID(1,$$$oidCompose({%%ID},{%%CLASSNAMEQ})))) }, SqlComputed, SqlFieldName = %GUID, Transient ];\n'})}),"\n",(0,n.jsx)(t.p,{children:"This is the GUID value assigned to the object. It can only be changed prior to insert or through the GUID assignment utility methods."}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"guidget",children:'"%%GUIDGet"'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Method "%%GUIDGet"() [ CodeMode = generator, Internal, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(t.h3,{id:"overrideguidassignment",children:"%OverrideGuidAssignment"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OverrideGuidAssignment(pGUID As %Library.RawString) As %Library.RawString\n"})}),"\n",(0,n.jsx)(t.p,{children:"If a persistent class is GUIDENABLED then this method can be called to override the default GUID assignment. This method accepts a guid value and returns the override value currently assigned. The return value will only differ from the supplied value if the override is unsuccessful. It is only valid to call this method on a new object. The guid value passed to this method is not validated. It is up to the user to make sure the guid is properly formed. The guid assignment does not actually occur until the object is saved. If the object has already been assigned a GUID or if the GUID override value has already been assigned to another object then the GUID override value will be discarded. The check for GUID value uniqueness and a GUID value previously assigned is done only at the time the object is saved and is not performed by this method."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(96540);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);