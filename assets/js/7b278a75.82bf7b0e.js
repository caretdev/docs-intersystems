"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[67500],{70463:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>l,default:()=>c,frontMatter:()=>i,toc:()=>o});var t=n(74848),r=n(28453);const i={pagination_prev:null,pagination_next:null},l="%SYSTEM.Security.Users",o=[{value:"Methods",id:"methods",level:2},{value:"SSLGetCipher",id:"sslgetcipher",level:3},{value:"SSLGetCipherList",id:"sslgetcipherlist",level:3},{value:"SSLGetLastError",id:"sslgetlasterror",level:3},{value:"SSLGetPeerCertificate",id:"sslgetpeercertificate",level:3},{value:"SSLGetSession",id:"sslgetsession",level:3},{value:"SSLGetPeerName",id:"sslgetpeername",level:3},{value:"SSLGetProtocol",id:"sslgetprotocol",level:3},{value:"SSLPeekClientHello",id:"sslpeekclienthello",level:3},{value:"GetTelnetSSLSetting",id:"gettelnetsslsetting",level:3},{value:"SetTelnetSSLSetting",id:"settelnetsslsetting",level:3},{value:"LogonUser",id:"logonuser",level:3},{value:"LogoffUser",id:"logoffuser",level:3},{value:"ImpersonateUser",id:"impersonateuser",level:3},{value:"RevertToSelf",id:"reverttoself",level:3}];function a(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"systemsecurityusers",children:"%SYSTEM.Security.Users"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %SYSTEM.Security.Users [ Abstract, System = 4 ]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"sslgetcipher",children:"SSLGetCipher"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetCipher() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the name of the SSL/TLS ciphersuite currently in use over the current device, if an SSL/TLS connection is currently established."}),"\n",(0,t.jsx)(s.h3,{id:"sslgetcipherlist",children:"SSLGetCipherList"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetCipherList(Direction As %Integer, TLSMinVersion As %Integer, TLSMaxVersion As %Integer, CipherList As %String) As %String\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns a colon-delimited list of the names of all supported ciphersuites for TLSv1.2 and below that are consistent with the input parameters.",(0,t.jsx)(s.br,{}),"\nParameters:"]}),"\n",(0,t.jsxs)(s.p,{children:["Direction:",(0,t.jsx)(s.br,{}),"\n0 = client",(0,t.jsx)(s.br,{}),"\n1 = server"]}),"\n",(0,t.jsxs)(s.p,{children:["TLSMinVersion:",(0,t.jsx)(s.br,{}),"\n4 = TLSv1.0",(0,t.jsx)(s.br,{}),"\n8 = TLSv1.1",(0,t.jsx)(s.br,{}),"\n16 = TLSv1.2"]}),"\n",(0,t.jsxs)(s.p,{children:["TLSMaxVersion:",(0,t.jsx)(s.br,{}),"\n4 = TLSv1.0",(0,t.jsx)(s.br,{}),"\n8 = TLSv1.1",(0,t.jsx)(s.br,{}),"\n16 = TLSv1.2"]}),"\n",(0,t.jsx)(s.p,{children:"Note: TLSMaxVersion cannot be less than TLSMinVersion"}),"\n",(0,t.jsx)(s.p,{children:"CipherList, a colon-delimited string constraining the return values, as specified in the OpenSSL Cipher man page"}),"\n",(0,t.jsx)(s.h3,{id:"sslgetlasterror",children:"SSLGetLastError"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetLastError() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns a description of the SSL/TLS error encountered, if any, during the most recent SSL/TLS operation over the current device."}),"\n",(0,t.jsx)(s.h3,{id:"sslgetpeercertificate",children:"SSLGetPeerCertificate"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetPeerCertificate() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the X.509 certificate used to verify the peer for the SSL/TLS session running over the current principal TCP device, in binary DER format. The certificate can be used as input to $System.Encryption.X509GetField() and the RSA* functions. To save the certificate to a file in PEM format:"}),"\n",(0,t.jsxs)(s.p,{children:['Do file.Write("-----BEGIN CERTIFICATE-----"_$c(13,10))',(0,t.jsx)(s.br,{}),"\nDo file.Write($System.Encryption.Base64Encode(certificate))",(0,t.jsx)(s.br,{}),'\nDo file.Write($c(13,10)_"-----END CERTIFICATE-----"_$c(13,10))']}),"\n",(0,t.jsx)(s.h3,{id:"sslgetsession",children:"SSLGetSession"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetSession() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the SSL session parameters used for the SSL/TLS session running over the current principal TCP device, in binary DER format. To save the session to a file in PEM format:"}),"\n",(0,t.jsxs)(s.p,{children:['Do file.Write("-----BEGIN SSL SESSION PARAMETERS-----"_$c(13,10))',(0,t.jsx)(s.br,{}),"\nDo file.Write($System.Encryption.Base64Encode(session))",(0,t.jsx)(s.br,{}),'\nDo file.Write($c(13,10)_"-----END SSL SESSION PARAMETERS-----"_$c(13,10))']}),"\n",(0,t.jsx)(s.h3,{id:"sslgetpeername",children:"SSLGetPeerName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetPeerName(Entry As %String) As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns a string representation of the X.500 distinguished name contained in the X.509 certificate used to verify the peer for the SSL/TLS session running over the current device. Called with no arguments it returns the entire name on one line. Called with an optional argument specifying a component name entry it retuns just that entry, if present. Legal values for the entry argument, and their legal short abreviations, are:"}),"\n",(0,t.jsxs)(s.p,{children:['"commonName","CN"',(0,t.jsx)(s.br,{}),'\n"countryName","C"',(0,t.jsx)(s.br,{}),'\n"localityName","L"',(0,t.jsx)(s.br,{}),'\n"stateOrProvinceName","ST"',(0,t.jsx)(s.br,{}),'\n"organizationName","O"',(0,t.jsx)(s.br,{}),'\n"organizationalUnitName","OU"',(0,t.jsx)(s.br,{}),'\n"givenName","G"',(0,t.jsx)(s.br,{}),'\n"surname","S"',(0,t.jsx)(s.br,{}),'\n"initials","I"',(0,t.jsx)(s.br,{}),'\n"uniqueIdentifier","UID"',(0,t.jsx)(s.br,{}),'\n"serialNumber","SN"',(0,t.jsx)(s.br,{}),'\n"title","T"',(0,t.jsx)(s.br,{}),'\n"description","D"']}),"\n",(0,t.jsx)(s.p,{children:"Also supports the IA5 string components of the X.509 v3 subjectAltName extension. Additional legal values for the entry argument are:"}),"\n",(0,t.jsxs)(s.p,{children:['"email"',(0,t.jsx)(s.br,{}),'\n"DNS"',(0,t.jsx)(s.br,{}),'\n"URI"']}),"\n",(0,t.jsx)(s.h3,{id:"sslgetprotocol",children:"SSLGetProtocol"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLGetProtocol() As %String\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns the name of the protocol currently in use over the current device, if an SSL/TLS connection is currently established."}),"\n",(0,t.jsx)(s.h3,{id:"sslpeekclienthello",children:"SSLPeekClientHello"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SSLPeekClientHello(Timeout As %Integer) As %Integer\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If the current device is a TCP device, peek into the TCP receive buffer.",(0,t.jsx)(s.br,{}),"\nReturns 1 if it contains an SSLv3 or TLSv1 Client Hello message, or an SSLv2 Client Hello message requesting SSLv3 or later. Otherwise returns 0. Parameter:"]}),"\n",(0,t.jsx)(s.p,{children:"Timeout, time to wait for data, in seconds"}),"\n",(0,t.jsx)(s.h3,{id:"gettelnetsslsetting",children:"GetTelnetSSLSetting"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetTelnetSSLSetting() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Fetch Windows Telnet service SSL security setting. Only applicable to instances on Windows platform. See also the SetTelnetSSLSetting method."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Return value = 0: Disabled"}),"\n",(0,t.jsx)(s.li,{children:"Return value = 1: Enabled"}),"\n",(0,t.jsx)(s.li,{children:"Return value = 2: Required"}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"settelnetsslsetting",children:"SetTelnetSSLSetting"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SetTelnetSSLSetting(Setting As %Integer) As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set the SSL requirement (Disabled/Enabled/Required) for inbound connections on the %Service_Telnet service. The default value is 1 (Enabled) if a %TELNET/SSL configuration exists is enabled. The default value is 0 (Disabled) of no %TELNET/SSL configuration exists or is enabled. This method can be called from SYSTEM^%ZSTART to establish the setting for an instance at startup. This setting is only applicable on the Windows platform. Valid inputs are:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Setting = 0: Disabled"}),"\n",(0,t.jsx)(s.li,{children:"Setting = 1: Enabled"}),"\n",(0,t.jsx)(s.li,{children:"Setting = 2: Required"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Returns previous setting."}),"\n",(0,t.jsx)(s.h3,{id:"logonuser",children:"LogonUser"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LogonUser(UserName As %String, Domain As %String, Password As %String) As %Integer\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Calls the Windows LogonUser() API and saves the security token for the current process. The user context is unaffected until the ImpersonateUser() method is called. Return value is 0 on success or the error value retrieved from GetLastError() on failure.",(0,t.jsx)(s.br,{}),"\nThis method is only available on Windows platforms. It cannot be called from a local InterSystems IRIS Terminal process which displays TRM:pid (InstanceName) in the title bar because this process is already impersonating the logged in Windows user. An attempt to call LogonUser() from a local terminal process will result in a  error."]}),"\n",(0,t.jsx)(s.h3,{id:"logoffuser",children:"LogoffUser"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LogoffUser() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Closes the handle to the security token previously created by LogonUser() after reverting the process user context to the original user context. Return value is 0."}),"\n",(0,t.jsx)(s.h3,{id:"impersonateuser",children:"ImpersonateUser"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ImpersonateUser() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Impersonates the user logged on by the LogonUser() method by calling the Windows ImpersonateLoggedOnUser() API with the security token saved by LogonUser(). ImpersonateUser() and RevertToSelf do not affect the user context contained in $USERNAME. Returns 0 on success, -1 if no security token has been saved, or the value returned by GetLastError() on failure."}),"\n",(0,t.jsx)(s.h3,{id:"reverttoself",children:"RevertToSelf"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RevertToSelf() As %Integer\n"})}),"\n",(0,t.jsx)(s.p,{children:"Reverts the process user context to the original logon context. Returns 0."})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(96540);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);