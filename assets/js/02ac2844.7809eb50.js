"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[25667],{17474:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>r,default:()=>a,frontMatter:()=>i,toc:()=>c});var o=n(74848),s=n(28453);const i={pagination_prev:null,pagination_next:null},r="Config.ConfigFile",c=[{value:"Properties",id:"properties",level:2},{value:"Product",id:"product",level:3},{value:"Version",id:"version",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"configconfigfile",children:"Config.ConfigFile"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-objectscript-class",children:"Class Config.ConfigFile Extends (%Persistent, Config.CommonSingleMethods, Config.CommonProperties, %SYSTEM.Help) [ Final, Inheritance = right, System = 4 ]\n"})}),"\n",(0,o.jsxs)(t.p,{children:["This class allows you to modify and view the [ConfigFile] section of the CPF file through programatic APIs. While properties are usually modified through the System Management portal, there may be some occasion where modifying them through the API's is best for your system. In all the Config methods, if you do not specify the CPFFile parameter, the currently active CPF file is used. If you wish to modify a CPF file which is not the currently active one, then specify the CPFFile you wish to modify in the method call.",(0,o.jsx)(t.br,{}),"\nThe Flags parameter does not normally need to be specified; the defaults are usually sufficient for most cases.",(0,o.jsx)(t.br,{}),"\nYou can use either the provided API's (Get/Modify) to modify the properties by passing in the correct parameters, or use Object syntax to open and directly manipulate the config objects."]}),"\n",(0,o.jsx)(t.p,{children:"EXAMPLE:"}),"\n",(0,o.jsx)(t.p,{children:'; Use class methods to modify properties %SYS>s Status=##Class(Config.ConfigFile).Get(.Properties) %SYS>i \'Status w !,"Error="_$SYSTEM.Status.GetErrorText(Status) %SYS>zw Properties Properties("Version")=2009.1'}),"\n",(0,o.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(t.h3,{id:"product",children:"Product"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-objectscript-class",children:'Property Product As %String(MAXLEN = 64, MINLEN = 1) [ InitialExpression = "IRIS", Required ];\n'})}),"\n",(0,o.jsx)(t.h3,{id:"version",children:"Version"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-objectscript-class",children:'Property Version As %String(MAXLEN = 7, MINLEN = 1) [ InitialExpression = {$parameter("Config.CPF","CPFCURRENTVERSION")}, Required ];\n'})}),"\n",(0,o.jsx)(t.p,{children:"Version of the CPF file."})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(96540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);