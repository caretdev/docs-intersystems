"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[93180],{7376:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>o,default:()=>i,frontMatter:()=>r,toc:()=>l});var n=t(74848),a=t(28453);const r={pagination_prev:null,pagination_next:null},o="%Library.Status",l=[{value:"Parameters",id:"parameters",level:2},{value:"XSDTYPE",id:"xsdtype",level:3},{value:"JSONTYPE",id:"jsontype",level:3},{value:"MAXLEN",id:"maxlen",level:3},{value:"Methods",id:"methods",level:2},{value:"XSDToLogical",id:"xsdtological",level:3},{value:"LogicalToXSD",id:"logicaltoxsd",level:3},{value:"LogicalToOdbc",id:"logicaltoodbc",level:3}];function c(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"librarystatus",children:"%Library.Status"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %Library.Status [ ClassType = datatype, ClientDataType = STATUS, System = 2 ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.strong,{children:"%Status"})," data type class is used to represent an error status code."]}),"\n",(0,n.jsxs)(s.p,{children:["Many of the methods provided by the system classes return error status information using the ",(0,n.jsx)(s.strong,{children:"%Status"})," data type. The include file ",(0,n.jsx)(s.em,{children:"%occStatus.INC"})," contains several macro definitions that are useful in testing the value of an error code in ",(0,n.jsx)(s.strong,{children:"%Status"})," format. These macros include:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"$$$ISOK(status:%Status)"})," returns true (1) if the status code status does not represent an error condition."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"$$$ISERR(status:%Status)"})," returns true (1) if the status code status represents an error condition."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"You can get a more detailed description of an error by using $system.Status.DecomposeStatus(status:%Status,&err,flag), which takes a status code and returns an array of error strings; see %SYSTEM.Status."}),"\n",(0,n.jsx)(s.p,{children:"For example:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:'Set status=obj.%Save() If $$$ISERR(status) Do $system.Status.DecomposeStatus(status,.err,"-d") For i=1:1:err Write err(i),!'})}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(s.h3,{id:"xsdtype",children:"XSDTYPE"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter XSDTYPE = "base64Binary";\n'})}),"\n",(0,n.jsx)(s.p,{children:"Declares the XSD type used when projecting XML Schemas."}),"\n",(0,n.jsx)(s.h3,{id:"jsontype",children:"JSONTYPE"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter JSONTYPE = "string";\n'})}),"\n",(0,n.jsx)(s.p,{children:"JSONTYPE is JSON type used for this datatype."}),"\n",(0,n.jsx)(s.h3,{id:"maxlen",children:"MAXLEN"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter MAXLEN = 65536;\n"})}),"\n",(0,n.jsx)(s.p,{children:"Maximum expected length of a %Status value"}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"xsdtological",children:"XSDToLogical"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod XSDToLogical(%val As %String) As %Binary [ CodeMode = generator ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Converts the SOAP encoded base64 input value to a logical value."}),"\n",(0,n.jsx)(s.h3,{id:"logicaltoxsd",children:"LogicalToXSD"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToXSD(%val As %Binary) As %String [ CodeMode = generator ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Converts the %Binary value to the SOAP base64 encoded value."}),"\n",(0,n.jsx)(s.h3,{id:"logicaltoodbc",children:"LogicalToOdbc"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod LogicalToOdbc(%val = "") As %String\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Converts the value of this data type from ",(0,n.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=OBJECTSCRIPT+$LIST+FUNCTION",children:"$List"})," format to a delimited string using the value of the ODBCDELIMITER parameter as a delimiter."]})]})}function i(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>l});var n=t(96540);const a={},r=n.createContext(a);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);