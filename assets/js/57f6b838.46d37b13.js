"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[87740],{26481:(e,i,t)=>{t.r(i),t.d(i,{contentTitle:()=>a,default:()=>o,frontMatter:()=>r,toc:()=>s});var l=t(74848),n=t(28453);const r={pagination_prev:null,pagination_next:null},a="%iKnow.Model.matchingProfile",s=[{value:"Parameters",id:"parameters",level:2},{value:"XMLNAME",id:"xmlname",level:3},{value:"Properties",id:"properties",level:2},{value:"matching",id:"matching",level:3},{value:"name",id:"name",level:3},{value:"scatteredMatchMultiplier",id:"scatteredmatchmultiplier",level:3},{value:"relationshipScoreMultiplier",id:"relationshipscoremultiplier",level:3},{value:"pathRelevantScoreMultiplier",id:"pathrelevantscoremultiplier",level:3},{value:"relationshipLengthMultiplier",id:"relationshiplengthmultiplier",level:3},{value:"disorderMultiplier",id:"disordermultiplier",level:3},{value:"minimalMatchScore",id:"minimalmatchscore",level:3},{value:"pathTotalMultiplier",id:"pathtotalmultiplier",level:3},{value:"crcTotalMultiplier",id:"crctotalmultiplier",level:3},{value:"sentTotalMultiplier",id:"senttotalmultiplier",level:3},{value:"minMatchedConceptFraction",id:"minmatchedconceptfraction",level:3},{value:"negationMultiplier",id:"negationmultiplier",level:3},{value:"disabled",id:"disabled",level:3},{value:"Methods",id:"methods",level:2},{value:"%Validate",id:"validate",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",matching:"matching",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"iknowmodelmatchingprofile",children:"%iKnow.Model.matchingProfile"})}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Class %iKnow.Model.matchingProfile Extends %iKnow.Model.node [ Deprecated, System = 3 ]\n"})}),"\n",(0,l.jsx)(i.p,{children:"Model representation of a Matching Profile to use for matching sources against dictionaries. See also %iKnow.Matching.MatchingProfile."}),"\n",(0,l.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(i.h3,{id:"xmlname",children:"XMLNAME"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Parameter XMLNAME = "profile";\n'})}),"\n",(0,l.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(i.h3,{id:"matching",children:"matching"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Relationship matching As %iKnow.Model.matching(XMLPROJECTION = "none") [ Cardinality = one, Inverse = profiles ];\n'})}),"\n",(0,l.jsxs)(i.p,{children:["Link to the ",(0,l.jsx)(i.matching,{children:" element this profile belongs to."})]}),"\n",(0,l.jsx)(i.h3,{id:"name",children:"name"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property name As %String(MAXLEN = 50, XMLPROJECTION = "ATTRIBUTE");\n'})}),"\n",(0,l.jsx)(i.h3,{id:"scatteredmatchmultiplier",children:"scatteredMatchMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property scatteredMatchMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.75 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:'The entity-level score of scattered entity matches will be multiplied by this modifier. For example when matching the entity "blue big car" against the term "big blue car", The initial score of 1 (as all words in the entity are matched) will be multiplied with ScatteredMatchMultiplier'}),"\n",(0,l.jsx)(i.h3,{id:"relationshipscoremultiplier",children:"relationshipScoreMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property relationshipScoreMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.5 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"The entity-level score of relationship entities will be multiplied by this modifier."}),"\n",(0,l.jsx)(i.h3,{id:"pathrelevantscoremultiplier",children:"pathRelevantScoreMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property pathRelevantScoreMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.33 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"The entity-level score of path-relevant entities will be multiplied by this modifier."}),"\n",(0,l.jsx)(i.h3,{id:"relationshiplengthmultiplier",children:"relationshipLengthMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property relationshipLengthMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.2 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:'When calculating an aggregate match score for a CRC, path or sentence, the "length" of the matched section is compared to the total "length" of the CRC, path or sentence. This "length" is calculated taking a value of 1 for each concept and a value of RelationshipLengthMultiplier for each relationship. Therefore, setting this property to a lower value will decrease the weight of relationship entities in calculating this ratio.'}),"\n",(0,l.jsx)(i.h3,{id:"disordermultiplier",children:"disorderMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property disorderMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.7 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"This multiplier is applied to the aggegate match score for a CRC, path or sentence if the matched entities appear in a different order than in the dictionary term."}),"\n",(0,l.jsx)(i.h3,{id:"minimalmatchscore",children:"minimalMatchScore"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property minimalMatchScore As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0.33 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"This is the lower threshold for match scores. Matches having a total score less than MinimalMatchScore will not be stored or returned."}),"\n",(0,l.jsx)(i.h3,{id:"pathtotalmultiplier",children:"pathTotalMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property pathTotalMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 1 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"The total score of a path-level match is multiplied by this number."}),"\n",(0,l.jsx)(i.h3,{id:"crctotalmultiplier",children:"crcTotalMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property crcTotalMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 1 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"The total score of a CRC-level match is multiplied by this number."}),"\n",(0,l.jsx)(i.h3,{id:"senttotalmultiplier",children:"sentTotalMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property sentTotalMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 1 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"The total score of a sentence-level match is multiplied by this number."}),"\n",(0,l.jsx)(i.h3,{id:"minmatchedconceptfraction",children:"minMatchedConceptFraction"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property minMatchedConceptFraction As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 0 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"Use this parameter to add an additional requirement on the number of concepts from the Dictionary Term that should be matched for an aggregate match to be considered. A value of 1 (100%) implies all concepts should be matched. A value of at least 0.51 for example means both concepts in a CRC should match. A value of 0 (default) does not impose additional restrictions."}),"\n",(0,l.jsx)(i.h3,{id:"negationmultiplier",children:"negationMultiplier"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property negationMultiplier As %Numeric(XMLPROJECTION = "ATTRIBUTE") [ InitialExpression = 1 ];\n'})}),"\n",(0,l.jsx)(i.p,{children:"Use this parameter to modify the score of matched entities which are part of a negation. Typically, this value will be either 1, ignoring the fact an entity is part of a negation, or 0, which will make the algorithm skip these entities. Other positive numeric values are also accepted and just modify the entity-level score for the affected entities, causing them to be considered partial matches."}),"\n",(0,l.jsx)(i.h3,{id:"disabled",children:"disabled"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:'Property disabled As %Boolean(XMLPROJECTION = "attribute");\n'})}),"\n",(0,l.jsx)(i.p,{children:"If set to 1, this element is ignored when compiling, validating and building the domain"}),"\n",(0,l.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(i.h3,{id:"validate",children:"%Validate"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-objectscript-class",children:"Method %Validate(pDomainId As %Integer, pDomainDefinition As %iKnow.Model.domain) As %Status\n"})})]})}function o(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>s});var l=t(96540);const n={},r=l.createContext(n);function a(e){const i=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),l.createElement(r.Provider,{value:i},e.children)}}}]);