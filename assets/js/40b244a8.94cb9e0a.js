"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[43744],{8065:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>o,frontMatter:()=>n,toc:()=>l});var a=t(74848),r=t(28453);const n={pagination_prev:null,pagination_next:null},i="SYS.History.Adaptor",l=[{value:"Parameters",id:"parameters",level:2},{value:"INTERVAL",id:"interval",level:3},{value:"PROPERTY;",id:"property",level:3},{value:"HOURLYSUM",id:"hourlysum",level:3},{value:"DAILYSUM",id:"dailysum",level:3},{value:"ARRAY",id:"array",level:3},{value:"ARRAYSUM",id:"arraysum",level:3},{value:"DELTA",id:"delta",level:3},{value:"Methods",id:"methods",level:2},{value:"Sample",id:"sample",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"syshistoryadaptor",children:"SYS.History.Adaptor"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Class SYS.History.Adaptor Extends %SerialObject [ System = 3 ]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Use this Class to define application metrics for SYS.History. User classes inherit from this class and can then define %Numeric properties to create user-defined metrics, which get collected and summarized like the other SYS.History system metrics. The Sample() method must be coded to collect all user-defined properties."}),"\n",(0,a.jsx)(s.p,{children:"Classes defined using this as a parent class will get included as an embedded object in the SYS.History.User (or UserPerf or UserSys), and the UserHourly and UserDaily persistent classes."}),"\n",(0,a.jsx)(s.p,{children:'User written classes must be in the %SYS namespace, and begin with "Z" or "z" to prevent naming conflicts with system classes. All properties of the user-defined class must be %Numeric. This is because the same classes get embedded in the Hourly/Daily summaries and the summary functions may create decimal digits. All of the options for the user-defined classes are defined in the Parameters of this class.'}),"\n",(0,a.jsx)(s.p,{children:"WARNING: User-defined metics classes become embedded objects in persistent data, and some care must be taken by the user if definitions change after data has been collected. The 'schema evolution' feature of InterSystems IRIS Objects allows you to safely add new objects and properties. But deleting objects can result in 'orphaned' data, and re-defining existing objects can cause data to be misinterpretted."}),"\n",(0,a.jsxs)(s.p,{children:["For details, see ",(0,a.jsx)(s.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+SYS.History.Adaptor",children:"History Monitor"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(s.h3,{id:"interval",children:"INTERVAL"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter INTERVAL = "User";\n'})}),"\n",(0,a.jsx)(s.p,{children:'Parameter used to select which SYS.History.User* class is used to collect the interval data for this class. Choices are "User", "UserPerf" or "UserSys. This user class will be added as an embedded object to the selected class. These classes correspond to the classes %Monitor.System.HistoryUser, %Monitor.System.HistoryPerf and %Monitor.System.HistorySys. "UserPerf" and "UserSys" will collect user-defined metrics at the same intervals and with the same identifying timestamp as the PerfData and SysData classes, so that results may be correlated to those metrics. "User" is only for user-defined data and %Monitor.System.HistoryUser can be set to a different (and non-related) timer interval.'}),"\n",(0,a.jsx)(s.h3,{id:"property",children:"PROPERTY;"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter PROPERTY;\n"})}),"\n",(0,a.jsx)(s.p,{children:"This parameter provides a string which is used as the Property name for the embedded objects in the persistent classes. It's recommended that this name be fairly short, since it appears as a prefix for SQL projected tables and properties. It must also be unique for each user-defined class. The class name (without the Package name) will be used if nothing is specified."}),"\n",(0,a.jsx)(s.h3,{id:"hourlysum",children:"HOURLYSUM"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter HOURLYSUM = "Avg,Max,StDev";\n'})}),"\n",(0,a.jsx)(s.p,{children:'A comma-delimited list of functions used to calculate Hourly summaries for this class. This may be any of "Avg", "Max", "Min", StDev", Med", or "Tot". Or, it may be "None".'}),"\n",(0,a.jsx)(s.h3,{id:"dailysum",children:"DAILYSUM"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DAILYSUM = "Avg,Max,StDev";\n'})}),"\n",(0,a.jsx)(s.p,{children:'A comma-delimited list of functions used to calculate Daily summaries for this class. This may be any of "Avg", "Max", "Min", StDev", Med", or "Tot". Or, it may be "None".'}),"\n",(0,a.jsx)(s.h3,{id:"array",children:"ARRAY"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter ARRAY = 0;\n"})}),"\n",(0,a.jsx)(s.p,{children:'Set this parameter to "1" to indicate that the user-defined class will be collected as a %ArrayOfObjects. This allows for multiple instances of the class for each sample. The user-written Sample() method is responsible for creating the %ArrayOfObjects and the keys which identify the instances of the class.'}),"\n",(0,a.jsx)(s.h3,{id:"arraysum",children:"ARRAYSUM"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter ARRAYSUM = 1;\n"})}),"\n",(0,a.jsx)(s.p,{children:"If the class is collected as a %ArrayOfObjects, then there are two choices for the Hourly and Daily summaries of the interval data. The default (ARRAYSUM=1) is to calculate a single value of all instances for each summary function (Avg, Max, etc). If ARRAYSUM=0, then each instance will be calculated separately, and the name of the function will be concatenated to the user-defined key to generate a key for the summary instance (see the summaries for SYS.History.Database for an example of how this option looks)."}),"\n",(0,a.jsx)(s.h3,{id:"delta",children:"DELTA"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DELTA = 0;\n"})}),"\n",(0,a.jsx)(s.p,{children:'This parameter is used to indicate that the properties in this user-defined class should be collected as delta values. This is generally used when the metrics are "counters", where the values keep increasing and you want to capture the difference between each sample rather than the actual value of each sample.'}),"\n",(0,a.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(s.h3,{id:"sample",children:"Sample"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Sample() As %SerialObject\n"})}),"\n",(0,a.jsx)(s.p,{children:"The Projection adds this class as an embedded object to the SYS.History.User* persistent classes; User (or UserPerf or UserSys), UserHourly, and UserDaily. ** USER MUST IMPLEMENT THIS METHOD ** This method is called to instantiate the user-defined class and provide values for all properties. If the application namespace must be accessed to fetch the values, then the code may switch namespaces to collect the data, and then MUST switch back to %SYS."}),"\n",(0,a.jsx)(s.p,{children:"The application may return either a single instance of their class or a %ArrayOfObjects of that class, depending on how the ARRAY parameter is defined."})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>l});var a=t(96540);const r={},n=a.createContext(r);function i(e){const s=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(n.Provider,{value:s},e.children)}}}]);