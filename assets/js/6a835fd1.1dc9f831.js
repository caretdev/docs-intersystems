"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[11247],{9950:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>c,toc:()=>l});var n=s(74848),a=s(28453);const c={pagination_prev:null,pagination_next:null},r="%XDBC.Gateway.Statement",l=[{value:"Methods",id:"methods",level:2},{value:"AddBatch",id:"addbatch",level:3},{value:"Cancel",id:"cancel",level:3},{value:"ClearBatch",id:"clearbatch",level:3},{value:"Close",id:"close",level:3},{value:"Execute",id:"execute",level:3},{value:"ExecuteBatch",id:"executebatch",level:3},{value:"ExecuteQuery",id:"executequery",level:3},{value:"ExecuteUpdate",id:"executeupdate",level:3},{value:"GetConnection",id:"getconnection",level:3},{value:"GetFetchSize",id:"getfetchsize",level:3},{value:"GetGeneratedKeys",id:"getgeneratedkeys",level:3},{value:"GetMaxFieldSize",id:"getmaxfieldsize",level:3},{value:"GetMaxRows",id:"getmaxrows",level:3},{value:"GetMoreResults",id:"getmoreresults",level:3},{value:"GetQueryTimeout",id:"getquerytimeout",level:3},{value:"GetResultSet",id:"getresultset",level:3},{value:"GetResultSetMetaData",id:"getresultsetmetadata",level:3},{value:"GetUpdateCount",id:"getupdatecount",level:3},{value:"IsClosed",id:"isclosed",level:3},{value:"SetFetchSize",id:"setfetchsize",level:3},{value:"SetMaxFieldSize",id:"setmaxfieldsize",level:3},{value:"SetMaxRows",id:"setmaxrows",level:3},{value:"SetQueryTimeout",id:"setquerytimeout",level:3}];function i(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"xdbcgatewaystatement",children:"%XDBC.Gateway.Statement"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XDBC.Gateway.Statement Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"FOR INTERNAL USE - do not invoke directly"}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"addbatch",children:"AddBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method AddBatch(sql As %String) [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the value of the designated parameter with the given object. Method SetObject(parameterName As %String, parameter As %ObjectHandle) {} Adds the given SQL command to the current list of commands for this Statement object."}),"\n",(0,n.jsx)(t.h3,{id:"cancel",children:"Cancel"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Cancel() [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Cancels this Statement object if both the DBMS and driver support aborting an SQL statement."}),"\n",(0,n.jsx)(t.h3,{id:"clearbatch",children:"ClearBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ClearBatch() [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Empties this Statement object's current list of SQL commands."}),"\n",(0,n.jsx)(t.h3,{id:"close",children:"Close"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Close() [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Releases this Statement object's database and JDBC resources immediately instead of waiting for this to happen when it is automatically closed."}),"\n",(0,n.jsx)(t.h3,{id:"execute",children:"Execute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Method Execute(sql As %String, autoGeneratedKeys As %Integer = "") As %Boolean [ Abstract ]\n'})}),"\n",(0,n.jsx)(t.p,{children:"Executes the given SQL statement, which may return multiple results, and signals the driver that any auto-generated keys should be made available for retrieval"}),"\n",(0,n.jsx)(t.h3,{id:"executebatch",children:"ExecuteBatch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteBatch() As %ListOfDataTypes [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts"}),"\n",(0,n.jsx)(t.h3,{id:"executequery",children:"ExecuteQuery"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method ExecuteQuery(sql As %String) As ResultSet [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"list of int Executes the given SQL statement, which returns a single ResultSet object"}),"\n",(0,n.jsx)(t.h3,{id:"executeupdate",children:"ExecuteUpdate"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Method ExecuteUpdate(sql As %String, autoGeneratedKeys As %Integer = "") As %Integer [ Abstract ]\n'})}),"\n",(0,n.jsx)(t.p,{children:"Executes the given SQL statement, which may be an INSERT, UPDATE, or DELETE statement or an SQL statement that returns nothing, such as an SQL DDL statement Executes the given SQL statement and signals the driver with the given flag about whether the auto-generated keys produced by this Statement object should be made available for retrieval."}),"\n",(0,n.jsx)(t.h3,{id:"getconnection",children:"GetConnection"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetConnection() As Connection [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the Connection object that produced this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getfetchsize",children:"GetFetchSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFetchSize() As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of result set rows that is the default fetch size for ResultSet objects generated from this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getgeneratedkeys",children:"GetGeneratedKeys"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetGeneratedKeys() As ResultSet [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves any auto-generated keys created as a result of executing this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getmaxfieldsize",children:"GetMaxFieldSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMaxFieldSize() As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the maximum number of bytes that can be returned for character and binary column values in a ResultSet object produced by this Statement object"}),"\n",(0,n.jsx)(t.h3,{id:"getmaxrows",children:"GetMaxRows"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMaxRows() As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the maximum number of rows that a ResultSet object produced by this Statement object can contain"}),"\n",(0,n.jsx)(t.h3,{id:"getmoreresults",children:"GetMoreResults"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMoreResults() As %Boolean [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Moves to this Statement object's next result, returns true if it is a ResultSet object, and implicitly closes any current ResultSet object(s) obtained with the method getResultSet."}),"\n",(0,n.jsx)(t.h3,{id:"getquerytimeout",children:"GetQueryTimeout"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetQueryTimeout() As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of seconds the driver will wait for a Statement object to execute."}),"\n",(0,n.jsx)(t.h3,{id:"getresultset",children:"GetResultSet"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetResultSet() As ResultSet [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the current result as a ResultSet object."}),"\n",(0,n.jsx)(t.h3,{id:"getresultsetmetadata",children:"GetResultSetMetaData"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetResultSetMetaData() As ResultSetMetaData [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the column metadata for the result set that will be returned for this statement as a ResultSetMetaData object."}),"\n",(0,n.jsx)(t.h3,{id:"getupdatecount",children:"GetUpdateCount"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetUpdateCount() As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the current result as an update count; if the result is a ResultSet object or there are no more results, -1 is returned"}),"\n",(0,n.jsx)(t.h3,{id:"isclosed",children:"IsClosed"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsClosed() As %Boolean [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves whether this Statement object has been closed"}),"\n",(0,n.jsx)(t.h3,{id:"setfetchsize",children:"SetFetchSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetFetchSize(rows As %Integer) [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Gives the driver a hint as to the number of rows that should be fetched from the database when more rows are needed for ResultSet objects genrated by this Statement."}),"\n",(0,n.jsx)(t.h3,{id:"setmaxfieldsize",children:"SetMaxFieldSize"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetMaxFieldSize(max As %Integer) [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the limit for the maximum number of bytes that can be returned for character and binary column values in a ResultSet object produced by this Statement object."}),"\n",(0,n.jsx)(t.h3,{id:"setmaxrows",children:"SetMaxRows"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetMaxRows(max As %Integer) [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the limit for the maximum number of rows that any ResultSet object generated by this Statement object can contain to the given number."}),"\n",(0,n.jsx)(t.h3,{id:"setquerytimeout",children:"SetQueryTimeout"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetQueryTimeout(seconds As %Integer) [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the number of seconds the driver will wait for a Statement object to execute to the given number of seconds."})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(96540);const a={},c=n.createContext(a);function r(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);