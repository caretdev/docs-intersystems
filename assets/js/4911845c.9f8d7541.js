"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[97036],{1291:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>r,default:()=>o,frontMatter:()=>l,toc:()=>t});var s=a(74848),i=a(28453);const l={pagination_prev:null,pagination_next:null},r="%Library.Binary",t=[{value:"Parameters",id:"parameters",level:2},{value:"MAXLEN",id:"maxlen",level:3},{value:"MINLEN",id:"minlen",level:3},{value:"XSDTYPE",id:"xsdtype",level:3},{value:"JSONTYPE",id:"jsontype",level:3},{value:"MTOM",id:"mtom",level:3},{value:"CANONICALXML",id:"canonicalxml",level:3},{value:"Methods",id:"methods",level:2},{value:"XSDToLogical",id:"xsdtological",level:3},{value:"LogicalToXSD",id:"logicaltoxsd",level:3},{value:"JSONToLogical",id:"jsontological",level:3},{value:"LogicalToJSON",id:"logicaltojson",level:3},{value:"IsValid",id:"isvalid",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"librarybinary",children:"%Library.Binary"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Class %Library.Binary Extends %DataType [ ClientDataType = BINARY, OdbcType = VARBINARY, System = 2 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"%Binary"})," data type class is used to represent binary data. The logical value for ",(0,s.jsx)(n.strong,{children:"%Binary"})," is a string containing a binary value."]}),"\n",(0,s.jsxs)(n.p,{children:["When a ",(0,s.jsx)(n.strong,{children:"%Binary"})," data type value is projected to a client application, such as when it is used in a Java, Visual Basic (ActiveX), ODBC, or JDBC application, the ",(0,s.jsx)(n.em,{children:"Object Server"})," performs no translations or conversions on it. That is the actual binary data is sent to and from the client without any Unicode (or other) translations."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"maxlen",children:"MAXLEN"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter MAXLEN As INTEGER = 50;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The maximum number of characters the string can contain."}),"\n",(0,s.jsx)(n.h3,{id:"minlen",children:"MINLEN"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter MINLEN As INTEGER;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The minimum number of characters the string can contain."}),"\n",(0,s.jsx)(n.h3,{id:"xsdtype",children:"XSDTYPE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter XSDTYPE = "base64Binary";\n'})}),"\n",(0,s.jsx)(n.p,{children:"Declares the XSD type used when projecting XML Schemas."}),"\n",(0,s.jsx)(n.h3,{id:"jsontype",children:"JSONTYPE"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter JSONTYPE = "string";\n'})}),"\n",(0,s.jsx)(n.h3,{id:"mtom",children:"MTOM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter MTOM As BOOLEAN = 0;\n"})}),"\n",(0,s.jsx)(n.p,{children:"If MTOM is true, then the property that references this binary data is available for optimization when using SOAP MTOM (Message Transmission Optimization Mechanism). The default for binary string data is false."}),"\n",(0,s.jsx)(n.h3,{id:"canonicalxml",children:"CANONICALXML"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter CANONICALXML As BOOLEAN = 0;\n"})}),"\n",(0,s.jsx)(n.p,{children:"If CANONICALXML is true, then the base64 output contains no white space."}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"xsdtological",children:"XSDToLogical"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod XSDToLogical(%val As %String) As %Binary [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Converts the SOAP encoded base64 input value to a logical value."}),"\n",(0,s.jsx)(n.h3,{id:"logicaltoxsd",children:"LogicalToXSD"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToXSD(%val As %Binary) As %String [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Converts the %Binary value to the SOAP base64 encoded value."}),"\n",(0,s.jsx)(n.h3,{id:"jsontological",children:"JSONToLogical"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod JSONToLogical(%val As %String) As %Binary [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Converts the base64 encoded input value to a logical value."}),"\n",(0,s.jsx)(n.h3,{id:"logicaltojson",children:"LogicalToJSON"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod LogicalToJSON(%val As %Binary) As %String [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Converts the logical %Binary value to the base64 encoded value."}),"\n",(0,s.jsx)(n.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod IsValid(%val As %RawString) As %Status [ CodeMode = generator, ServerOnly = 0 ]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Tests if the logical value %val, which is a string, is valid. The validation is based on the class parameter settings used for the class attribute this data type is associated with. In this case, ",(0,s.jsx)(n.a,{href:"#MINLEN",children:"MINLEN"}),", ",(0,s.jsx)(n.a,{href:"#MAXLEN",children:"MAXLEN"}),", and ",(0,s.jsx)(n.a,{href:"#PATTERN",children:"PATTERN"}),"."]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>t});var s=a(96540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);