"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[76801],{37968:(e,s,l)=>{l.r(s),l.d(s,{contentTitle:()=>n,default:()=>d,frontMatter:()=>i,toc:()=>r});var t=l(74848),a=l(28453);const i={pagination_prev:null,pagination_next:null},n="%ZEN.Report.Display.COSChart.cchartDualY",r=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTPLOTTOEDGE",id:"defaultplottoedge",level:3},{value:"DEFAULTMARKERSVISIBLE",id:"defaultmarkersvisible",level:3},{value:"DEFAULTVALUELABELSVISIBLE",id:"defaultvaluelabelsvisible",level:3},{value:"DEFAULTASPECT",id:"defaultaspect",level:3},{value:"DEFAULTVIEWBOXWIDTH;",id:"defaultviewboxwidth",level:3},{value:"DEFAULTVIEWBOXHEIGHT;",id:"defaultviewboxheight",level:3},{value:"DEFAULTAPPEARANCE",id:"defaultappearance",level:3},{value:"DEFAULTAUTOSCALETEXT",id:"defaultautoscaletext",level:3},{value:"Properties",id:"properties",level:2},{value:"field",id:"field",level:3},{value:"group",id:"group",level:3},{value:"removeEmpty",id:"removeempty",level:3},{value:"children",id:"children",level:3},{value:"viewBoxWidth",id:"viewboxwidth",level:3},{value:"viewBoxHeight",id:"viewboxheight",level:3},{value:"showMultiples",id:"showmultiples",level:3},{value:"multipleTitleStyle",id:"multipletitlestyle",level:3},{value:"currMultiple",id:"currmultiple",level:3},{value:"height",id:"height",level:3},{value:"svgGroup",id:"svggroup",level:3},{value:"topLevel",id:"toplevel",level:3},{value:"xAxis",id:"xaxis",level:3},{value:"yAxis",id:"yaxis",level:3},{value:"yAxisList",id:"yaxislist",level:3},{value:"backgroundStyle",id:"backgroundstyle",level:3},{value:"plotAreaStyle",id:"plotareastyle",level:3},{value:"plotEdgeStyle",id:"plotedgestyle",level:3},{value:"title",id:"title",level:3},{value:"subtitle",id:"subtitle",level:3},{value:"legendTitle",id:"legendtitle",level:3},{value:"titleAlign",id:"titlealign",level:3},{value:"titleStyle",id:"titlestyle",level:3},{value:"subtitleStyle",id:"subtitlestyle",level:3},{value:"titleBoxStyle",id:"titleboxstyle",level:3},{value:"borderStyle",id:"borderstyle",level:3},{value:"stripesVisible",id:"stripesvisible",level:3},{value:"chartPivot",id:"chartpivot",level:3},{value:"stripeStyle",id:"stripestyle",level:3},{value:"borderOffset",id:"borderoffset",level:3},{value:"borderRadius",id:"borderradius",level:3},{value:"titleX",id:"titlex",level:3},{value:"titleY",id:"titley",level:3},{value:"seriesCount",id:"seriescount",level:3},{value:"seriesSize",id:"seriessize",level:3},{value:"seriesColors",id:"seriescolors",level:3},{value:"dataDrivenSeriesColors",id:"datadrivenseriescolors",level:3},{value:"%dataDrivenSeriesColors",id:"datadrivenseriescolors-1",level:3},{value:"dateFormat",id:"dateformat",level:3},{value:"%seriesColors",id:"seriescolors-1",level:3},{value:"seriesColorsOverride",id:"seriescolorsoverride",level:3},{value:"seriesColorScheme",id:"seriescolorscheme",level:3},{value:"seriesNames",id:"seriesnames",level:3},{value:"seriesNumber",id:"seriesnumber",level:3},{value:"seriesYAxes",id:"seriesyaxes",level:3},{value:"currYAxis",id:"curryaxis",level:3},{value:"markerShapes",id:"markershapes",level:3},{value:"markerScale",id:"markerscale",level:3},{value:"gridStyle",id:"gridstyle",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"maxLabelLen",id:"maxlabellen",level:3},{value:"axisTitleStyle",id:"axistitlestyle",level:3},{value:"labelsVisible",id:"labelsvisible",level:3},{value:"legendVisible",id:"legendvisible",level:3},{value:"legendX",id:"legendx",level:3},{value:"legendY",id:"legendy",level:3},{value:"legendWidth",id:"legendwidth",level:3},{value:"legendHeight",id:"legendheight",level:3},{value:"legendStyle",id:"legendstyle",level:3},{value:"legendLabelStyle",id:"legendlabelstyle",level:3},{value:"legendRectStyle",id:"legendrectstyle",level:3},{value:"legendLabels",id:"legendlabels",level:3},{value:"legendPosition",id:"legendposition",level:3},{value:"marginTop",id:"margintop",level:3},{value:"marginBottom",id:"marginbottom",level:3},{value:"marginLeft",id:"marginleft",level:3},{value:"marginRight",id:"marginright",level:3},{value:"markersVisible",id:"markersvisible",level:3},{value:"valueLabelsVisible",id:"valuelabelsvisible",level:3},{value:"valueLabelStyle",id:"valuelabelstyle",level:3},{value:"valueLabelFormat",id:"valuelabelformat",level:3},{value:"valueBoxStyle",id:"valueboxstyle",level:3},{value:"autoScaleText",id:"autoscaletext",level:3},{value:"plotToEdge",id:"plottoedge",level:3},{value:"bandUpper",id:"bandupper",level:3},{value:"bandLower",id:"bandlower",level:3},{value:"bandUpperStyle",id:"bandupperstyle",level:3},{value:"bandLowerStyle",id:"bandlowerstyle",level:3},{value:"bandRight",id:"bandright",level:3},{value:"bandLeft",id:"bandleft",level:3},{value:"bandRightStyle",id:"bandrightstyle",level:3},{value:"bandLeftStyle",id:"bandleftstyle",level:3},{value:"axisLineStyle",id:"axislinestyle",level:3},{value:"baseLineStyle",id:"baselinestyle",level:3},{value:"appearance",id:"appearance",level:3},{value:"textSize",id:"textsize",level:3},{value:"hasZoom",id:"haszoom",level:3},{value:"ongetData",id:"ongetdata",level:3},{value:"ongetLabelX",id:"ongetlabelx",level:3},{value:"ongetLabelY",id:"ongetlabely",level:3},{value:"ongetSeriesName",id:"ongetseriesname",level:3},{value:"onrenderData",id:"onrenderdata",level:3},{value:"plotStyle",id:"plotstyle",level:3},{value:"lineStyle",id:"linestyle",level:3},{value:"markerStyle",id:"markerstyle",level:3},{value:"indicatorsVisible",id:"indicatorsvisible",level:3},{value:"indicatorStyle",id:"indicatorstyle",level:3},{value:"ongetTimeEvents",id:"ongettimeevents",level:3},{value:"selectedItemStyle",id:"selecteditemstyle",level:3},{value:"unselectedItemStyle",id:"unselecteditemstyle",level:3},{value:"scrollButtonStyle",id:"scrollbuttonstyle",level:3},{value:"selectedSeries",id:"selectedseries",level:3},{value:"selectedItem",id:"selecteditem",level:3},{value:"hzZoomStep",id:"hzzoomstep",level:3},{value:"scrollLeft",id:"scrollleft",level:3},{value:"dataSeries",id:"dataseries",level:3},{value:"passChartObject",id:"passchartobject",level:3},{value:"timeBased",id:"timebased",level:3},{value:"startTime",id:"starttime",level:3},{value:"endTime",id:"endtime",level:3},{value:"controllerId",id:"controllerid",level:3},{value:"zenMonthShortNames",id:"zenmonthshortnames",level:3},{value:"oldLabelCalc",id:"oldlabelcalc",level:3},{value:"FontYScale",id:"fontyscale",level:3},{value:"FontXScale",id:"fontxscale",level:3},{value:"debugBBox",id:"debugbbox",level:3},{value:"titleImage",id:"titleimage",level:3},{value:"titleImageStyle",id:"titleimagestyle",level:3},{value:"warnIfNoData",id:"warnifnodata",level:3},{value:"msgIfNoData",id:"msgifnodata",level:3},{value:"noDataOpacity",id:"nodataopacity",level:3},{value:"noDataFill",id:"nodatafill",level:3},{value:"noDataStroke",id:"nodatastroke",level:3},{value:"%yMajorUnits",id:"ymajorunits",level:3},{value:"%yMinorUnits",id:"yminorunits",level:3},{value:"%yLabelUnits",id:"ylabelunits",level:3},{value:"%yLabelAngle",id:"ylabelangle",level:3},{value:"%yLabelStyle",id:"ylabelstyle",level:3},{value:"%yMajorGrid",id:"ymajorgrid",level:3},{value:"%yMinorGrid",id:"yminorgrid",level:3},{value:"%yMajorGridStyle",id:"ymajorgridstyle",level:3},{value:"%yMinorGridStyle",id:"yminorgridstyle",level:3},{value:"%xMajorUnits",id:"xmajorunits",level:3},{value:"%xMinorUnits",id:"xminorunits",level:3},{value:"%xLabelUnits",id:"xlabelunits",level:3},{value:"%xLabelAngle",id:"xlabelangle",level:3},{value:"%xLabelStyle",id:"xlabelstyle",level:3},{value:"%xMajorGrid",id:"xmajorgrid",level:3},{value:"%xMinorGrid",id:"xminorgrid",level:3},{value:"%xMajorGridStyle",id:"xmajorgridstyle",level:3},{value:"%xMinorGridStyle",id:"xminorgridstyle",level:3},{value:"%yGridType",id:"ygridtype",level:3},{value:"%xGridType",id:"xgridtype",level:3},{value:"%plotLeft",id:"plotleft",level:3},{value:"%plotTop",id:"plottop",level:3},{value:"%rplotWidth",id:"rplotwidth",level:3},{value:"%plotHeight",id:"plotheight",level:3},{value:"%labelPad",id:"labelpad",level:3},{value:"%labelPadL",id:"labelpadl",level:3},{value:"%labelPadR",id:"labelpadr",level:3},{value:"%xMinValue",id:"xminvalue",level:3},{value:"%xMaxValue",id:"xmaxvalue",level:3},{value:"%oldXMax",id:"oldxmax",level:3},{value:"%yMinValue",id:"yminvalue",level:3},{value:"%yMaxValue",id:"ymaxvalue",level:3},{value:"%marginTop",id:"margintop-1",level:3},{value:"%marginBottom",id:"marginbottom-1",level:3},{value:"%legendRight",id:"legendright",level:3},{value:"%legendWidth",id:"legendwidth-1",level:3},{value:"%legendHeight",id:"legendheight-1",level:3},{value:"%labelBottom",id:"labelbottom",level:3},{value:"%legendVisible",id:"legendvisible-1",level:3},{value:"%xBaseValue",id:"xbasevalue",level:3},{value:"%yBaseValue",id:"ybasevalue",level:3},{value:"%xRange",id:"xrange",level:3},{value:"%yRange",id:"yrange",level:3},{value:"%yAxisTitle",id:"yaxistitle",level:3},{value:"%xAxisTitle",id:"xaxistitle",level:3},{value:"%marginLeft",id:"marginleft-1",level:3},{value:"%marginRight",id:"marginright-1",level:3},{value:"%plotLeftOut",id:"plotleftout",level:3},{value:"%plotRightOut",id:"plotrightout",level:3},{value:"%rplotRightOut",id:"rplotrightout",level:3},{value:"%rplotRight",id:"rplotright",level:3},{value:"%plotWidth",id:"plotwidth",level:3},{value:"%plotRight",id:"plotright",level:3},{value:"%hzMaxStep",id:"hzmaxstep",level:3},{value:"%maxScrollLeft",id:"maxscrollleft",level:3},{value:"%xAxisLabelH",id:"xaxislabelh",level:3},{value:"%dataSeries",id:"dataseries-1",level:3},{value:"%xAxisTitleH",id:"xaxistitleh",level:3},{value:"%plotTopOut",id:"plottopout",level:3},{value:"%plotBottomOut",id:"plotbottomout",level:3},{value:"%plotBottom",id:"plotbottom",level:3},{value:"%yAxisForSeries",id:"yaxisforseries",level:3},{value:"%scaleX",id:"scalex",level:3},{value:"%scaleY",id:"scaley",level:3},{value:"%controlBarH",id:"controlbarh",level:3},{value:"%yLabelOnTheRight",id:"ylabelontheright",level:3},{value:"%yLabelOnTheLeft",id:"ylabelontheleft",level:3},{value:"%xLabelOnTheTop",id:"xlabelonthetop",level:3},{value:"%xLabelOnTheBottom",id:"xlabelonthebottom",level:3},{value:"%date1900",id:"date1900",level:3},{value:"%offset",id:"offset",level:3},{value:"%startUnits",id:"startunits",level:3},{value:"%endUnits",id:"endunits",level:3},{value:"%majorUnits",id:"majorunits",level:3},{value:"%minorUnits",id:"minorunits",level:3},{value:"%pixPerSec",id:"pixpersec",level:3},{value:"%titleHeight",id:"titleheight",level:3},{value:"%maxXHeight",id:"maxxheight",level:3},{value:"%firstXLabelWidth",id:"firstxlabelwidth",level:3},{value:"%lastXLabelWidth",id:"lastxlabelwidth",level:3},{value:"%titleImageWidth",id:"titleimagewidth",level:3},{value:"%titleImageTop",id:"titleimagetop",level:3},{value:"%titleImageLeft",id:"titleimageleft",level:3},{value:"%timeEvents",id:"timeevents",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"SVGStyle",id:"svgstyle",level:3},{value:"SVGStyleNoHTML5",id:"svgstylenohtml5",level:3},{value:"SVGDef",id:"svgdef",level:3},{value:"SVGDefNoHTML5",id:"svgdefnohtml5",level:3},{value:"Methods",id:"methods",level:2},{value:"renderContents",id:"rendercontents",level:3},{value:"getCurrYAxis",id:"getcurryaxis",level:3},{value:"getXAxis",id:"getxaxis",level:3},{value:"getYAxis",id:"getyaxis",level:3},{value:"getYAxisCount",id:"getyaxiscount",level:3},{value:"getXAxisType",id:"getxaxistype",level:3},{value:"getYAxisType",id:"getyaxistype",level:3},{value:"getXAxisTitle",id:"getxaxistitle",level:3},{value:"getYAxisTitle",id:"getyaxistitle",level:3},{value:"is3D",id:"is3d",level:3},{value:"calculateRangeValues",id:"calculaterangevalues",level:3},{value:"initializeAxisProperties",id:"initializeaxisproperties",level:3},{value:"calculateAxisConstraints",id:"calculateaxisconstraints",level:3},{value:"findScaleUnits",id:"findscaleunits",level:3},{value:"renderPlotArea",id:"renderplotarea",level:3},{value:"hasAxes",id:"hasaxes",level:3},{value:"isTimeBased",id:"istimebased",level:3},{value:"renderAxes",id:"renderaxes",level:3},{value:"prepareAxisGroup",id:"prepareaxisgroup",level:3},{value:"createXLabelNode",id:"createxlabelnode",level:3},{value:"calculateXAxisTitleHeight",id:"calculatexaxistitleheight",level:3},{value:"calculateXAxisHeight",id:"calculatexaxisheight",level:3},{value:"renderXAxisTitle",id:"renderxaxistitle",level:3},{value:"renderXLabels",id:"renderxlabels",level:3},{value:"pickVerticalSkips",id:"pickverticalskips",level:3},{value:"calculateYAxisWidth",id:"calculateyaxiswidth",level:3},{value:"renderYAxisTitle",id:"renderyaxistitle",level:3},{value:"renderYLabels",id:"renderylabels",level:3},{value:"renderSeriesGroup",id:"renderseriesgroup",level:3},{value:"renderSeries",id:"renderseries",level:3},{value:"renderLegend",id:"renderlegend",level:3},{value:"calculateLegendDimensions",id:"calculatelegenddimensions",level:3},{value:"getPelToPixelVRatio",id:"getpeltopixelvratio",level:3},{value:"getPelToPixelHRatio",id:"getpeltopixelhratio",level:3},{value:"removeChildNodes",id:"removechildnodes",level:3},{value:"computeEffectiveExtents",id:"computeeffectiveextents",level:3},{value:"createSVGTextNode",id:"createsvgtextnode",level:3},{value:"stripWhitespace",id:"stripwhitespace",level:3},{value:"integrateStyleSpec",id:"integratestylespec",level:3},{value:"computeStyle",id:"computestyle",level:3},{value:"embedStyle",id:"embedstyle",level:3},{value:"getComputedFontSize",id:"getcomputedfontsize",level:3},{value:"renderTitle",id:"rendertitle",level:3},{value:"adjustChartTitle",id:"adjustcharttitle",level:3},{value:"getChartTitle",id:"getcharttitle",level:3},{value:"getChartSubtitle",id:"getchartsubtitle",level:3},{value:"renderBands",id:"renderbands",level:3},{value:"getPlotX",id:"getplotx",level:3},{value:"getPlotY",id:"getploty",level:3},{value:"getXLabelText",id:"getxlabeltext",level:3},{value:"getYLabelText",id:"getylabeltext",level:3},{value:"xToLogical",id:"xtological",level:3},{value:"yToLogical",id:"ytological",level:3},{value:"getNumericAbbreviation",id:"getnumericabbreviation",level:3},{value:"acquireData",id:"acquiredata",level:3},{value:"findDataRange",id:"finddatarange",level:3},{value:"useSumForRange",id:"usesumforrange",level:3},{value:"usePercentForRange",id:"usepercentforrange",level:3},{value:"getSeriesCount",id:"getseriescount",level:3},{value:"getDataSeriesCount",id:"getdataseriescount",level:3},{value:"getDataSeriesLength",id:"getdataserieslength",level:3},{value:"getSeriesNames",id:"getseriesnames",level:3},{value:"getLegendLabels",id:"getlegendlabels",level:3},{value:"getMarkerShape",id:"getmarkershape",level:3},{value:"getColorSchemeArray",id:"getcolorschemearray",level:3},{value:"getSeriesColor",id:"getseriescolor",level:3},{value:"getSeriesSize",id:"getseriessize",level:3},{value:"hasSelectedItem",id:"hasselecteditem",level:3},{value:"getSelectedStyle",id:"getselectedstyle",level:3},{value:"getSelectedSeries",id:"getselectedseries",level:3},{value:"getSelectedItem",id:"getselecteditem",level:3},{value:"createMarker",id:"createmarker",level:3},{value:"split",id:"split",level:3},{value:"Test",id:"test",level:3},{value:"getTextWidth",id:"gettextwidth",level:3},{value:"myCountSpaces",id:"mycountspaces",level:3},{value:"GetBBox",id:"getbbox",level:3},{value:"calcVertex",id:"calcvertex",level:3},{value:"min",id:"min",level:3},{value:"max",id:"max",level:3},{value:"computeScale",id:"computescale",level:3},{value:"computeXFontSize",id:"computexfontsize",level:3},{value:"computeYFontSize",id:"computeyfontsize",level:3},{value:"getComputedTextLength",id:"getcomputedtextlength",level:3},{value:"makeId",id:"makeid",level:3},{value:"%DrawToHTML",id:"drawtohtml",level:3},{value:"%DrawToXSLFO",id:"drawtoxslfo",level:3},{value:"getSeriesSVGGroup",id:"getseriessvggroup",level:3},{value:"getSeriesData",id:"getseriesdata",level:3},{value:"getStyleArray",id:"getstylearray",level:3},{value:"getRangeGroupForSeries",id:"getrangegroupforseries",level:3},{value:"plotLineForSeries",id:"plotlineforseries",level:3},{value:"plotLinkedLineForSeries",id:"plotlinkedlineforseries",level:3},{value:"getSeriesType",id:"getseriestype",level:3},{value:"unrender",id:"unrender",level:3},{value:"hasMultiples",id:"hasmultiples",level:3},{value:"computeXAxisTimeLine",id:"computexaxistimeline",level:3},{value:"renderXAxisTimeLine",id:"renderxaxistimeline",level:3},{value:"getTimeX",id:"gettimex",level:3},{value:"getCellInfo",id:"getcellinfo",level:3},{value:"calculateViewBox",id:"calculateviewbox",level:3},{value:"zenGet",id:"zenget",level:3},{value:"ParseCSSStyle",id:"parsecssstyle",level:3},{value:"getStartTime",id:"getstarttime",level:3},{value:"getEndTime",id:"getendtime",level:3},{value:"getLegendRectStyle",id:"getlegendrectstyle",level:3},{value:"getLegendsCount",id:"getlegendscount",level:3},{value:"getSeriesNamesSize",id:"getseriesnamessize",level:3},{value:"updateIndicator",id:"updateindicator",level:3},{value:"renderTimeEvents",id:"rendertimeevents",level:3}];function c(e){const s={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"zenreportdisplaycoschartcchartdualy",children:"%ZEN.Report.Display.COSChart.cchartDualY"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.COSChart.cchartDualY Extends (%ZEN.Report.Display.node, %ZEN.Report.Display.tableOutput) [ Deprecated, Inheritance = right, System = 4 ]\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This is the abstract base class from which all SVG chart components are derived.",(0,t.jsx)(s.br,{}),"\nA chart provides a base on which to display a specific type of chart (such as a barChart, lineChart, or pieChart).",(0,t.jsx)(s.br,{}),"\nThis base class defines the data, grid (axes and scales), styles, and legend used by charts.",(0,t.jsx)(s.br,{}),"\nAll charts are plotted onto a virtual coordinate space that measures 100 units by 100 units.",(0,t.jsx)(s.br,{}),"\nYou can adjust the visual aspects of a chart by setting the various properties of this class (plus any additional properties added by the specific chart subclass).",(0,t.jsx)(s.br,{}),"\nYou can adjust the x and y axis settings (such as scaling and range) via the xAxis and yAxis properties (which are objects of the type %ZEN.Auxiliary.axis)."]}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h3,{id:"defaultplottoedge",children:"DEFAULTPLOTTOEDGE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTPLOTTOEDGE As BOOLEAN = 1;\n"})}),"\n",(0,t.jsx)(s.p,{children:'Parameter SYSMODULE = "chart"; Default value for the plotToEdge property.'}),"\n",(0,t.jsx)(s.h3,{id:"defaultmarkersvisible",children:"DEFAULTMARKERSVISIBLE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTMARKERSVISIBLE As BOOLEAN = 0;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Default value for the markersVisible property."}),"\n",(0,t.jsx)(s.h3,{id:"defaultvaluelabelsvisible",children:"DEFAULTVALUELABELSVISIBLE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVALUELABELSVISIBLE As BOOLEAN = 0;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Default value for the valueLabelsVisible property."}),"\n",(0,t.jsx)(s.h3,{id:"defaultaspect",children:"DEFAULTASPECT"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DEFAULTASPECT = "none";\n'})}),"\n",(0,t.jsx)(s.p,{children:"Do not worry about preserving the aspect ratio."}),"\n",(0,t.jsx)(s.h3,{id:"defaultviewboxwidth",children:"DEFAULTVIEWBOXWIDTH;"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVIEWBOXWIDTH;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Default viewBoxWidth of this component. This is set to 100 to provide a fixed coordinate system for meters."}),"\n",(0,t.jsx)(s.h3,{id:"defaultviewboxheight",children:"DEFAULTVIEWBOXHEIGHT;"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTVIEWBOXHEIGHT;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Default viewBoxHeight of this component. This is set to 100 to provide a fixed coordinate system for meters."}),"\n",(0,t.jsx)(s.h3,{id:"defaultappearance",children:"DEFAULTAPPEARANCE"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Parameter DEFAULTAPPEARANCE = "2D";\n'})}),"\n",(0,t.jsx)(s.p,{children:"Default appearance of this component."}),"\n",(0,t.jsx)(s.h3,{id:"defaultautoscaletext",children:"DEFAULTAUTOSCALETEXT"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Parameter DEFAULTAUTOSCALETEXT As BOOLEAN = 1;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Default setting for autoscaling text as chart resizes"}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"field",children:"field"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property field As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"group",children:"group"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property group As %ZEN.Datatype.string(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"removeempty",children:"removeEmpty"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property removeEmpty As %ZEN.Datatype.boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0 ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"children",children:"children"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property children As list Of node(XMLPROJECTION = "NONE");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"viewboxwidth",children:"viewBoxWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property viewBoxWidth As %ZEN.Datatype.integer [ InitialExpression = {..#DEFAULTVIEWBOXWIDTH} ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, this is used to calculate the width of the viewBox attribute of the enclosing svg element."}),"\n",(0,t.jsx)(s.h3,{id:"viewboxheight",children:"viewBoxHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property viewBoxHeight As %ZEN.Datatype.integer [ InitialExpression = {..#DEFAULTVIEWBOXHEIGHT} ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, this is used to calculate the height of the viewBox attribute of the enclosing svg element."}),"\n",(0,t.jsx)(s.h3,{id:"showmultiples",children:"showMultiples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property showMultiples As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: If true, display chart as number of small multiple charts, one per data series. This is only used by charts that support small multiples otherwise it is ignored."}),"\n",(0,t.jsx)(s.h3,{id:"multipletitlestyle",children:"multipleTitleStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property multipleTitleStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:'Optional: style used for title text within each "multiple" charts. Used when showMultiples is enabled.'}),"\n",(0,t.jsx)(s.h3,{id:"currmultiple",children:"currMultiple"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property currMultiple As %ZEN.Datatype.integer(XMLPROJECTION = "none") [ Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal property used to track which multiple is being rendered."}),"\n",(0,t.jsx)(s.h3,{id:"height",children:"height"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property height As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Height of the chart within the report."}),"\n",(0,t.jsx)(s.h3,{id:"svggroup",children:"svgGroup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property svgGroup As %ZEN.Report.Display.COSChart.node;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"toplevel",children:"topLevel"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property topLevel As %ZEN.Report.Display.COSChart.node;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"xaxis",children:"xAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property xAxis As caxis(XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(s.p,{children:"x axis specification for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"yaxis",children:"yAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property yAxis As caxis(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Deprecated. y axis specifications for this chart. This is replaced by yAxisList. This property is kept here so that applications that set yAxis directly will still function."}),"\n",(0,t.jsx)(s.h3,{id:"yaxislist",children:"yAxisList"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property yAxisList As list Of caxis(XMLPROJECTION = "ELEMENT", XMLREF = 1, XMLTYPECONSTRAINT = "CHOICE");\n'})}),"\n",(0,t.jsx)(s.p,{children:"List of y axis specifications for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"backgroundstyle",children:"backgroundStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property backgroundStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for chart background panel."}),"\n",(0,t.jsx)(s.h3,{id:"plotareastyle",children:"plotAreaStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property plotAreaStyle As %ZEN.Datatype.svgStyle [ InitialExpression = "fill:url(#glow-silverDiag);" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for chart plot area panel."}),"\n",(0,t.jsx)(s.h3,{id:"plotedgestyle",children:"plotEdgeStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotEdgeStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: for charts with a 3D look, this style is applied to the edges on the left and bottom."}),"\n",(0,t.jsx)(s.h3,{id:"title",children:"title"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property title As %ZEN.Datatype.caption;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Title to display for chart."}),"\n",(0,t.jsx)(s.h3,{id:"subtitle",children:"subtitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property subtitle As %ZEN.Datatype.caption;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Subtitle to display for chart."}),"\n",(0,t.jsx)(s.h3,{id:"legendtitle",children:"legendTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendTitle As %ZEN.Datatype.caption;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Title to display for legend box."}),"\n",(0,t.jsx)(s.h3,{id:"titlealign",children:"titleAlign"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property titleAlign As %ZEN.Datatype.string(VALUELIST = ",center,left,right") [ InitialExpression = "center" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: alignment for title and subtitle."}),"\n",(0,t.jsx)(s.h3,{id:"titlestyle",children:"titleStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for title text."}),"\n",(0,t.jsx)(s.h3,{id:"subtitlestyle",children:"subtitleStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property subtitleStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for subtitle text."}),"\n",(0,t.jsx)(s.h3,{id:"titleboxstyle",children:"titleBoxStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleBoxStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for box underneath title text."}),"\n",(0,t.jsx)(s.h3,{id:"borderstyle",children:"borderStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property borderStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for border line inset from outer edge of chart."}),"\n",(0,t.jsx)(s.h3,{id:"stripesvisible",children:"stripesVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property stripesVisible As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: if true, draw stripes over value axis grid lines."}),"\n",(0,t.jsx)(s.h3,{id:"chartpivot",children:"chartPivot"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property chartPivot As %ZEN.Datatype.boolean;\n"})}),"\n",(0,t.jsx)(s.h3,{id:"stripestyle",children:"stripeStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property stripeStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for grid stripes (when enabled)."}),"\n",(0,t.jsx)(s.h3,{id:"borderoffset",children:"borderOffset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property borderOffset As %ZEN.Datatype.integer [ InitialExpression = 8 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: distance (in pixels) between the background rectangle and the border."}),"\n",(0,t.jsx)(s.h3,{id:"borderradius",children:"borderRadius"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property borderRadius As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: radius applied to the chart's background rectangle and border."}),"\n",(0,t.jsx)(s.h3,{id:"titlex",children:"titleX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleX As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a title, x-position (within the chart coordinate space) of the title. If not specified, then a default value is calculated."}),"\n",(0,t.jsx)(s.h3,{id:"titley",children:"titleY"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleY As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a title, y-position (within the chart coordinate space) of the title. If not specified, then a default value is calculated."}),"\n",(0,t.jsx)(s.h3,{id:"seriescount",children:"seriesCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesCount As %ZEN.Datatype.integer(MINVAL = 0);\n"})}),"\n",(0,t.jsx)(s.p,{children:'Number of data series to display on this chart. If "", then this is computed automatically from the chart\'s data source when the chart is connected to a dataController.'}),"\n",(0,t.jsx)(s.h3,{id:"seriessize",children:"seriesSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesSize As %ZEN.Datatype.integer(MINVAL = 0);\n"})}),"\n",(0,t.jsx)(s.p,{children:'Number of items within each data series to display on this chart. If "", then this is computed automatically from the chart\'s data source when the chart is connected to a dataController.'}),"\n",(0,t.jsx)(s.h3,{id:"seriescolors",children:"seriesColors"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesColors As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsxs)(s.p,{children:['Comma-delimited list of CSS color values used for data series. This can be set to a list of SVG fill color values, e.g., "red,green,blue" or "url(#glow-red),url(#glow-green),url(#glow-blue)".',(0,t.jsx)(s.br,{}),"\nThe first color is used by the first data series and so on. If there are more data series than colors, the colors are repeated.",(0,t.jsx)(s.br,{}),"\nIf this is not defined the colors defined by seriesColorScheme are used."]}),"\n",(0,t.jsx)(s.h3,{id:"datadrivenseriescolors",children:"dataDrivenSeriesColors"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property dataDrivenSeriesColors As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal used by DeepSee to support data-driven series colors"}),"\n",(0,t.jsx)(s.h3,{id:"datadrivenseriescolors-1",children:"%dataDrivenSeriesColors"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %dataDrivenSeriesColors As %List(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal used by DeepSee to support data-driven series colors"}),"\n",(0,t.jsx)(s.h3,{id:"dateformat",children:"dateFormat"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property dateFormat As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"seriescolors-1",children:"%seriesColors"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %seriesColors As %List(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"seriescolorsoverride",children:"seriesColorsOverride"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesColorsOverride As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Additional Comma-delimited list of CSS color values used for data series. If supplied, this is merged with the colors in the seriesColors list. This makes it possible to override specific colors within a chart while preserving the underlying default colors."}),"\n",(0,t.jsx)(s.h3,{id:"seriescolorscheme",children:"seriesColorScheme"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property seriesColorScheme As %ZEN.Datatype.string(VALUELIST = ",urban,tuscan,caribbean,rustbelt,bright,glow,gray,pastel,solid") [ InitialExpression = "tuscan" ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This is the name of a built-in color scheme used to plot data series for the chart.",(0,t.jsx)(s.br,{}),"\nIf seriesColors is defined, then this property is ignored."]}),"\n",(0,t.jsx)(s.h3,{id:"seriesnames",children:"seriesNames"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesNames As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Comma-delimited list of names used to label each data series in the legend box.",(0,t.jsx)(s.br,{}),"\nThis is a localized value (the entire list is treated as one localized string)."]}),"\n",(0,t.jsx)(s.h3,{id:"seriesnumber",children:"seriesNumber"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesNumber As %ZEN.Datatype.integer(MINVAL = 0);\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If defined then the chart will only plot the specified data series (0-based) when connected to a data controller. This is used by DeepSee in some cases."}),"\n",(0,t.jsx)(s.h3,{id:"seriesyaxes",children:"seriesYAxes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property seriesYAxes As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional. If defined, specifies which y-axis should be used for each data series. This is a csv-list of y-axis numbers (0-based). By default, the every data series uses y-axis 0."}),"\n",(0,t.jsx)(s.h3,{id:"curryaxis",children:"currYAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property currYAxis As %ZEN.Datatype.integer(MINVAL = 0) [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Specifies which yAxis definition is used to drive the chart yaxis (0 based)."}),"\n",(0,t.jsx)(s.h3,{id:"markershapes",children:"markerShapes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property markerShapes As %ZEN.Datatype.csv [ InitialExpression = "circle,up,down,square" ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Comma-delimited list of marker shapes used for data series markers. Possible values are 'up','down','square','circle'.",(0,t.jsx)(s.br,{}),"\nThis only applies to charts that support markers."]}),"\n",(0,t.jsx)(s.h3,{id:"markerscale",children:"markerScale"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property markerScale As %ZEN.Datatype.float [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Scaling applied to chart markers: A value of 1.0 (or '') will display markers with their default size. This only applies to charts that support markers."}),"\n",(0,t.jsx)(s.h3,{id:"gridstyle",children:"gridStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property gridStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: default style applied to all grid line elements for this chart. If defined, this style overrides any styles define in the CSS style definition for the page, but is in turn overridden by any styles defined by a specific axis element."}),"\n",(0,t.jsx)(s.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property labelStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: default style applied to all grid label elements for this chart. If defined, this style overrides any styles define in the CSS style definition for the page, but is in turn overridden by any styles defined by a specific axis element."}),"\n",(0,t.jsx)(s.h3,{id:"maxlabellen",children:"maxLabelLen"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property maxLabelLen As %ZEN.Datatype.integer [ InitialExpression = 20 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Maximum number of characters to display for an axis label."}),"\n",(0,t.jsx)(s.h3,{id:"axistitlestyle",children:"axisTitleStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property axisTitleStyle As %ZEN.Datatype.svgStyle [ InitialExpression = "opacity:0.5;" ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional: default style applied to axis titles for this chart.",(0,t.jsx)(s.br,{}),"\nThis is applied ",(0,t.jsx)(s.em,{children:"in addition"})," to the style supplied by labelStyle."]}),"\n",(0,t.jsx)(s.h3,{id:"labelsvisible",children:"labelsVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property labelsVisible As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"If true, display axis labels for this chart (or slice labels in the case of a pie chart)."}),"\n",(0,t.jsx)(s.h3,{id:"legendvisible",children:"legendVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property legendVisible As %ZEN.Datatype.string(VALUELIST = ",auto,false,true") [ InitialExpression = "auto" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:'If true, display a legend for this chart. If "auto" then the legend is displayed if there is more than one data series for the chart.'}),"\n",(0,t.jsx)(s.h3,{id:"legendx",children:"legendX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendX As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a legend, x-position (within the chart coordinate space) of legend box. If not specified a default position will be used."}),"\n",(0,t.jsx)(s.h3,{id:"legendy",children:"legendY"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendY As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a legend, y-position (within the chart coordinate space) of legend box. If not specified a default position will be used."}),"\n",(0,t.jsx)(s.h3,{id:"legendwidth",children:"legendWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendWidth As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a legend, width (within the chart coordinate space) of legend box. If not specified a default width will be used."}),"\n",(0,t.jsx)(s.h3,{id:"legendheight",children:"legendHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendHeight As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If this chart has a legend, height (within the chart coordinate space) of legend box. If not specified a default height (based on number of data series) will be used."}),"\n",(0,t.jsx)(s.h3,{id:"legendstyle",children:"legendStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for background of the legend box."}),"\n",(0,t.jsx)(s.h3,{id:"legendlabelstyle",children:"legendLabelStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendLabelStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for text within the legend box."}),"\n",(0,t.jsx)(s.h3,{id:"legendrectstyle",children:"legendRectStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendRectStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for rectangle indicating the current legend within the legend box."}),"\n",(0,t.jsx)(s.h3,{id:"legendlabels",children:"legendLabels"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property legendLabels As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: legendLabels"}),"\n",(0,t.jsx)(s.h3,{id:"legendposition",children:"legendPosition"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property legendPosition As %ZEN.Datatype.string(VALUELIST = ",top,left,bottom,right,none");\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: legend position"}),"\n",(0,t.jsx)(s.h3,{id:"margintop",children:"marginTop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginTop As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Margin (within the chart coordinate space) from top edge of chart to top edge of grid (plot area). If not specified, then this value will be automatically calculated."}),"\n",(0,t.jsx)(s.h3,{id:"marginbottom",children:"marginBottom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginBottom As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Margin (within the chart coordinate space) from bottom edge of chart to bottom edge of grid (plot area). If not specified, then this value will be automatically calculated."}),"\n",(0,t.jsx)(s.h3,{id:"marginleft",children:"marginLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginLeft As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Margin (within the chart coordinate space) from left edge of chart to left edge of grid (plot area). If not specified, then this width will be automatically calculated."}),"\n",(0,t.jsx)(s.h3,{id:"marginright",children:"marginRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property marginRight As %ZEN.Datatype.length;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Margin (within the chart coordinate space) from right edge of chart to right edge of grid (plot area). If not specified, then this width will be automatically calculated."}),"\n",(0,t.jsx)(s.h3,{id:"markersvisible",children:"markersVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property markersVisible As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTMARKERSVISIBLE} ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies whether markers should be displayed for the data points within the chart.",(0,t.jsx)(s.br,{}),"\nThis only applies to charts that display markers."]}),"\n",(0,t.jsx)(s.h3,{id:"valuelabelsvisible",children:"valueLabelsVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property valueLabelsVisible As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTVALUELABELSVISIBLE} ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Specifies whether values should be displayed for elements within the chart. This only applies to charts that display element values (such as bar charts)."}),"\n",(0,t.jsx)(s.h3,{id:"valuelabelstyle",children:"valueLabelStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property valueLabelStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for value labels. This only applies to charts that display element values (such as bar charts)."}),"\n",(0,t.jsx)(s.h3,{id:"valuelabelformat",children:"valueLabelFormat"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property valueLabelFormat As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: numeric format applied to value labels. This only applies to charts that display element values (such as bar charts)."}),"\n",(0,t.jsx)(s.h3,{id:"valueboxstyle",children:"valueBoxStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property valueBoxStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for boxes around value labels. This only applies to charts that display element values (such as bar charts)."}),"\n",(0,t.jsx)(s.h3,{id:"autoscaletext",children:"autoScaleText"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property autoScaleText As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTAUTOSCALETEXT} ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Specifies how the text elements of a chart should be handled when a chart is resized. If True, the text scales in proportion to the chart itself and all requested labels are rendered regardless of legibility. If false, the size of the text elements is fixed with respect to the page and some lables may be omitted to avoid visual overlap if insufficient space is provided to render the values should the chart be scaled down beyond certain thresholds"}),"\n",(0,t.jsx)(s.h3,{id:"plottoedge",children:"plotToEdge"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotToEdge As %ZEN.Datatype.boolean [ InitialExpression = {..#DEFAULTPLOTTOEDGE} ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies how values should be plotted along a category axis. If true, plot the first and last values on the edges of the plotArea (as in a line chart). If false, plot values in the centers of each unit (as in a bar chart).",(0,t.jsx)(s.br,{}),"\nThis is specified by subclasses."]}),"\n",(0,t.jsx)(s.h3,{id:"bandupper",children:"bandUpper"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandUpper As %ZEN.Datatype.float;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, then a colored band (specified by bandUpperStyle) is displayed on the plot area covering the range greater than this value;"}),"\n",(0,t.jsx)(s.h3,{id:"bandlower",children:"bandLower"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLower As %ZEN.Datatype.float;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, then a colored band (specified by bandLowerStyle) is displayed on the plot area covering the range lower than this value;"}),"\n",(0,t.jsx)(s.h3,{id:"bandupperstyle",children:"bandUpperStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandUpperStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for upper band on plot area."}),"\n",(0,t.jsx)(s.h3,{id:"bandlowerstyle",children:"bandLowerStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLowerStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for upper band on plot area."}),"\n",(0,t.jsx)(s.h3,{id:"bandright",children:"bandRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandRight As %ZEN.Datatype.float;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, then a colored band (specified by bandRightStyle) is displayed on the plot area covering the range greater than this value;"}),"\n",(0,t.jsx)(s.h3,{id:"bandleft",children:"bandLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLeft As %ZEN.Datatype.float;\n"})}),"\n",(0,t.jsx)(s.p,{children:"If defined, then a colored band (specified by bandLeftStyle) is displayed on the plot area covering the range lower than this value;"}),"\n",(0,t.jsx)(s.h3,{id:"bandrightstyle",children:"bandRightStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandRightStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for right band on plot area."}),"\n",(0,t.jsx)(s.h3,{id:"bandleftstyle",children:"bandLeftStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property bandLeftStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for left band on plot area."}),"\n",(0,t.jsx)(s.h3,{id:"axislinestyle",children:"axisLineStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property axisLineStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style applied to line drawn for x and y axes."}),"\n",(0,t.jsx)(s.h3,{id:"baselinestyle",children:"baseLineStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property baseLineStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style applied to base line."}),"\n",(0,t.jsx)(s.h3,{id:"appearance",children:"appearance"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property appearance As %ZEN.Datatype.string(VALUELIST = ",2D,3D") [ InitialExpression = {..#DEFAULTAPPEARANCE} ];\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Controls the appearance of this chart.",(0,t.jsx)(s.br,{}),'\nSet this to "2D" (the default) for a standard chart appearance.',(0,t.jsx)(s.br,{}),'\nSetting this to "3D" will give the chart a 3-D appearance; the plot area will appear to be recessed. Certain chart types, such are bar charts, will display items with a 3-D look.',(0,t.jsx)(s.br,{}),'\nFor pie charts, setting this to "3D" will display a pie chart with a 3-D appearance, but will not affect the plot area.']}),"\n",(0,t.jsx)(s.h3,{id:"textsize",children:"textSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property textSize As %ZEN.Datatype.string(VALUELIST = ",small,medium,large") [ InitialExpression = "medium" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:'Optional: if "medium", use the default font sizes specified by the CSS for the chart. if "small" or "large" adjust the size of any text in the chart that does not have an explicit style set (via a property).'}),"\n",(0,t.jsx)(s.h3,{id:"haszoom",children:"hasZoom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property hasZoom As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: if true, display zoom in/out buttons (for certain chart types)."}),"\n",(0,t.jsx)(s.h3,{id:"ongetdata",children:"ongetData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetData As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["ongetData method This method is called by the chart to get an array of values to plot for a data series. The array has the format values(s,i) where s is the series and is i is the member of the series and values(s,i) is numeric.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, chart, that is ",(0,t.jsx)(s.em,{children:"this"})," chart object."]}),"\n",(0,t.jsx)(s.h3,{id:"ongetlabelx",children:"ongetLabelX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetLabelX As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["ongetLabelX event handler: This method, if defined, is called by the chart to get the text for a given label on the x axis.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, value, that contains the ordinal number (0-based) of the label.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, chart, that is ",(0,t.jsx)(s.em,{children:"this"})," chart object."]}),"\n",(0,t.jsx)(s.h3,{id:"ongetlabely",children:"ongetLabelY"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetLabelY As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["ongetLabelY event handler: This method, if defined, is called by the chart to get the text for a given label on the y axis.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, value, that contains the ordinal number (0-based) of the label.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, chart, that is ",(0,t.jsx)(s.em,{children:"this"})," chart object."]}),"\n",(0,t.jsx)(s.h3,{id:"ongetseriesname",children:"ongetSeriesName"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetSeriesName As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["ongetSeriesName event handler: This method, if defined, is called by the chart to get the text for a given series number.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument that contains the ordinal number (0-based) of the series name.",(0,t.jsx)(s.br,{}),"\nThe method is passed an argument, chart, that is ",(0,t.jsx)(s.em,{children:"this"})," chart object."]}),"\n",(0,t.jsx)(s.h3,{id:"onrenderdata",children:"onrenderData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property onrenderData As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsxs)(s.p,{children:["onrenderData callback: This callback, if defined, is called by the chart just after it is finished displaying grid lines and data. The event handler is passed an argument, chart, that is ",(0,t.jsx)(s.em,{children:"this"})," chart object. If it also passed group, which is the SVG group to which any new svg content should be added."]}),"\n",(0,t.jsx)(s.h3,{id:"plotstyle",children:"plotStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property plotStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: default style applied to svg elements used for plotting data by this chart (such as the bars within a bar chart). Note: lines within line charts use the lineStyle property."}),"\n",(0,t.jsx)(s.h3,{id:"linestyle",children:"lineStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property lineStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: default style applied to svg line elements within line-style charts."}),"\n",(0,t.jsx)(s.h3,{id:"markerstyle",children:"markerStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property markerStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for series markers."}),"\n",(0,t.jsx)(s.h3,{id:"indicatorsvisible",children:"indicatorsVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property indicatorsVisible As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Specifies whether indicator lines should be displayed for the selected item within the chart.",(0,t.jsx)(s.br,{}),"\nThis only applies to charts that display indicator lines."]}),"\n",(0,t.jsx)(s.h3,{id:"indicatorstyle",children:"indicatorStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property indicatorStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used for indicators."}),"\n",(0,t.jsx)(s.h3,{id:"ongettimeevents",children:"ongetTimeEvents"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property ongetTimeEvents As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(s.p,{children:'ongetTimeEvents event handler: This event handler, if defined, is called by the chart to get an array of "time events" to display for a time chart.'}),"\n",(0,t.jsx)(s.h3,{id:"selecteditemstyle",children:"selectedItemStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property selectedItemStyle As %ZEN.Datatype.svgStyle [ InitialExpression = "stroke:darkgreen;stroke-width:3px;" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used to indicate the current selected chart element."}),"\n",(0,t.jsx)(s.h3,{id:"unselecteditemstyle",children:"unselectedItemStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property unselectedItemStyle As %ZEN.Datatype.svgStyle [ InitialExpression = "opacity:0.5;" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style used to indicate unselected chart elements. This is used when there is a selected element."}),"\n",(0,t.jsx)(s.h3,{id:"scrollbuttonstyle",children:"scrollButtonStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property scrollButtonStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: style applied to zoom and scroll buttons when visible."}),"\n",(0,t.jsx)(s.h3,{id:"selectedseries",children:"selectedSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property selectedSeries As %ZEN.Datatype.integer [ InitialExpression = -1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Series number (0-based) of currently selected chart element, if any."}),"\n",(0,t.jsx)(s.h3,{id:"selecteditem",children:"selectedItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property selectedItem As %ZEN.Datatype.integer [ InitialExpression = -1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Item number (0-based) of currently selected chart element, if any."}),"\n",(0,t.jsx)(s.h3,{id:"hzzoomstep",children:"hzZoomStep"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property hzZoomStep As %ZEN.Datatype.float(XMLPROJECTION = "none") [ InitialExpression = 0, Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal horizontal zoom factor. 0 is fully zoomed out; each increase of 1 doubles the number of visible items."}),"\n",(0,t.jsx)(s.h3,{id:"scrollleft",children:"scrollLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property scrollLeft As %ZEN.Datatype.float(XMLPROJECTION = "none") [ InitialExpression = 0.0, Internal ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"Internal amount of horizontal scroll."}),"\n",(0,t.jsx)(s.h3,{id:"dataseries",children:"dataSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property dataSeries As list Of dataSeries(XMLNAME = "dataSeries", XMLPROJECTION = "ELEMENT");\n'})}),"\n",(0,t.jsx)(s.p,{children:"A dataSeries used to provide a series-worth of data for the report"}),"\n",(0,t.jsx)(s.h3,{id:"passchartobject",children:"passChartObject"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property passChartObject As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"pass the chart object to onget... methods, set it to false for old behavior where no chart object passed"}),"\n",(0,t.jsx)(s.h3,{id:"timebased",children:"timeBased"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property timeBased As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: If true, then the x-axis for this chart is a time line displaying date values from startTime to endTime. In this case, the series names for data are interpreted as time values (YYYY-MM-DD HH:MM:SS). This setting only works in a few cases, namely non-pivotted line charts. For all other cases this setting is ignored."}),"\n",(0,t.jsx)(s.h3,{id:"starttime",children:"startTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property startTime As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Earliest displayed time (as YYYY-MM-DD HH:MM:SS). This is used for the x axis in a timeBased chart."}),"\n",(0,t.jsx)(s.h3,{id:"endtime",children:"endTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property endTime As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Latest displayed time (as YYYY-MM-DD HH:MM:SS). This is used for the x axis in a timeBased chart."}),"\n",(0,t.jsx)(s.h3,{id:"controllerid",children:"controllerId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property controllerId As %ZEN.Datatype.id(COMPONENTTYPE = "dataController");\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Optional. The id of the %ZEN.Report.Display.COSChart.abstractController object that provides data for this chart.",(0,t.jsx)(s.br,{}),"\nIf provided, this must be the valid id of a %ZEN.Report.Display.COSChart.abstractController object."]}),"\n",(0,t.jsx)(s.h3,{id:"zenmonthshortnames",children:"zenMonthShortNames"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property zenMonthShortNames As %ZEN.Datatype.caption(XMLPROJECTION = "none") [ InitialExpression = "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec" ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"oldlabelcalc",children:"oldLabelCalc"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property oldLabelCalc As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"turns on category value calcuation of JMD1100 (this is in JSL3955)"}),"\n",(0,t.jsx)(s.h3,{id:"fontyscale",children:"FontYScale"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property FontYScale As %ZEN.Datatype.float [ InitialExpression = 1.0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"adjust calculated height of text by multiplying by FontYScale"}),"\n",(0,t.jsx)(s.h3,{id:"fontxscale",children:"FontXScale"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property FontXScale As %ZEN.Datatype.float [ InitialExpression = .75 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"adjust calculated width of text by multiplying by FontXScale"}),"\n",(0,t.jsx)(s.h3,{id:"debugbbox",children:"debugBBox"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property debugBBox As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"used for debugging label placement JSL3955"}),"\n",(0,t.jsx)(s.h3,{id:"titleimage",children:"titleImage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleImage As %ZEN.Datatype.uri;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional: URL of image to display within the title area."}),"\n",(0,t.jsx)(s.h3,{id:"titleimagestyle",children:"titleImageStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property titleImageStyle As %ZEN.Datatype.svgStyle;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Optional. Style for titleImage: left,top,width, and height."}),"\n",(0,t.jsx)(s.h3,{id:"warnifnodata",children:"warnIfNoData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property warnIfNoData As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set to 1 to display a localized warning message if chart has no data"}),"\n",(0,t.jsx)(s.h3,{id:"msgifnodata",children:"msgIfNoData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property msgIfNoData As %ZEN.Datatype.caption [ InitialExpression = "No Data" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"localized warning message if chart has no data"}),"\n",(0,t.jsx)(s.h3,{id:"nodataopacity",children:"noDataOpacity"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Property noDataOpacity As %ZEN.Datatype.float [ InitialExpression = 1.0 ];\n"})}),"\n",(0,t.jsx)(s.p,{children:"opacity of no data message background rectangle"}),"\n",(0,t.jsx)(s.h3,{id:"nodatafill",children:"noDataFill"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property noDataFill As %ZEN.Datatype.color [ InitialExpression = "red" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"fill color rectange"}),"\n",(0,t.jsx)(s.h3,{id:"nodatastroke",children:"noDataStroke"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property noDataStroke As %ZEN.Datatype.color [ InitialExpression = "white" ];\n'})}),"\n",(0,t.jsx)(s.p,{children:"color of message"}),"\n",(0,t.jsx)(s.h3,{id:"ymajorunits",children:"%yMajorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMajorUnits As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yminorunits",children:"%yMinorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMinorUnits As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ylabelunits",children:"%yLabelUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yLabelUnits As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ylabelangle",children:"%yLabelAngle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yLabelAngle As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ylabelstyle",children:"%yLabelStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yLabelStyle As %String(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ymajorgrid",children:"%yMajorGrid"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMajorGrid As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yminorgrid",children:"%yMinorGrid"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMinorGrid As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ymajorgridstyle",children:"%yMajorGridStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMajorGridStyle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yminorgridstyle",children:"%yMinorGridStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMinorGridStyle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xmajorunits",children:"%xMajorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMajorUnits As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xminorunits",children:"%xMinorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMinorUnits As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xlabelunits",children:"%xLabelUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xLabelUnits As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xlabelangle",children:"%xLabelAngle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xLabelAngle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xlabelstyle",children:"%xLabelStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xLabelStyle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xmajorgrid",children:"%xMajorGrid"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMajorGrid As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xminorgrid",children:"%xMinorGrid"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMinorGrid As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xmajorgridstyle",children:"%xMajorGridStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMajorGridStyle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xminorgridstyle",children:"%xMinorGridStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMinorGridStyle As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ygridtype",children:"%yGridType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yGridType As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xgridtype",children:"%xGridType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xGridType As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotleft",children:"%plotLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotLeft As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plottop",children:"%plotTop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotTop As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"rplotwidth",children:"%rplotWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %rplotWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotheight",children:"%plotHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotHeight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"labelpad",children:"%labelPad"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %labelPad As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"labelpadl",children:"%labelPadL"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %labelPadL As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"labelpadr",children:"%labelPadR"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %labelPadR As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xminvalue",children:"%xMinValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMinValue As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xmaxvalue",children:"%xMaxValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xMaxValue As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"oldxmax",children:"%oldXMax"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %oldXMax As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yminvalue",children:"%yMinValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMinValue As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ymaxvalue",children:"%yMaxValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yMaxValue As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"margintop-1",children:"%marginTop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %marginTop As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"marginbottom-1",children:"%marginBottom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %marginBottom As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"legendright",children:"%legendRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %legendRight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"legendwidth-1",children:"%legendWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %legendWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"legendheight-1",children:"%legendHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %legendHeight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"labelbottom",children:"%labelBottom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %labelBottom As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"legendvisible-1",children:"%legendVisible"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %legendVisible As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xbasevalue",children:"%xBaseValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xBaseValue As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ybasevalue",children:"%yBaseValue"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yBaseValue As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xrange",children:"%xRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xRange As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yrange",children:"%yRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yRange As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yaxistitle",children:"%yAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yAxisTitle As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xaxistitle",children:"%xAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xAxisTitle As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"marginleft-1",children:"%marginLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %marginLeft As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"marginright-1",children:"%marginRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %marginRight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotleftout",children:"%plotLeftOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotLeftOut As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotrightout",children:"%plotRightOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotRightOut As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"rplotrightout",children:"%rplotRightOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %rplotRightOut As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"rplotright",children:"%rplotRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %rplotRight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotwidth",children:"%plotWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotright",children:"%plotRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotRight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"hzmaxstep",children:"%hzMaxStep"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %hzMaxStep As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"maxscrollleft",children:"%maxScrollLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %maxScrollLeft As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xaxislabelh",children:"%xAxisLabelH"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xAxisLabelH As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"dataseries-1",children:"%dataSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %dataSeries As %Double(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xaxistitleh",children:"%xAxisTitleH"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xAxisTitleH As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plottopout",children:"%plotTopOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotTopOut As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotbottomout",children:"%plotBottomOut"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotBottomOut As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"plotbottom",children:"%plotBottom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %plotBottom As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"yaxisforseries",children:"%yAxisForSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yAxisForSeries As %List(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h3,{id:"scalex",children:"%scaleX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %scaleX As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"scaley",children:"%scaleY"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %scaleY As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"controlbarh",children:"%controlBarH"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %controlBarH As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ylabelontheright",children:"%yLabelOnTheRight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yLabelOnTheRight As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"ylabelontheleft",children:"%yLabelOnTheLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %yLabelOnTheLeft As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xlabelonthetop",children:"%xLabelOnTheTop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xLabelOnTheTop As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"xlabelonthebottom",children:"%xLabelOnTheBottom"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %xLabelOnTheBottom As %Boolean(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"date1900",children:"%date1900"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %date1900 As Date(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"offset",children:"%offset"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %offset As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"startunits",children:"%startUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %startUnits As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"endunits",children:"%endUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %endUnits As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"majorunits",children:"%majorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %majorUnits As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"minorunits",children:"%minorUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %minorUnits As %String(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"pixpersec",children:"%pixPerSec"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %pixPerSec As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"titleheight",children:"%titleHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %titleHeight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"maxxheight",children:"%maxXHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %maxXHeight As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"firstxlabelwidth",children:"%firstXLabelWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %firstXLabelWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"lastxlabelwidth",children:"%lastXLabelWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %lastXLabelWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"titleimagewidth",children:"%titleImageWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %titleImageWidth As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"titleimagetop",children:"%titleImageTop"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %titleImageTop As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"titleimageleft",children:"%titleImageLeft"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %titleImageLeft As %Double(XMLPROJECTION = "none");\n'})}),"\n",(0,t.jsx)(s.h3,{id:"timeevents",children:"%timeEvents"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:'Property %timeEvents As %String(XMLPROJECTION = "none") [ MultiDimensional ];\n'})}),"\n",(0,t.jsx)(s.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(s.h3,{id:"svgstyle",children:"SVGStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyle\n"})}),"\n",(0,t.jsx)(s.h3,{id:"svgstylenohtml5",children:"SVGStyleNoHTML5"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGStyleNoHTML5\n"})}),"\n",(0,t.jsx)(s.h3,{id:"svgdef",children:"SVGDef"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGDef\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set of standard svg defs shared by all svg components."}),"\n",(0,t.jsx)(s.h3,{id:"svgdefnohtml5",children:"SVGDefNoHTML5"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"XData SVGDefNoHTML5\n"})}),"\n",(0,t.jsx)(s.p,{children:"Set of standard svg defs shared by all svg components."}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"rendercontents",children:"renderContents"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderContents()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Client-side method to render control."}),"\n",(0,t.jsx)(s.h3,{id:"getcurryaxis",children:"getCurrYAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getCurrYAxis(which)\n"})}),"\n",(0,t.jsx)(s.p,{children:'Get the current y Axis definition used for this chart. which is "left" or "right".'}),"\n",(0,t.jsx)(s.h3,{id:"getxaxis",children:"getXAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxis()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the x Axis definition for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getyaxis",children:"getYAxis"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxis(index)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the y Axis definition for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getyaxiscount",children:"getYAxisCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxisCount()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the number of y Axis definitions for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getxaxistype",children:"getXAxisType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxisType()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the type of x axis (category or value) used by this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getyaxistype",children:"getYAxisType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxisType()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the type of y axis (category or value) used by this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getxaxistitle",children:"getXAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXAxisTitle()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the x axis title."}),"\n",(0,t.jsx)(s.h3,{id:"getyaxistitle",children:"getYAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYAxisTitle(which)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the y axis title."}),"\n",(0,t.jsx)(s.h3,{id:"is3d",children:"is3D"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method is3D()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Indicates whether this chart should be drawn with a 3-D appearance."}),"\n",(0,t.jsx)(s.h3,{id:"calculaterangevalues",children:"calculateRangeValues"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateRangeValues() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method: Set up range and other information."}),"\n",(0,t.jsx)(s.h3,{id:"initializeaxisproperties",children:"initializeAxisProperties"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method initializeAxisProperties()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"calculateaxisconstraints",children:"calculateAxisConstraints"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateAxisConstraints()\n"})}),"\n",(0,t.jsx)(s.p,{children:"If the plot has axes, pre-calculate the internal values that will be used to govern how those axes are rendered"}),"\n",(0,t.jsx)(s.h3,{id:"findscaleunits",children:"findScaleUnits"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method findScaleUnits(val) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method: Find best scale units to use for given value."}),"\n",(0,t.jsx)(s.h3,{id:"renderplotarea",children:"renderPlotArea"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderPlotArea()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the plot area of the chart."}),"\n",(0,t.jsx)(s.h3,{id:"hasaxes",children:"hasAxes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasAxes()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Indicates that this chart has axes and associated grids A subclass may override this to turn off axis display."}),"\n",(0,t.jsx)(s.h3,{id:"istimebased",children:"isTimeBased"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method isTimeBased()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Test if a time-based x axis should be used. This is overridden in subclasses."}),"\n",(0,t.jsx)(s.h3,{id:"renderaxes",children:"renderAxes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderAxes()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the x and y axes and grid lines."}),"\n",(0,t.jsx)(s.h3,{id:"prepareaxisgroup",children:"prepareAxisGroup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method prepareAxisGroup(idName, parentNode)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Prepare the axis group for population with axis information"}),"\n",(0,t.jsx)(s.h3,{id:"createxlabelnode",children:"createXLabelNode"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method createXLabelNode(index, fontSize, style, angle, group)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"calculatexaxistitleheight",children:"calculateXAxisTitleHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateXAxisTitleHeight()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"calculatexaxisheight",children:"calculateXAxisHeight"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateXAxisHeight()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"renderxaxistitle",children:"renderXAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderXAxisTitle(group)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the title section for the Y axis (if any) and return the height reserved for the rendering"}),"\n",(0,t.jsx)(s.h3,{id:"renderxlabels",children:"renderXLabels"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderXLabels()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the labels for the x axis."}),"\n",(0,t.jsx)(s.h3,{id:"pickverticalskips",children:"pickVerticalSkips"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method pickVerticalSkips(flag, max)\n"})}),"\n",(0,t.jsx)(s.p,{children:"IF all went as expected, the idx array should have the indices of the labels we'd like to print, the lWidth array should have the native widths of each label and maxWidth should be the length of the longest label. Now we need to print them. This is the core of the vertical decimation algorithm. Given a maximum number of label to choose from an array, pick a subset that will (hopefully) use the available space effectively and keep things visually balanced."}),"\n",(0,t.jsx)(s.h3,{id:"calculateyaxiswidth",children:"calculateYAxisWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateYAxisWidth(which) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method to calculate how much room should be reserved for the Y axis area. This includes both the axis title and the individual labels"}),"\n",(0,t.jsx)(s.h3,{id:"renderyaxistitle",children:"renderYAxisTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderYAxisTitle(group, which, xpos)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the title section for the Y axis (if any) and return the width reserved for the rendering"}),"\n",(0,t.jsx)(s.h3,{id:"renderylabels",children:"renderYLabels"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderYLabels(which)\n"})}),"\n",(0,t.jsx)(s.p,{children:'Draw the labels for the y axis. If test is true, then this is a "test" plot to determine the max width of the labels.'}),"\n",(0,t.jsx)(s.h3,{id:"renderseriesgroup",children:"renderSeriesGroup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeriesGroup()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the data series for this chart. This method renders the container for the data series and then invokes a sub-class specific renderSeries method."}),"\n",(0,t.jsx)(s.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderSeries(group)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw data series for this chart. This is implemented by subclasses. group is the SVG container for the chart components."}),"\n",(0,t.jsx)(s.h3,{id:"renderlegend",children:"renderLegend"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderLegend()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the legend for the chart."}),"\n",(0,t.jsx)(s.h3,{id:"calculatelegenddimensions",children:"calculateLegendDimensions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateLegendDimensions()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the legend for the chart."}),"\n",(0,t.jsx)(s.h3,{id:"getpeltopixelvratio",children:"getPelToPixelVRatio"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getPelToPixelVRatio()\n"})}),"\n",(0,t.jsx)(s.p,{children:"The Normalized viewbox ranges from 0 0 to 100 100, the physical space occupied by the chart is specified as the width and height (in pixels) of the base SVG group. This function returns a mapping of logical picture units to pixels in the vertical direction."}),"\n",(0,t.jsx)(s.h3,{id:"getpeltopixelhratio",children:"getPelToPixelHRatio"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getPelToPixelHRatio()\n"})}),"\n",(0,t.jsx)(s.p,{children:"The Normalized viewbox ranges from 0 0 to 100 100, the physical space occupied by the chart is specified as the width and height (in pixels) of the base SVG group. This function returns a mapping of logical picture units to pixels in the horizontal direction."}),"\n",(0,t.jsx)(s.h3,{id:"removechildnodes",children:"removeChildNodes"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method removeChildNodes(node As node)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"computeeffectiveextents",children:"computeEffectiveExtents"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeEffectiveExtents(x, y, w, h, angle) As extent\n"})}),"\n",(0,t.jsx)(s.h3,{id:"createsvgtextnode",children:"createSVGTextNode"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method createSVGTextNode(caption, fontSize, autoScale, align, rotate, parentNode, txtClass, txtStyle) As node\n"})}),"\n",(0,t.jsx)(s.p,{children:"Create a text node."}),"\n",(0,t.jsx)(s.h3,{id:"stripwhitespace",children:"stripWhitespace"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method stripWhitespace(str)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"integratestylespec",children:"integrateStyleSpec"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method integrateStyleSpec(styleNVP As styleNVP, newRule As %String)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Integrate a new Style specification into an existing set of name-value style pairs, adding and overwriting existing styles as appropriate"}),"\n",(0,t.jsx)(s.h3,{id:"computestyle",children:"computeStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeStyle(className, idName)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Compute and return the effective style that governs the rendering of a given SVG element based on class and Id"}),"\n",(0,t.jsx)(s.h3,{id:"embedstyle",children:"embedStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method embedStyle(element, styleNVP)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Embed the various settings of a computed style name-value object as direct attributes of the given node."}),"\n",(0,t.jsx)(s.h3,{id:"getcomputedfontsize",children:"getComputedFontSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getComputedFontSize(styleNVP, defaultMedium, defaultSmall, defaultLarge)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Given a resolved style name-value pairing object, return the specified font size, if none has been specified, return one of three default values based on the value of the textSize property."}),"\n",(0,t.jsx)(s.h3,{id:"rendertitle",children:"renderTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderTitle()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the title for the chart. Return the height of the title."}),"\n",(0,t.jsx)(s.h3,{id:"adjustcharttitle",children:"adjustChartTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method adjustChartTitle()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Adjust position of chart title and legend (if needed)."}),"\n",(0,t.jsx)(s.h3,{id:"getcharttitle",children:"getChartTitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getChartTitle()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get title for the chart."}),"\n",(0,t.jsx)(s.h3,{id:"getchartsubtitle",children:"getChartSubtitle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getChartSubtitle()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get subtitle for the chart."}),"\n",(0,t.jsx)(s.h3,{id:"renderbands",children:"renderBands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderBands()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw the upper/lower bands for the chart."}),"\n",(0,t.jsx)(s.h3,{id:"getplotx",children:"getPlotX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getPlotX(val)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Given a logical value, return the corresponding x-axis coordinate."}),"\n",(0,t.jsx)(s.h3,{id:"getploty",children:"getPlotY"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getPlotY(val, yAxisNo)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Given a logical value, return the corresponding y-axis coordinate."}),"\n",(0,t.jsx)(s.h3,{id:"getxlabeltext",children:"getXLabelText"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getXLabelText(val, base, noformat)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Given a logical value, return the text to use for an axis label. Subclasses can override this for custom behavior."}),"\n",(0,t.jsx)(s.h3,{id:"getylabeltext",children:"getYLabelText"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getYLabelText(val, yAxisNo, base)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Given a logical value, return the text to use for an axis label. Subclasses can override this for custom behavior."}),"\n",(0,t.jsx)(s.h3,{id:"xtological",children:"xToLogical"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method xToLogical(val)\n"})}),"\n",(0,t.jsx)(s.p,{children:'Convert a user-provided x-coordinate into 0-100 logical space. This means: 10 returns 10, but "10px" is converted using the current width of the chart.'}),"\n",(0,t.jsx)(s.h3,{id:"ytological",children:"yToLogical"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method yToLogical(val)\n"})}),"\n",(0,t.jsx)(s.p,{children:'Convert a user-provided y-coordinate into 0-100 logical space. This means: 10 returns 10, but "10px" is converted using the current height of the chart.'}),"\n",(0,t.jsx)(s.h3,{id:"getnumericabbreviation",children:"getNumericAbbreviation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getNumericAbbreviation(val, min, max)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return a numeric abbreviation for a value. min and max are range that value falls within. E.g., 10K for 10000"}),"\n",(0,t.jsx)(s.h3,{id:"acquiredata",children:"acquireData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method acquireData() [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method: acquire data for this chart and store a copy in a local cache."}),"\n",(0,t.jsx)(s.h3,{id:"finddatarange",children:"findDataRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method findDataRange(yAxisNo) [ Internal ]\n"})}),"\n",(0,t.jsx)(s.p,{children:"Internal method: return (as an object) the minimum and maximum data values for this chart. This is used for ranges that are automatically calculated."}),"\n",(0,t.jsx)(s.h3,{id:"usesumforrange",children:"useSumForRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method useSumForRange()\n"})}),"\n",(0,t.jsx)(s.p,{children:'This method returns true if data series should be summed when calculating data range for the chart. Typically a chart will return true if it is in "stacked" mode.'}),"\n",(0,t.jsx)(s.h3,{id:"usepercentforrange",children:"usePercentForRange"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method usePercentForRange()\n"})}),"\n",(0,t.jsx)(s.p,{children:'This method returns true if data series is a "percentage bar chart" and so calculated data range should be 0 to 100%'}),"\n",(0,t.jsx)(s.h3,{id:"getseriescount",children:"getSeriesCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesCount()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the number of data series for this chart."}),"\n",(0,t.jsx)(s.h3,{id:"getdataseriescount",children:"getDataSeriesCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getDataSeriesCount()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getdataserieslength",children:"getDataSeriesLength"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getDataSeriesLength()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the length of %dataSeries(0)"}),"\n",(0,t.jsx)(s.h3,{id:"getseriesnames",children:"getSeriesNames"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesNames() As %List\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Return an array containing the names of the data series for this chart.",(0,t.jsx)(s.br,{}),"\nIf a name is missing, the series number is used."]}),"\n",(0,t.jsx)(s.h3,{id:"getlegendlabels",children:"getLegendLabels"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getLegendLabels()\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Return an array of labels to display within the Legend box.",(0,t.jsx)(s.br,{}),"\nDefault implementation is to return a list of series names."]}),"\n",(0,t.jsx)(s.h3,{id:"getmarkershape",children:"getMarkerShape"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getMarkerShape(series)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the marker type that should be used for the given series."}),"\n",(0,t.jsx)(s.h3,{id:"getcolorschemearray",children:"getColorSchemeArray"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getColorSchemeArray(scheme) As %List\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return an array of color values for given data series color scheme."}),"\n",(0,t.jsx)(s.h3,{id:"getseriescolor",children:"getSeriesColor"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesColor(series)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the CSS color that should be used for the given series. 0 based"}),"\n",(0,t.jsx)(s.h3,{id:"getseriessize",children:"getSeriesSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesSize()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the number of items within each data series (this assumes that all data series have the same number of items)."}),"\n",(0,t.jsx)(s.h3,{id:"hasselecteditem",children:"hasSelectedItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasSelectedItem()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns if there is a current selected element."}),"\n",(0,t.jsx)(s.h3,{id:"getselectedstyle",children:"getSelectedStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSelectedStyle(series, item, isMarker)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return any addition select/unselect style to apply to a chart element."}),"\n",(0,t.jsx)(s.h3,{id:"getselectedseries",children:"getSelectedSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSelectedSeries()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns index number (0-based) of the data series of the current selected item, or -1 if there is no current selection."}),"\n",(0,t.jsx)(s.h3,{id:"getselecteditem",children:"getSelectedItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSelectedItem()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Returns index number (0-based) of the current selected item, or -1 if there is no current selection."}),"\n",(0,t.jsx)(s.h3,{id:"createmarker",children:"createMarker"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method createMarker(series, item, x, y, color, type, noevents) As node\n"})}),"\n",(0,t.jsx)(s.p,{children:"Create a plot marker. This may be used by subclasses to display markers. type can be 'up','down','circle','square'."}),"\n",(0,t.jsx)(s.h3,{id:"split",children:"split"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod split(str As %String, delim As %String, isXMLEscaped As %Boolean = 0) As %List\n"})}),"\n",(0,t.jsx)(s.h3,{id:"test",children:"Test"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Test()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"gettextwidth",children:"getTextWidth"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getTextWidth(text, xfontsize)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"mycountspaces",children:"myCountSpaces"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method myCountSpaces(text)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getbbox",children:"GetBBox"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetBBox(text As node, rotate, scaleX, scaleY, align) As bbox\n"})}),"\n",(0,t.jsx)(s.h3,{id:"calcvertex",children:"calcVertex"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calcVertex(x0, y0, x, y, theta, Output x2, Output y2)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"min",children:"min"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method min(x1, x2, x3, x4)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"max",children:"max"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method max(x1, x2, x3, x4)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"computescale",children:"computeScale"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeScale(size, axis)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"computexfontsize",children:"computeXFontSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeXFontSize(text As node, size As %Double)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"computeyfontsize",children:"computeYFontSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeYFontSize(text As node, size As %Double)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getcomputedtextlength",children:"getComputedTextLength"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getComputedTextLength(text As node) As %Double\n"})}),"\n",(0,t.jsx)(s.h3,{id:"makeid",children:"makeId"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method makeId(id As %String)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"drawtohtml",children:"%DrawToHTML"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToHTML(ByRef context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream, ByRef incell As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"drawtoxslfo",children:"%DrawToXSLFO"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method %DrawToXSLFO(ByRef context As %String, XSL As %GlobalCharacterStream, delay As %GlobalCharacterStream, ByRef incell As %Boolean) As %Status\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getseriessvggroup",children:"getSeriesSVGGroup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesSVGGroup()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return svg group elemment that contains the data series elements."}),"\n",(0,t.jsx)(s.h3,{id:"getseriesdata",children:"getSeriesData"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesData(series) As %List\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return data values for the given series (0-based) from the chart's data cache. Return data in %List format."}),"\n",(0,t.jsx)(s.h3,{id:"getstylearray",children:"getStyleArray"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getStyleArray(styles As %String, ByRef array As %String)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getrangegroupforseries",children:"getRangeGroupForSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getRangeGroupForSeries(series)\n"})}),"\n",(0,t.jsx)(s.p,{children:'Indicate which "group" should be used for computing axis ranges. This is overridden by combo charts.'}),"\n",(0,t.jsx)(s.h3,{id:"plotlineforseries",children:"plotLineForSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method plotLineForSeries(group, s, ByRef data, stacked, chartFilled, markersVisible, hasEvents)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw a line for one data series, s (0-based). data contains the data for all series as an array of arrays. in Java Script s was 0-based, in this code it is 0 based Data is 0-based, colors and shapes are 0-based"}),"\n",(0,t.jsx)(s.h3,{id:"plotlinkedlineforseries",children:"plotLinkedLineForSeries"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method plotLinkedLineForSeries(group, s, ByRef data, stacked, chartFilled, markersVisible, hasEvents)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Draw a line for one data series, s (0-based). data contains the data for all series as an array of arrays. in Java Script s was 0-based, in this code it is 0 based Data is 0-based, colors and shapes are 0-based"}),"\n",(0,t.jsx)(s.h3,{id:"getseriestype",children:"getSeriesType"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesType(series)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return the type (how a series should be displayed) for the given data series (0-based). This is used by combo chart and ignored by all others."}),"\n",(0,t.jsx)(s.h3,{id:"unrender",children:"unrender"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method unrender()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Remove the inner SVG for this component. See %ZEN.Display.COSCHart.node for methods being called"}),"\n",(0,t.jsx)(s.h3,{id:"hasmultiples",children:"hasMultiples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method hasMultiples()\n"})}),"\n",(0,t.jsx)(s.p,{children:'Indicates that this chart supports and is in "show multiples" mode. A subclass may override this.'}),"\n",(0,t.jsx)(s.h3,{id:"computexaxistimeline",children:"computeXAxisTimeLine"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method computeXAxisTimeLine()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Compute scaling information for a time-based x-axis."}),"\n",(0,t.jsx)(s.h3,{id:"renderxaxistimeline",children:"renderXAxisTimeLine"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderXAxisTimeLine(timeCellGroup, y)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Render x-axis labels and tick marks for time-based x-axis."}),"\n",(0,t.jsx)(s.h3,{id:"gettimex",children:"getTimeX"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getTimeX(time)\n"})}),"\n",(0,t.jsx)(s.p,{children:"For a given time value, YYYY-MM-DD, find the corresponding x coordinate in virtual pixels."}),"\n",(0,t.jsx)(s.h3,{id:"getcellinfo",children:"getCellInfo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getCellInfo(cell, majorUnits, minorUnits, index)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Return information about a cell within a time line grid."}),"\n",(0,t.jsx)(s.h3,{id:"calculateviewbox",children:"calculateViewBox"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method calculateViewBox()\n"})}),"\n",(0,t.jsxs)(s.p,{children:["JMD1100 - this is in canvas in ZEN Calculate the value of the viewBox attribute of this component's enclosing svg element.",(0,t.jsx)(s.br,{}),"\nSubclasses can override this, should they need to provide a different behavior. The default behavior is to use the width and height of this component to come up with a 1 to 1 coordinate mapping; If the component provides values for the viewboxWidth and viewboxHeight properties, then these are used to calculate the viewBox (and thus define a fixed coordinate system for the component)."]}),"\n",(0,t.jsx)(s.h3,{id:"zenget",children:"zenGet"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod zenGet(value, defvalue)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"parsecssstyle",children:"ParseCSSStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ParseCSSStyle(pClassName As %String, ByRef pParsedClasses As %String)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Parse an SVGStyle XData block and put results in pParseClasses pParsedClasses(classname, attribute)=value"}),"\n",(0,t.jsx)(s.h3,{id:"getstarttime",children:"getStartTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getStartTime()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get the start time for a time-based chart."}),"\n",(0,t.jsx)(s.h3,{id:"getendtime",children:"getEndTime"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getEndTime()\n"})}),"\n",(0,t.jsx)(s.p,{children:"Get the end time for a time-based chart."}),"\n",(0,t.jsx)(s.h3,{id:"getlegendrectstyle",children:"getLegendRectStyle"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getLegendRectStyle(s)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Use in chart to give a specifc style to legend Can be overriden by descendent class"}),"\n",(0,t.jsx)(s.h3,{id:"getlegendscount",children:"getLegendsCount"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getLegendsCount(legends)\n"})}),"\n",(0,t.jsx)(s.h3,{id:"getseriesnamessize",children:"getSeriesNamesSize"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method getSeriesNamesSize()\n"})}),"\n",(0,t.jsx)(s.h3,{id:"updateindicator",children:"updateIndicator"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method updateIndicator()\n"})}),"\n",(0,t.jsx)(s.p,{children:'Update the "indicator" (crosshairs) for the selected item.'}),"\n",(0,t.jsx)(s.h3,{id:"rendertimeevents",children:"renderTimeEvents"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-objectscript-class",children:"Method renderTimeEvents(group)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Render a set of time-events within the chart."})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,l)=>{l.d(s,{R:()=>n,x:()=>r});var t=l(96540);const a={},i=t.createContext(a);function n(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);