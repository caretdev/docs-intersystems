"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[9392],{18775:(e,s,t)=>{t.r(s),t.d(s,{contentTitle:()=>i,default:()=>o,frontMatter:()=>r,toc:()=>l});var n=t(74848),a=t(28453);const r={pagination_prev:null,pagination_next:null},i="%DeepSee.extensions.clusters.PAM",l=[{value:"Properties",id:"properties",level:2},{value:"K",id:"k",level:3},{value:"Medoid",id:"medoid",level:3},{value:"Methods",id:"methods",level:2},{value:"New",id:"new",level:3},{value:"Open",id:"open",level:3},{value:"Create",id:"create",level:3},{value:"IsPrepared",id:"isprepared",level:3},{value:"Prepare",id:"prepare",level:3},{value:"Execute",id:"execute",level:3},{value:"ExecuteLoop",id:"executeloop",level:3},{value:"Init",id:"init",level:3},{value:"GenerateMedoids",id:"generatemedoids",level:3},{value:"SetCost",id:"setcost",level:3},{value:"Assign",id:"assign",level:3},{value:"Swap",id:"swap",level:3},{value:"SwapCluster",id:"swapcluster",level:3},{value:"ClusterCost",id:"clustercost",level:3},{value:"CurrentTotalCost",id:"currenttotalcost",level:3},{value:"TotalCost",id:"totalcost",level:3}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"deepseeextensionsclusterspam",children:"%DeepSee.extensions.clusters.PAM"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class %DeepSee.extensions.clusters.PAM Extends AbstractModel [ System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This class provides an implemantation of Partitioning Around Medoids (PAM) algorithm, a.k.a. K-Medoids (do not mix with K-Means)."}),"\n",(0,n.jsx)(s.p,{children:"The PAM algorithm was developed by Leonard Kaufman and Peter J. Rousseeuw, and this algorithm is very similar to K-means, mostly because both are partitional algorithms, in other words, both break the datasets into groups, and both works trying to minimize the error, but PAM works with Medoids, that are an entity of the dataset that represent the group in which it is inserted, and K-means works with Centroids, that are artificially created entity that represent its cluster."}),"\n",(0,n.jsx)(s.p,{children:"The PAM algorithm partitionates a dataset of n objects into a number k of clusters, where both the dataset and the number k is an input of the algorithm. This algorithm works with a matrix of dissimilarity, where its goal is to minimize the overall dissimilarity between the representants of each cluster and its members."}),"\n",(0,n.jsx)(s.p,{children:"Pure PAM algorithm only works when a dataset is well partitioned by its nature. It first generates a random solution and then uses the steepest descent to optimize it. Therefore it is prone to falling into local minimum. Two modifications implemented by subclasses PAMSA (PAM with Simulated Annealing) and CLARA (Clustering for Large Applications) try to alleviate this deficiency."}),"\n",(0,n.jsxs)(s.p,{children:["See ",(0,n.jsx)(s.a,{href:"http://en.wikipedia.org/wiki/K-medoids",children:"Wikipedia article"})," for more information."]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"k",children:"K"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property K As %Integer;\n"})}),"\n",(0,n.jsx)(s.p,{children:"The number of clusters to create"}),"\n",(0,n.jsx)(s.h3,{id:"medoid",children:"Medoid"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Property Medoid [ Internal, MultiDimensional ];\n"})}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"new",children:"New"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod New(dsName As %String, Output sc As %Status) As PAM\n"})}),"\n",(0,n.jsx)(s.h3,{id:"open",children:"Open"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Open(dsName As %String, Output sc As %Status) As PAM\n"})}),"\n",(0,n.jsx)(s.h3,{id:"create",children:"Create"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Create(dsName As %String, new As %Boolean, Output sc As %Status) As PAM [ Private ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"isprepared",children:"IsPrepared"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method IsPrepared() As %Boolean\n"})}),"\n",(0,n.jsx)(s.h3,{id:"prepare",children:"Prepare"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Prepare() As %Status\n"})}),"\n",(0,n.jsx)(s.h3,{id:"execute",children:"Execute"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Execute() As %Status\n"})}),"\n",(0,n.jsx)(s.h3,{id:"executeloop",children:"ExecuteLoop"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ExecuteLoop() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"init",children:"Init"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Init() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"generatemedoids",children:"GenerateMedoids"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method GenerateMedoids() [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"setcost",children:"SetCost"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SetCost() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"assign",children:"Assign"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Assign() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"swap",children:"Swap"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method Swap(Output changed As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"swapcluster",children:"SwapCluster"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method SwapCluster(k As %Integer, Output changed As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.h3,{id:"clustercost",children:"ClusterCost"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ClusterCost(k As %Integer) As %Double\n"})}),"\n",(0,n.jsx)(s.h3,{id:"currenttotalcost",children:"CurrentTotalCost"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method CurrentTotalCost()\n"})}),"\n",(0,n.jsx)(s.h3,{id:"totalcost",children:"TotalCost"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method TotalCost()\n"})})]})}function o(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>l});var n=t(96540);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);