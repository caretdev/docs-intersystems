"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[52482],{70144:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>l,toc:()=>d});var s=n(74848),r=n(28453);const l={pagination_prev:null,pagination_next:null},i="%XDBC.Gateway.ResultSet",d=[{value:"Properties",id:"properties",level:2},{value:"%StatementType",id:"statementtype",level:3},{value:"%StatementTypeName",id:"statementtypename",level:3},{value:"%Message",id:"message",level:3},{value:"%ROWCOUNT",id:"rowcount",level:3},{value:"%ROWID",id:"rowid",level:3},{value:"%SQLCODE",id:"sqlcode",level:3},{value:"%CurrentResult",id:"currentresult",level:3},{value:"%OutputColumnCount",id:"outputcolumncount",level:3},{value:"%OutputValues",id:"outputvalues",level:3},{value:"%ResultColumnCount",id:"resultcolumncount",level:3},{value:"%routine",id:"routine",level:3},{value:"%ProcCursor",id:"proccursor",level:3},{value:"%rsmd",id:"rsmd",level:3},{value:"%Metadata",id:"metadata",level:3},{value:"Methods",id:"methods",level:2},{value:"Close",id:"close",level:3},{value:"GetFetchSize",id:"getfetchsize",level:3},{value:"GetObject",id:"getobject",level:3},{value:"SetFetchSize",id:"setfetchsize",level:3},{value:"WasNull",id:"wasnull",level:3},{value:"Next",id:"next",level:3},{value:"GetRow",id:"getrow",level:3},{value:"GetRows",id:"getrows",level:3},{value:"GetBuffer",id:"getbuffer",level:3},{value:"Get",id:"get",level:3},{value:"GetMetaData",id:"getmetadata",level:3},{value:"%DispatchGetProperty",id:"dispatchgetproperty",level:3},{value:"%DispatchSetProperty",id:"dispatchsetproperty",level:3},{value:"%InitializeMetadata",id:"initializemetadata",level:3},{value:"%Get",id:"get-1",level:3},{value:"%GetData",id:"getdata",level:3},{value:"%Next",id:"next-1",level:3},{value:"%Display",id:"display",level:3},{value:"%Print",id:"print",level:3},{value:"%GetMetadata",id:"getmetadata-1",level:3},{value:"%GetClientMetadata",id:"getclientmetadata",level:3},{value:"%SendODBC",id:"sendodbc",level:3},{value:"%FetchIntoTemp",id:"fetchintotemp",level:3},{value:"%SendDelimitedRows",id:"senddelimitedrows",level:3},{value:"%AddToSaveSet",id:"addtosaveset",level:3},{value:"%ConstructClone",id:"constructclone",level:3},{value:"%NormalizeObject",id:"normalizeobject",level:3},{value:"%RemoveFromSaveSet",id:"removefromsaveset",level:3},{value:"%SerializeObject",id:"serializeobject",level:3},{value:"%ValidateObject",id:"validateobject",level:3}];function a(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"xdbcgatewayresultset",children:"%XDBC.Gateway.ResultSet"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %XDBC.Gateway.ResultSet Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"FOR INTERNAL USE - do not invoke directly"}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"statementtype",children:"%StatementType"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %StatementType As %Library.Integer;\n"})}),"\n",(0,s.jsx)(t.p,{children:"%StatementType is the dynamic statement type number as assigned by SQL. Refer to %StatementTypeName for statement type values."}),"\n",(0,s.jsx)(t.h3,{id:"statementtypename",children:"%StatementTypeName"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %StatementTypeName As %Library.String [ Calculated, SqlComputeCode = { set {*}=$$GetTypen^%SYS.SQLSRV({%StatementType}) }, SqlComputed ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%StatementTypeName is the statement type name."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"1"}),(0,s.jsx)(t.th,{children:"SELECT"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"2"}),(0,s.jsx)(t.td,{children:"INSERT (also 'INSERT OR UPDATE')"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"3"}),(0,s.jsx)(t.td,{children:"UPDATE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"4"}),(0,s.jsx)(t.td,{children:"DELETE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"5"}),(0,s.jsx)(t.td,{children:"COMMIT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"6"}),(0,s.jsx)(t.td,{children:"ROLLBACK"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7"}),(0,s.jsx)(t.td,{children:"GRANT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8"}),(0,s.jsx)(t.td,{children:"REVOKE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9"}),(0,s.jsx)(t.td,{children:"CREATE TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"10"}),(0,s.jsx)(t.td,{children:"ALTER TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"11"}),(0,s.jsx)(t.td,{children:"DROP TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"12"}),(0,s.jsx)(t.td,{children:"CREATE VIEW"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"13"}),(0,s.jsx)(t.td,{children:"ALTER VIEW"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"14"}),(0,s.jsx)(t.td,{children:"DROP VIEW"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"15"}),(0,s.jsx)(t.td,{children:"CREATE INDEX"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"16"}),(0,s.jsx)(t.td,{children:"ALTER INDEX (Not supported)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"17"}),(0,s.jsx)(t.td,{children:"DROP INDEX"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"18"}),(0,s.jsx)(t.td,{children:"CREATE ROLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"19"}),(0,s.jsx)(t.td,{children:"DROP ROLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"20"}),(0,s.jsx)(t.td,{children:"SET TRANSACTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"21"}),(0,s.jsx)(t.td,{children:"START TRANSACTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"22"}),(0,s.jsx)(t.td,{children:"%INTRANSACTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"23"}),(0,s.jsx)(t.td,{children:"%BEGTRANS (Alias for START TRANSACTION)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"24"}),(0,s.jsx)(t.td,{children:"%INTRANS (Alias for %INTRANSACTION)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"25"}),(0,s.jsx)(t.td,{children:"GET (Not supported)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"26"}),(0,s.jsx)(t.td,{children:"SET OPTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"27"}),(0,s.jsx)(t.td,{children:"STATISTICS (UPDATE STATISTICS, not supported))"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"28"}),(0,s.jsx)(t.td,{children:"%CHECKPRIV"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"29"}),(0,s.jsx)(t.td,{children:"CREATE USER"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"30"}),(0,s.jsx)(t.td,{children:"ALTER USER"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"31"}),(0,s.jsx)(t.td,{children:"DROP USER"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"32"}),(0,s.jsx)(t.td,{children:"%CHECKPRIV (SQL Admin Privilege)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"33"}),(0,s.jsx)(t.td,{children:"GRANT (SQL Admin Privilege)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"34"}),(0,s.jsx)(t.td,{children:"REVOKE (SQL Admin Privilege)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"35"}),(0,s.jsx)(t.td,{children:"CREATE FUNCTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"36"}),(0,s.jsx)(t.td,{children:"CREATE METHOD"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"37"}),(0,s.jsx)(t.td,{children:"CREATE PROCEDURE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"38"}),(0,s.jsx)(t.td,{children:"CREATE QUERY"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"39"}),(0,s.jsx)(t.td,{children:"DROP FUNCTION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"40"}),(0,s.jsx)(t.td,{children:"DROP METHOD"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"41"}),(0,s.jsx)(t.td,{children:"DROP PROCEDURE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"42"}),(0,s.jsx)(t.td,{children:"DROP QUERY"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"43"}),(0,s.jsx)(t.td,{children:"CREATE TRIGGER"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"44"}),(0,s.jsx)(t.td,{children:"DROP TRIGGER"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"45"}),(0,s.jsx)(t.td,{children:"CALL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"46"}),(0,s.jsx)(t.td,{children:"SAVEPOINT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"47"}),(0,s.jsx)(t.td,{children:"LOCK TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"48"}),(0,s.jsx)(t.td,{children:"UNLOCK TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"49"}),(0,s.jsx)(t.td,{children:"CREATE DATABASE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"50"}),(0,s.jsx)(t.td,{children:"DROP DATABASE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"51"}),(0,s.jsx)(t.td,{children:"USE DATABASE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"52"}),(0,s.jsx)(t.td,{children:"TUNE TABLE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"53"}),(0,s.jsx)(t.td,{children:"DECLARE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"54"}),(0,s.jsx)(t.td,{children:"CREATE MODEL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"55"}),(0,s.jsx)(t.td,{children:"DROP MODEL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"56"}),(0,s.jsx)(t.td,{children:"TRAIN MODEL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"57"}),(0,s.jsx)(t.td,{children:"ALTER MODEL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"58"}),(0,s.jsx)(t.td,{children:"VALIDATE MODEL"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"59"}),(0,s.jsx)(t.td,{children:"SET ML CONFIGURATION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"60"}),(0,s.jsx)(t.td,{children:"CREATE ML CONFIGURATION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"61"}),(0,s.jsx)(t.td,{children:"ALTER ML CONFIGURATION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"62"}),(0,s.jsx)(t.td,{children:"DROP ML CONFIGURATION"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"63"}),(0,s.jsx)(t.td,{children:"FREEZE PLANS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"64"}),(0,s.jsx)(t.td,{children:"UNFREEZE PLANS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"65"}),(0,s.jsx)(t.td,{children:"PURGE"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"66"}),(0,s.jsx)(t.td,{children:"BUILD INDEX"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"67"}),(0,s.jsx)(t.td,{children:"LOAD"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:'""'}),(0,s.jsx)(t.td,{children:"Anything not list above"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"message",children:"%Message"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %Message As %Library.String(MAXLEN = 256);\n"})}),"\n",(0,s.jsx)(t.p,{children:"%Message contains additional information about an error reported as a negative value in %SQLCODE. Additional information is not always available."}),"\n",(0,s.jsx)(t.h3,{id:"rowcount",children:"%ROWCOUNT"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ROWCOUNT As %Library.Integer;\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Contains the number of rows affected by executing the statement.",(0,s.jsx)(t.br,{}),"\nIt is the responsibility of the stored procedure author to explicitly set %ROWCOUNT."]}),"\n",(0,s.jsx)(t.p,{children:"For example:"}),"\n",(0,s.jsxs)(t.p,{children:['&sql(UPDATE Person Set Name="Mo" WHERE Age > :number)',(0,s.jsx)(t.br,{}),"\nSet result.%SQLCODE=SQLCODE",(0,s.jsx)(t.br,{}),"\nSet ",(0,s.jsx)(t.strong,{children:"result.%ROWCOUNT"}),"=%ROWCOUNT"]}),"\n",(0,s.jsx)(t.h3,{id:"rowid",children:"%ROWID"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property %ROWID As %Library.String(MAXLEN = "");\n'})}),"\n",(0,s.jsx)(t.p,{children:"The value of the %ROWID. This may or may not be relevant. It is primarily used when a dynamic INSERT statement has been executed. In that case, %ROWID contains the rowid of the last row inserted into the database by executing the statement."}),"\n",(0,s.jsx)(t.h3,{id:"sqlcode",children:"%SQLCODE"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %SQLCODE As %Library.Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%SQLCODE indicates whether or not the statement was executed successfully. If %SQLCODE is not negative (greater than or equal to zero) then the statement was successfully executed. Otherwise, the value of %SQLCODE contains the error code and the %Message property might contain more information about the error."}),"\n",(0,s.jsx)(t.h3,{id:"currentresult",children:"%CurrentResult"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %CurrentResult As %RawString;\n"})}),"\n",(0,s.jsx)(t.p,{children:"Holds oref of the most recently bound result set. This property is set automatically by %NextResult. Note that %NextResult is also invoked by %MoreResults. Users should not ever set this property. This property is public for backward compatibility reasons."}),"\n",(0,s.jsx)(t.h3,{id:"outputcolumncount",children:"%OutputColumnCount"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %OutputColumnCount As %Library.Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%OutputColumnCount is the number of columns defined as RETURNVALUE, INPUT-OUTPUT or OUTPUT (method return value, byref and output parameters) by an SQL invoked routine. This value is always zero unless the DYNAMIC_FUNCTION is CALL (%StatementType = 45)."}),"\n",(0,s.jsx)(t.h3,{id:"outputvalues",children:"%OutputValues"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %OutputValues As %RawString [ Internal, MultiDimensional ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%OutputValues is a multidimensional property that contains the most recent values returned by a procedure call. This property is not meant to be a replacement for the standard procedure formal argument interface but handles situations where the return values are not conveniently returned to the caller using the various argument binding algorithms (positional and by name). The values are placed in the %OutputValues array subscripted by the argument position as defined by the SQL invoked routine. If the statement does not allocate a parameter to be bound to the arguments defined by the SQL invoked routine then there is no value present in %OutputValues. The output value iterator only returns values defined."}),"\n",(0,s.jsx)(t.h3,{id:"resultcolumncount",children:"%ResultColumnCount"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ResultColumnCount As %Library.Integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%ResultColumnCount is the number of columns in the result set. This value is always zero unless the current result is a RESULTSET object (instance of %SQL.IResultSet) or a procedure context object (instance of %Library.IProcedureContext). For a CALL statement result, this value represents the column count of the result set currently bound using serial binding."}),"\n",(0,s.jsx)(t.h3,{id:"routine",children:"%routine"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property %routine As %Library.String(MAXLEN = "") [ Internal ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"This is the link to the SQL-Invoked-Routine that produced this result. This property is for internal use only and its use or continued presence is not guaranteed and cannot be assumed. The %routine value is the ID of the SIR that produced this result and it is useful for retrieving metadata, specifically the statement metadata that describes a virtual result set of the output directed parameters defined by the routine."}),"\n",(0,s.jsx)(t.h3,{id:"proccursor",children:"%ProcCursor"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %ProcCursor As %SQL.IResultSet [ Private ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"%ProcCursor is the cursor that is bound to a result set from the result set sequence (RSS) returned by a dynamic CALL statement. For all statement types other than CALL, this value is always the null oref. This property is set automatically on first access and by calling %MoreResults and %NextResult."}),"\n",(0,s.jsx)(t.h3,{id:"rsmd",children:"%rsmd"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Property %rsmd As %XDBC.Gateway.ResultSetMetaData [ Internal, Private ];\n"})}),"\n",(0,s.jsx)(t.p,{children:"This property holds a generic xDBC representation of the result set's metadata."}),"\n",(0,s.jsx)(t.h3,{id:"metadata",children:"%Metadata"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property %Metadata As %Library.String(MAXLEN = "") [ Internal, MultiDimensional ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"DO NOT USE DIRECTLY -- serialized version of %rsmd For compatibility with %SQL.IResultSet only"}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"close",children:"Close"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Close() As %Status [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"getfetchsize",children:"GetFetchSize"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFetchSize() As %Integer [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Retrieves the fetch size for this ResultSet object."}),"\n",(0,s.jsx)(t.h3,{id:"getobject",children:"GetObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetObject(columnIndex As %Integer) As %ObjectHandle [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the value of the designated column in the current row of this ResultSet object as %ObjectHandle"}),"\n",(0,s.jsx)(t.h3,{id:"setfetchsize",children:"SetFetchSize"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetFetchSize(rows As %Integer) [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Gives the driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object."}),"\n",(0,s.jsx)(t.h3,{id:"wasnull",children:"WasNull"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method WasNull() As %Boolean [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Reports whether the last column read had a value of SQL NULL."}),"\n",(0,s.jsx)(t.h3,{id:"next",children:"Next"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method Next() As %Library.Boolean [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Advance to the next row in the result referenced by %ProcCursor. Returns 0 if the cursor is at the end of the result set. An optional argument contains a %Library.Status value on return. This %Status value indicates success or failure of the %Next call. %SQLCODE is also set by %Next. This implementation is overridden by classes that implement the result set interface."}),"\n",(0,s.jsx)(t.h3,{id:"getrow",children:"GetRow"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRow() As %Library.List [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:'Advance to the next row in the result referenced by %ProcCursor. Returns 0 if the cursor is at the end of the result set. An optional argument contains a %Library.Status value on return. This %Status value indicates success or failure of the %GetRow call. %SQLCODE is also set by %GetRow. The row is returned in $List format by reference in the Row argument. If %SQLCODE\'=0, Row will be null (""). This implementation is overridden by classes that implement the result set interface.'}),"\n",(0,s.jsx)(t.h3,{id:"getrows",children:"GetRows"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRows(rowCount As %Library.Integer) As %Library.Integer [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Advance the next rowCount rows in the result referenced by %ProcCursor. Returns 0 if the cursor is at the end of the result set. Note, when 0 is returned, it is likely there are rows returned in the Rows array. An optional argument contains a %Library.Status value on return. This %Status value indicates success or failure of the %GetRows call. %SQLCODE is also set by %GetRows. The rows are returned in an array of $List values in the Row array argument. If %SQLCODE'=0 for a row, that will be the end of the results."}),"\n",(0,s.jsxs)(t.p,{children:["For example, suppose rset.%GetRows(10,.tenrows,.sc) is called:",(0,s.jsx)(t.br,{}),"\n- If there are more then 10 rows remaining to be fetched from the result set, tenrows=10, tenrows(1)=$lb(first row's contents), ..., tenrows(10)=$lb(tenth row's contents), and %GetRows will return 1.",(0,s.jsx)(t.br,{}),"\n- If there are 5 rows remaining to be fetched from the result set, tenrows=5, tenrows(1)=$lb(first row's contents), ..., tenrows(5)=$lb(fifth row's contents), and %GetRows will return 0.",(0,s.jsx)(t.br,{}),"\n- If there are 0 rows remaining to be fetched from the result set, tenrows=0 and %GetRows will return 0."]}),"\n",(0,s.jsx)(t.p,{children:"This implementation is overridden by classes that implement the result set interface."}),"\n",(0,s.jsx)(t.h3,{id:"getbuffer",children:"GetBuffer"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetBuffer(ByRef moreBuffers As %Boolean) As %Library.List [ Abstract ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Returns the current row buffer to the caller This method will refuse to return the buffer if there result set is already being iterated over by cursor (if the cursor is not before the start of the result set)"}),"\n",(0,s.jsx)(t.h3,{id:"get",children:"Get"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method Get(colname As %RawString = "") As %Library.RawString [ Abstract ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Returns the value of the column with the name colname in the current row of the result set."}),"\n",(0,s.jsx)(t.p,{children:"If colname is not a valid column name, this method throws a  error."}),"\n",(0,s.jsx)(t.h3,{id:"getmetadata",children:"GetMetaData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetMetaData() As %XDBC.Gateway.ResultSetMetaData\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return the result set metadata as a %XDBC.Gateway.ResultSetMetadata instance."}),"\n",(0,s.jsx)(t.h3,{id:"dispatchgetproperty",children:"%DispatchGetProperty"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchGetProperty(pProperty As %Library.String(MAXLEN=255)) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Dynamic property Get method dispatcher. This method is invoked whenever a property cannot be resolved from the class descriptor."}),"\n",(0,s.jsx)(t.h3,{id:"dispatchsetproperty",children:"%DispatchSetProperty"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %DispatchSetProperty(pProperty As %Library.String, pValue As %Library.String) [ Internal ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Property dispatch method to catch references to virtual properties.",(0,s.jsx)(t.br,{}),"\nThis should not be called directly."]}),"\n",(0,s.jsx)(t.h3,{id:"initializemetadata",children:"%InitializeMetadata"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %InitializeMetadata(rsmd As %XDBC.Gateway.ResultSetMetaData) As %Status [ Internal, Private ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"get-1",children:"%Get"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Get(colName As %String) As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"See Get"}),"\n",(0,s.jsx)(t.h3,{id:"getdata",children:"%GetData"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetData(colindex As %String) As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"See GetData"}),"\n",(0,s.jsx)(t.h3,{id:"next-1",children:"%Next"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Next(Output status As %Status) As %Boolean [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"See Next"}),"\n",(0,s.jsx)(t.h3,{id:"display",children:"%Display"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Display(pDelimiter As %String = {$Char(9)}, colAlign As %Integer = 0) [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Formated display all data"}),"\n",(0,s.jsx)(t.h3,{id:"print",children:"%Print"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %Print(pDelimiter As %String = " ", colAlign As %Integer = 0, ByRef metadata As %ArrayOfObjects) As %Status [ Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Write the current row to the current device. An optional column delimiter can be specified. No formatting is applied other than writing pDelimiter between column values. This can be useful for exporting result set data to tab delimited files."}),"\n",(0,s.jsx)(t.p,{children:"For example:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'set sql = "select name,home_street,home_city,home_state,home_zip from sample.person" set rset = ##class(%ResultSet.SQL).%Prepare(.sql,.err,"") if \'$Isobject(err) { set file="c:\\temp\\names.asv" open file:"WNS" use file while rset.%Next() { do rset.%Print($char(9)) } close file }'})}),"\n",(0,s.jsx)(t.p,{children:"Example data:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Cornell,Ezra M."}),(0,s.jsx)(t.th,{children:"340 Franklin Court"}),(0,s.jsx)(t.th,{children:"Sarasota"}),(0,s.jsx)(t.th,{children:"NY"}),(0,s.jsx)(t.th,{children:"12866"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Huff,Stephen A."}),(0,s.jsx)(t.td,{children:"548 Washington Blvd"}),(0,s.jsx)(t.td,{children:"Brownfield Center"}),(0,s.jsx)(t.td,{children:"MD"}),(0,s.jsx)(t.td,{children:"53436"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Sands,Jeep Q."}),(0,s.jsx)(t.td,{children:"7298 Washington Drive"}),(0,s.jsx)(t.td,{children:"Xavier"}),(0,s.jsx)(t.td,{children:"WY"}),(0,s.jsx)(t.td,{children:"23685"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"getmetadata-1",children:"%GetMetadata"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetMetadata() As %SQL.StatementMetadata\n"})}),"\n",(0,s.jsx)(t.p,{children:"Return metadata as a %SQL.StatementMetadata object"}),"\n",(0,s.jsx)(t.h3,{id:"getclientmetadata",children:"%GetClientMetadata"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %GetClientMetadata(ByRef pMetadata As %RawString = "") As %Status [ Final ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"This method returns the rowtype metadata, serialized for transport to clients. Its structure is based on the value of the public variable '%protocol' at the time the result set is instantiated."}),"\n",(0,s.jsx)(t.h3,{id:"sendodbc",children:"%SendODBC"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SendODBC() As %Library.Integer [ Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Fetch and send a series of rows for the ODBC/JDBC server. For internal use only."}),"\n",(0,s.jsx)(t.h3,{id:"fetchintotemp",children:"%FetchIntoTemp"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %FetchIntoTemp() As %Library.Integer [ Abstract, Internal ]\n"})}),"\n",(0,s.jsx)(t.p,{children:"Fetch and send all row's data to the ^IRIS.Temp.IRIS.Sql() global, used by %PARALLEL union queries. For internal use only."}),"\n",(0,s.jsx)(t.h3,{id:"senddelimitedrows",children:"%SendDelimitedRows"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %SendDelimitedRows(pMaxRows As %Integer = 0, pDelimiter As %String = "", ByRef pReturnCount As %Integer = 0) As %Status [ Abstract, Internal ]\n'})}),"\n",(0,s.jsx)(t.p,{children:"Fetch and send a series of rows for continuous query client. For internal use only."}),"\n",(0,s.jsx)(t.h3,{id:"addtosaveset",children:"%AddToSaveSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Method %AddToSaveSet(depth As %Integer = 3, refresh As %Integer = 0, norecurseon As %String = "") As %Status [ CodeMode = expression, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n'})}),"\n",(0,s.jsx)(t.h3,{id:"constructclone",children:"%ConstructClone"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ConstructClone(deep As %Boolean = 0, ByRef cloned As %String, location As %String) As %RegisteredObject [ CodeMode = expression, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"normalizeobject",children:"%NormalizeObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %NormalizeObject() As %Status [ CodeMode = expression ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"removefromsaveset",children:"%RemoveFromSaveSet"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %RemoveFromSaveSet() As %Status [ CodeMode = expression, Internal, ProcedureBlock = 1, ServerOnly = 1 ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"serializeobject",children:"%SerializeObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SerializeObject(ByRef serial As %Binary, partial As %Integer = 0) As %Status [ CodeMode = expression ]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"validateobject",children:"%ValidateObject"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ValidateObject(force As %Integer = 0) As %Status [ CodeMode = expression ]\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var s=n(96540);const r={},l=s.createContext(r);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);