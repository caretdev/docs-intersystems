"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[69370],{93718:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>l,toc:()=>c});var n=s(74848),i=s(28453);const l={pagination_prev:null,pagination_next:null},o="%SYS.WhitelistUtils",c=[{value:"Methods",id:"methods",level:2},{value:"IsWhitelistEnabled",id:"iswhitelistenabled",level:3},{value:"IsMethodEnabled",id:"ismethodenabled",level:3}];function r(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"syswhitelistutils",children:"%SYS.WhitelistUtils"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SYS.WhitelistUtils Extends %RegisteredObject\n"})}),"\n",(0,n.jsx)(t.p,{children:"The %SYS.WhitelistUtils code contains the core global access methods that require privilege escalation to support the the more general %CSP.WhitelistUtils library"}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"iswhitelistenabled",children:"IsWhitelistEnabled"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsWhitelistEnabled() As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Test to see if whitelist checking is enabled for the current namespace"}),"\n",(0,n.jsx)(t.h3,{id:"ismethodenabled",children:"IsMethodEnabled"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IsMethodEnabled(pClass As %String, pMethod As %String) As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Test to see if the given method call should be allowed under the current whitelist policy"})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(96540);const i={},l=n.createContext(i);function o(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);