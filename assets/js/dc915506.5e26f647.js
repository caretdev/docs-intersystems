"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[13554],{10654:(e,n,l)=>{l.r(n),l.d(n,{contentTitle:()=>r,default:()=>a,frontMatter:()=>t,toc:()=>o});var c=l(74848),s=l(28453);const t={pagination_prev:null,pagination_next:null},r="%CSP.RuleBlock",o=[{value:"Properties",id:"properties",level:2},{value:"Container",id:"container",level:3},{value:"EndLabel",id:"endlabel",level:3},{value:"NextLabel",id:"nextlabel",level:3},{value:"Methods",id:"methods",level:2},{value:"NewBlock",id:"newblock",level:3},{value:"RemoveBlock",id:"removeblock",level:3},{value:"GetCurrentBlock",id:"getcurrentblock",level:3},{value:"GetNewLabel",id:"getnewlabel",level:3}];function i(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"cspruleblock",children:"%CSP.RuleBlock"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Class %CSP.RuleBlock Extends %CSP.Rule [ System = 3 ]\n"})}),"\n",(0,c.jsx)(n.p,{children:"The %CSP.RuleBlock class is the super class of all rule generated classes for block structured tags, e.g. csp:if, that represent elements within the DOM model."}),"\n",(0,c.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsx)(n.h3,{id:"container",children:"Container"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Property Container As %CSP.RuleBlock;\n"})}),"\n",(0,c.jsx)(n.p,{children:'The object instance for the containing block or "".'}),"\n",(0,c.jsx)(n.h3,{id:"endlabel",children:"EndLabel"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Property EndLabel As %String;\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The label used for the ",(0,c.jsx)(n.em,{children:"end"})," of this block, e.g. the /csp:if clause for csp:if or after the loop for csp:while"]}),"\n",(0,c.jsx)(n.h3,{id:"nextlabel",children:"NextLabel"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Property NextLabel As %String;\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The label used for the ",(0,c.jsx)(n.em,{children:"next"})," block, e.g. the csp:else clause for csp:if or the next iteration for csp:while"]}),"\n",(0,c.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(n.h3,{id:"newblock",children:"NewBlock"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Method NewBlock()\n"})}),"\n",(0,c.jsx)(n.p,{children:"Get a new block and associated labels for this nested code block."}),"\n",(0,c.jsx)(n.h3,{id:"removeblock",children:"RemoveBlock"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Method RemoveBlock()\n"})}),"\n",(0,c.jsx)(n.p,{children:"Remove the this nested block."}),"\n",(0,c.jsx)(n.h3,{id:"getcurrentblock",children:"GetCurrentBlock"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetCurrentBlock() As %CSP.RuleBlock\n"})}),"\n",(0,c.jsx)(n.p,{children:"Get current block without creating a new one."}),"\n",(0,c.jsx)(n.h3,{id:"getnewlabel",children:"GetNewLabel"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetNewLabel() As %String\n"})}),"\n",(0,c.jsx)(n.p,{children:"Get a new block label."})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>o});var c=l(96540);const s={},t=c.createContext(s);function r(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);