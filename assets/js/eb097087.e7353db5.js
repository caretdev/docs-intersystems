"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[22581],{92365:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>r,toc:()=>l});var n=s(74848),i=s(28453);const r={pagination_prev:null,pagination_next:null},a="%iKnow.Queries.PathAPI",l=[{value:"Parameters",id:"parameters",level:2},{value:"GetPathIdEXP",id:"getpathidexp",level:3},{value:"GetEntitiesRT",id:"getentitiesrt",level:3},{value:"GetByEntitiesRT",id:"getbyentitiesrt",level:3},{value:"GetByEntityIdsRT",id:"getbyentityidsrt",level:3},{value:"GetBySourceRT",id:"getbysourcert",level:3},{value:"GetAttributesRT",id:"getattributesrt",level:3},{value:"Methods",id:"methods",level:2},{value:"GetValue",id:"getvalue",level:3},{value:"GetEntIds",id:"getentids",level:3},{value:"GetPathId",id:"getpathid",level:3},{value:"GetId",id:"getid",level:3},{value:"GetSentenceId",id:"getsentenceid",level:3},{value:"GetSourceId",id:"getsourceid",level:3},{value:"GetEntities",id:"getentities",level:3},{value:"GetByEntities",id:"getbyentities",level:3},{value:"GetByEntityIds",id:"getbyentityids",level:3},{value:"GetByEntitiesInternal",id:"getbyentitiesinternal",level:3},{value:"GetBySource",id:"getbysource",level:3},{value:"GetCountByDomain",id:"getcountbydomain",level:3},{value:"GetCountBySource",id:"getcountbysource",level:3},{value:"GetCountByEntities",id:"getcountbyentities",level:3},{value:"GetCountByEntityIds",id:"getcountbyentityids",level:3},{value:"GetCountByEntitiesInternal",id:"getcountbyentitiesinternal",level:3},{value:"TranslatePathIdList",id:"translatepathidlist",level:3},{value:"GetAttributes",id:"getattributes",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"iknowqueriespathapi",children:"%iKnow.Queries.PathAPI"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %iKnow.Queries.PathAPI Extends %iKnow.Queries.AbstractAPI [ Deprecated, System = 4 ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The InterSystems IRIS NLP iKnow technology is now deprecated. Please see the ",(0,n.jsx)(t.a,{href:"https://docs.intersystems.com/irislatest/csp/docbook/DocBook.UI.Page.cls?KEY=GIKNOW",children:"product documentation"})," for more detail."]}),"\n",(0,n.jsx)(t.p,{children:"This is the main Query class to retrieve Paths as identified by the engine. Paths are sequences of concepts and relations that form a meaningful sub-section of a sentence."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(t.h3,{id:"getpathidexp",children:"GetPathIdEXP"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter GetPathIdEXP [ Internal ] = 1;\n"})}),"\n",(0,n.jsx)(t.h3,{id:"getentitiesrt",children:"GetEntitiesRT"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetEntitiesRT = "position:%Integer,entOccId:%Integer,entUniId:%Integer,entityValue:%String,literal:%String,role:%Integer,stemUniId:%Integer,stemValue:%String";\n'})}),"\n",(0,n.jsx)(t.h3,{id:"getbyentitiesrt",children:"GetByEntitiesRT"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetByEntitiesRT = "pathId:%Integer,entIds:%List";\n'})}),"\n",(0,n.jsx)(t.h3,{id:"getbyentityidsrt",children:"GetByEntityIdsRT"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetByEntityIdsRT = "pathId:%Integer,entIds:%List";\n'})}),"\n",(0,n.jsx)(t.h3,{id:"getbysourcert",children:"GetBySourceRT"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetBySourceRT = "pathId:%Integer,entIds:%List";\n'})}),"\n",(0,n.jsx)(t.h3,{id:"getattributesrt",children:"GetAttributesRT"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter GetAttributesRT = "attTypeId:%Integer,attType:%String,start:%Integer,span:%Integer,properties:%String";\n'})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"getvalue",children:"GetValue"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetValue(domainid As %Integer, pathid As %Integer, vSrcId As %Integer = 0, Output pSC As %Status, pUseStems As %Boolean = 0) As %List\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns the sequence of entity values corresponding to the specified path as a %List."}),"\n",(0,n.jsx)(t.p,{children:"When specifying a Virtual Source ID, it will treat the pathId as a virtual one, in the context of that vSrcId."}),"\n",(0,n.jsx)(t.p,{children:"If stemming is enabled for this domain through the $$$IKPSTEMMING domain parameter, you can use pUseStems=1 to get the stems rather than the entities for this path."}),"\n",(0,n.jsx)(t.h3,{id:"getentids",children:"GetEntIds"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetEntIds(pDomainId As %Integer, pPathId As %Integer, vSrcId As %Integer = 0, pUseStems As %Boolean = 0) As %List [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Internal method. See GetPathId"}),"\n",(0,n.jsx)(t.h3,{id:"getpathid",children:"GetPathId"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetPathId(domainid As %Integer, entityList As %List, vSrcId As %Integer = 0) As %Integer [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Left in for backwards compatibility. Use GetId instead."}),"\n",(0,n.jsx)(t.h3,{id:"getid",children:"GetId"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetId(domainid As %Integer, entityList As %List, vSrcId As %Integer = 0, Output sc As %Status = {$$$OK}) As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:'This method will try to find a path corresponding to the supplied list of entities in the specified order. If no path is found, "" is returned.'}),"\n",(0,n.jsx)(t.p,{children:"When specifying a Virtual Source ID, it will treat the path as a virtual one, in the context of that vSrcId."}),"\n",(0,n.jsx)(t.h3,{id:"getsentenceid",children:"GetSentenceId"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetSentenceId(domainId As %Integer, pathId As %Integer, Output sc As %Status = {$$$OK}, vSrcId As %Integer = 0) As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns the sentence ID in which the supplied path ID occurs"}),"\n",(0,n.jsx)(t.h3,{id:"getsourceid",children:"GetSourceId"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetSourceId(domainId As %Integer, pathId As %Integer, Output sc As %Status = {$$$OK}) As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns the source ID in which the supplied path ID occurs"}),"\n",(0,n.jsx)(t.h3,{id:"getentities",children:"GetEntities"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetEntities(ByRef result, domainId As %Integer, pathId As %Integer, vSrcId As %Integer = 0) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns a detailed overview of the entities pathId consists of, including their unique and occurrence IDs, positions, roles and literal value."}),"\n",(0,n.jsx)(t.p,{children:"The last two columns will only contain data if stemming is enabled for this domain through the $$$IKPSTEMMING domain parameter."}),"\n",(0,n.jsx)(t.h3,{id:"getbyentities",children:"GetByEntities"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetByEntities(ByRef result, domainid As %Integer, entitylist As %List, page As %Integer = 1, pagesize As %Integer = 10, filter As %iKnow.Filters.Filter = "", setop As %Integer = {$$$UNION}, pActualFormOnly As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsxs)(t.p,{children:["This method will return all Paths containing any (if ",(0,n.jsx)(t.em,{children:"setop"})," = $$$UNION) or all (if ",(0,n.jsx)(t.em,{children:"setop"})," = $$$INTERSECT) of the entities in the supplied ",(0,n.jsx)(t.em,{children:"entitylist"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The scope of this query can be limited through supplying a %iKnow.Filters.Filter object for the ",(0,n.jsx)(t.em,{children:"filter"})," parameter to restrict the result to those Paths occurring in any source satisfying the filter criteria."]}),"\n",(0,n.jsx)(t.p,{children:"Results are sorted by decreasing path ID."}),"\n",(0,n.jsx)(t.p,{children:"If stemming is enabled for this domain through $$$IKPSTEMMING, paths containing any actual form of the entities in entitylist will be returned. Use pActualFormOnly=1 to retrieve only those paths containing the actual forms in entitylist. This argument is ignored if stemming is not enabled."}),"\n",(0,n.jsx)(t.h3,{id:"getbyentityids",children:"GetByEntityIds"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetByEntityIds(ByRef result, domainid As %Integer, entityidlist As %List, page As %Integer = 1, pagesize As %Integer = 10, filter As %iKnow.Filters.Filter = "", setop As %Integer = {$$$UNION}, pActualFormOnly As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves paths based on entity IDs."}),"\n",(0,n.jsx)(t.p,{children:"See also GetByEntities for a description of the parameters."}),"\n",(0,n.jsx)(t.h3,{id:"getbyentitiesinternal",children:"GetByEntitiesInternal"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetByEntitiesInternal(ByRef result, domainid As %Integer, ByRef entitylist, page As %Integer, pagesize As %Integer, filter As %iKnow.Filters.Filter, setop As %Integer) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"getbysource",children:"GetBySource"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetBySource(ByRef result, domainid As %Integer, sourceidlist As %List, page As %Integer = 1, pagesize As %Integer = 10) As %Status\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Retrieves the paths appearing in any of the sources supplied through ",(0,n.jsx)(t.em,{children:"sourceidlist"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"To get the paths of a virtual source, only a single virtual source can be supplied using its negative ID value (otherwise, -1 is returned)."}),"\n",(0,n.jsx)(t.h3,{id:"getcountbydomain",children:"GetCountByDomain"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCountByDomain(domainid As %Integer, filter As %iKnow.Filters.Filter = "", Output sc As %Status = {$$$OK}) As %Integer\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Returns the number of paths in a domain, optionally restricted to those appearing in a source satisfying the %iKnow.Filters.Filter object supplied through ",(0,n.jsx)(t.em,{children:"filter"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"getcountbysource",children:"GetCountBySource"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetCountBySource(domainid As %Integer, sourceidlist As %List, Output sc As %Status = {$$$OK}) As %Integer\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Returns the total number of paths in the sources specified through ",(0,n.jsx)(t.em,{children:"sourceidlist"}),". Use negative source IDs to refer to virtual sources."]}),"\n",(0,n.jsx)(t.h3,{id:"getcountbyentities",children:"GetCountByEntities"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCountByEntities(domainid As %Integer, entitylist As %List, filter As %iKnow.Filters.Filter = "", setop As %Integer = {$$$UNION}, Output sc As %Status = {$$$OK}, pActualFormOnly As %Boolean = 0) As %Integer\n'})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of paths containing the specified entities."}),"\n",(0,n.jsx)(t.p,{children:"See also GetByEntities for a description of the parameters."}),"\n",(0,n.jsx)(t.h3,{id:"getcountbyentityids",children:"GetCountByEntityIds"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetCountByEntityIds(domainid As %Integer, entityidlist As %List, filter As %iKnow.Filters.Filter = "", setop As %Integer = {$$$UNION}, Output sc As %Status = {$$$OK}, pActualFormOnly As %Boolean = 0) As %Integer\n'})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves the number of paths containing the specified entity IDs."}),"\n",(0,n.jsx)(t.p,{children:"See also GetByEntities for a description of the parameters."}),"\n",(0,n.jsx)(t.h3,{id:"getcountbyentitiesinternal",children:"GetCountByEntitiesInternal"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetCountByEntitiesInternal(domainid As %Integer, ByRef entitylist, filter As %iKnow.Filters.Filter, setop As %Integer, Output sc As %Status = {$$$OK}) As %Integer [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"translatepathidlist",children:"TranslatePathIdList"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod TranslatePathIdList(domainid As %Integer, pathIdList As %List, Output ids, vSrcId As %Integer = 0, Output unMatchedCount As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"clean a list of PathIds from duplicates and inexistent ids"}),"\n",(0,n.jsx)(t.h3,{id:"getattributes",children:"GetAttributes"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetAttributes(ByRef pResult, pDomainId As %Integer, pPathId As %Integer, vSrcId As %Integer = 0) As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns all attributes for a given path. Any named attribute properties are also included through sub-nodes (not available through SQL or SOAP):"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["pResult(",(0,n.jsx)(t.em,{children:"rowNumber"}),", ",(0,n.jsx)(t.em,{children:"propertyName"}),") = ",(0,n.jsx)(t.em,{children:"propertyValue"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Please note this query only returns path-level attributes and not those attributes applying to individual entities or words within entities. To retrieve these, use GetOccurrenceAttributes in %iKnow.Queries.EntityAPI."})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var n=s(96540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);