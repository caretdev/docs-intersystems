"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[39721],{40435:(e,n,s)=>{s.r(n),s.d(n,{contentTitle:()=>t,default:()=>c,frontMatter:()=>a,toc:()=>d});var i=s(74848),r=s(28453);const a={pagination_prev:null,pagination_next:null},t="%iFind.Index.Minimal",d=[{value:"Parameters",id:"parameters",level:2},{value:"FILER",id:"filer",level:3},{value:"SUPPORTSSHARDING",id:"supportssharding",level:3},{value:"LANGUAGE",id:"language",level:3},{value:"INDEXOPTION",id:"indexoption",level:3},{value:"LOWER",id:"lower",level:3},{value:"USERDICTIONARY",id:"userdictionary",level:3},{value:"STEMMINGCONFIG",id:"stemmingconfig",level:3},{value:"IFINDMAPPINGS",id:"ifindmappings",level:3},{value:"IFINDADVANCEDSQLPREFIX",id:"ifindadvancedsqlprefix",level:3},{value:"IFINDSHAREDDATALOCATION",id:"ifindshareddatalocation",level:3},{value:"TRANSFORMATIONSPEC",id:"transformationspec",level:3},{value:"INTKEYPROPERTY",id:"intkeyproperty",level:3},{value:"IGNOREPUNCTUATION",id:"ignorepunctuation",level:3},{value:"Methods",id:"methods",level:2},{value:"InsertIndex",id:"insertindex",level:3},{value:"UpdateIndex",id:"updateindex",level:3},{value:"DeleteIndex",id:"deleteindex",level:3},{value:"PurgeIndex",id:"purgeindex",level:3},{value:"SortBeginIndex",id:"sortbeginindex",level:3},{value:"SortEndIndex",id:"sortendindex",level:3},{value:"Find",id:"find",level:3},{value:"Normalize",id:"normalize",level:3},{value:"GetIndexParams",id:"getindexparams",level:3},{value:"Embedded",id:"embedded",level:3},{value:"GetStringValue",id:"getstringvalue",level:3}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ifindindexminimal",children:"%iFind.Index.Minimal"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Class %iFind.Index.Minimal Extends (%Library.FunctionalIndex, %Compiler.Type.Embedded) [ EmbeddedClass = %iFind.Find.Minimal, System = 2 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"This class offers a subset of the full-text search capabilities brought by %iFind.Index.Basic with a minimal storage footprint. The following Basic features are not available for a Minimal index:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Positional search: e.g. "[five tickets]", "[aspirin ? daily]'}),"\n",(0,i.jsx)(n.li,{children:'Cooccurence search: e.g. "[ketchup, mayonaise, 5]"'}),"\n",(0,i.jsx)(n.li,{children:"Highlighting search results"}),"\n",(0,i.jsx)(n.li,{children:"Ranking search results"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"See the class reference of %iFind.Index.Basic for a detailed overview of available search capabilities."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"filer",children:"FILER"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter FILER [ Internal ] = "%iFind.Filer.Minimal";\n'})}),"\n",(0,i.jsx)(n.h3,{id:"supportssharding",children:"SUPPORTSSHARDING"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter SUPPORTSSHARDING = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:"This parameter can be set to 1 if the implementation of the filing interface and the SQL query interface can be executed on a shard server. The default is 0. If a sharded class attempts to use a functional index where SUPPORTSSHARDING = 0, a class compiler error will be returned."}),"\n",(0,i.jsx)(n.h3,{id:"language",children:"LANGUAGE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter LANGUAGE As STRING = "en";\n'})}),"\n",(0,i.jsx)(n.p,{children:'Language to use when indexing records. Use "*" to enable automatic language detection.'}),"\n",(0,i.jsx)(n.h3,{id:"indexoption",children:"INDEXOPTION"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter INDEXOPTION [ Constraint = "0,1,2" ] = 0;\n'})}),"\n",(0,i.jsx)(n.p,{children:"Specific indexing options to use when processing records."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"0 = Do not store compounds or stems"}),"\n",(0,i.jsx)(n.li,{children:"1 = Store word-level stems"}),"\n",(0,i.jsx)(n.li,{children:"2 = Store word-level compounds and stems"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"See also %iKnow.Stemmer and %iKnow.Stemming.DecompoundUtils for more details on stemming or decompounding, or TRANSFORMATIONSPEC for advanced options to use custom transformations."}),"\n",(0,i.jsx)(n.h3,{id:"lower",children:"LOWER"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter LOWER As BOOLEAN = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Whether or not to convert content to lowercase before indexing. When set to 1 (default), searches are always case-insensitive. When set to 0, searching will be case-sensitive."}),"\n",(0,i.jsx)(n.h3,{id:"userdictionary",children:"USERDICTIONARY"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter USERDICTIONARY As STRING;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This parameter controls which user dictionary should be used to rewrite or annotate text before it is processed by the NLP engine. See ",(0,i.jsx)(n.a,{href:"/csp/docbook/Doc.View.cls?FIND=CLASSES+%25iFind.Index.Minimal+USERDICTIONARY",children:"NLP User Dictionaries"})," in the NLP documentation."]}),"\n",(0,i.jsx)(n.p,{children:"This parameter is for advanced use only and empty by default."}),"\n",(0,i.jsx)(n.h3,{id:"stemmingconfig",children:"STEMMINGCONFIG"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter STEMMINGCONFIG As STRING;\n"})}),"\n",(0,i.jsx)(n.p,{children:"This parameter can be used to override the default stemming implementation when INDEXOPTION > 0. To do so, set this parameter to a saved %iKnow.Stemming.Configuration instance. This parameter has no effect if INDEXOPTION = 0."}),"\n",(0,i.jsx)(n.p,{children:"This parameter is for advanced use only and empty by default."}),"\n",(0,i.jsx)(n.h3,{id:"ifindmappings",children:"IFINDMAPPINGS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter IFINDMAPPINGS As BOOLEAN = 0;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When this parameter is set to 1, additional SQL projections will be created upon compiling the class. These are accessible as read-only tables in a package named [",(0,i.jsx)(n.em,{children:"package_name"}),"]_[",(0,i.jsx)(n.em,{children:"class_name"}),"] and have names starting with [",(0,i.jsx)(n.em,{children:"class_name"}),"]_[",(0,i.jsx)(n.em,{children:"index_name"}),"] (which can be overridden through IFINDADVANCEDSQLPREFIX)."]}),"\n",(0,i.jsx)(n.p,{children:"By default, the following mappings are generated for an %iFind.Index.Minimal index:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["[",(0,i.jsx)(n.em,{children:"class_name"}),"]_[",(0,i.jsx)(n.em,{children:"index_name"}),"]_WordRec"]}),": stores which words appear in each record in this index. See also %iFind.Index.AbstractWordRec."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Additional classes will be generated automatically, based on your index class and parameters. See the class reference for subclasses for more details."}),"\n",(0,i.jsx)(n.h3,{id:"ifindadvancedsqlprefix",children:"IFINDADVANCEDSQLPREFIX"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter IFINDADVANCEDSQLPREFIX As STRING;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When generating SQL projections of iFind index data using the IFINDMAPPINGS), this parameter overrides the naming of those classes, using this parameter's value instead of the default [",(0,i.jsx)(n.em,{children:"class_name"}),"]_[",(0,i.jsx)(n.em,{children:"index_name"}),"] prefix. The projections will still be created in the [",(0,i.jsx)(n.em,{children:"package_name"}),"]_[",(0,i.jsx)(n.em,{children:"class_name"}),"] package."]}),"\n",(0,i.jsx)(n.h3,{id:"ifindshareddatalocation",children:"IFINDSHAREDDATALOCATION"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter IFINDSHAREDDATALOCATION As STRING [ Constraint = "NAMESPACE,INDEX" ];\n'})}),"\n",(0,i.jsx)(n.p,{children:'This parameter enables specifying whether words, entities and similar data should be written to the shared %iFind.Word, %iFind.Entity and similar tables (IFINDSHAREDDATALOCATION="NAMESPACE", default), or whether it should be stored in index-specific tables (IFINDSHAREDDATALOCATION="INDEX"). In the latter case, mappings will be generated for these tables if IFINDMAPPINGS is set to 1.'}),"\n",(0,i.jsx)(n.h3,{id:"transformationspec",children:"TRANSFORMATIONSPEC"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter TRANSFORMATIONSPEC As STRING;\n"})}),"\n",(0,i.jsxs)(n.p,{children:['This parameter defines the word transformation(s) to apply to input text, such as stemming, decompounding and other operations for "normalizing" words, so searches can scan these normalized forms rather than the literal forms.',(0,i.jsx)(n.br,{}),"\nThis parameter cannot be set in conjunction with the INDEXOPTION and/or STEMMINGCONFIG parameters, which are shorthands for configuring stemming and decompounding options and overriding the default configurations for those.",(0,i.jsx)(n.br,{}),"\nThis parameter also allows using custom transformations by specifying the name of a class that inherits from %iFind.Transformation.Abstract, optionally followed by a colon and string that will be passed onto the Transform method of the transformation class if it accepts any parameters."]}),"\n",(0,i.jsx)(n.h3,{id:"intkeyproperty",children:"INTKEYPROPERTY"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter INTKEYPROPERTY As STRING [ Deprecated, Internal ];\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the class you wish to add an iFind index on does not have an bitmap-compatible IDKEY (composed of a single positive integer property), use this parameter to refer to another property in this class that has is bitmap-compatible. This will allow you to use iFind as usual, with the exception that this property (rather than %ID or ID) should be passed to the %FIND operator in SQL statements querying the index:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"SELECT * FROM ThePackage.MyClass WHERE MyIntProp %FIND search_index(MyBasicIndex, 'interesting')"})}),"\n",(0,i.jsx)(n.p,{children:"Note that the regular ID column should still be used when invoking the Rank and Highlight methods for these indices."}),"\n",(0,i.jsx)(n.h3,{id:"ignorepunctuation",children:"IGNOREPUNCTUATION"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter IGNOREPUNCTUATION As BOOLEAN = 1;\n"})}),"\n",(0,i.jsx)(n.p,{children:"This parameter controls whether leading and trailing punctuation is ignored in its entirety or not for this index and associated searches. If set to 0, the index will also track words with adjacent punctuation to enable specifically searching for those occurrences."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"insertindex",children:"InsertIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod InsertIndex(pID As %RawString, pArg... As %Binary) [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Inserts the iFind index for the row THROW: This method throws exceptions."}),"\n",(0,i.jsx)(n.h3,{id:"updateindex",children:"UpdateIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod UpdateIndex(pID As %RawString, pArg... As %Binary) [ CodeMode = generator, GenerateAfter = InsertIndex, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Updates the iFind index for the row"}),"\n",(0,i.jsx)(n.h3,{id:"deleteindex",children:"DeleteIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod DeleteIndex(pID As %RawString, pArg... As %Binary) [ CodeMode = generator, GenerateAfter = InsertIndex, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Deletes the iFind index for the row"}),"\n",(0,i.jsx)(n.h3,{id:"purgeindex",children:"PurgeIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod PurgeIndex() [ CodeMode = generator, GenerateAfter = InsertIndex, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Purges the iFind index"}),"\n",(0,i.jsx)(n.h3,{id:"sortbeginindex",children:"SortBeginIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod SortBeginIndex() [ ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sortendindex",children:"SortEndIndex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod SortEndIndex() [ ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"find",children:"Find"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod Find(pSearch As %Library.Binary, pOption As %Integer = 0, pLanguage As %String = "", pSynonymOption As %String = "") As %Library.Binary [ CodeMode = generator, PublicList = (SQLCODE, %msg), ServerOnly = 1, SqlProc ]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Searches for matches based on the iFind index. This function can be accessed more conveniently through the following syntax: ",(0,i.jsx)(n.code,{children:"SELECT * FROM MyPackage.Table WHERE %ID %FIND search_index(_indexname_, pSearch [, pOption [, pLanguage]])"})]}),"\n",(0,i.jsx)(n.h3,{id:"normalize",children:"Normalize"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:'ClassMethod Normalize(pQuery As %String = "", pLanguage As %String = "") As %String [ CodeMode = generator, ServerOnly = 1 ]\n'})}),"\n",(0,i.jsx)(n.p,{children:"This method will normalize the query of %iFind.Find.Basic based on the dictionary defined %iFind.Index.Basic"}),"\n",(0,i.jsx)(n.h3,{id:"getindexparams",children:"GetIndexParams"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetIndexParams(Output pParams) As %Status [ CodeMode = generator, Internal, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Internal helper method for retrieving runtime index parameter values"}),"\n",(0,i.jsx)(n.h3,{id:"embedded",children:"Embedded"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod Embedded() As %RegisteredObject [ CodeMode = generator, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return an instance of the embedded Find class, initialized with the index' parameters"}),"\n",(0,i.jsx)(n.h3,{id:"getstringvalue",children:"GetStringValue"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-objectscript-class",children:"ClassMethod GetStringValue(pRecordID As %RawString) As %String [ CodeMode = generator, Internal, ServerOnly = 1 ]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the full string value processed by this index."})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);