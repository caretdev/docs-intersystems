"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[43611],{95105:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>i,toc:()=>l});var n=s(74848),a=s(28453);const i={pagination_prev:null,pagination_next:null},r="%DeepSee.PMML.Dataset",l=[{value:"Properties",id:"properties",level:2},{value:"Name",id:"name",level:3},{value:"IdField",id:"idfield",level:3},{value:"Fields",id:"fields",level:3},{value:"Methods",id:"methods",level:2},{value:"GetValueCount",id:"getvaluecount",level:3},{value:"Get1DDistribution",id:"get1ddistribution",level:3},{value:"GetAggregatesByCategory",id:"getaggregatesbycategory",level:3},{value:"GetXDDistribution",id:"getxddistribution",level:3},{value:"Clear",id:"clear",level:3},{value:"GetFieldBySpec",id:"getfieldbyspec",level:3},{value:"GetRecordIds",id:"getrecordids",level:3},{value:"GetAsResultSet",id:"getasresultset",level:3},{value:"HasField",id:"hasfield",level:3},{value:"GetPMMLDataSourceInternal",id:"getpmmldatasourceinternal",level:3},{value:"GetPMMLDataSource",id:"getpmmldatasource",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"deepseepmmldataset",children:"%DeepSee.PMML.Dataset"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.PMML.Dataset Extends %RegisteredObject [ Abstract, System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"A Dataset is a wrapper for a collection of records that can be analyzed, in order to build or run a model. Implementations abstracting different sources of data can be found in %DeepSee.PMML.Dataset."}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"name",children:"Name"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property Name As %String(MAXLEN = 200);\n"})}),"\n",(0,n.jsx)(t.h3,{id:"idfield",children:"IdField"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property IdField As %DeepSee.PMML.Dataset.Field;\n"})}),"\n",(0,n.jsx)(t.h3,{id:"fields",children:"Fields"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Property Fields As array Of %DeepSee.PMML.Dataset.Field;\n"})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"getvaluecount",children:"GetValueCount"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetValueCount(pField As %String, pIncludeNull As %Boolean = 1, ByRef pFilters, Output pSC As %Status) As %Integer [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns the number of distinct values for pField (categorical)"}),"\n",(0,n.jsx)(t.h3,{id:"get1ddistribution",children:"Get1DDistribution"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Get1DDistribution(pField As %String, Output pDistribution, ByRef pFilters) As %Status [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:'Returns an array describing the distribution of values for a field pField (categorical) accepts pFilters(n) = $lb(field, operator, key) returns: pDistribution("total") = tTotalCount pDistribution(n) = $lb(value, count)'}),"\n",(0,n.jsx)(t.h3,{id:"getaggregatesbycategory",children:"GetAggregatesByCategory"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetAggregatesByCategory(pContField As %String, pCatField As %String, Output pAggregates, ByRef pFilters) As %Status [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:'Returns an array listing aggregate values for a continuous field pContField for each value of a categorical field pCatField. accepts pFilters(n) = $lb(field, operator, key) returns: pAggregates("total") = tTotalCount pAggregates(n) = $lb(category value, count, average, sum, max, min, countNonNull)'}),"\n",(0,n.jsx)(t.h3,{id:"getxddistribution",children:"GetXDDistribution"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetXDDistribution(pFields As %List, Output pDistribution, ByRef pFilters) As %Status [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:'accepts pFilters(n) = $lb(field, operator, key) returns: pDistribution = $lb(dim1Count, dim2Count, ...) pDistribution("value", dim, i) = value pDistribution(i, j, ...) = tCount pDistribution("total", dim, i) = tDimTotal'}),"\n",(0,n.jsx)(t.h3,{id:"clear",children:"Clear"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method Clear() As %Status\n"})}),"\n",(0,n.jsx)(t.p,{children:"Clears all temporary structures created by this object. The dataset should remain usable after calling this method!"}),"\n",(0,n.jsx)(t.h3,{id:"getfieldbyspec",children:"GetFieldBySpec"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFieldBySpec(pFieldSpec As %String) As %DeepSee.PMML.Dataset.Field\n"})}),"\n",(0,n.jsx)(t.h3,{id:"getrecordids",children:"GetRecordIds"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetRecordIds(Output pIds, ByRef pFilters) As %Status [ Abstract ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"returns pIds(n) = rowid"}),"\n",(0,n.jsx)(t.h3,{id:"getasresultset",children:"GetAsResultSet"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetAsResultSet(pFields As %List, Output pResultSet As %SQL.StatementResult, ByRef pFilters) As %Status [ Abstract, Internal ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"hasfield",children:"HasField"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method HasField(pFieldName As %String, Output pSC As %String) As %Boolean\n"})}),"\n",(0,n.jsx)(t.h3,{id:"getpmmldatasourceinternal",children:"GetPMMLDataSourceInternal"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetPMMLDataSourceInternal(Output pDataSource As %DeepSee.PMML.Definition.Extension.DataSource) As %Status [ Abstract, Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"getpmmldatasource",children:"GetPMMLDataSource"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetPMMLDataSource(Output pDataSource As %DeepSee.PMML.Definition.Extension.DataSource, pName As %String = "") As %Status [ Final, Internal ]\n'})}),"\n",(0,n.jsx)(t.p,{children:"Returns a %DeepSee.PMML.Definition.Extension.DataSource element representing the mapping from data fields to source fields"})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(96540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);