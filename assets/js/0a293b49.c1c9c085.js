"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[50663],{35642:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>o,frontMatter:()=>l,toc:()=>r});var a=n(74848),s=n(28453);const l={pagination_prev:null,pagination_next:null},i="%Monitor.System.LockTable",r=[{value:"Parameters",id:"parameters",level:2},{value:"APPLICATION",id:"application",level:3},{value:"Properties",id:"properties",level:2},{value:"TotalSpace",id:"totalspace",level:3},{value:"UsedSpace",id:"usedspace",level:3},{value:"Methods",id:"methods",level:2},{value:"Initialize",id:"initialize",level:3},{value:"GetSample",id:"getsample",level:3},{value:"SetAlert",id:"setalert",level:3}];function c(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"monitorsystemlocktable",children:"%Monitor.System.LockTable"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Monitor.System.LockTable Extends %Monitor.System.Adaptor [ System = 4 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"This class can sample the status of the Lock Table memory and generate an alert. To create an alert, set a maximum usage level (as a percentage) using the SetAlert() class method. Then use %MONAPPMGR to 'activate' this class in the %SYS namespace. When the Application Manager calls the GetSample() method to sample the used space, if it exceeds the maximum percentage, the method will generate an entry in the cconsole.log file (which may then be emailed via the System Monitor or used with SNMP). See the SetAlert() method for more details."}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"application",children:"APPLICATION"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter APPLICATION [ Internal ] = "CACHE";\n'})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"totalspace",children:"TotalSpace"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property TotalSpace As %Monitor.Integer;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The total amount of space (in bytes) available for use by the Lock Table."}),"\n",(0,a.jsx)(t.h3,{id:"usedspace",children:"UsedSpace"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property UsedSpace As %Monitor.Integer;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The amount of space (in bytes) currently in use by the Lock Table."}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"initialize",children:"Initialize"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Initialize() As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:"Initialize routine metrics."}),"\n",(0,a.jsx)(t.h3,{id:"getsample",children:"GetSample"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSample() As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:'Get routine metric sample. Fetches current Lock Table space and will generate a message in the console log if the used percentage is higher than that input in SetAlert(). This is called automatically by the Application Monitor when this class is "activated".'}),"\n",(0,a.jsxs)(t.p,{children:["A return code of $$$OK indicates there is a new sample instance.",(0,a.jsx)(t.br,{}),"\nA return code of 0 indicates there is no sample instance."]}),"\n",(0,a.jsx)(t.h3,{id:"setalert",children:"SetAlert"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod SetAlert(Maximum As %Integer) As %Integer\n"})}),"\n",(0,a.jsx)(t.p,{children:"Stores a maximum percentage of used Lock Table space to be checked by the GetSample() method."}),"\n",(0,a.jsx)(t.p,{children:'If the value of UsedSpace / TotalSpace * 100 falls below this value, then the GetSample method will log an error in the cconsole.log, which will trigger an alert by the System Monitor. Note that the %Monitor.System.LockTable Class must be "activated" in the Application Monitor (run ^%MONAPPMGR in the %SYS namespace).'}),"\n",(0,a.jsx)(t.p,{children:'A value of "0" will disable this alert.'}),"\n",(0,a.jsx)(t.p,{children:'Returns the previous value. If Maximum="", it returns the current value but does not change it.'})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(96540);const s={},l=a.createContext(s);function i(e){const t=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);