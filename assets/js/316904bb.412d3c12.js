"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[40228],{93979:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>a,frontMatter:()=>r,toc:()=>i});var s=n(74848),o=n(28453);const r={pagination_prev:null,pagination_next:null},c="%SYSTEM.Context",i=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"systemcontext",children:"%SYSTEM.Context"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SYSTEM.Context\n"})}),"\n",(0,s.jsx)(t.p,{children:"Internal class not for customer use. Shell for $system.Context system implemented class."}),"\n",(0,s.jsx)(t.p,{children:"This provides a singleton oref per job used internally to store partition wide data. For example '$system.Context.ABC()' will instanciate an instance of the class %SYSTEM.Context.ABC and return this oref, it will keep this oref open in this process so the next time $system.Context.ABC() is referenced it will return the previously opened singleton oref."}),"\n",(0,s.jsx)(t.p,{children:"These can be cleared using the call 'Do $System.CLS.ClearContext(\"*\")' to remove all context objects or 'Do $System.CLS.ClearContext(\"ABC\")' to clear just the $system.Context.ABC() one."})]})}function a(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(96540);const o={},r=s.createContext(o);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);