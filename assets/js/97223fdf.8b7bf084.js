"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[88162],{39894:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>r,default:()=>d,frontMatter:()=>l,toc:()=>i});var t=a(74848),s=a(28453);const l={pagination_prev:null,pagination_next:null},r="INFORMATION.SCHEMA.STATEMENTS",i=[{value:"Parameters",id:"parameters",level:2},{value:"READONLY",id:"readonly",level:3},{value:"Properties",id:"properties",level:2},{value:"Hash",id:"hash",level:3},{value:"SqlComp",id:"sqlcomp",level:3},{value:"DefaultSchema",id:"defaultschema",level:3},{value:"SQLSchemaPath",id:"sqlschemapath",level:3},{value:"Packages",id:"packages",level:3},{value:"Switch",id:"switch",level:3},{value:"Frozen",id:"frozen",level:3},{value:"Timestamp",id:"timestamp",level:3},{value:"Version",id:"version",level:3},{value:"Error",id:"error",level:3},{value:"Plan",id:"plan",level:3},{value:"Statement",id:"statement",level:3},{value:"ParentHash",id:"parenthash",level:3},{value:"StatementVersion",id:"statementversion",level:3},{value:"StatCount",id:"statcount",level:3},{value:"StatTotal",id:"stattotal",level:3},{value:"StatVariance",id:"statvariance",level:3},{value:"StatFirst",id:"statfirst",level:3},{value:"NaturalQuery",id:"naturalquery",level:3},{value:"StatAverage",id:"stataverage",level:3},{value:"StatStdDev",id:"statstddev",level:3},{value:"FrozenDifferent",id:"frozendifferent",level:3},{value:"FrozenScanHash",id:"frozenscanhash",level:3},{value:"FrozenScanVersion",id:"frozenscanversion",level:3},{value:"StatRowCount",id:"statrowcount",level:3},{value:"UserName",id:"username",level:3},{value:"ClientName",id:"clientname",level:3},{value:"ClientIP",id:"clientip",level:3},{value:"ClientApp",id:"clientapp",level:3},{value:"CallStack",id:"callstack",level:3},{value:"StatCommands",id:"statcommands",level:3},{value:"SQLStatementID",id:"sqlstatementid",level:3},{value:"JSONPlan",id:"jsonplan",level:3},{value:"BinaryPlan",id:"binaryplan",level:3},{value:"Children",id:"children",level:3},{value:"Relations",id:"relations",level:3},{value:"Locations",id:"locations",level:3},{value:"PrivilegeRelations",id:"privilegerelations",level:3},{value:"Days",id:"days",level:3},{value:"Methods",id:"methods",level:2},{value:"GetBinaryPlan",id:"getbinaryplan",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"informationschemastatements",children:"INFORMATION.SCHEMA.STATEMENTS"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class INFORMATION.SCHEMA.STATEMENTS Extends (%Library.Persistent, %XML.Adaptor) [ ClassType = persistent, Final, Owner = {_PUBLIC}, SqlRowIdPrivate, SqlTableName = STATEMENTS, StorageStrategy = SQLStorage, System = 4 ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Contains SQL Statement Index entries that can be accessed by the current user in the current namespace."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"readonly",children:"READONLY"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter READONLY = 1;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"hash",children:"Hash"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Hash As %String(MAXLEN = 32) [ Required, SqlColumnNumber = 2 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Internal unique statement hash used as the ID for the statement."}),"\n",(0,t.jsx)(n.h3,{id:"sqlcomp",children:"SqlComp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SqlComp As %String(MAXLEN = 32) [ SqlColumnNumber = 3 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"SQL Compilation mode, Logical, Odbc, Display, Runtime, etc., when the statement was compiled"}),"\n",(0,t.jsx)(n.h3,{id:"defaultschema",children:"DefaultSchema"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property DefaultSchema As %Library.List [ SqlColumnNumber = 4 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Value of %defschema when the statement was compiled"}),"\n",(0,t.jsx)(n.h3,{id:"sqlschemapath",children:"SQLSchemaPath"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SQLSchemaPath As %Library.List [ SqlColumnNumber = 5 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Value of %sqlSchemaPath when the statement was compiled"}),"\n",(0,t.jsx)(n.h3,{id:"packages",children:"Packages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Packages As %Library.List [ SqlColumnNumber = 6 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Value of packages argument passed to SQL compiler when the statement was compiled"}),"\n",(0,t.jsx)(n.h3,{id:"switch",children:"Switch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Switch As %String(MAXLEN = 32) [ SqlColumnNumber = 7 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Value of %switch when the statement was compiled"}),"\n",(0,t.jsx)(n.h3,{id:"frozen",children:"Frozen"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Frozen As %Integer [ SqlColumnNumber = 8 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"0/1/2/3 flag which defines if the statement plan Unfrozen (0), Frozen/Explicit (1), Frozen/Upgrade (2), or Unfrozen/Parallel (3)"}),"\n",(0,t.jsx)(n.h3,{id:"timestamp",children:"Timestamp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Timestamp As %TimeStamp [ SqlColumnNumber = 9 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Timestamp value for when the plan was saved."}),"\n",(0,t.jsx)(n.h3,{id:"version",children:"Version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Version As %String(MAXLEN = 200) [ SqlColumnNumber = 10 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"$zversion string for when the plan was saved."}),"\n",(0,t.jsx)(n.h3,{id:"error",children:"Error"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property Error As %String(MAXLEN = 4096) [ SqlColumnNumber = 11 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Error string recorded for this plan"}),"\n",(0,t.jsx)(n.h3,{id:"plan",children:"Plan"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property Plan As %String(XMLPROJECTION = "NONE") [ Calculated, SqlColumnNumber = 12, SqlComputeCode = { new asl,mt,mts,pdict set {Plan}=$$nlizFromHash^%qaqplan({Hash}) }, SqlComputed ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Query plan"}),"\n",(0,t.jsx)(n.h3,{id:"statement",children:"Statement"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property Statement As %String(COLLATION = "SQLSTRING", MAXLEN = 262144) [ SqlColumnNumber = 13 ];\n'})}),"\n",(0,t.jsx)(n.h3,{id:"parenthash",children:"ParentHash"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ParentHash As %String(MAXLEN = 32) [ SqlColumnNumber = 14 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Hash of this statement's parent statement. Only defined if this is a recursive compile for %PARALLEL statements. This references the root parent's hash."}),"\n",(0,t.jsx)(n.h3,{id:"statementversion",children:"StatementVersion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatementVersion As %Integer [ Internal, SqlColumnNumber = 15 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Version counter for internal statement version"}),"\n",(0,t.jsx)(n.h3,{id:"statcount",children:"StatCount"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatCount As %Integer [ SqlColumnNumber = 16 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Total number of times we have recorded this query being run"}),"\n",(0,t.jsx)(n.h3,{id:"stattotal",children:"StatTotal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatTotal As %Double [ SqlColumnNumber = 17 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Total time spent running this query"}),"\n",(0,t.jsx)(n.h3,{id:"statvariance",children:"StatVariance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatVariance As %Double [ SqlColumnNumber = 18 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Variance in time from running this query"}),"\n",(0,t.jsx)(n.h3,{id:"statfirst",children:"StatFirst"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatFirst As %Date [ SqlColumnNumber = 19 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"First day we recorded statistics from running this query"}),"\n",(0,t.jsx)(n.h3,{id:"naturalquery",children:"NaturalQuery"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property NaturalQuery As %Boolean [ SqlColumnNumber = 20 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set to true for 'natural' queries which are already maximally efficient and for which we do not collect any statistics as the overhead of statistical collection would have a significant impact on the statement performance."}),"\n",(0,t.jsx)(n.h3,{id:"stataverage",children:"StatAverage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property StatAverage As %Double [ Calculated, SqlColumnNumber = 21, SqlComputeCode = { Set {StatAverage}=$s({StatCount}>0:{StatTotal}/{StatCount},1:"") }, SqlComputed, SqlComputeOnChange = (StatCount, StatTotal) ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Average time spent running this query"}),"\n",(0,t.jsx)(n.h3,{id:"statstddev",children:"StatStdDev"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatStdDev As %Double [ Calculated, SqlColumnNumber = 22, SqlComputeCode = { Set {StatStdDev}={StatVariance}**0.5 }, SqlComputed, SqlComputeOnChange = StatVariance ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Standard deviation of the time measurement for this query"}),"\n",(0,t.jsx)(n.h3,{id:"frozendifferent",children:"FrozenDifferent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property FrozenDifferent As %Boolean [ SqlColumnNumber = 23 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"True if the frozen plan is different to what we would use if the plan was not frozen"}),"\n",(0,t.jsx)(n.h3,{id:"frozenscanhash",children:"FrozenScanHash"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property FrozenScanHash As %String [ Internal, SqlColumnNumber = 24 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Hash when we last scanned this statement to see if the frozen plan is different to the current plan"}),"\n",(0,t.jsx)(n.h3,{id:"frozenscanversion",children:"FrozenScanVersion"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property FrozenScanVersion As %String(MAXLEN = 200) [ Internal, SqlColumnNumber = 25 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"InterSystems IRIS version from when we last scanned this statement to see if the frozen plan is differnet to the current plan"}),"\n",(0,t.jsx)(n.h3,{id:"statrowcount",children:"StatRowCount"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatRowCount As %Integer [ SqlColumnNumber = 26 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Total %ROWCOUNT from running this query"}),"\n",(0,t.jsx)(n.h3,{id:"username",children:"UserName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property UserName As %String [ SqlColumnNumber = 27 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"$username at the time the query was built"}),"\n",(0,t.jsx)(n.h3,{id:"clientname",children:"ClientName"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ClientName As %String [ SqlColumnNumber = 28 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client name at the time the query was built"}),"\n",(0,t.jsx)(n.h3,{id:"clientip",children:"ClientIP"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ClientIP As %String [ SqlColumnNumber = 29 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client IP address at the time the query was built"}),"\n",(0,t.jsx)(n.h3,{id:"clientapp",children:"ClientApp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property ClientApp As %String [ SqlColumnNumber = 30 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client application name at the time the query was built"}),"\n",(0,t.jsx)(n.h3,{id:"callstack",children:"CallStack"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property CallStack As %List [ SqlColumnNumber = 31 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Call stack at the time the query was built"}),"\n",(0,t.jsx)(n.h3,{id:"statcommands",children:"StatCommands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property StatCommands As %Integer [ SqlColumnNumber = 32 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Total ObjectScript commands executed from running this query"}),"\n",(0,t.jsx)(n.h3,{id:"sqlstatementid",children:"SQLStatementID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property SQLStatementID As %Integer [ SqlColumnNumber = 33 ];\n"})}),"\n",(0,t.jsx)(n.p,{children:"A Unique SQL Statement Identifier which can be used to identify each SQL Statement that is stored in the SQL Statement Index (SSI)..."}),"\n",(0,t.jsx)(n.h3,{id:"jsonplan",children:"JSONPlan"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property JSONPlan As %String(XMLPROJECTION = "NONE") [ Calculated, SqlColumnNumber = 34, SqlComputeCode = { new asl,mt,mts,pdict set {JSONPlan}=$$nlizFromHash^%qaqplan({Hash},1) }, SqlComputed ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Machine Readable Query Plan"}),"\n",(0,t.jsx)(n.h3,{id:"binaryplan",children:"BinaryPlan"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property BinaryPlan As list Of %Binary(MAXLEN = 65536, XMLNAME = "Plan", XMLPROJECTION = "wrapped") [ Private, SqlColumnNumber = 35, SqlListType = SUBNODE ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Binary Query plan"}),"\n",(0,t.jsx)(n.h3,{id:"children",children:"Children"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Relationship Children As INFORMATION.SCHEMA.STATEMENTCHILDREN [ Cardinality = children, Inverse = Statement ];\n"})}),"\n",(0,t.jsx)(n.h3,{id:"relations",children:"Relations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Relationship Relations As INFORMATION.SCHEMA.STATEMENTRELATIONS [ Cardinality = children, Inverse = Statement ];\n"})}),"\n",(0,t.jsx)(n.h3,{id:"locations",children:"Locations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Relationship Locations As INFORMATION.SCHEMA.STATEMENTLOCATIONS(XMLPROJECTION = "NONE") [ Cardinality = children, Inverse = Statement ];\n'})}),"\n",(0,t.jsx)(n.h3,{id:"privilegerelations",children:"PrivilegeRelations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Relationship PrivilegeRelations As INFORMATION.SCHEMA.STATEMENTPRIVOBJECTS [ Cardinality = children, Inverse = Statements ];\n"})}),"\n",(0,t.jsx)(n.h3,{id:"days",children:"Days"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Relationship Days As INFORMATION.SCHEMA.STATEMENTDAILYSTATS(XMLPROJECTION = "NONE") [ Cardinality = children, Inverse = Statement ];\n'})}),"\n",(0,t.jsx)(n.p,{children:"Breakdown of light weight SQL stats per day"}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"getbinaryplan",children:"GetBinaryPlan"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Method GetBinaryPlan(plan) As %Status\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>i});var t=a(96540);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);