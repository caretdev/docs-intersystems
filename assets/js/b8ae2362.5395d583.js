"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[5262],{33199:(e,i,t)=>{t.r(i),t.d(i,{contentTitle:()=>a,default:()=>c,frontMatter:()=>r,toc:()=>s});var n=t(74848),l=t(28453);const r={pagination_prev:null,pagination_next:null},a="%iKnow.Matching.MatchingProfile",s=[{value:"Properties",id:"properties",level:2},{value:"DomainId",id:"domainid",level:3},{value:"ProfileId",id:"profileid",level:3},{value:"Name",id:"name",level:3},{value:"ScatteredMatchMultiplier",id:"scatteredmatchmultiplier",level:3},{value:"RelationshipScoreMultiplier",id:"relationshipscoremultiplier",level:3},{value:"PathRelevantScoreMultiplier",id:"pathrelevantscoremultiplier",level:3},{value:"RelationshipLengthMultiplier",id:"relationshiplengthmultiplier",level:3},{value:"DisorderMultiplier",id:"disordermultiplier",level:3},{value:"MinimalMatchScore",id:"minimalmatchscore",level:3},{value:"PathTotalMultiplier",id:"pathtotalmultiplier",level:3},{value:"CrcTotalMultiplier",id:"crctotalmultiplier",level:3},{value:"SentTotalMultiplier",id:"senttotalmultiplier",level:3},{value:"MaxTermLengthForCrc",id:"maxtermlengthforcrc",level:3},{value:"MinTermLengthForPath",id:"mintermlengthforpath",level:3},{value:"MinTermLengthForSent",id:"mintermlengthforsent",level:3},{value:"MinMatchedConceptFraction",id:"minmatchedconceptfraction",level:3},{value:"NegationMultiplier",id:"negationmultiplier",level:3},{value:"Methods",id:"methods",level:2},{value:"GetProfile",id:"getprofile",level:3},{value:"GetProfileByName",id:"getprofilebyname",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"ProfileIdGet",id:"profileidget",level:3},{value:"ApplyProperties",id:"applyproperties",level:3},{value:"%OnBeforeSave",id:"onbeforesave",level:3},{value:"%OnDelete",id:"ondelete",level:3},{value:"NegationMultiplierGet",id:"negationmultiplierget",level:3}];function o(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"iknowmatchingmatchingprofile",children:"%iKnow.Matching.MatchingProfile"})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Class %iKnow.Matching.MatchingProfile Extends %Persistent [ Deprecated, StorageStrategy = iKnowStorage, System = 4 ]\n"})}),"\n",(0,n.jsx)(i.p,{children:"This class represents the parameters controlling the match score calculation resulting from the iKnow Smart Matching process driven from the %iKnow.Matching.MatchingAPI."}),"\n",(0,n.jsx)(i.p,{children:'A Matching Profile can be linked to a domain, or just exist "namespace-wide", when setting the DomainId property to 0. In the latter case, the profile is typically referred to with a negative value for its ProfileId.'}),"\n",(0,n.jsx)(i.p,{children:"Use GetProfile to retrieve or instantiate a profile object."}),"\n",(0,n.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(i.h3,{id:"domainid",children:"DomainId"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property DomainId As %Integer [ ReadOnly ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The domain ID this Matching Profile is associated with. When 0, this profile can be used across the namespace."}),"\n",(0,n.jsx)(i.h3,{id:"profileid",children:"ProfileId"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property ProfileId As %Integer [ ReadOnly ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The ID of this profile. This will be a negative number for namespace-wide profiles (which have DomainId = 0)."}),"\n",(0,n.jsx)(i.h3,{id:"name",children:"Name"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property Name As %String(MAXLEN = 150) [ ReadOnly ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"A name for this profile. This name should be unique within the domain (case-insensitive) and cannot contain colons. For backwards compatibility, empty names are permitted, but these profiles cannot be retrieved with GetProfileByName"}),"\n",(0,n.jsx)(i.h3,{id:"scatteredmatchmultiplier",children:"ScatteredMatchMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property ScatteredMatchMultiplier As %Numeric [ InitialExpression = 0.75 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:'The entity-level score of scattered entity matches will be multiplied by this modifier. For example when matching the entity "blue big car" against the term "big blue car", The initial score of 1 (as all words in the entity are matched) will be multiplied with ScatteredMatchMultiplier'}),"\n",(0,n.jsx)(i.h3,{id:"relationshipscoremultiplier",children:"RelationshipScoreMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property RelationshipScoreMultiplier As %Numeric [ InitialExpression = 0.5 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The entity-level score of relationship entities will be multiplied by this modifier."}),"\n",(0,n.jsx)(i.h3,{id:"pathrelevantscoremultiplier",children:"PathRelevantScoreMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property PathRelevantScoreMultiplier As %Numeric [ InitialExpression = 0.33 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The entity-level score of path-relevant entities will be multiplied by this modifier."}),"\n",(0,n.jsx)(i.h3,{id:"relationshiplengthmultiplier",children:"RelationshipLengthMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property RelationshipLengthMultiplier As %Numeric [ InitialExpression = 0.2 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:'When calculating an aggregate match score for a CRC, path or sentence, the "length" of the matched section is compared to the total "length" of the CRC, path or sentence. This "length" is calculated taking a value of 1 for each concept and a value of RelationshipLengthMultiplier for each relationship. Therefore, setting this property to a lower value will decrease the weight of relationship entities in calculating this ratio.'}),"\n",(0,n.jsx)(i.h3,{id:"disordermultiplier",children:"DisorderMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property DisorderMultiplier As %Numeric [ InitialExpression = 0.7 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"This multiplier is applied to the aggregate match score for a CRC, path or sentence if the matched entities appear in a different order than in the dictionary term."}),"\n",(0,n.jsx)(i.h3,{id:"minimalmatchscore",children:"MinimalMatchScore"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property MinimalMatchScore As %Numeric [ InitialExpression = 0.33 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"This is the lower threshold for match scores. Matches having a total score less than MinimalMatchScore will not be stored or returned."}),"\n",(0,n.jsx)(i.h3,{id:"pathtotalmultiplier",children:"PathTotalMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property PathTotalMultiplier As %Numeric [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The total score of a path-level match is multiplied by this number."}),"\n",(0,n.jsx)(i.h3,{id:"crctotalmultiplier",children:"CrcTotalMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property CrcTotalMultiplier As %Numeric [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The total score of a CRC-level match is multiplied by this number."}),"\n",(0,n.jsx)(i.h3,{id:"senttotalmultiplier",children:"SentTotalMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property SentTotalMultiplier As %Numeric [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"The total score of a sentence-level match is multiplied by this number."}),"\n",(0,n.jsx)(i.h3,{id:"maxtermlengthforcrc",children:"MaxTermLengthForCrc"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property MaxTermLengthForCrc As %Integer [ InitialExpression = 3, Internal ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"If a dictionary term consists of more elements than MaxTermLengthForCrc, it will not be considered a candidate for a CRC-level match. Typically these terms should match at the path level."}),"\n",(0,n.jsx)(i.h3,{id:"mintermlengthforpath",children:"MinTermLengthForPath"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property MinTermLengthForPath As %Integer [ InitialExpression = 4, Internal ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"If a dictionary term consists of less elements than MinTermLengthForPath, it will not be considered a candidate for a path-level match. Typically these terms should match at the CRC level."}),"\n",(0,n.jsx)(i.h3,{id:"mintermlengthforsent",children:"MinTermLengthForSent"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property MinTermLengthForSent As %Integer [ InitialExpression = 4, Internal ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"If a dictionary term consists of less elements than MinTermLengthForSent, it will not be considered a candidate for a sentence-level match. Typically these terms should match at the CRC level."}),"\n",(0,n.jsx)(i.h3,{id:"minmatchedconceptfraction",children:"MinMatchedConceptFraction"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property MinMatchedConceptFraction As %Numeric [ InitialExpression = 0 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"Use this parameter to add an additional requirement on the number of concepts from the Dictionary Term that should be matched for an aggregate match to be considered. A value of 1 (100%) implies all concepts should be matched. A value of at least 0.51 for example means both concepts in a CRC should match. A value of 0 (default) does not impose additional restrictions."}),"\n",(0,n.jsx)(i.h3,{id:"negationmultiplier",children:"NegationMultiplier"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Property NegationMultiplier As %Numeric [ InitialExpression = 1 ];\n"})}),"\n",(0,n.jsx)(i.p,{children:"Use this parameter to modify the score of matched entities which are part of a negation. Typically, this value will be either 1, ignoring the fact an entity is part of a negation, or 0, which will make the algorithm skip these entities. Other positive numeric values are also accepted and just modify the entity-level score for the affected entities, causing them to be considered partial matches."}),"\n",(0,n.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(i.h3,{id:"getprofile",children:"GetProfile"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:'ClassMethod GetProfile(pDomainId As %Integer = 0, pProfileId As %Integer = "", pSC As %Status = {$$$OK}) As %iKnow.Matching.MatchingProfile\n'})}),"\n",(0,n.jsx)(i.p,{children:"Utility method to instantiate a Matching Profile. If passed a negative integer for pProfileId, it will look for a namespace-wide Matching Profile (which means DomainId is 0), otherwise it will take look in the domain specified through pDomainId. If pProfileId is empty, the default profile for this domain will be returned."}),"\n",(0,n.jsx)(i.p,{children:"This is the recommended way of instantiating a %iKnow.Matching.MatchingProfile object."}),"\n",(0,n.jsx)(i.h3,{id:"getprofilebyname",children:"GetProfileByName"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod GetProfileByName(pDomainId As %Integer = 0, pName As %String, pSC As %Status = {$$$OK}) As %iKnow.Matching.MatchingProfile\n"})}),"\n",(0,n.jsx)(i.p,{children:"Looks up a Matching Profile by name in the domain identified by pDomainId (or in the set of cross-domain profiles if pDomainId = 0). pName should be a nonempty string and can be prepended with the domain ID to look into (overriding the value of pDomainId), separated by a colon. This allows configuration settings to refer to a particular Matching Profile with a single string. Matching Profiles without a name cannot be looked up through this method and should be looked up by ID using GetProfile instead."}),"\n",(0,n.jsx)(i.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:'Method %OnNew(pDomainId As %Integer = 0, pName As %String = "") As %Status [ Private, ServerOnly = 1 ]\n'})}),"\n",(0,n.jsx)(i.p,{children:"Creates a new Matching Profile instance in domain pDomainId (set to 0 to use the profile across domains) named pName. The name is optional but if specified, should be unique within the domain (or within the cross-domain profiles) and cannot contain colon characters."}),"\n",(0,n.jsx)(i.h3,{id:"profileidget",children:"ProfileIdGet"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Method ProfileIdGet() As %Integer [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(i.h3,{id:"applyproperties",children:"ApplyProperties"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Method ApplyProperties(pOtherProfile As %iKnow.Matching.MatchingProfile) As %Status\n"})}),"\n",(0,n.jsx)(i.p,{children:"Copies all non-ReadOnly property values of the supplied Matching Profile object to the current object. This excludes ProfileId, DomainId and Name."}),"\n",(0,n.jsx)(i.h3,{id:"onbeforesave",children:"%OnBeforeSave"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Method %OnBeforeSave(insert As %Boolean) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(i.h3,{id:"ondelete",children:"%OnDelete"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"ClassMethod %OnDelete(oid As %ObjectIdentity) As %Status [ Private, ServerOnly = 1 ]\n"})}),"\n",(0,n.jsx)(i.h3,{id:"negationmultiplierget",children:"NegationMultiplierGet"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-objectscript-class",children:"Method NegationMultiplierGet() As %Numeric [ Internal, ServerOnly = 1 ]\n"})})]})}function c(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>s});var n=t(96540);const l={},r=n.createContext(l);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);