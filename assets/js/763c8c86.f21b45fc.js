"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[47999],{25814:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>l,toc:()=>r});var n=s(74848),a=s(28453);const l={pagination_prev:null,pagination_next:null},i="%DeepSee.Time.AbstractLevel",r=[{value:"Parameters",id:"parameters",level:2},{value:"OPTIONLIST",id:"optionlist",level:3},{value:"DIMTYPE",id:"dimtype",level:3},{value:"CALENDAR",id:"calendar",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"Methods",id:"methods",level:2},{value:"%SupportsNOW",id:"supportsnow",level:3},{value:"%IsIndependent",id:"isindependent",level:3},{value:"%GetPeriodLength",id:"getperiodlength",level:3},{value:"%FormatToZDTCode",id:"formattozdtcode",level:3},{value:"%GetOptionList",id:"getoptionlist",level:3},{value:"%GetName",id:"getname",level:3},{value:"%GetDimType",id:"getdimtype",level:3},{value:"%GetCalendar",id:"getcalendar",level:3},{value:"%Count",id:"count",level:3},{value:"%GetMemberSpec",id:"getmemberspec",level:3},{value:"%Convert",id:"convert",level:3},{value:"%KeyToValue",id:"keytovalue",level:3},{value:"%ValueToKey",id:"valuetokey",level:3},{value:"%KeyToBaseRange",id:"keytobaserange",level:3},{value:"%BaseRangeToKey",id:"baserangetokey",level:3},{value:"%GetLevelMembers",id:"getlevelmembers",level:3},{value:"%GetRelatedKey",id:"getrelatedkey",level:3},{value:"%GetAllMembers",id:"getallmembers",level:3},{value:"%GetNthKey",id:"getnthkey",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"deepseetimeabstractlevel",children:"%DeepSee.Time.AbstractLevel"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Time.AbstractLevel Extends %RegisteredObject [ Abstract, System = 3 ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This is the base class for the family of DeepSee time hierarchy level classes.",(0,n.jsx)(t.br,{}),"\nA time hierarchy class defines the behavior for a level within a hierarchy within a DeepSee dimension.",(0,n.jsx)(t.br,{}),"\nThe class (non-package) part of a level class *must* be unique. You will get an error when you attempt to compile a cube definition is this is not the case."]}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(t.h3,{id:"optionlist",children:"OPTIONLIST"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter OPTIONLIST As STRING;\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This is a comma-delimited list of user-settable options for this time function.",(0,n.jsx)(t.br,{}),"\nOptions can be defined within a DeepSee cube definition."]}),"\n",(0,n.jsx)(t.h3,{id:"dimtype",children:"DIMTYPE"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter DIMTYPE As STRING;\n"})}),"\n",(0,n.jsx)(t.p,{children:"Type reported back to the UI. This determines what type of control to display for filters based on this class."}),"\n",(0,n.jsx)(t.h3,{id:"calendar",children:"CALENDAR"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter CALENDAR As STRING = "gregorian";\n'})}),"\n",(0,n.jsx)(t.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter DOMAIN As STRING = "%DeepSee";\n'})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"supportsnow",children:"%SupportsNOW"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %SupportsNOW() As %Boolean\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return true if this level supports a NOW member."}),"\n",(0,n.jsx)(t.h3,{id:"isindependent",children:"%IsIndependent"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %IsIndependent() As %Boolean\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Return true if this time level is ",(0,n.jsx)(t.strong,{children:"independent"})," of the actual date. For example a Month Number is independent of the actual month while a YearMonth is not."]}),"\n",(0,n.jsx)(t.h3,{id:"getperiodlength",children:"%GetPeriodLength"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetPeriodLength() As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the number of seconds in one unit of this time level."}),"\n",(0,n.jsx)(t.h3,{id:"formattozdtcode",children:"%FormatToZDTCode"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %FormatToZDTCode(pFormat As %String, pDefault As %Integer) As %Integer [ CodeMode = expression ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Utility method: Convert a time format string to a $ZDT format number. [Previously private]"}),"\n",(0,n.jsx)(t.h3,{id:"getoptionlist",children:"%GetOptionList"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetOptionList(Output pList As %String) [ Final ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return set of possible options for this function. This is return as an array subscripted by option name."}),"\n",(0,n.jsx)(t.h3,{id:"getname",children:"%GetName"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetName() As %String\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the user-visible name of this level."}),"\n",(0,n.jsx)(t.h3,{id:"getdimtype",children:"%GetDimType"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetDimType() As %String\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the type of this level class (used by UI components)."}),"\n",(0,n.jsx)(t.h3,{id:"getcalendar",children:"%GetCalendar"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetCalendar() As %String\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the calendar that this class uses to calculate the members of the level"}),"\n",(0,n.jsx)(t.h3,{id:"count",children:"%Count"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %Count(pCube As %String, pDimNo As %Integer, pHierNo As %Integer, pLevelNo As %Integer) As %Integer\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the total number of members within this level."}),"\n",(0,n.jsx)(t.h3,{id:"getmemberspec",children:"%GetMemberSpec"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetMemberSpec(pMemberId As %String, pCubeName As %String, pDimNo As %Integer, pHierNo As %Integer, pLevelNo As %Integer) As %String [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return the member specification for the given member."}),"\n",(0,n.jsx)(t.h3,{id:"convert",children:"%Convert"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %Convert(pTime As %DeepSee.Datatype.dateTime, pOffset As %String = "") As %Integer\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Convert a $H value to the logical value used for this level. This is used within the computed field logic for properties within a fact table based on this level.",(0,n.jsx)(t.br,{}),"\n. This is implemented by subclasses.",(0,n.jsx)(t.br,{}),"\nA subclass may extend this function and add additional arguments that correspond to user-settable options. Option values will be supplied when DeepSee invokes this method.",(0,n.jsx)(t.br,{}),"\npTimeOffset is a time offset (interval) applied to the value."]}),"\n",(0,n.jsx)(t.h3,{id:"keytovalue",children:"%KeyToValue"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %KeyToValue(pKey As %Integer, pFormat As %String = "", pOffset As %String = "") As %String\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Convert a level key (logical) value to a display value. pKey is the logical value (the format is up to the implementer of the class, but it must match that returned by the %Convert method.)",(0,n.jsx)(t.br,{}),"\nFormat is an optional format value. This is specified by the Format option when this level is specified within a cube definition. The possible Format values are determined by the class implementor."]}),"\n",(0,n.jsx)(t.h3,{id:"valuetokey",children:"%ValueToKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %ValueToKey(pValue As %String, pFormat As %String = "", pOffset As %String = "") As %Integer\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Convert a level display value to its corresponding key value. The format of the logical and display values are up to the class implementor.",(0,n.jsx)(t.br,{}),"\nFormat is an optional format value. This is specified by the Format option when this level is specified within a cube definition.",(0,n.jsx)(t.br,{}),"\nThe possible Format values are determined by the class implementor.",(0,n.jsx)(t.br,{}),'\nReturn "" if there is no corresponding key.']}),"\n",(0,n.jsx)(t.h3,{id:"keytobaserange",children:"%KeyToBaseRange"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %KeyToBaseRange(pKey As %String, Output pStart As %Date, Output pEnd As %Date, pOffset As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(t.p,{children:"Convert a level key value into starting and ending base values (in $H format)."}),"\n",(0,n.jsx)(t.h3,{id:"baserangetokey",children:"%BaseRangeToKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %BaseRangeToKey(Output pKey As %String, pStart As %Date, pEnd As %Date, pOffset As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(t.p,{children:"Given a pair of base values (in $H format) find a key value that lies within the range."}),"\n",(0,n.jsx)(t.h3,{id:"getlevelmembers",children:"%GetLevelMembers"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %GetLevelMembers(Output pList As %List, pCube As %String, pFact As %String, pStartRange As %Date, pEndRange As %Date, pTimeOffset As %String = "", pFormat As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(t.p,{children:"Return an array of members of this level."}),"\n",(0,n.jsx)(t.h3,{id:"getrelatedkey",children:"%GetRelatedKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %GetRelatedKey(Output pRelatedKey As %String, pCube As %String, pFact As %String, pKey As %String, pRelation As %String, pOffset As %Integer = "", pEndKey As %String = "", pTimeOffset As %String = "") As %Status\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Return, via pRelatedKey a key within this level related to pKey.",(0,n.jsx)(t.br,{}),'\npRelation describes the relation: "lead","lag","first","last"',(0,n.jsx)(t.br,{}),'\n"lead" and "lag" are relative to pKey',(0,n.jsx)(t.br,{}),'\n"first" and "last" are relative to the first and last members of the level.',(0,n.jsx)(t.br,{}),'\npEndKey is the end of the time period implied by the parent level (if applicable). This is used by "first" and "last".',(0,n.jsx)(t.br,{}),"\npOffset is an optional offset to apply (in the direction of the relation).",(0,n.jsx)(t.br,{}),"\nNote: pKey and pEndKey are key values and not $H values."]}),"\n",(0,n.jsx)(t.h3,{id:"getallmembers",children:"%GetAllMembers"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod %GetAllMembers(Output pList As %List, pCube As %String, pFact As %String, pStartRange As %Date, pEndRange As %Date, pFormat As %String = "") As %Status\n'})}),"\n",(0,n.jsx)(t.p,{children:"Pull out all members of this level from the Fact table index."}),"\n",(0,n.jsx)(t.h3,{id:"getnthkey",children:"%GetNthKey"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %GetNthKey(Output pKey As %String, pCube As %String, pFact As %String, pRelation As %String, pOffset As %Integer = 0) As %Status [ Final ]\n"})}),"\n",(0,n.jsx)(t.p,{children:'Pull out the Nth (non-null) member (key) of this level from the Fact table index where N is pIndex. pRelation is "first" or "last" If pOffset offset from the start or end.'})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var n=s(96540);const a={},l=n.createContext(a);function i(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);