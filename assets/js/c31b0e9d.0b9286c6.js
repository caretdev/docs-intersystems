"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[71338],{77489:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>l,default:()=>o,frontMatter:()=>n,toc:()=>a});var r=i(74848),s=i(28453);const n={pagination_prev:null,pagination_next:null},l="%iKnow.Filters.Filter",a=[{value:"Properties",id:"properties",level:2},{value:"DomainId",id:"domainid",level:3},{value:"IsCached",id:"iscached",level:3},{value:"FilterId",id:"filterid",level:3},{value:"FilteredBitsGlo",id:"filteredbitsglo",level:3},{value:"IsCalculatedGlo",id:"iscalculatedglo",level:3},{value:"FilterValidGlo",id:"filtervalidglo",level:3},{value:"FilteredGlo",id:"filteredglo",level:3},{value:"FilteredFreqGlo",id:"filteredfreqglo",level:3},{value:"FilteredSpreadGlo",id:"filteredspreadglo",level:3},{value:"FilteredQParams",id:"filteredqparams",level:3},{value:"FilteredQRange",id:"filteredqrange",level:3},{value:"FilteredQResult",id:"filteredqresult",level:3},{value:"FilteredSourceCount",id:"filteredsourcecount",level:3},{value:"FilteredEntityUniqueCount",id:"filteredentityuniquecount",level:3},{value:"FilteredCrcUniqueCount",id:"filteredcrcuniquecount",level:3},{value:"Selectivity",id:"selectivity",level:3},{value:"Methods",id:"methods",level:2},{value:"Initialize",id:"initialize",level:3},{value:"RestoreFilterFromId",id:"restorefilterfromid",level:3},{value:"RestoreFilterFromString",id:"restorefilterfromstring",level:3},{value:"RestoreFilterFromStringInternal",id:"restorefilterfromstringinternal",level:3},{value:"ToString",id:"tostring",level:3},{value:"GetSourceFilter",id:"getsourcefilter",level:3},{value:"SetSourceBits",id:"setsourcebits",level:3},{value:"GetNextSourceFilterOffset",id:"getnextsourcefilteroffset",level:3},{value:"BuildSourceFilter",id:"buildsourcefilter",level:3},{value:"GetSecondaryFilter",id:"getsecondaryfilter",level:3},{value:"GetNextFilterOffset",id:"getnextfilteroffset",level:3},{value:"GetEntityUniqueFilter",id:"getentityuniquefilter",level:3},{value:"GetNextEntityUniqueFilterOffset",id:"getnextentityuniquefilteroffset",level:3},{value:"GetEntityOccurrenceFilter",id:"getentityoccurrencefilter",level:3},{value:"GetNextEntityOccurrenceFilterOffset",id:"getnextentityoccurrencefilteroffset",level:3},{value:"GetCRCUniqueFilter",id:"getcrcuniquefilter",level:3},{value:"GetNextCRCUniqueFilterOffset",id:"getnextcrcuniquefilteroffset",level:3},{value:"GetCcUniqueFilter",id:"getccuniquefilter",level:3},{value:"GetNextCcUniqueFilterOffset",id:"getnextccuniquefilteroffset",level:3},{value:"GetCRCOccurrenceFilter",id:"getcrcoccurrencefilter",level:3},{value:"GetNextCRCOccurrenceFilterOffset",id:"getnextcrcoccurrencefilteroffset",level:3},{value:"GetPathFilter",id:"getpathfilter",level:3},{value:"GetNextPathFilterOffset",id:"getnextpathfilteroffset",level:3},{value:"BuildUniqueFilter",id:"builduniquefilter",level:3},{value:"BuildTypedEntOccFilter",id:"buildtypedentoccfilter",level:3},{value:"BuildOccurrenceFilter",id:"buildoccurrencefilter",level:3},{value:"Invalidate",id:"invalidate",level:3},{value:"CreateAsString",id:"createasstring",level:3},{value:"CreateGroupAsString",id:"creategroupasstring",level:3},{value:"DomainIdSet",id:"domainidset",level:3},{value:"ChangeParams",id:"changeparams",level:3},{value:"Validate",id:"validate",level:3},{value:"IsValid",id:"isvalid",level:3},{value:"SelectivityGet",id:"selectivityget",level:3},{value:"FilteredSourceCountGet",id:"filteredsourcecountget",level:3},{value:"GetFilteredEntityUniqueCount",id:"getfilteredentityuniquecount",level:3},{value:"GetFilteredCrcUniqueCount",id:"getfilteredcrcuniquecount",level:3},{value:"ClearCachedFilter",id:"clearcachedfilter",level:3},{value:"ClearCachedFilters",id:"clearcachedfilters",level:3},{value:"GetFilteredEntityFrequency",id:"getfilteredentityfrequency",level:3},{value:"GetFilteredStemFrequency",id:"getfilteredstemfrequency",level:3},{value:"GetFilteredEntitySpread",id:"getfilteredentityspread",level:3},{value:"GetFilteredStemSpread",id:"getfilteredstemspread",level:3},{value:"GetFilteredCrcFrequency",id:"getfilteredcrcfrequency",level:3},{value:"GetFilteredCrcSpread",id:"getfilteredcrcspread",level:3},{value:"GetFilteredCcFrequency",id:"getfilteredccfrequency",level:3},{value:"GetFilteredCcSpread",id:"getfilteredccspread",level:3},{value:"SaveFilteredFrequency",id:"savefilteredfrequency",level:3},{value:"SaveFilteredSpread",id:"savefilteredspread",level:3},{value:"IsFiltered",id:"isfiltered",level:3},{value:"GetFirstFilteredSource",id:"getfirstfilteredsource",level:3},{value:"MergeBits",id:"mergebits",level:3},{value:"CheckResultCache",id:"checkresultcache",level:3},{value:"CheckResultCacheSingle",id:"checkresultcachesingle",level:3},{value:"StoreResultCache",id:"storeresultcache",level:3},{value:"StoreResultCacheSingle",id:"storeresultcachesingle",level:3},{value:"GetNextSrcId",id:"getnextsrcid",level:3},{value:"FromString",id:"fromstring",level:3},{value:"ToArray",id:"toarray",level:3},{value:"ToBitstring",id:"tobitstring",level:3},{value:"CreateFromBitstring",id:"createfrombitstring",level:3},{value:"GetLabel",id:"getlabel",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"iknowfiltersfilter",children:"%iKnow.Filters.Filter"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Class %iKnow.Filters.Filter Extends %RegisteredObject [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This is the base class for iKnow Filter objects, restricting the scope of an iKnow Query to a subset of all the sources in a domain through filter criteria based on the properties of a Source. These criteria are expressed through a number of ",(0,r.jsx)(t.strong,{children:"Filter Parameters"})," which should be passed as arguments to the %New method when instantiating a filter object. Typically, the first Filter Parameter is the Domain ID of the domain of which sources are to be filtered."]}),"\n",(0,r.jsxs)(t.p,{children:["Filters have a ",(0,r.jsx)(t.strong,{children:"String Representation"})," so they can be passed around in non-object environments such as SQL and SOAP. Subclasses should therefore provide an unambiguous implementation for ToString, serializing its Filter Parameters so the string can be passed around and then deserialized through the RestoreFilterFromString method. See also CreateAsString and %iKnow.Filters.FilterWSAPI for handling filters in non-COS environments."]}),"\n",(0,r.jsx)(t.p,{children:"Subclasses should provide an implementation for (at least) BuildSourceFilter, building a bitstring with 1s for those Source IDs satisfying the filter criteria the filter class represents. In their %OnNew implementation, subclasses should make sure to set the DomainId property and call Initialize after setting all other properties specific to its implementation that influence the outcome of its ToString."}),"\n",(0,r.jsxs)(t.p,{children:["Filters can be ",(0,r.jsx)(t.strong,{children:"cached"})," so their calculated bitstrings can be reused (as long as they are still valid) across processes and time. Cache usage can be configured either by setting the $$$IKPENABLEFILTERCACHE domain parameter, or through a subclass explicitly enabling or disabling it when calling Initialize."]}),"\n",(0,r.jsx)(t.p,{children:"Sample Filter implementations include %iKnow.Filters.ExternalIdFilter, %iKnow.Filters.SentenceCountFilter and %iKnow.Filters.SimpleMetadataFilter"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"WARNING:"})," When implementing a custom filter class, either make its properties read-only, or override the corresponding Set methods to call ChangeParams to reset the internal representations after property values change. When setting these updateable properties in the class' %OnNew method, use i% syntax to bypass these setters."]}),"\n",(0,r.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(t.h3,{id:"domainid",children:"DomainId"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property DomainId As %Integer [ Final ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"The domain ID this filter instance is targeting."}),"\n",(0,r.jsx)(t.h3,{id:"iscached",children:"IsCached"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property IsCached As %Integer [ Final, InitialExpression = -1, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"Whether or not this filter instance is stored in the persistent cache."}),"\n",(0,r.jsx)(t.h3,{id:"filterid",children:"FilterId"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilterId As %Integer [ Internal, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"An internal identifier for this Filter instance."}),"\n",(0,r.jsx)(t.h3,{id:"filteredbitsglo",children:"FilteredBitsGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredBitsGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"iscalculatedglo",children:"IsCalculatedGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property IsCalculatedGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filtervalidglo",children:"FilterValidGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilterValidGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredglo",children:"FilteredGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredfreqglo",children:"FilteredFreqGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredFreqGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredspreadglo",children:"FilteredSpreadGlo"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredSpreadGlo As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredqparams",children:"FilteredQParams"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredQParams As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredqrange",children:"FilteredQRange"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredQRange As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredqresult",children:"FilteredQResult"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredQResult As %String [ Internal, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredsourcecount",children:"FilteredSourceCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredSourceCount As %Integer [ InitialExpression = -1, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"The total number of sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h3,{id:"filteredentityuniquecount",children:"FilteredEntityUniqueCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredEntityUniqueCount As %Integer [ InitialExpression = -1, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"The total number of distinct entities occurring in at least one of the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h3,{id:"filteredcrcuniquecount",children:"FilteredCrcUniqueCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property FilteredCrcUniqueCount As %Integer [ InitialExpression = -1, Private, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"The total number of distinct CRCs occurring in at least one of the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h3,{id:"selectivity",children:"Selectivity"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Property Selectivity As %Numeric [ InitialExpression = -1, ReadOnly ];\n"})}),"\n",(0,r.jsx)(t.p,{children:"The ratio of sources satisfying this filter instances criteria to the total number of sources in this domain."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"initialize",children:"Initialize"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Initialize(useCache As %Integer = -1) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"This method initializes the data structures this Filter object will be using througout its lifetime as an object instance. If caching is enabled for this object (useCache = 1), it will check if there is already a cached entry corresponding to these filter criteria it can reuse, or create a new cache entry otherwise. If caching is disabled (useCache = 0), Process-Private Globals will be used for storing this filter instances internals and nothing will be reused. If useCache = -1 (default), the domain default will be used (set through the $$$IKPENABLEFILTERCACHE domain parameter)."}),"\n",(0,r.jsx)(t.h3,{id:"restorefilterfromid",children:"RestoreFilterFromId"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RestoreFilterFromId(domainId As %Integer, filterId As %Integer) As %iKnow.Filters.Filter [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Utility method to restore a cached filter based on its cached filter ID."}),"\n",(0,r.jsx)(t.h3,{id:"restorefilterfromstring",children:"RestoreFilterFromString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RestoreFilterFromString(filterSpec As %String) As %iKnow.Filters.Filter [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Utility method to recreate a filter based on its string representation, which by default corresponds to the filter class name, a pipe character (|) and a filter-specific string containing all parameters required to recreate the string using the %New method. Subclasses should override RestoreFilterFromStringInternal if this default behavior is not sufficient."}),"\n",(0,r.jsx)(t.p,{children:"This method is used primarily in SQL and Web Service scenarios, where the filter objects themselves cannot be passed in a SQL statement or SOAP request."}),"\n",(0,r.jsx)(t.h3,{id:"restorefilterfromstringinternal",children:"RestoreFilterFromStringInternal"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod RestoreFilterFromStringInternal(filterParams As %String) As %iKnow.Filters.Filter [ Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Default implementation, with the filterParams corresponding to all %New arguments. See also RestoreFilterFromString."}),"\n",(0,r.jsx)(t.h3,{id:"tostring",children:"ToString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ToString() As %String [ Abstract ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Subclasses should implement this method to build a string representation of the filter instance. It should start with the filter class name, followed by a pipe (|) character and then a string representation that can be interpreted by its RestoreFilterFromStringInternal implementation."}),"\n",(0,r.jsx)(t.h3,{id:"getsourcefilter",children:"GetSourceFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSourceFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring representing the Source IDs satisfying this Filters criteria, for the given offset (sourceId\\64000+1)."}),"\n",(0,r.jsx)(t.h3,{id:"setsourcebits",children:"SetSourceBits"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetSourceBits(offset As %Integer, bits As %String) As %Status [ Final, Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Method to be called by the subclass' implementation of BuildSourceBits to register a bitstring of Source IDs at a particular offset."}),"\n",(0,r.jsx)(t.h3,{id:"getnextsourcefilteroffset",children:"GetNextSourceFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetNextSourceFilterOffset(offset As %Integer = "", Output nextBits As %Integer, direction As %Integer = 1) As %Integer\n'})}),"\n",(0,r.jsx)(t.p,{children:"Retrieves a bitstring representing the Source IDs satisfying this Filters criteria, for the offset (sourceId\\64000+1) following the supplied one. The returned number is the next offset (given the direction)."}),"\n",(0,r.jsx)(t.h3,{id:"buildsourcefilter",children:"BuildSourceFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method BuildSourceFilter(maxOffset As %Integer) As %Status [ Abstract, Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This is the primary method that needs to be implemented by an actual %iKnow.Filters.Filter subclass to translate the abstract filter criteria the subclass addresses into a bitstring based on Source IDs. The subclass' implementation of this method should use SetSourceBits for this purpose, setting the requested bitstrings for each offset up to maxOffset."}),"\n",(0,r.jsx)(t.h3,{id:"getsecondaryfilter",children:"GetSecondaryFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetSecondaryFilter(type As %Integer, offset As %Integer) As %String [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getnextfilteroffset",children:"GetNextFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextFilterOffset(type As %Integer, offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getentityuniquefilter",children:"GetEntityUniqueFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetEntityUniqueFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on entUniIDs, representing those unique entities appearing in at least one source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextentityuniquefilteroffset",children:"GetNextEntityUniqueFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextEntityUniqueFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on unique entity IDs."}),"\n",(0,r.jsx)(t.h3,{id:"getentityoccurrencefilter",children:"GetEntityOccurrenceFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetEntityOccurrenceFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on entOccIDs, representing those entity occurrences appearing in a source source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextentityoccurrencefilteroffset",children:"GetNextEntityOccurrenceFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextEntityOccurrenceFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on entity occurrence IDs."}),"\n",(0,r.jsx)(t.h3,{id:"getcrcuniquefilter",children:"GetCRCUniqueFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetCRCUniqueFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on crcUniIDs, representing those unique CRCs appearing in at least one source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextcrcuniquefilteroffset",children:"GetNextCRCUniqueFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextCRCUniqueFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on unique CRC IDs."}),"\n",(0,r.jsx)(t.h3,{id:"getccuniquefilter",children:"GetCcUniqueFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetCcUniqueFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on crcUniIDs, representing those unique CCs appearing in at least one source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextccuniquefilteroffset",children:"GetNextCcUniqueFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextCcUniqueFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on unique CC IDs."}),"\n",(0,r.jsx)(t.h3,{id:"getcrcoccurrencefilter",children:"GetCRCOccurrenceFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetCRCOccurrenceFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on crcOccIDs, representing those CRC occurrences appearing in a source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextcrcoccurrencefilteroffset",children:"GetNextCRCOccurrenceFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextCRCOccurrenceFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on CRC occurrence IDs."}),"\n",(0,r.jsx)(t.h3,{id:"getpathfilter",children:"GetPathFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetPathFilter(offset As %Integer) As %String [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns a bitstring on path IDs, representing those paths appearing in a source satisfying the filter criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getnextpathfilteroffset",children:"GetNextPathFilterOffset"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextPathFilterOffset(offset As %Integer, Output nextBits As %String, direction As %Integer = 1) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the next offset for which this filter has bits (also returned as nextBits) in its filter on path IDs."}),"\n",(0,r.jsx)(t.h3,{id:"builduniquefilter",children:"BuildUniqueFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method BuildUniqueFilter(type As %Integer) As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Builds a filter on entUniIds or crcUniIds, starting from the one on Source IDs."}),"\n",(0,r.jsx)(t.h3,{id:"buildtypedentoccfilter",children:"BuildTypedEntOccFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method BuildTypedEntOccFilter(type As %Integer) As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Builds a filter on entity occurrence IDs specifically in a concept or relation role, starting from the one on entity occurrence IDs."}),"\n",(0,r.jsx)(t.h3,{id:"buildoccurrencefilter",children:"BuildOccurrenceFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method BuildOccurrenceFilter(type As %Integer = {$$$IKFENTOCC}) As %Status [ Final, Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Builds a filter on entOccIds, crcOccIds or pathIds, starting from the one on Source IDs."}),"\n",(0,r.jsx)(t.h3,{id:"invalidate",children:"Invalidate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Invalidate(type As %Integer = {$$$IKFSOURCE}) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Resets all internal representations, forcing further use of this filter to recalculate results. If a type is supplied, only the bitstrings of that type are reset, including dependent ones. In the case of Source IDs (type = $$$IKFSOURCE), specific offset values can be invalidated separately."}),"\n",(0,r.jsx)(t.h3,{id:"createasstring",children:"CreateAsString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateAsString(createParams...) As %String [ Final, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This class method is an access point to generate the string representation (as specified in ToString) for %iKnow.Filters.Filter classes, accessible from COS and SQL scenarios that cannot or prefer not to directly instantiate objects through COS."}),"\n",(0,r.jsxs)(t.p,{children:["When calling this method, you should supply the ",(0,r.jsx)(t.strong,{children:"Filter Parameters"})," as if calling the %New method of this particular Filter implementation."]}),"\n",(0,r.jsx)(t.p,{children:"For Web Service scenario's, use the corresponding method in %iKnow.Filters.FilterWSAPI."}),"\n",(0,r.jsx)(t.h3,{id:"creategroupasstring",children:"CreateGroupAsString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateGroupAsString(domainId As %Integer, groupLogic As %Integer = {$$$GROUPFILTERAND}, negated As %Boolean = 0, filters...) As %String [ Final, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This class enables SQL users to create the string representation of a %iKnow.Filters.GroupFilter composed of multiple subfilters passed in using their respective string representations as the filters... parameter."}),"\n",(0,r.jsx)(t.p,{children:"For Web Service scenario's, use the corresponding method in %iKnow.Filters.FilterWSAPI."}),"\n",(0,r.jsx)(t.h3,{id:"domainidset",children:"DomainIdSet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method DomainIdSet(domainId As %Integer) As %Status [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Override Set method to invalidate filter upon change"}),"\n",(0,r.jsx)(t.h3,{id:"changeparams",children:"ChangeParams"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ChangeParams() As %Status [ Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"This method should be called inside *Set methods of subclasses that allow their properties to be changed in the instances lifetime, to make sure it's properly re-initialized."}),"\n",(0,r.jsx)(t.h3,{id:"validate",children:"Validate"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method Validate(type As %Integer = {$$$IKFSOURCE}, Output isValid As %Boolean = 0) As %Status [ Private ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Checks whether this filter is in a valid state and all calculated bitstrings are up-to-date through a call to IsValid, the result of which is returned as isValid. If the bitstrings of the requested type are invalid, Invalidate is called."}),"\n",(0,r.jsx)(t.h3,{id:"isvalid",children:"IsValid"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsValid(type As %Integer = {$$$IKFSOURCE}) As %Boolean\n"})}),"\n",(0,r.jsx)(t.p,{children:"Checks if this filter for type is still up-to-date with regards to incorporating the most recent source additions and changes. Subclasses might wish to override this method but should combine their additional checks with the result of this root implementation if they do."}),"\n",(0,r.jsx)(t.p,{children:"If the requested filter is not calculated, this method will return 0."}),"\n",(0,r.jsx)(t.h3,{id:"selectivityget",children:"SelectivityGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SelectivityGet() As %Numeric [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"filteredsourcecountget",children:"FilteredSourceCountGet"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method FilteredSourceCountGet() As %Integer [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredentityuniquecount",children:"GetFilteredEntityUniqueCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredEntityUniqueCount(ByRef approximate As %Boolean = 0) As %Integer [ Final ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of distinct entities occurring in at least one of the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredcrcuniquecount",children:"GetFilteredCrcUniqueCount"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredCrcUniqueCount(ByRef approximate As %Boolean = 0) As %Integer [ Internal, ServerOnly = 1 ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of distinct CRCs occurring in at least one of the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.p,{children:"This property is used to choose the fastest access path in iKnow Query implementations."}),"\n",(0,r.jsx)(t.h3,{id:"clearcachedfilter",children:"ClearCachedFilter"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ClearCachedFilter(domainId As %Integer, filterId As %Integer) As %Status [ Final, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Clears a specific filter from the persistent filter cache, if it exists."}),"\n",(0,r.jsx)(t.h3,{id:"clearcachedfilters",children:"ClearCachedFilters"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ClearCachedFilters(domainId As %Integer) As %Status [ Final, SqlProc ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Clears all filters from the persistent filter cache."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredentityfrequency",children:"GetFilteredEntityFrequency"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredEntityFrequency(entUniId As %Integer, role As %Integer = {$$$ENTTYPEANY}) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total frequency of an entity in the sources satisfying this filter instances criteria, where the entities role is concept (if role = $$$ENTTYPECONCEPT), relation (if role = $$$ENTTYPERELATION) or either of the two (if role = $$$ENTTYPEANY)."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredstemfrequency",children:"GetFilteredStemFrequency"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredStemFrequency(pStemUniId As %Integer, pRole As %Integer = {$$$ENTTYPEANY}) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total frequency of a stem in the sources satisfying this filter instances criteria, where the stem's role is concept (if pRole = $$$ENTTYPECONCEPT), relation (if pRole = $$$ENTTYPERELATION) or either of the two (if pRole = $$$ENTTYPEANY)."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredentityspread",children:"GetFilteredEntitySpread"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetFilteredEntitySpread(entUniId As %Integer, role As %Integer = {$$$ENTTYPEANY}, details As %List = "") As %Integer\n'})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of sources in which the supplied entity appears that satisfy this filter instances criteria, where its role is concept (if role = $$$ENTTYPECONCEPT), relation (if role = $$$ENTTYPERELATION) or either of the two (if role = $$$ENTTYPEANY)."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredstemspread",children:"GetFilteredStemSpread"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetFilteredStemSpread(pStemUniId As %Integer, pRole As %Integer = {$$$ENTTYPEANY}, details As %List = "") As %Integer\n'})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of sources in which the supplied stem appears that satisfy this filter instances criteria, where its role is concept (if pRole = $$$ENTTYPECONCEPT), relation (if pRole = $$$ENTTYPERELATION) or either of the two (if pRole = $$$ENTTYPEANY)."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredcrcfrequency",children:"GetFilteredCrcFrequency"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredCrcFrequency(crcUniId As %Integer) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total frequency of a CRC in the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredcrcspread",children:"GetFilteredCrcSpread"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredCrcSpread(crcUniId As %Integer) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of sources satisfying this filter instances criteria in which the supplied CRC appears."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredccfrequency",children:"GetFilteredCcFrequency"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredCcFrequency(ccUniId As %Integer, type As %Integer = {$$$IKFCCUNI}) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total frequency of a CC in the sources satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getfilteredccspread",children:"GetFilteredCcSpread"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFilteredCcSpread(ccUniId As %Integer, type As %Integer = {$$$IKFCCUNI}) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns the total number of sources satisfying this filter instances criteria in which the supplied CC appears."}),"\n",(0,r.jsx)(t.h3,{id:"savefilteredfrequency",children:"SaveFilteredFrequency"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveFilteredFrequency(type As %Integer, id As %Integer, freq As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Utility method to explicitly register the filtered frequency for an entity or CRC. Note that for stems, we use -type in order not to mix with the positive values ($$$IKFENTOCC, $$$IKFENTOCCC, $$$IKFENTOCCR) used for entities."}),"\n",(0,r.jsx)(t.h3,{id:"savefilteredspread",children:"SaveFilteredSpread"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveFilteredSpread(type As %Integer, id As %Integer, spread As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Utility method to explicitly register the filtered spread for an entity or CRC. Note that for stems, we use -type in order not to mix with the positive values ($$$IKFENTOCC, $$$IKFENTOCCC, $$$IKFENTOCCR) used for entities."}),"\n",(0,r.jsx)(t.h3,{id:"isfiltered",children:"IsFiltered"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsFiltered(id As %Integer, type As %Integer = {$$$IKFSOURCE}) As %Boolean\n"})}),"\n",(0,r.jsx)(t.p,{children:"Returns whether the id of the given type appears in any source satisfying this filter instances criteria."}),"\n",(0,r.jsx)(t.h3,{id:"getfirstfilteredsource",children:"GetFirstFilteredSource"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetFirstFilteredSource(direction As %Integer = 1) As %Integer\n"})}),"\n",(0,r.jsx)(t.p,{children:'Returns the first Source ID satisfying this filter isntances criteria, starting from the lowest (direction 1) or highest Source ID (direction -1). Returns "" when no source is filtered.'}),"\n",(0,r.jsx)(t.h3,{id:"mergebits",children:"MergeBits"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method MergeBits(globName As %String, type As %Integer = {$$$IKFSOURCE}) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.p,{children:"Merges this filter instances internal bitstring representation with the supplied global using AND logic."}),"\n",(0,r.jsx)(t.h3,{id:"checkresultcache",children:"CheckResultCache"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CheckResultCache(pQueryClass As %String, pQueryName As %String, pParams As %List, pPage As %Integer, pPageSize As %Integer, Output pIsCached, Output pResult) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"pParams has empty positions for the pPage and pPageSize parameters Only use for queries without ByRef or Output parameters (except pResult) !!"}),"\n",(0,r.jsx)(t.h3,{id:"checkresultcachesingle",children:"CheckResultCacheSingle"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method CheckResultCacheSingle(pQueryClass As %String, pQueryName As %String, pParams As %List, Output pIsCached, Output pResult) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Same as CheckResultCache, but for single-result queries Only use for queries without ByRef or Output parameters !!"}),"\n",(0,r.jsx)(t.h3,{id:"storeresultcache",children:"StoreResultCache"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method StoreResultCache(pQueryClass As %String, pQueryName As %String, pParams As %List, pPage As %Integer, pPageSize As %Integer, ByRef pResult) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"storeresultcachesingle",children:"StoreResultCacheSingle"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method StoreResultCacheSingle(pQueryClass As %String, pQueryName As %String, pParams As %List, pResult) As %Status\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getnextsrcid",children:"GetNextSrcId"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetNextSrcId(pSrcId As %Integer) As %Integer\n"})}),"\n",(0,r.jsx)(t.h3,{id:"fromstring",children:"FromString"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod FromString(pDomainId As %String, pString As %String, Output pFilter As %iKnow.Filters.Filter) As %Status\n"})}),"\n",(0,r.jsx)(t.p,{children:"Converts the supplied string pString into a %iKnow.Filters.Filter object. In addition to the normal RestoreFilterFromString functionality (which expects pString to be the output of a ToString call on a filter object), this method supports the following shorthands:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'A comma-separated list of source IDs (fe: "123,45,987" or "654"), resulting in a %iKnow.Filters.SourceIdFilter'}),"\n",(0,r.jsx)(t.li,{children:'A range of source IDs expressed as [from]:[to] (fe: "1:500", which includes source IDs 1 and 500), resulting in a %iKnow.Filters.SourceIdRangeFilter'}),"\n",(0,r.jsx)(t.li,{children:'A metadata filter condition [field name][operator][value] (fe: "Year>2000" or "Country!=Canada"), resulting in a %iKnow.Filters.SimpleMetadataFilter'}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Note: while covering a majority of common filter operations, the shorthand syntax is meant to simplify exploration through the command-line and does not handle every possible combination of parameters. Application code should therefore always use regular filter constructor methods and the string representations produced by ToString (which this method also accepts)."}),"\n",(0,r.jsx)(t.h3,{id:"toarray",children:"ToArray"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ToArray(Output pArray, pType As %Integer = {$$$IKFSOURCE}) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"tobitstring",children:"ToBitstring"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method ToBitstring(Output pArray, pType As %Integer = {$$$IKFSOURCE}) As %Status [ Internal ]\n"})}),"\n",(0,r.jsx)(t.h3,{id:"createfrombitstring",children:"CreateFromBitstring"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod CreateFromBitstring(pDomainId As %Integer, ByRef pBitstring) As %iKnow.Filters.Filter\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getlabel",children:"GetLabel"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetLabel() As %String\n"})}),"\n",(0,r.jsx)(t.p,{children:"Utility method to return a label for this filter instance. Custom filter classes may override this method to return a nicer label in client applications."})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>a});var r=i(96540);const s={},n=r.createContext(s);function l(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);