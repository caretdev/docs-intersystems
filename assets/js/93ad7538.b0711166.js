"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[72097],{20177:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>l,default:()=>o,frontMatter:()=>r,toc:()=>c});var n=s(74848),a=s(28453);const r={pagination_prev:null,pagination_next:null},l="Config.CommonMethods",c=[{value:"Parameters",id:"parameters",level:2},{value:"SECTIONTYPE",id:"sectiontype",level:3},{value:"EMSSERVICE",id:"emsservice",level:3},{value:"Triggers",id:"triggers",level:2},{value:"NoSQL",id:"nosql",level:3},{value:"Methods",id:"methods",level:2},{value:"Activate",id:"activate",level:3},{value:"DecodeComments",id:"decodecomments",level:3},{value:"Default",id:"default",level:3},{value:"EncodeComments",id:"encodecomments",level:3},{value:"GetClassProperties",id:"getclassproperties",level:3},{value:"GetProperties",id:"getproperties",level:3},{value:"Load",id:"load",level:3},{value:"MoveToActive",id:"movetoactive",level:3},{value:"ParseComment",id:"parsecomment",level:3},{value:"%OnAfterSave",id:"onaftersave",level:3},{value:"%OnBeforeSave",id:"onbeforesave",level:3},{value:"%OnAfterDelete",id:"onafterdelete",level:3},{value:"%OnDelete",id:"ondelete",level:3},{value:"%OnDeleteCallBack",id:"ondeletecallback",level:3},{value:"%OnAfterSaveCallBack",id:"onaftersavecallback",level:3},{value:"%OnBeforeSaveCallBack",id:"onbeforesavecallback",level:3},{value:"%OnAfterActivateCallback",id:"onafteractivatecallback",level:3},{value:"ExtentExecute",id:"extentexecute",level:3},{value:"ExtentClose",id:"extentclose",level:3},{value:"ExtentFetch",id:"extentfetch",level:3},{value:"EMSAllowEdit",id:"emsallowedit",level:3}];function i(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"configcommonmethods",children:"Config.CommonMethods"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Class Config.CommonMethods Extends (%Library.RegisteredObject, %XML.Adaptor) [ System = 4 ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"This class contains methods which are common (inherited) by classes which manipulate sections in the CPF file."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(t.h3,{id:"sectiontype",children:"SECTIONTYPE"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter SECTIONTYPE = 0;\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This parameter governs how the class creates audit records.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Value = 0"})," - Class contains a single entry (SQL, Net, etc.)",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Value = 1"})," - Class contains multiple entries (Databases, Namespaces, etc.)",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Value = 2"})," - Class deals with mappings (MapGlobals, MapRoutines, MapPackages.)"]}),"\n",(0,n.jsx)(t.h3,{id:"emsservice",children:"EMSSERVICE"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter EMSSERVICE [ Internal ] = "Config";\n'})}),"\n",(0,n.jsx)(t.h2,{id:"triggers",children:"Triggers"}),"\n",(0,n.jsx)(t.h3,{id:"nosql",children:"NoSQL"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Trigger NoSQL [ Event = INSERT/UPDATE/DELETE, Final, Foreach = row, Language = objectscript, Order = 1 ]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"activate",children:"Activate"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Activate(Obj As %ObjectHandle = "", Flags As %Integer = 0) As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Activate sections of the CPF file.",(0,n.jsx)(t.br,{}),"\nParameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Obj"}),' = Handle to the object which caused the activation. If "", then load everything, only called from STU.',(0,n.jsx)(t.br,{}),"\nIf a delete operation, then Obj is the NAME of the item which was deleted since the object itself has already been deleted.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Flags"})," = Type of modification.",(0,n.jsx)(t.br,{}),"\n0 - Insert",(0,n.jsx)(t.br,{}),"\n1 - Modify",(0,n.jsx)(t.br,{}),"\n2 - Delete"]}),"\n",(0,n.jsx)(t.h3,{id:"decodecomments",children:"DecodeComments"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method DecodeComments(ByRef Comments As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Retrieves comments from the object and places them in an array."}),"\n",(0,n.jsx)(t.h3,{id:"default",children:"Default"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod Default(CPFFile As %String, Platform As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"No default section in a CPF file."}),"\n",(0,n.jsx)(t.h3,{id:"encodecomments",children:"EncodeComments"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method EncodeComments(ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Takes comments from the array, and places them into the object."}),"\n",(0,n.jsx)(t.h3,{id:"getclassproperties",children:"GetClassProperties"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod GetClassProperties(IgnoreProperties As %String = "", ByRef Properties As %String) As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Returns a comma separated list of properties in the class.",(0,n.jsx)(t.br,{}),"\nThis is used internally by some of the API's. Parameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"IgnoreProperties"})," - Comma separated list of properties NOT to return",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Properties"})," by ref - Comma separated list of properties for the class, with IgnoreProperties removed"]}),"\n",(0,n.jsx)(t.h3,{id:"getproperties",children:"GetProperties"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod GetProperties(Obj As %ObjectHandle, ByRef Properties As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Get a sections properties from a CPF file."}),"\n",(0,n.jsxs)(t.p,{children:["Parameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Obj"})," - Object handle to a section in the CPF object"]}),"\n",(0,n.jsxs)(t.p,{children:["Return values:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Properties (byref)"})," - See the subclass for more information on the array of Properties returned."]}),"\n",(0,n.jsx)(t.h3,{id:"load",children:"Load"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:'ClassMethod Load(Obj As %ObjectHandle = "", Flags As %Integer = 1) As %Status [ Internal ]\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Load the parameters into memory and activate.",(0,n.jsx)(t.br,{}),"\nParameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Obj"}),' = Handle to the object which caused the load. If "", then load everything, only called from STU.',(0,n.jsx)(t.br,{}),"\nIf a delete operation, then Obj is the NAME of the item which was deleted since the oject itself has already been deleted.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Flags"})," = Type of modification.",(0,n.jsx)(t.br,{}),"\n0 - Modify",(0,n.jsx)(t.br,{}),"\n1 - Create/Insert",(0,n.jsx)(t.br,{}),"\n2 - Delete"]}),"\n",(0,n.jsx)(t.h3,{id:"movetoactive",children:"MoveToActive"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod MoveToActive(Obj As %ObjectHandle, Flags As %Integer = 1) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Move the CPF data into the active config global."}),"\n",(0,n.jsxs)(t.p,{children:["Load the parameters into memory and activate.",(0,n.jsx)(t.br,{}),"\nParameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Obj"}),' = Handle to the object which caused the load. If "", then load everything, only called from STU.',(0,n.jsx)(t.br,{}),"\nIf a delete operation, then Obj is the NAME of the item which was deleted since the oject itself has already been deleted.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Flags"})," = Type of modification.",(0,n.jsx)(t.br,{}),"\n0 - Modify",(0,n.jsx)(t.br,{}),"\n1 - Create/Insert",(0,n.jsx)(t.br,{}),"\n2 - Delete"]}),"\n",(0,n.jsx)(t.h3,{id:"parsecomment",children:"ParseComment"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ParseComment(Section As %String, Name As %String, ByRef Data As %String, ByRef Comment As %String) As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Parse a line from the CPF file and return the data line without the comment.",(0,n.jsx)(t.br,{}),"\nParameters:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Data"}),' by ref - All data from a line in the CPF file after the "=" sign.',(0,n.jsx)(t.br,{}),"\nReturn values:",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Data"})," - Data from the CPf file with any trailing comment stripped off.",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.strong,{children:"Comment"})," - Trailing comment from the data line."]}),"\n",(0,n.jsxs)(t.p,{children:['"Data #; comment" should return Data="Data" and Comment=" #; comment',(0,n.jsx)(t.br,{}),'\n"Data // comment # 1" should return Data="Data" and Comment=" // comment # 1"']}),"\n",(0,n.jsx)(t.h3,{id:"onaftersave",children:"%OnAfterSave"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnAfterSave(insert As %Boolean) As %Status [ Final, Internal, Private ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Callback which happens during the %Save operation, after the object globals have been updated.",(0,n.jsx)(t.br,{}),"\nWe are still in a transaction here. Returning a failure code will cause the transaction to be rolled back."]}),"\n",(0,n.jsx)(t.h3,{id:"onbeforesave",children:"%OnBeforeSave"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnBeforeSave(insert As %Boolean) As %Status [ Final, Internal, Private ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Callback which happens during the %Save operation, before the object globals have been updated.",(0,n.jsx)(t.br,{}),"\nReturning a failure code causes the %Save() operation to fail. We are not in a transaction here."]}),"\n",(0,n.jsx)(t.h3,{id:"onafterdelete",children:"%OnAfterDelete"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnAfterDelete(oid As %ObjectIdentity) As %Status [ Final, Internal, Private ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This callback is called as part of the Delete operation.",(0,n.jsx)(t.br,{}),"\nIt is called after the transaction is already committed."]}),"\n",(0,n.jsx)(t.h3,{id:"ondelete",children:"%OnDelete"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnDelete(oid As %ObjectIdentity) As %Status [ Final, Internal, Private ]\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This callback is called before the transaction is committed.",(0,n.jsx)(t.br,{}),"\nAny error here will cause the transaction to be rolled back."]}),"\n",(0,n.jsx)(t.h3,{id:"ondeletecallback",children:"%OnDeleteCallBack"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnDeleteCallBack(Obj As %ObjectHandle) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Stub method, may be overwritten by the infividual class."}),"\n",(0,n.jsx)(t.h3,{id:"onaftersavecallback",children:"%OnAfterSaveCallBack"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnAfterSaveCallBack(insert As %Integer, Obj As %ObjectHandle) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Stub method, may be overwritten by the individual class."}),"\n",(0,n.jsx)(t.h3,{id:"onbeforesavecallback",children:"%OnBeforeSaveCallBack"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnBeforeSaveCallBack(insert As %Integer, Obj As %ObjectHandle) As %Status [ Internal, Private ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Stub method, may be overwritten by the individual class."}),"\n",(0,n.jsx)(t.h3,{id:"onafteractivatecallback",children:"%OnAfterActivateCallback"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %OnAfterActivateCallback(Obj As %ObjectHandle, Flags As %Integer) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Stub method, may be overwritten by the individual class. Note: If Flags=2, Obj is not a valid object"}),"\n",(0,n.jsx)(t.h3,{id:"extentexecute",children:"ExtentExecute"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ExtentExecute(ByRef qHandle As %Binary) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Extent query used by EMS. Default Extent doesn't work for CONFIG, so this replaces it."}),"\n",(0,n.jsx)(t.h3,{id:"extentclose",children:"ExtentClose"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ExtentClose(ByRef qHandle As %Binary) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"extentfetch",children:"ExtentFetch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod ExtentFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ Internal, PlaceAfter = ExtentExecute ]\n"})}),"\n",(0,n.jsx)(t.h3,{id:"emsallowedit",children:"EMSAllowEdit"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-objectscript-class",children:"Method EMSAllowEdit(insert As %Boolean) As %Boolean [ Internal ]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Called from %OnBeforeSave. Provides a way for a specific class to override the EMS.Restricted() check when the Instance is managed. Used when a few properties in a class (like Config.SQL.JDBCGatewayPort) are not managed by EMS."})]})}function o(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>c});var n=s(96540);const a={},r=n.createContext(a);function l(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);