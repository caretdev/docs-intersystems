"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[46849],{3940:(e,r,s)=>{s.r(r),s.d(r,{contentTitle:()=>n,default:()=>d,frontMatter:()=>l,toc:()=>i});var t=s(74848),a=s(28453);const l={pagination_prev:null,pagination_next:null},n="%ZEN.Report.Display.Chart.pieChartEx",i=[{value:"Properties",id:"properties",level:2},{value:"labelValues",id:"labelvalues",level:3},{value:"outputPercentage",id:"outputpercentage",level:3},{value:"formatPercentage",id:"formatpercentage",level:3},{value:"onlyPercentage",id:"onlypercentage",level:3},{value:"plotBy",id:"plotby",level:3},{value:"Methods",id:"methods",level:2},{value:"renderSeries",id:"renderseries",level:3},{value:"renderSeriesByItems",id:"renderseriesbyitems",level:3},{value:"renderSeriesBySeries",id:"renderseriesbyseries",level:3},{value:"hasAxes",id:"hasaxes",level:3},{value:"renderGetLabelText",id:"rendergetlabeltext",level:3},{value:"renderTrigFunctions",id:"rendertrigfunctions",level:3},{value:"renderSeriesLabels",id:"renderserieslabels",level:3},{value:"renderSeriesLabelsByItems",id:"renderserieslabelsbyitems",level:3},{value:"renderSeriesLabelsBySeries",id:"renderserieslabelsbyseries",level:3},{value:"calcUnion",id:"calcunion",level:3}];function c(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"zenreportdisplaychartpiechartex",children:"%ZEN.Report.Display.Chart.pieChartEx"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Class %ZEN.Report.Display.Chart.pieChartEx Extends chart [ Deprecated, System = 4 ]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(r.h3,{id:"labelvalues",children:"labelValues"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Property labelValues As %ZEN.Datatype.csv;\n"})}),"\n",(0,t.jsx)(r.p,{children:"Optional: comma-delimited list of label values of each slice. If left blank, the series number is used."}),"\n",(0,t.jsx)(r.h3,{id:"outputpercentage",children:"outputPercentage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Property outputPercentage As %ZEN.Datatype.boolean;\n"})}),"\n",(0,t.jsx)(r.p,{children:"On slice output percentage"}),"\n",(0,t.jsx)(r.h3,{id:"formatpercentage",children:"formatPercentage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Property formatPercentage As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Optional formatting string for a percentage output.",(0,t.jsx)(r.br,{}),"\nNumber formats are specified in the format required for the XPath format-number function."]}),"\n",(0,t.jsx)(r.h3,{id:"onlypercentage",children:"onlyPercentage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Property onlyPercentage As %ZEN.Datatype.boolean;\n"})}),"\n",(0,t.jsx)(r.p,{children:"Only output percentage on slice, requires outputPrecentage to be set"}),"\n",(0,t.jsx)(r.h3,{id:"plotby",children:"plotBy"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:'Property plotBy As %ZEN.Datatype.string(VALUELIST = ",items,series,both") [ InitialExpression = "items" ];\n'})}),"\n",(0,t.jsx)(r.p,{children:"Specifies how the pie chart will plot its data."}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:['"items" - plot a slice for every item within this chart\'s data. If there are multiple data series, each slice represents the total of each item summed across the data series.',(0,t.jsx)(r.br,{}),"\nThe labels for the slices are derived as they are for pieChart."]}),"\n",(0,t.jsxs)(r.li,{children:['"series" - plot a slice for every data series within this chart\'s data. Each slice represents the total value of all items within each series.',(0,t.jsx)(r.br,{}),"\nThe labels for the slices are specified by the labelValues property."]}),"\n",(0,t.jsxs)(r.li,{children:['"both" - plot a slice for each item within each data series (that is, there will be seriesCount * seriesSize slices).',(0,t.jsx)(r.br,{}),"\nThe slices are labeled as items; the chart legend will display the series names."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"renderseries",children:"renderSeries"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeries(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"renderseriesbyitems",children:"renderSeriesByItems"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeriesByItems(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"renderseriesbyseries",children:"renderSeriesBySeries"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeriesBySeries(ByRef context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"hasaxes",children:"hasAxes"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method hasAxes()\n"})}),"\n",(0,t.jsx)(r.h3,{id:"rendergetlabeltext",children:"renderGetLabelText"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderGetLabelText(ByRef context As %String, XSL As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"rendertrigfunctions",children:"renderTrigFunctions"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderTrigFunctions(ByRef context As %String, XSL As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"renderserieslabels",children:"renderSeriesLabels"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeriesLabels(context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"renderserieslabelsbyitems",children:"renderSeriesLabelsByItems"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeriesLabelsByItems(context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"renderserieslabelsbyseries",children:"renderSeriesLabelsBySeries"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method renderSeriesLabelsBySeries(context As %String, ByRef XSL As %GlobalCharacterStream, ByRef delay As %GlobalCharacterStream)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"calcunion",children:"calcUnion"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-objectscript-class",children:"Method calcUnion(prefix As %String)\n"})})]})}function d(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>i});var t=s(96540);const a={},l=t.createContext(a);function n(e){const r=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),t.createElement(l.Provider,{value:r},e.children)}}}]);