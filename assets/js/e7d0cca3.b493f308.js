"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[3001],{56578:(e,l,n)=>{n.r(l),n.d(l,{contentTitle:()=>t,default:()=>c,frontMatter:()=>a,toc:()=>d});var s=n(74848),i=n(28453);const a={pagination_prev:null,pagination_next:null},t="%ZEN.Dialog.standardDialog",d=[{value:"Parameters",id:"parameters",level:2},{value:"DOMAIN",id:"domain",level:3},{value:"FAVORITEICON",id:"favoriteicon",level:3},{value:"APPLYBUTTON",id:"applybutton",level:3},{value:"CANCELBUTTON",id:"cancelbutton",level:3},{value:"Properties",id:"properties",level:2},{value:"dialogTitle",id:"dialogtitle",level:3},{value:"hideApplyButton",id:"hideapplybutton",level:3},{value:"hideCancelButton",id:"hidecancelbutton",level:3},{value:"disabledStyle",id:"disabledstyle",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"Contents",id:"contents",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawTitle",id:"drawtitle",level:3},{value:"%OnGetTitle",id:"ongettitle",level:3},{value:"%OnGetSubtitle",id:"ongetsubtitle",level:3},{value:"dialogTitleGet",id:"dialogtitleget",level:3},{value:"%OnUseSoftModals",id:"onusesoftmodals",level:3},{value:"dialogApply",id:"dialogapply",level:3},{value:"dialogFinish",id:"dialogfinish",level:3},{value:"dialogCancel",id:"dialogcancel",level:3},{value:"btnOK",id:"btnok",level:3},{value:"btnApply",id:"btnapply",level:3},{value:"getDialogValue",id:"getdialogvalue",level:3},{value:"ondialogStart",id:"ondialogstart",level:3},{value:"ondialogFinish",id:"ondialogfinish",level:3},{value:"ondialogCancel",id:"ondialogcancel",level:3},{value:"onlayoutHandler",id:"onlayouthandler",level:3},{value:"adjustSize",id:"adjustsize",level:3},{value:"ctrlKeyDown",id:"ctrlkeydown",level:3},{value:"disableButtons",id:"disablebuttons",level:3}];function o(e){const l={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.header,{children:(0,s.jsx)(l.h1,{id:"zendialogstandarddialog",children:"%ZEN.Dialog.standardDialog"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Class %ZEN.Dialog.standardDialog Extends %ZEN.Component.page [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This base class provides a standard template for the dialog pages provided by Zen. The various dialog pages are implemented as subclasses of this class.",(0,s.jsx)(l.br,{}),"\nTo create a new dialog based on this class:"]}),"\n",(0,s.jsxs)(l.ol,{children:["\n",(0,s.jsx)(l.li,{children:"Create a subclass of this class."}),"\n",(0,s.jsx)(l.li,{children:"Define an XData block named dialogBody."}),"\n",(0,s.jsx)(l.li,{children:"Within this XData block define the contents of the dialog using a pane component as the container."}),"\n",(0,s.jsx)(l.li,{children:"Override the %OnGetTitle to provide the dialog title."}),"\n",(0,s.jsx)(l.li,{children:"Override the %OnGetSubtitle to provide the dialog subtitle."}),"\n",(0,s.jsx)(l.li,{children:"Override the getDialogValue to supply the return value for the dialog."}),"\n",(0,s.jsx)(l.li,{children:"Override the APPLYBUTTON if the dialog has an apply button."}),"\n"]}),"\n",(0,s.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(l.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%ZEN";\n'})}),"\n",(0,s.jsx)(l.h3,{id:"favoriteicon",children:"FAVORITEICON"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter FAVORITEICON As COSEXPRESSION = "$$$ISCFAVORITEICON";\n'})}),"\n",(0,s.jsx)(l.p,{children:"SMP favorite icon."}),"\n",(0,s.jsx)(l.h3,{id:"applybutton",children:"APPLYBUTTON"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter APPLYBUTTON As BOOLEAN = 0;\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, then this dialog displays an Apply button."}),"\n",(0,s.jsx)(l.h3,{id:"cancelbutton",children:"CANCELBUTTON"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter CANCELBUTTON = 1;\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, then this dialog displays a Cancel button."}),"\n",(0,s.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(l.h3,{id:"dialogtitle",children:"dialogTitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property dialogTitle As %ZEN.Datatype.string [ ReadOnly ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Provide a title for the dialog window. The value is supplied by the %OnGetTitle method."}),"\n",(0,s.jsx)(l.h3,{id:"hideapplybutton",children:"hideApplyButton"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property hideApplyButton As %ZEN.Datatype.boolean [ Final, InitialExpression = {'+..#APPLYBUTTON} ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is used to indicate whether this dialog has an apply button."}),"\n",(0,s.jsx)(l.h3,{id:"hidecancelbutton",children:"hideCancelButton"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property hideCancelButton As %ZEN.Datatype.boolean [ InitialExpression = {'+..#CANCELBUTTON} ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is used to indicate whether this dialog has a cancel button."}),"\n",(0,s.jsx)(l.h3,{id:"disabledstyle",children:"disabledStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property disabledStyle As %ZEN.Datatype.style [ InitialExpression = "background-image:none;background:#D0D0D0;" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Style applied to buttons when automatically disabled."}),"\n",(0,s.jsx)(l.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(l.h3,{id:"style",children:"Style"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,s.jsx)(l.h3,{id:"contents",children:"Contents"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'XData Contents [ XMLNamespace = "http://www.intersystems.com/zen" ]\n'})}),"\n",(0,s.jsx)(l.p,{children:"Contents of this page:"}),"\n",(0,s.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(l.h3,{id:"drawtitle",children:"%DrawTitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Method %DrawTitle(pSeed As %String) As %Status\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Provide HTML for html title box.",(0,s.jsx)(l.br,{}),"\nDefault implementation displays the standard Zen title bar."]}),"\n",(0,s.jsx)(l.h3,{id:"ongettitle",children:"%OnGetTitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnGetTitle() As %String\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get the (localized) title string for the dialog. This should be implemented in a subclass."}),"\n",(0,s.jsx)(l.h3,{id:"ongetsubtitle",children:"%OnGetSubtitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Method %OnGetSubtitle() As %String\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get the (localized) subtitle string for the dialog. This should be implemented in a subclass."}),"\n",(0,s.jsx)(l.h3,{id:"dialogtitleget",children:"dialogTitleGet"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Method dialogTitleGet() As %ZEN.Datatype.string\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get value for dialogTitle property."}),"\n",(0,s.jsx)(l.h3,{id:"onusesoftmodals",children:"%OnUseSoftModals"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClassMethod %OnUseSoftModals() As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Use soft modals for dialogs."}),"\n",(0,s.jsx)(l.h3,{id:"dialogapply",children:"dialogApply"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dialogApply() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Apply the value for this dialog and keep it open. Do not overide, instead implement the ondialogFinish method."}),"\n",(0,s.jsx)(l.h3,{id:"dialogfinish",children:"dialogFinish"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dialogFinish() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Apply the value for this dialog and close it. Do not overide, instead implement the ondialogFinish method."}),"\n",(0,s.jsx)(l.h3,{id:"dialogcancel",children:"dialogCancel"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod dialogCancel() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Close this dialog without applying its value. Do not overide, instead implement the ondialogCancel method."}),"\n",(0,s.jsx)(l.h3,{id:"btnok",children:"btnOK"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod btnOK() [ Final, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"This method is no longer supported by standardDialog so make sure it does not get used."}),"\n",(0,s.jsx)(l.h3,{id:"btnapply",children:"btnApply"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod btnApply() [ Final, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"This method is no longer supported by standardDialog so make sure it does not get used."}),"\n",(0,s.jsx)(l.h3,{id:"getdialogvalue",children:"getDialogValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDialogValue() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get the value that will be applied when the user presses the OK button. This is implemented by subclasses."}),"\n",(0,s.jsx)(l.h3,{id:"ondialogstart",children:"ondialogStart"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod ondialogStart() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"This callback, if defined, is called when the dialog page is loaded."}),"\n",(0,s.jsx)(l.h3,{id:"ondialogfinish",children:"ondialogFinish"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod ondialogFinish(action) [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"This callback, if defined, is called when the user presses the OK or Apply action buttons. If this returns false, then the action is cancelled."}),"\n",(0,s.jsx)(l.h3,{id:"ondialogcancel",children:"ondialogCancel"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod ondialogCancel() [ Abstract, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"This callback, if defined, is called when the user presses the Cancel button. If this returns false, then the dialog is not cancelled."}),"\n",(0,s.jsx)(l.h3,{id:"onlayouthandler",children:"onlayoutHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod onlayoutHandler(load) [ Final, Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This client event, if present, is fired when the page is first loaded or whenever it is resized.",(0,s.jsx)(l.br,{}),"\nIf this is called at load time, then load will be true."]}),"\n",(0,s.jsx)(l.h3,{id:"adjustsize",children:"adjustSize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSize() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Adjust size and position of components on this page."}),"\n",(0,s.jsx)(l.h3,{id:"ctrlkeydown",children:"ctrlKeyDown"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod ctrlKeyDown(evt, escOnly) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Key handler used by many controls in dialogs. Defined here for convenience.",(0,s.jsx)(l.br,{}),"\nTo use, add an onkeydown handler to controls in your dialog:",(0,s.jsx)(l.br,{}),"\n",(0,s.jsx)(l.code,{children:'<text label="Name" onkeydown="return zenPage.ctrlKeyDown(zenEvent);"/>'})," If the user presses ESCAPE within this control, the dialog is cancelled. If the user presses ENTER, then the dialog is completed (same as pressing OK). If escOnly is true, then only the ESC key is processed. This is useful for controls where the ENTER key is needed (such as a textarea)."]}),"\n",(0,s.jsx)(l.h3,{id:"disablebuttons",children:"disableButtons"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod disableButtons(flag) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Disable or enable the apply,cancel, and ok buttons for this dialog."})]})}function c(e={}){const{wrapper:l}={...(0,i.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>t,x:()=>d});var s=n(96540);const i={},a=s.createContext(i);function t(e){const l=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function d(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:l},e.children)}}}]);