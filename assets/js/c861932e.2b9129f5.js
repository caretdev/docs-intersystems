"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[90994],{92520:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>i,default:()=>r,frontMatter:()=>l,toc:()=>o});var t=a(74848),s=a(28453);const l={pagination_prev:null,pagination_next:null},i="%ZEN.Component.modalGroup",o=[{value:"Parameters",id:"parameters",level:2},{value:"DEFAULTLAYOUT",id:"defaultlayout",level:3},{value:"DEFAULTHIDDEN",id:"defaulthidden",level:3},{value:"Properties",id:"properties",level:2},{value:"groupType",id:"grouptype",level:3},{value:"groupTitle",id:"grouptitle",level:3},{value:"seed",id:"seed",level:3},{value:"value",id:"value",level:3},{value:"onshowGroup",id:"onshowgroup",level:3},{value:"onhideGroup",id:"onhidegroup",level:3},{value:"onaction",id:"onaction",level:3},{value:"okCaption",id:"okcaption",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style",level:3},{value:"CSS3Style",id:"css3style",level:3},{value:"Methods",id:"methods",level:2},{value:"getFloatingDiv",id:"getfloatingdiv",level:3},{value:"onStartModalHandler",id:"onstartmodalhandler",level:3},{value:"onEndModalHandler",id:"onendmodalhandler",level:3},{value:"getModalBodyContent",id:"getmodalbodycontent",level:3},{value:"wrapMethod",id:"wrapmethod",level:3},{value:"mousedownHandler",id:"mousedownhandler",level:3},{value:"mousemoveHandler",id:"mousemovehandler",level:3},{value:"mouseupHandler",id:"mouseuphandler",level:3},{value:"toggleDragMouseTrap",id:"toggledragmousetrap",level:3},{value:"startZLMResize",id:"startzlmresize",level:3},{value:"startZLMMove",id:"startzlmmove",level:3},{value:"startZLMDrag",id:"startzlmdrag",level:3},{value:"endDrag",id:"enddrag",level:3},{value:"constrainDragX",id:"constraindragx",level:3},{value:"constrainDragY",id:"constraindragy",level:3},{value:"show",id:"show",level:3},{value:"getValue",id:"getvalue",level:3},{value:"onDialogFrameLoad",id:"ondialogframeload",level:3},{value:"updateTitle",id:"updatetitle",level:3},{value:"updateFrameSize",id:"updateframesize",level:3},{value:"actionHandler",id:"actionhandler",level:3},{value:"hideGroup",id:"hidegroup",level:3},{value:"reveal",id:"reveal",level:3},{value:"onDelete",id:"ondelete",level:3},{value:"onCanEndModalHandler",id:"oncanendmodalhandler",level:3},{value:"onRefreshContents",id:"onrefreshcontents",level:3}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"zencomponentmodalgroup",children:"%ZEN.Component.modalGroup"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.modalGroup Extends group [ Deprecated, System = 3 ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Specialized group for creating a set of modal components displayed within a page.",(0,t.jsx)(n.br,{}),"\nTo display a modalGroup, use the modalGroup's show method. Use the zenPage object's endModal to remove the modalGroup.",(0,t.jsx)(n.br,{}),"\nYou can define the contents of a modalGroup in three different ways:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Static mode: The modalGroup is defined within a page definition in the same way as any other group. The contents of the group will be hidden until the show is called."}),"\n",(0,t.jsx)(n.li,{children:"Dynamic mode: The application creates a modalGroup dynamically (using the page's createComponent method), adds components to it, and displays it with the show method."}),"\n",(0,t.jsx)(n.li,{children:'Built-in mode: The application uses the show method to display one of the built-in groups: "msgBox" or "calendar".'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"defaultlayout",children:"DEFAULTLAYOUT"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Parameter DEFAULTLAYOUT = "vertical";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"defaulthidden",children:"DEFAULTHIDDEN"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Parameter DEFAULTHIDDEN = 1;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"grouptype",children:"groupType"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property groupType As %ZEN.Datatype.string(VALUELIST = ",msgBox,calendar,dialog", XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsx)(n.p,{children:"If set, this indicates that a pre-defined modalGroup of the specified type should be displayed. This is set by the show method; applications should not set this."}),"\n",(0,t.jsx)(n.h3,{id:"grouptitle",children:"groupTitle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property groupTitle As %ZEN.Datatype.caption;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Title to display at top of modal group. This is set dynamically by the show method. For static modalGroups, it can be set in the original page definition."}),"\n",(0,t.jsx)(n.h3,{id:"seed",children:"seed"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property seed As %ZEN.Datatype.string;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Optional. User-defined seed value. This is an optional parameter that is passed on to the onaction event handler."}),"\n",(0,t.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property value As %ZEN.Datatype.string(XMLPROJECTION = "none", ZENSETTING = 0);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This is used to hold a value for the modalGroup.",(0,t.jsx)(n.br,{}),"\nThis is set by the show method; applications should not set this."]}),"\n",(0,t.jsx)(n.h3,{id:"onshowgroup",children:"onshowGroup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property onshowGroup As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(n.p,{children:"onshowGroup event handler: This event is fired when the modalGroup is made visible."}),"\n",(0,t.jsx)(n.h3,{id:"onhidegroup",children:"onhideGroup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property onhideGroup As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(n.p,{children:"onhideGroup event handler: This event is fired when the modalGroup is hidden."}),"\n",(0,t.jsx)(n.h3,{id:"onaction",children:"onaction"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"Property onaction As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,t.jsx)(n.p,{children:"onaction event handler: client code to run when user takes action with pre-defined modalGroup."}),"\n",(0,t.jsx)(n.h3,{id:"okcaption",children:"okCaption"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:'Property okCaption As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("OK","%ZEN")} ];\n'})}),"\n",(0,t.jsx)(n.p,{children:'Localizable "OK" caption displayed in OK button for a message box.'}),"\n",(0,t.jsx)(n.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,t.jsx)(n.h3,{id:"style",children:"Style"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,t.jsx)(n.h3,{id:"css3style",children:"CSS3Style"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"XData CSS3Style\n"})}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"getfloatingdiv",children:"getFloatingDiv"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getFloatingDiv() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Return the HTML element used to display this modal group"}),"\n",(0,t.jsx)(n.h3,{id:"onstartmodalhandler",children:"onStartModalHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onStartModalHandler(zindex) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Notification that this component is about to become modal."}),"\n",(0,t.jsx)(n.h3,{id:"onendmodalhandler",children:"onEndModalHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onEndModalHandler(zindex) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Notification that this component is about to stop being modal."}),"\n",(0,t.jsx)(n.h3,{id:"getmodalbodycontent",children:"getModalBodyContent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getModalBodyContent(update) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Helper method to get the content for static modalGroups. If the enclosing div has content, that content is returned, and the enclosing div's content is cleared. If update is true AND the modalBody element for this group exists (i.e. the group has been displayed), then the modalBody's content is updated to the new value."}),"\n",(0,t.jsx)(n.h3,{id:"wrapmethod",children:"wrapMethod"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod wrapMethod(methodName) [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Utility method: Construct a wrapper around an instance method of this object that can be used as an event listener."}),"\n",(0,t.jsx)(n.h3,{id:"mousedownhandler",children:"mousedownHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod mousedownHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"mousedownHandler: handles start of move operation"}),"\n",(0,t.jsx)(n.h3,{id:"mousemovehandler",children:"mousemoveHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod mousemoveHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"mousemoveHandler: handles move operation"}),"\n",(0,t.jsx)(n.h3,{id:"mouseuphandler",children:"mouseupHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod mouseupHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"mouseupHandler: handles end of move operation"}),"\n",(0,t.jsx)(n.h3,{id:"toggledragmousetrap",children:"toggleDragMouseTrap"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod toggleDragMouseTrap(show) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:'Toggle "visibility" of dragMouseTrap. The trap should be completely transparent but allows the component to trap mouse events reliably during drag operations.'}),"\n",(0,t.jsx)(n.h3,{id:"startzlmresize",children:"startZLMResize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod startZLMResize(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Start the ZLM drag-based resize operation."}),"\n",(0,t.jsx)(n.h3,{id:"startzlmmove",children:"startZLMMove"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod startZLMMove(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Start the ZLM drag-based move operation."}),"\n",(0,t.jsx)(n.h3,{id:"startzlmdrag",children:"startZLMDrag"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod startZLMDrag(evt) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Start ZLM drag once this._dragData has been set up."}),"\n",(0,t.jsx)(n.h3,{id:"enddrag",children:"endDrag"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod endDrag(engine, wrapper) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Callback from the ZLM drag which is used to clean up."}),"\n",(0,t.jsx)(n.h3,{id:"constraindragx",children:"constrainDragX"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod constrainDragX(engine, wrapper, intendedX) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Limit the x-axis changes to the current screen size."}),"\n",(0,t.jsx)(n.h3,{id:"constraindragy",children:"constrainDragY"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod constrainDragY(engine, wrapper, intendedY) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Limit the y-axis changes to the current screen size."}),"\n",(0,t.jsx)(n.h3,{id:"show",children:"show"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod show(title, type, value, top, left, wid, hgt, parms) [ Language = javascript ]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Make this group visible with modal behavior.",(0,t.jsx)(n.br,{}),"\ntitle is the optional title to display for the group. For a static group, the application-defined value of groupTitle is used if title is not supplied.",(0,t.jsx)(n.br,{}),"\ntype is the optional type of modalGroup to display. This can be:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"msgBox"-display the built-in message box.'}),"\n",(0,t.jsx)(n.li,{children:'"calendar"-display the built-in calendar box.'}),"\n",(0,t.jsx)(n.li,{children:'"dynamic"-display a dynamically created modalGroup.'}),"\n",(0,t.jsxs)(n.li,{children:['"static"-display a modalGroup that has been defined as part of the page.\n"dialog"-display the page with the URL supplied in value in an iframe.  If omitted, then the type will be "static" if the modalGroup has been defined within the page object otherwise "dynamic".',(0,t.jsx)(n.br,{}),"\nvalue is an optional value to display when a built-in modalGroup is used.",(0,t.jsx)(n.br,{}),"\ntop,left,wid, and hgt are optional position and dimensions to use for the modalGroup.",(0,t.jsx)(n.br,{}),"\nparms is an optional object containing a set of additional characteristics passed on to the modalGroup (as a set of name/value pairs). Basically this is a way to pass additional parameters to the popup calendar."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"getvalue",children:"getValue"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod getValue() As %String [ Final, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Client-side method to return the value associated with this group."}),"\n",(0,t.jsx)(n.h3,{id:"ondialogframeload",children:"onDialogFrameLoad"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onDialogFrameLoad(contentWindow) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"updatetitle",children:"updateTitle"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod updateTitle(newTitle) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"updateframesize",children:"updateFrameSize"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod updateFrameSize(width, height) [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"actionhandler",children:"actionHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod actionHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This method handles user actions within a pre-defined modalGroup."}),"\n",(0,t.jsx)(n.h3,{id:"hidegroup",children:"hideGroup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod hideGroup() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Hide the group."}),"\n",(0,t.jsx)(n.h3,{id:"reveal",children:"reveal"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod reveal() [ Internal, Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This method is deprecated as the fade effects for the modal now use CSS3 transition effects. Slowly reveal the popup."}),"\n",(0,t.jsx)(n.h3,{id:"ondelete",children:"onDelete"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onDelete() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Ensure that we remove the floating div when the component is deleted."}),"\n",(0,t.jsx)(n.h3,{id:"oncanendmodalhandler",children:"onCanEndModalHandler"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onCanEndModalHandler() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Don't allow the dialog to be closed unless the user explicitly does something to close the popup or fire a valid action."}),"\n",(0,t.jsx)(n.h3,{id:"onrefreshcontents",children:"onRefreshContents"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-objectscript-class",children:"ClientMethod onRefreshContents() [ Language = javascript ]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Make sure that we correctly track the HTML for static modal groups."})]})}function r(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(96540);const s={},l=t.createContext(s);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);