"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[82513],{93791:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>r,default:()=>h,frontMatter:()=>o,toc:()=>i});var a=s(74848),n=s(28453);const o={pagination_prev:null,pagination_next:null},r="%SYSTEM.ShardWorkMgr",i=[{value:"Methods",id:"methods",level:2},{value:"Broadcast",id:"broadcast",level:3},{value:"Map",id:"map",level:3},{value:"QueueShard",id:"queueshard",level:3},{value:"PostRemoteEvent",id:"postremoteevent",level:3}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"systemshardworkmgr",children:"%SYSTEM.ShardWorkMgr"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %SYSTEM.ShardWorkMgr Extends AbstractWorkMgr\n"})}),"\n",(0,a.jsx)(t.p,{children:"Manage distributing work to other systems in a sharded environment. This is modelled on the %SYSTEM.WorkMgr as closely as possible. To use this you first create an instance of this class, this acts as the container for the units of work you then request. Finally you wait for this work to complete or return errors."}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"broadcast",children:"Broadcast"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Broadcast(set As %String, work As %String, args... As %String) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:"Broadcast a task to be run via the Work Queue Manager on all systems that form part of set of machines. Once the work is broadcast you can Sync to wait for all work to complete or WaitOne to get notifications of individual completions."}),"\n",(0,a.jsx)(t.p,{children:"The set supports the following values for a sharding system:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"DS or data : All shard data nodes"}),"\n",(0,a.jsx)(t.li,{children:"QD or compute : A set of shard compute/query nodes"}),"\n",(0,a.jsx)(t.li,{children:"all : All shard nodes (the default)"}),"\n",(0,a.jsx)(t.li,{children:"instance : All instances that are part of the shard set\nNote that QD/compute will pick a set of compute/query nodes that cover the entire extent and run the broadcast on these nodes so it will be able to see all the data. If a shard setup has two namespace on a single instance that are part of the shard cluster then 'instance' will only run the logic in one of the namespace on this instance so it is useful for collecting system wide information."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Returns a %Status code if the work was queued correctly, note that to see if the work completed you need to call Sync method and check the returned %Status value for this. Pass the entry point to call in work argument. This can be either '##class(Classname).ClassMethod' or '$$entry^rtn' and it is expected to return a %Status code. If you want to call a function that does not return any value on completion then prepend the class syntax with '=' such as '=##class(Classname).ClassMethod' or for calling a function do not include the '$$' for example 'entry^rtn'. The item being called may also throw exceptions in order to indicate an error happened which is trapped and converted to a %Status value to be returned in the parent process. You can also pass additional arguments including arrays by reference. Note that the size of the data passed in these arguments should be kept relatively small, if there is a large amount of information that needs to be passed then put this in a global. The security context of the caller is recorded when this function is called and is used when the work is executed. Output the work unit makes to the current device will be trapped and relayed to the parent process after this work unit has complted and when the parent process is waiting for work to be completed. If a work unit wishes to flush output before the work unit has completed then then call 'Do $system.WorkMgr.Flush()' Work units may write to the public variable %result which will be relayed to the parent process in the WaitOne call via the byref workresult argument."}),"\n",(0,a.jsx)(t.h3,{id:"map",children:"Map"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Map(set As %String, classname As %String, ByRef idlist As %List, work As %String, args... As %String) As %Status\n"})}),"\n",(0,a.jsx)(t.p,{children:"Map the work over a set of id's in a class."}),"\n",(0,a.jsx)(t.p,{children:"Takes the classname which the id's belong to, a task to be run via the Work Queue Manager on all systems that form part of set of machines. The set supports the following values for a sharding system:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"DS or data : All shard data nodes"}),"\n",(0,a.jsx)(t.li,{children:"QD or compute : A set of shard compute/query nodes\nNote that QD/compute will pick a set of compute/query nodes that cover the entire extent and run the work on these nodes so it will be able to see all the data."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The idlist is a $lb of IDs to process, or a local array subscripted by the ID to process passed in by reference. If idlist=\"\" then we will map the work over all the IDs in the extent. Returns a %Status code if the work was queued correctly, note that to see if the work completed you need to call Sync method and check the returned %Status value for this. Pass the entry point to call in work argument. If this is an instance method indicated by a leading '..' for example '..Method' we will call this method on the instance of the shard local class associated with classname class for this specific id. Also supported is either '##class(Classname).ClassMethod' or '$$entry^rtn' where the first argument being passed in to this class method or function will be the 'id' of the element to process, the second argument will be 'classname' followed by and additional argumented passed in this method. In all these cases the method/function is expected to return a %Status code. If you want to call a function that does not return any value on completion then prepend the class syntax with '=' such as '=##class(Classname).ClassMethod' or for calling a function do not include the '$$' for example 'entry^rtn'. The item being called may also throw exceptions in order to indicate an error happened which is trapped and converted to a %Status value to be returned in the parent process. You can also pass additional arguments including arrays by reference. Note that the size of the data passed in these arguments should be kept relatively small, if there is a large amount of information that needs to be passed then put this in a global. The security context of the caller is recorded when this function is called and is used when the work is executed. Output the work unit makes to the current device will be trapped and relayed to the parent process after this work unit has completed and when the parent process is waiting for work to be completed. If a work unit wishes to flush output before the work unit has completed then then call 'Do $system.WorkMgr.Flush()' Work units may write to the public variable %result which will be relayed to the parent process in the WaitOne call via the byref workresult argument."}),"\n",(0,a.jsx)(t.h3,{id:"queueshard",children:"QueueShard"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method QueueShard(localSystem As %String, remoteSystem As %String, namespace As %String, work As %String, args... As %String) As %Status [ Internal ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Internal method for use with sharding only.",(0,a.jsx)(t.br,{}),"\nlocalSystem is the reference of this local systems IRISLOCALDATA database from the remote system we will queue work on. Add a task to the Work Queue Manager runqueue on a remote machine. You get a %Status if the work was queued correctly. remoteSystem the namespace or implied reference that maps to the remote systems IRISLOCALDATA database so you can form a valid global reference with '^|remoteSystem|IRIS.WorkQueue' that will write data to the target system. namespace is the remote namespace we wish this work to be done in. The remote work is run in the namespace with the same name as the current namespace when you create the work group. You pass the entry point to call in 'work' argument. This can be either '##class(Classname).ClassMethod' or '$$entry^rtn' and it is expected to return a %Status code on completion. If you want to call a function that does not return any value on completion then prepend the class syntax with '=' such as '=##class(Classname).ClassMethod' or for calling a function do not include the '$$' for example 'entry^rtn'. The item being called may also throw exceptions in order to indicate an error happened which is trapped and converted to a %Status value to be returned in the parent process. You can also pass additional arguments including arrays by reference. Note that the size of the data passed in these arguments should be kept relatively small, if there is a large amount of information that needs to be passed then put this in a global. The security context of the caller is also recorded when this function is called so it can be used when the work is executed."]}),"\n",(0,a.jsx)(t.h3,{id:"postremoteevent",children:"PostRemoteEvent"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod PostRemoteEvent(remoteSystem As %String, event As %String) [ Internal ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Internal method for use with sharding only.",(0,a.jsx)(t.br,{}),"\nPost a $system.Event to the remote system where remoteSystem the namespace or implied reference that maps to the remote systems IRISLOCALDATA database so you can form a valid global reference with '^|remoteSystem|IRIS.WorkQueue' that will write data to the target system. event is the global name to issue a $system.Event.Signal(event) on."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>i});var a=s(96540);const n={},o=a.createContext(n);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);