"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[71254],{29954:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>a,default:()=>l,frontMatter:()=>i,toc:()=>o});var s=t(74848),n=t(28453);const i={pagination_prev:null,pagination_next:null},a="%ZEN.Auxiliary.jsonSQLProvider",o=[{value:"Properties",id:"properties",level:2},{value:"OnGetSQL",id:"ongetsql",level:3},{value:"pageSize",id:"pagesize",level:3},{value:"currPage",id:"currpage",level:3},{value:"recordCount",id:"recordcount",level:3},{value:"arrayName",id:"arrayname",level:3},{value:"Methods",id:"methods",level:2},{value:"%DrawJSON",id:"drawjson",level:3},{value:"%OnObjectSynch",id:"onobjectsynch",level:3},{value:"%OnGetSQL",id:"ongetsql-1",level:3},{value:"getPageSize",id:"getpagesize",level:3},{value:"getCurrPage",id:"getcurrpage",level:3},{value:"setCurrPage",id:"setcurrpage",level:3},{value:"getRecordCount",id:"getrecordcount",level:3},{value:"%WriteJSONFromSQL",id:"writejsonfromsql",level:3},{value:"%WriteJSONStreamFromSQL",id:"writejsonstreamfromsql",level:3},{value:"redirects",id:"redirects",level:3}];function c(e){const r={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"zenauxiliaryjsonsqlprovider",children:"%ZEN.Auxiliary.jsonSQLProvider"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Class %ZEN.Auxiliary.jsonSQLProvider Extends (%ZEN.Auxiliary.jsonProvider, %ZEN.Component.querySource) [ Deprecated, System = 3 ]\n"})}),"\n",(0,s.jsxs)(r.p,{children:["A version of the JSON provider that can use an SQL statement to supply data that is served to the client in JSON format. This can be used in the same manner as the jsonProvider component.",(0,s.jsx)(r.br,{}),"\nFor example, placing this within your page definition: `` would cause the given SQL statement to execute when the page is requested and the results of the query to be written to the page in JSON format: ",(0,s.jsx)(r.code,{children:'o.content = { "children": [ { "ID": 1, "Name": "Schaefer,Thelma W." } { "ID": 2, "Name": "Huff,Kevin T." } ] };'})," The JSON content object will contain a children property which is an array of objects that correspond to the rows returned by the SQL statement. The property names match the column names within the query.",(0,s.jsx)(r.br,{}),"\nIf you need more control over the SQL query, you can use the OnGetSQL callback method.",(0,s.jsx)(r.br,{}),"\nThis component ignores all of the data source callback methods inherited from the jsonProvider class."]}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(r.h3,{id:"ongetsql",children:"OnGetSQL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:'Property OnGetSQL As %ZEN.Datatype.delegator(FORMALSPEC = "&pParameters:%String,&pSQL:%String,pCriteria:%ZEN.proxyObject,&pPagingInfo:%String", RETURNTYPE = "%Status");\n'})}),"\n",(0,s.jsx)(r.p,{children:"This specifies a callback method that returns an SQL query (string) that will drive this provider. This is identical in behavior to (and replaces) the sql property. The method can make it easier to create queries based on parameter values or search criteria passed via the criteria property."}),"\n",(0,s.jsx)(r.h3,{id:"pagesize",children:"pageSize"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Property pageSize As %ZEN.Datatype.integer [ InitialExpression = 25 ];\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the provider is using server-side data paging, this is the number of records in each page."}),"\n",(0,s.jsx)(r.h3,{id:"currpage",children:"currPage"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Property currPage As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the provider is using server-side data paging, this is the number (1-based) of the current page."}),"\n",(0,s.jsx)(r.h3,{id:"recordcount",children:"recordCount"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Property recordCount As %ZEN.Datatype.integer;\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the provider is using server-side data paging, this is the total number of records."}),"\n",(0,s.jsx)(r.h3,{id:"arrayname",children:"arrayName"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:'Property arrayName As %String [ InitialExpression = "children" ];\n'})}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(r.h3,{id:"drawjson",children:"%DrawJSON"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Method %DrawJSON() As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"Draw JSON output."}),"\n",(0,s.jsx)(r.h3,{id:"onobjectsynch",children:"%OnObjectSynch"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Method %OnObjectSynch() As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"Render the JSON content of the target object along with the other properties of the provider."}),"\n",(0,s.jsx)(r.h3,{id:"ongetsql-1",children:"%OnGetSQL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Method %OnGetSQL(ByRef pParms, ByRef pSQL) As %Status [ Internal ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"Invoke the OnGetSQL callback."}),"\n",(0,s.jsx)(r.h3,{id:"getpagesize",children:"getPageSize"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod getPageSize() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"If this provider is using server-side paging, this is the number of records in one page."}),"\n",(0,s.jsx)(r.h3,{id:"getcurrpage",children:"getCurrPage"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod getCurrPage() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"If this provider is using server-side paging, this is the current page number (1-based)."}),"\n",(0,s.jsx)(r.h3,{id:"setcurrpage",children:"setCurrPage"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod setCurrPage(page) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"If this provider is using server-side paging, set the current page number (1-based)."}),"\n",(0,s.jsx)(r.h3,{id:"getrecordcount",children:"getRecordCount"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClientMethod getRecordCount() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"If this provider is using server-side paging, this is the total number of records in the current query."}),"\n",(0,s.jsx)(r.h3,{id:"writejsonfromsql",children:"%WriteJSONFromSQL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:'ClassMethod %WriteJSONFromSQL(pVar As %String = "", pSQL As %String, pFormat As %String = "tw", pMaxRows As %Integer = 100, pReturnStatus As %Boolean = 0, tProvider As %ZEN.Auxiliary.jsonSQLProvider = "") As %String\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Utility method to allow direct use of JSON from a non-ZEN context (such as a CSP page).",(0,s.jsx)(r.br,{}),"\nThe JSON notation is written out the current device. pVar is the optional name of the client-side javascript variable that refers to the JSON notation.",(0,s.jsx)(r.br,{}),"\npSQL is the SQL statement that is executed and provides the JSON content.",(0,s.jsx)(r.br,{}),"\nFrom a CSP page, you could invoke the method as follows:",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.code,{children:'#(##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("json","SELECT Name FROM Sample.Person"))#'})," pFormat is a string of flags that control output formatting options.",(0,s.jsx)(r.br,{}),"\nThe following character option codes are supported:",(0,s.jsx)(r.br,{}),"\n1-9 : indent with this number of spaces (4 is the default with the 'i' format specifier)",(0,s.jsx)(r.br,{}),"\ni - indent with 4 spaces unless 't' or 1-9",(0,s.jsx)(r.br,{}),"\nn - newline (lf)",(0,s.jsx)(r.br,{}),"\ns - use strict JSON output - ",(0,s.jsx)(r.strong,{children:"NOTE:"})," special care should be taken when sending data to a browser, as using this flag may expose you to cross site scripting (XSS) vulnerabilities if the data is sent inside ",(0,s.jsx)(r.code,{children:"<script>"})," tags. Zen uses this technique extensively, so this flag should ",(0,s.jsx)(r.strong,{children:"NOT"})," be specified for jsonProviders in Zen pages.",(0,s.jsx)(r.br,{}),"\nt - indent with tab character",(0,s.jsx)(r.br,{}),"\nu - output pre-converted to UTF-8 instead of in native internal format",(0,s.jsx)(r.br,{}),"\nw - Windows-style cr/lf newline",(0,s.jsx)(r.br,{}),"\npMaxRows controls the maximum number of rows to return and follows the semantics for the maxRows property where 0 indicates all rows should be returned. tProvider If you wish to use a class query or pass in parameters using ? then create and populate an instance of the jsonSQLProvider and pass it in."]}),"\n",(0,s.jsx)(r.h3,{id:"writejsonstreamfromsql",children:"%WriteJSONStreamFromSQL"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:'ClassMethod %WriteJSONStreamFromSQL(ByRef pStream As %Stream.Object, pSQL As %String, pFormat As %String = "tw", pMaxRows As %Integer = 100, pRewindStream As %Boolean = 0, tProvider As %ZEN.Auxiliary.jsonSQLProvider = "") As %Status [ ProcedureBlock = 0 ]\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Utility method to allow JSON output generated by the SQL query defined in pSQL to be written to the stream supplied in pStream from a general non-ZEN context. Note that pStream will be created if not supplied, hence the ByRef designation.",(0,s.jsx)(r.br,{}),"\npRewindStream controls whether the stream should be rewound after the data is written to it.",(0,s.jsx)(r.br,{}),"\npFormat is a string of flags that control output formatting options.",(0,s.jsx)(r.br,{}),"\nThe following character option codes are supported:",(0,s.jsx)(r.br,{}),"\n1-9 : indent with this number of spaces (4 is the default with the 'i' format specifier)",(0,s.jsx)(r.br,{}),"\ni - indent with 4 spaces unless 't' or 1-9",(0,s.jsx)(r.br,{}),"\nn - newline (lf)",(0,s.jsx)(r.br,{}),"\ns - use strict JSON output - ",(0,s.jsx)(r.strong,{children:"NOTE:"})," special care should be taken when sending data to a browser, as using this flag may expose you to cross site scripting (XSS) vulnerabilities if the data is sent inside ",(0,s.jsx)(r.code,{children:"<script>"})," tags. Zen uses this technique extensively, so this flag should ",(0,s.jsx)(r.strong,{children:"NOT"})," be specified for jsonProviders in Zen pages.",(0,s.jsx)(r.br,{}),"\nt - indent with tab character",(0,s.jsx)(r.br,{}),"\nu - output pre-converted to UTF-8 instead of in native internal format",(0,s.jsx)(r.br,{}),"\nw - Windows-style cr/lf newline",(0,s.jsx)(r.br,{}),"\npMaxRows controls the maximum number of rows to return and follows the semantics for the maxRows property where 0 indicates all rows should be returned. tProvider If you wish to use a class query or pass in parameters using ? then create and populate an instance of the jsonSQLProvider and pass it in."]}),"\n",(0,s.jsx)(r.h3,{id:"redirects",children:"redirects"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod redirects() [ Internal, Private, ProcedureBlock = 0 ]\n"})})]})}function l(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>o});var s=t(96540);const n={},i=s.createContext(n);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);