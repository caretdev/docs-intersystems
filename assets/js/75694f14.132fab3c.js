"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[87725],{33140:(e,t,s)=>{s.r(t),s.d(t,{contentTitle:()=>r,default:()=>c,frontMatter:()=>i,toc:()=>l});var a=s(74848),n=s(28453);const i={pagination_prev:null,pagination_next:null},r="%Library.AbstractStream",l=[{value:"Parameters",id:"parameters",level:2},{value:"MAXLEN",id:"maxlen",level:3},{value:"PROPERTYVALIDATION",id:"propertyvalidation",level:3},{value:"MAXLOCALSIZE",id:"maxlocalsize",level:3},{value:"READNODATA",id:"readnodata",level:3},{value:"READNOTCHANGED",id:"readnotchanged",level:3},{value:"READCHANGED",id:"readchanged",level:3},{value:"WRITE",id:"write",level:3},{value:"Properties",id:"properties",level:2},{value:"Attributes",id:"attributes",level:3},{value:"Mode",id:"mode",level:3},{value:"LineTerminator",id:"lineterminator",level:3},{value:"Methods",id:"methods",level:2},{value:"GetAttribute",id:"getattribute",level:3},{value:"SetAttribute",id:"setattribute",level:3},{value:"IsDefinedAttribute",id:"isdefinedattribute",level:3},{value:"NextAttribute",id:"nextattribute",level:3},{value:"DeleteAttribute",id:"deleteattribute",level:3},{value:"GetAttributeList",id:"getattributelist",level:3},{value:"SetAttributeList",id:"setattributelist",level:3},{value:"CopyFrom",id:"copyfrom",level:3},{value:"IOOnNew",id:"ioonnew",level:3},{value:"IOInit",id:"ioinit",level:3},{value:"IOOnClose",id:"ioonclose",level:3},{value:"IORewind",id:"iorewind",level:3},{value:"IOFlush",id:"ioflush",level:3},{value:"IOGetSize",id:"iogetsize",level:3},{value:"IOGetStreamId",id:"iogetstreamid",level:3},{value:"IOOpenStream",id:"ioopenstream",level:3},{value:"IOSaveStream",id:"iosavestream",level:3},{value:"IODeleteStream",id:"iodeletestream",level:3},{value:"IOReadData",id:"ioreaddata",level:3},{value:"IOWriteData",id:"iowritedata",level:3},{value:"IOMoveToEnd",id:"iomovetoend",level:3},{value:"%Load",id:"load",level:3},{value:"%DeleteData",id:"deletedata",level:3},{value:"%SaveData",id:"savedata",level:3},{value:"%OnNew",id:"onnew",level:3},{value:"%OnClose",id:"onclose",level:3},{value:"Rewind",id:"rewind",level:3},{value:"Flush",id:"flush",level:3},{value:"GetStreamId",id:"getstreamid",level:3},{value:"OpenStream",id:"openstream",level:3},{value:"IsNull",id:"isnull",level:3},{value:"%IsNull",id:"isnull-1",level:3},{value:"SaveStream",id:"savestream",level:3},{value:"DeleteStream",id:"deletestream",level:3},{value:"%GetSerial",id:"getserial",level:3},{value:"%SetSerial",id:"setserial",level:3},{value:"%Id",id:"id",level:3},{value:"%LoadData",id:"loaddata",level:3},{value:"SizeGet",id:"sizeget",level:3},{value:"LineTerminatorSet",id:"lineterminatorset",level:3},{value:"Read",id:"read",level:3},{value:"ReadLine",id:"readline",level:3},{value:"ReadLineIntoStream",id:"readlineintostream",level:3},{value:"Write",id:"write-1",level:3},{value:"WriteLine",id:"writeline",level:3},{value:"MoveToEnd",id:"movetoend",level:3},{value:"%IsModified",id:"ismodified",level:3},{value:"%ObjectModified",id:"objectmodified",level:3}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"libraryabstractstream",children:"%Library.AbstractStream"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Class %Library.AbstractStream Extends %Stream.Object [ Abstract, ClientDataType = CHARACTERSTREAM, MemberSuper = %Compiler.Type.StreamLegacy, System = 2 ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Deprecated class, the base stream class is %Stream.Object. This is kept for legacy reasons."}),"\n",(0,a.jsx)(t.p,{children:"A stream represents an arbitrary array of characters (or bytes) and a current position. The basic stream interface provides the ability to read data from a stream, write data to the stream, and rewind the current position to the beginning of the stream."}),"\n",(0,a.jsx)(t.p,{children:"Within InterSystems IRIS streams are used to create large (greater than 32K) object attributes."}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.h3,{id:"maxlen",children:"MAXLEN"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MAXLEN = 2147483647;\n"})}),"\n",(0,a.jsx)(t.p,{children:"The maximum number of characters (or bytes) allowed in a stream."}),"\n",(0,a.jsx)(t.h3,{id:"propertyvalidation",children:"PROPERTYVALIDATION"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Parameter PROPERTYVALIDATION As INTEGER [ Constraint = "0,1,2", Flags = ENUM ] = 0;\n'})}),"\n",(0,a.jsx)(t.p,{children:"Turns off property validation."}),"\n",(0,a.jsx)(t.h3,{id:"maxlocalsize",children:"MAXLOCALSIZE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter MAXLOCALSIZE = 32000;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"readnodata",children:"READNODATA"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter READNODATA [ Final ] = 0;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"readnotchanged",children:"READNOTCHANGED"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter READNOTCHANGED [ Final ] = 1;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"readchanged",children:"READCHANGED"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter READCHANGED [ Final ] = 2;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"write",children:"WRITE"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Parameter WRITE [ Final ] = 3;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(t.h3,{id:"attributes",children:"Attributes"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property Attributes As %String [ MultiDimensional ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"An array of strings containing any attribute values associated with this stream."}),"\n",(0,a.jsx)(t.h3,{id:"mode",children:"Mode"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property Mode As %Integer [ InitialExpression = 0, Private ];\n"})}),"\n",(0,a.jsx)(t.h3,{id:"lineterminator",children:"LineTerminator"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Property LineTerminator As %String(MAXLEN = 10) [ InitialExpression = {$char(13,10)} ];\n"})}),"\n",(0,a.jsx)(t.p,{children:"Type of line terminator we use for this stream, defaults to Cr/Lf. Maximum length is 10 characters. This is stored as an attribute of the stream called 'LineTerminator'."}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"getattribute",children:"GetAttribute"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method GetAttribute(name As %String, default As %String = "") As %String [ CodeMode = expression, Final ]\n'})}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the named attribute value"}),"\n",(0,a.jsx)(t.h3,{id:"setattribute",children:"SetAttribute"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetAttribute(name As %String, value As %String) [ Final ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Inserts an attribute variable by name into the collection"}),"\n",(0,a.jsx)(t.h3,{id:"isdefinedattribute",children:"IsDefinedAttribute"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsDefinedAttribute(name As %String) As %Boolean [ CodeMode = expression, Final ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Returns true if the named attribute variable exists in the collection, false otherwise"}),"\n",(0,a.jsx)(t.h3,{id:"nextattribute",children:"NextAttribute"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method NextAttribute(name As %String) As %String [ Final ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the next attribute variable name in the sequence, skip any '%' names"}),"\n",(0,a.jsx)(t.h3,{id:"deleteattribute",children:"DeleteAttribute"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method DeleteAttribute(name As %String) As %Boolean [ Final ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Removes this attribute variable from the collection. Returns true is it existed and false if it did not exist."}),"\n",(0,a.jsx)(t.h3,{id:"getattributelist",children:"GetAttributeList"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetAttributeList() As %String\n"})}),"\n",(0,a.jsx)(t.h3,{id:"setattributelist",children:"SetAttributeList"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method SetAttributeList(attr As %String)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"copyfrom",children:"CopyFrom"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method CopyFrom(source As %Stream.Object) As %Status\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Copies the contents of ",(0,a.jsx)(t.em,{children:"source"})," into this Stream."]}),"\n",(0,a.jsxs)(t.p,{children:["For example, you can copy oldstream into a new stream: ",(0,a.jsx)(t.code,{children:"Set newstream=##class(%GlobalCharacterStream).%New() Do newstream.CopyFrom(oldstream)"})]}),"\n",(0,a.jsx)(t.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,a.jsx)(t.h3,{id:"ioonnew",children:"IOOnNew"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method IOOnNew(initval As %String = "") As %Status [ Private ]\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Perform any initialization required by the StreamAdaptor. This is called by the containing stream's ",(0,a.jsx)(t.strong,{children:"%OnNew"})," method."]}),"\n",(0,a.jsx)(t.h3,{id:"ioinit",children:"IOInit"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOInit() [ Private ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Initialize member variable used by the StreamAdaptor. This This is called when the containing stream is opened via ",(0,a.jsx)(t.strong,{children:"%SetSerial"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"ioonclose",children:"IOOnClose"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOOnClose() As %Status [ Private ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Perform any clean up required by the StreamAdaptor. This is called by the containing stream's ",(0,a.jsx)(t.strong,{children:"%OnClose"})," method."]}),"\n",(0,a.jsx)(t.h3,{id:"iorewind",children:"IORewind"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IORewind() As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"ioflush",children:"IOFlush"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOFlush() As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"iogetsize",children:"IOGetSize"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOGetSize() As %Integer [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Return the current size of the data stream."}),"\n",(0,a.jsx)(t.h3,{id:"iogetstreamid",children:"IOGetStreamId"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOGetStreamId() As %String [ Private ]\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Return the ",(0,a.jsx)(t.em,{children:"id"})," for a stream; that is, an identifier that can later be used to open the same stream."]}),"\n",(0,a.jsx)(t.h3,{id:"ioopenstream",children:"IOOpenStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOOpenStream(sid As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Open the stream identified by sid."}),"\n",(0,a.jsx)(t.h3,{id:"iosavestream",children:"IOSaveStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOSaveStream() As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Write the stream to storage."}),"\n",(0,a.jsx)(t.h3,{id:"iodeletestream",children:"IODeleteStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod IODeleteStream(sid As %String, concurrency As %Integer = 0) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Delete the storage for the stream identified by sid."}),"\n",(0,a.jsx)(t.h3,{id:"ioreaddata",children:"IOReadData"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOReadData(ByRef len As %Integer, ByRef sc As %Status) As %String [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:'Reads up to len characters from the current position in the stream. The current position is advanced by the number of characers read. Upon exit, len is set to the actual number of characters read. If a read occurs when the stream position is at the end of the stream, len will be set to 0 and IOReadData will return a null string ("").'}),"\n",(0,a.jsx)(t.p,{children:"Returns a string up to len characters long."}),"\n",(0,a.jsx)(t.h3,{id:"iowritedata",children:"IOWriteData"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOWriteData(data As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Writes data to the stream at the current location."}),"\n",(0,a.jsx)(t.h3,{id:"iomovetoend",children:"IOMoveToEnd"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IOMoveToEnd() As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Move to the end of the stream and set ourselves to #WRITE mode so the next IOWriteData will append data to the stream."}),"\n",(0,a.jsx)(t.h3,{id:"load",children:"%Load"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Load(sid As %String) As %Status [ CodeMode = call, Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"deletedata",children:"%DeleteData"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod %DeleteData(soid As %String, concurrency As %Integer) As %Status [ CodeMode = call, Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"savedata",children:"%SaveData"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SaveData(ByRef sid As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"onnew",children:"%OnNew"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method %OnNew(initval As %String = "") As %Status [ CodeMode = call, Private ]\n'})}),"\n",(0,a.jsx)(t.h3,{id:"onclose",children:"%OnClose"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %OnClose() As %Status [ CodeMode = call, Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"rewind",children:"Rewind"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Rewind() As %Status [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"flush",children:"Flush"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Flush() As %Status [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"getstreamid",children:"GetStreamId"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method GetStreamId() As %String\n"})}),"\n",(0,a.jsx)(t.p,{children:"Returns an full id value (including class name) with which the Stream implementation has stored the stream."}),"\n",(0,a.jsx)(t.h3,{id:"openstream",children:"OpenStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method OpenStream(sid As %String) As %Status [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"isnull",children:"IsNull"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method IsNull() As %Boolean [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.p,{children:'Returns true if this is a "NULL" stream; that is, a stream which has never been written to and saved. This is used by the InterSystems IRIS ODBC server.'}),"\n",(0,a.jsx)(t.h3,{id:"isnull-1",children:"%IsNull"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %IsNull() As %Boolean [ CodeMode = expression ]\n"})}),"\n",(0,a.jsx)(t.p,{children:'Returns true if this is a "NULL" stream; that is, a stream which has never been written to and saved. This is used by the InterSystems IRIS ODBC server.'}),"\n",(0,a.jsx)(t.h3,{id:"savestream",children:"SaveStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method SaveStream() As %Status [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Deprecated method, use %Save instead. Saves the temporary copy of the stream data to a persistent location. Note that any locking or transaction handling must be done by the caller."}),"\n",(0,a.jsx)(t.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,a.jsx)(t.h3,{id:"deletestream",children:"DeleteStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"ClassMethod DeleteStream(oid As %ObjectIdentity, concurrency As %Integer = 0) As %Status [ CodeMode = generator ]\n"})}),"\n",(0,a.jsx)(t.p,{children:"Deprecated method, use %Delete instead. Deletes the stored stream identified by oid. This will not remove the stream attributes of any saved streams, it will just remove the stream data. If you need to clear the attributes as well you will have to call Clear on the stream object."}),"\n",(0,a.jsx)(t.h3,{id:"getserial",children:"%GetSerial"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %GetSerial(force As %Integer = 0) As %String [ CodeMode = call, Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"setserial",children:"%SetSerial"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %SetSerial(serialized As %String) As %Status [ CodeMode = call, Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"id",children:"%Id"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Id() As %String\n"})}),"\n",(0,a.jsx)(t.p,{children:"Returns the persistent object Id, if there is one, of this object."}),"\n",(0,a.jsx)(t.p,{children:"Returns a null string if there is no object Id."}),"\n",(0,a.jsx)(t.h3,{id:"loaddata",children:"%LoadData"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %LoadData(serialized As %String) As %Status [ Private ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"sizeget",children:"SizeGet"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method SizeGet() As %Integer [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"lineterminatorset",children:"LineTerminatorSet"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method LineTerminatorSet(terminator As %String) As %Status\n"})}),"\n",(0,a.jsx)(t.h3,{id:"read",children:"Read"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method Read(ByRef len As %Integer = 32656, ByRef sc As %Status) As %RawString [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"readline",children:"ReadLine"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method ReadLine(ByRef len As %Integer = 32000, ByRef sc As %Status, ByRef eol As %Boolean) As %RawString\n"})}),"\n",(0,a.jsx)(t.h3,{id:"readlineintostream",children:"ReadLineIntoStream"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method ReadLineIntoStream() As %AbstractStream\n"})}),"\n",(0,a.jsx)(t.p,{children:"This reads from the stream until it find the LineTerminator and returns this as a stream. If the stream does not contain the line terminator this can potentially be the entire stream."}),"\n",(0,a.jsx)(t.h3,{id:"write-1",children:"Write"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method Write(data As %RawString = "") As %Status [ CodeMode = call ]\n'})}),"\n",(0,a.jsx)(t.h3,{id:"writeline",children:"WriteLine"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:'Method WriteLine(data As %RawString = "") As %Status\n'})}),"\n",(0,a.jsx)(t.p,{children:"Appends the string data along with a line terminator to the stream and advances the current stream position by the number of characters in data plus the line terminator."}),"\n",(0,a.jsx)(t.p,{children:"Returns a %Status value indicating success or failure."}),"\n",(0,a.jsx)(t.h3,{id:"movetoend",children:"MoveToEnd"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method MoveToEnd() As %Status [ CodeMode = call ]\n"})}),"\n",(0,a.jsx)(t.h3,{id:"ismodified",children:"%IsModified"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %IsModified() As %Integer\n"})}),"\n",(0,a.jsx)(t.h3,{id:"objectmodified",children:"%ObjectModified"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-objectscript-class",children:"Method %ObjectModified() As %Integer\n"})})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var a=s(96540);const n={},i=a.createContext(n);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);