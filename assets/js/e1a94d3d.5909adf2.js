"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[81854],{90880:(e,l,n)=>{n.r(l),n.d(l,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,toc:()=>t});var s=n(74848),r=n(28453);const a={pagination_prev:null,pagination_next:null},i="%ZEN.Component.dataGrid",t=[{value:"Parameters",id:"parameters",level:2},{value:"INCLUDEFILES",id:"includefiles",level:3},{value:"SYSMODULE;",id:"sysmodule",level:3},{value:"DEFAULTENCLOSINGCLASS",id:"defaultenclosingclass",level:3},{value:"DOMAIN",id:"domain",level:3},{value:"Properties",id:"properties",level:2},{value:"rowDescriptors",id:"rowdescriptors",level:3},{value:"columnDescriptors",id:"columndescriptors",level:3},{value:"summaryRow",id:"summaryrow",level:3},{value:"sortColumn",id:"sortcolumn",level:3},{value:"sortOrder",id:"sortorder",level:3},{value:"sortMode",id:"sortmode",level:3},{value:"pagingMode",id:"pagingmode",level:3},{value:"showRowSelector",id:"showrowselector",level:3},{value:"canResizeColumns",id:"canresizecolumns",level:3},{value:"checkedRows",id:"checkedrows",level:3},{value:"gridTitle",id:"gridtitle",level:3},{value:"gridTitleStyle",id:"gridtitlestyle",level:3},{value:"gridStatusStyle",id:"gridstatusstyle",level:3},{value:"showColumnLabels",id:"showcolumnlabels",level:3},{value:"rowLabelWidth",id:"rowlabelwidth",level:3},{value:"columnWidth",id:"columnwidth",level:3},{value:"rowHeight",id:"rowheight",level:3},{value:"showRowLabels",id:"showrowlabels",level:3},{value:"rowLabelSpan",id:"rowlabelspan",level:3},{value:"columnLabelSpan",id:"columnlabelspan",level:3},{value:"onheaderclick",id:"onheaderclick",level:3},{value:"currRow",id:"currrow",level:3},{value:"currColumn",id:"currcolumn",level:3},{value:"currPage",id:"currpage",level:3},{value:"pageSize",id:"pagesize",level:3},{value:"selectedRange",id:"selectedrange",level:3},{value:"valueColumn",id:"valuecolumn",level:3},{value:"selectMode",id:"selectmode",level:3},{value:"filterKey",id:"filterkey",level:3},{value:"multiSelect",id:"multiselect",level:3},{value:"hasFormulas",id:"hasformulas",level:3},{value:"format",id:"format",level:3},{value:"alwaysString",id:"alwaysstring",level:3},{value:"style",id:"style",level:3},{value:"columnHeaderStyle",id:"columnheaderstyle",level:3},{value:"rowHeaderStyle",id:"rowheaderstyle",level:3},{value:"showZebra",id:"showzebra",level:3},{value:"evenRowBackground",id:"evenrowbackground",level:3},{value:"evenRowColor",id:"evenrowcolor",level:3},{value:"oddRowBackground",id:"oddrowbackground",level:3},{value:"oddRowColor",id:"oddrowcolor",level:3},{value:"cellHoverColor",id:"cellhovercolor",level:3},{value:"currCellBackground",id:"currcellbackground",level:3},{value:"currCellColor",id:"currcellcolor",level:3},{value:"ondrawcell",id:"ondrawcell",level:3},{value:"onselectcell",id:"onselectcell",level:3},{value:"onselectrow",id:"onselectrow",level:3},{value:"onchangecell",id:"onchangecell",level:3},{value:"ongetfunctions",id:"ongetfunctions",level:3},{value:"onaction",id:"onaction",level:3},{value:"ongetlookupdata",id:"ongetlookupdata",level:3},{value:"ongettitle",id:"ongettitle",level:3},{value:"ongetstatus",id:"ongetstatus",level:3},{value:"onfiltercell",id:"onfiltercell",level:3},{value:"lblSearch",id:"lblsearch",level:3},{value:"lblWorking",id:"lblworking",level:3},{value:"lblErrorRenderContents",id:"lblerrorrendercontents",level:3},{value:"lblErrorRenderSkeleton",id:"lblerrorrenderskeleton",level:3},{value:"lblErrorRenderCells",id:"lblerrorrendercells",level:3},{value:"lblErrorAdjustSizes",id:"lblerroradjustsizes",level:3},{value:"lblErrorSelectCell",id:"lblerrorselectcell",level:3},{value:"useEngine",id:"useengine",level:3},{value:"XDatas",id:"xdatas",level:2},{value:"Style",id:"style-1",level:3},{value:"Methods",id:"methods",level:2},{value:"onCreate",id:"oncreate",level:3},{value:"initEngine",id:"initengine",level:3},{value:"recalc",id:"recalc",level:3},{value:"evaluate",id:"evaluate",level:3},{value:"renderContents",id:"rendercontents",level:3},{value:"renderSkeleton",id:"renderskeleton",level:3},{value:"extractUserStyleSetting",id:"extractuserstylesetting",level:3},{value:"renderCells",id:"rendercells",level:3},{value:"getCellContent",id:"getcellcontent",level:3},{value:"getPagingHTML",id:"getpaginghtml",level:3},{value:"getCellValue",id:"getcellvalue",level:3},{value:"setCellValue",id:"setcellvalue",level:3},{value:"setFilterKey",id:"setfilterkey",level:3},{value:"updateGrid",id:"updategrid",level:3},{value:"updateCells",id:"updatecells",level:3},{value:"reallyUpdateCells",id:"reallyupdatecells",level:3},{value:"setSize",id:"setsize",level:3},{value:"defineGetComputedStyle",id:"definegetcomputedstyle",level:3},{value:"adjustSizesInColumnResize",id:"adjustsizesincolumnresize",level:3},{value:"adjustSizesAreasPagingStatus",id:"adjustsizesareaspagingstatus",level:3},{value:"adjustSizesColumnHeaders",id:"adjustsizescolumnheaders",level:3},{value:"adjustSizesRowHeaders",id:"adjustsizesrowheaders",level:3},{value:"adjustSizesSummaryRow",id:"adjustsizessummaryrow",level:3},{value:"adjustSizesDataCells",id:"adjustsizesdatacells",level:3},{value:"initializeSizingObject",id:"initializesizingobject",level:3},{value:"adjustSizes",id:"adjustsizes",level:3},{value:"getRowCount",id:"getrowcount",level:3},{value:"getColumnCount",id:"getcolumncount",level:3},{value:"wheelHandler",id:"wheelhandler",level:3},{value:"cellScrollVt",id:"cellscrollvt",level:3},{value:"cellScrollHz",id:"cellscrollhz",level:3},{value:"resizeMouseDblClick",id:"resizemousedblclick",level:3},{value:"resizeMouseDown",id:"resizemousedown",level:3},{value:"resizeMouseUp",id:"resizemouseup",level:3},{value:"resizeMouseMove",id:"resizemousemove",level:3},{value:"sizeHandleMouseDown",id:"sizehandlemousedown",level:3},{value:"sizeHandleMouseUp",id:"sizehandlemouseup",level:3},{value:"sizeHandleMouseMove",id:"sizehandlemousemove",level:3},{value:"gridKeyFocus",id:"gridkeyfocus",level:3},{value:"gridKeyBlur",id:"gridkeyblur",level:3},{value:"gridKeyDownHandler",id:"gridkeydownhandler",level:3},{value:"gridKeyPressHandler",id:"gridkeypresshandler",level:3},{value:"cellEditKeyUpHandler",id:"celleditkeyuphandler",level:3},{value:"cellEditKeyHandler",id:"celleditkeyhandler",level:3},{value:"focus",id:"focus",level:3},{value:"moveToCell",id:"movetocell",level:3},{value:"selectCell",id:"selectcell",level:3},{value:"selectCellHandler",id:"selectcellhandler",level:3},{value:"cellActionHandler",id:"cellactionhandler",level:3},{value:"highlightCells",id:"highlightcells",level:3},{value:"moveCellSelector",id:"movecellselector",level:3},{value:"cellInputClickHandler",id:"cellinputclickhandler",level:3},{value:"editCell",id:"editcell",level:3},{value:"cellEditBlur",id:"celleditblur",level:3},{value:"stopEditCell",id:"stopeditcell",level:3},{value:"getCellEditor",id:"getcelleditor",level:3},{value:"getCellSelector",id:"getcellselector",level:3},{value:"isCellEditable",id:"iscelleditable",level:3},{value:"isCellVisible",id:"iscellvisible",level:3},{value:"cellMouseOver",id:"cellmouseover",level:3},{value:"cellMouseOut",id:"cellmouseout",level:3},{value:"selectorClickHandler",id:"selectorclickhandler",level:3},{value:"selectorDblClickHandler",id:"selectordblclickhandler",level:3},{value:"cellClickHandler",id:"cellclickhandler",level:3},{value:"cellDblClickHandler",id:"celldblclickhandler",level:3},{value:"buildSortIndex",id:"buildsortindex",level:3},{value:"buildRowIndex",id:"buildrowindex",level:3},{value:"buildRowLeafIndex",id:"buildrowleafindex",level:3},{value:"getRowDescriptorCount",id:"getrowdescriptorcount",level:3},{value:"getRowDescriptor",id:"getrowdescriptor",level:3},{value:"getRowDescriptors",id:"getrowdescriptors",level:3},{value:"getColumnDescriptors",id:"getcolumndescriptors",level:3},{value:"getRowInfo",id:"getrowinfo",level:3},{value:"buildColumnIndex",id:"buildcolumnindex",level:3},{value:"buildColumnLeafIndex",id:"buildcolumnleafindex",level:3},{value:"getColumnDescriptorCount",id:"getcolumndescriptorcount",level:3},{value:"getColumnDescriptor",id:"getcolumndescriptor",level:3},{value:"getColumnInfo",id:"getcolumninfo",level:3},{value:"getDesignMode",id:"getdesignmode",level:3},{value:"getPageCount",id:"getpagecount",level:3},{value:"getRowsOnPage",id:"getrowsonpage",level:3},{value:"getPageSize",id:"getpagesize",level:3},{value:"setPageSize",id:"setpagesize",level:3},{value:"getCurrPage",id:"getcurrpage",level:3},{value:"setCurrPage",id:"setcurrpage",level:3},{value:"nextPage",id:"nextpage",level:3},{value:"prevPage",id:"prevpage",level:3},{value:"getRowOffset",id:"getrowoffset",level:3},{value:"rowClickHandler",id:"rowclickhandler",level:3},{value:"rowDblClickHandler",id:"rowdblclickhandler",level:3},{value:"columnClickHandler",id:"columnclickhandler",level:3},{value:"columnDblClickHandler",id:"columndblclickhandler",level:3},{value:"splitStyle",id:"splitstyle",level:3},{value:"cbClick",id:"cbclick",level:3},{value:"showMessage",id:"showmessage",level:3},{value:"hideMessage",id:"hidemessage",level:3},{value:"beginWait",id:"beginwait",level:3},{value:"endWait",id:"endwait",level:3},{value:"showOverlay",id:"showoverlay",level:3},{value:"hideOverlay",id:"hideoverlay",level:3},{value:"notifyViewHandler",id:"notifyviewhandler",level:3},{value:"getCellRowCount",id:"getcellrowcount",level:3},{value:"getCellColumnCount",id:"getcellcolumncount",level:3},{value:"getCellColumnName",id:"getcellcolumnname",level:3},{value:"getCellEditData",id:"getcelleditdata",level:3},{value:"getCellData",id:"getcelldata",level:3},{value:"getCellExternalData",id:"getcellexternaldata",level:3},{value:"getRowValue",id:"getrowvalue",level:3},{value:"setProperty",id:"setproperty",level:3},{value:"showPopup",id:"showpopup",level:3},{value:"applyValue",id:"applyvalue",level:3},{value:"getPopupContent",id:"getpopupcontent",level:3},{value:"getLookupTableHTML",id:"getlookuptablehtml",level:3},{value:"applyFilter",id:"applyfilter",level:3},{value:"killEvent",id:"killevent",level:3},{value:"filterKeyDown",id:"filterkeydown",level:3},{value:"filterKeyUp",id:"filterkeyup",level:3},{value:"showGroupHandler",id:"showgrouphandler",level:3},{value:"hideGroupHandler",id:"hidegrouphandler",level:3},{value:"getSearchDiv",id:"getsearchdiv",level:3},{value:"selectPopupItem",id:"selectpopupitem",level:3},{value:"getRowHeaderLabels",id:"getrowheaderlabels",level:3},{value:"getCurrRow",id:"getcurrrow",level:3},{value:"getCurrColumn",id:"getcurrcolumn",level:3}];function c(e){const l={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.header,{children:(0,s.jsx)(l.h1,{id:"zencomponentdatagrid",children:"%ZEN.Component.dataGrid"})}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Class %ZEN.Component.dataGrid Extends (control, dataView) [ Deprecated, System = 3 ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Implements a component for viewing and editing tabular data.",(0,s.jsx)(l.br,{}),"\nThis is an HTML5 component; it will only correctly run on HTML5 compliant browsers."]}),"\n",(0,s.jsx)(l.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(l.h3,{id:"includefiles",children:"INCLUDEFILES"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter INCLUDEFILES = "dsparser.js";\n'})}),"\n",(0,s.jsx)(l.p,{children:"Pick up formula code."}),"\n",(0,s.jsx)(l.h3,{id:"sysmodule",children:"SYSMODULE;"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Parameter SYSMODULE;\n"})}),"\n",(0,s.jsx)(l.p,{children:'Do not include in "form" module.'}),"\n",(0,s.jsx)(l.h3,{id:"defaultenclosingclass",children:"DEFAULTENCLOSINGCLASS"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DEFAULTENCLOSINGCLASS As STRING = "dataGrid";\n'})}),"\n",(0,s.jsx)(l.h3,{id:"domain",children:"DOMAIN"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Parameter DOMAIN = "%ZEN";\n'})}),"\n",(0,s.jsx)(l.p,{children:"Domain used for localization."}),"\n",(0,s.jsx)(l.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(l.h3,{id:"rowdescriptors",children:"rowDescriptors"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property rowDescriptors As list Of %ZEN.Auxiliary.gridRowDescriptor(XMLPROJECTION = "ELEMENT", XMLREF = 1, XMLTYPECONSTRAINT = "CHOICE", ZENSETTING = 0);\n'})}),"\n",(0,s.jsx)(l.p,{children:"Optional row descriptors for this grid."}),"\n",(0,s.jsx)(l.h3,{id:"columndescriptors",children:"columnDescriptors"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property columnDescriptors As list Of %ZEN.Auxiliary.gridColumnDescriptor(XMLPROJECTION = "ELEMENT", XMLREF = 1, XMLTYPECONSTRAINT = "CHOICE", ZENSETTING = 0);\n'})}),"\n",(0,s.jsx)(l.p,{children:"Optional column descriptors for this grid."}),"\n",(0,s.jsx)(l.h3,{id:"summaryrow",children:"summaryRow"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property summaryRow As %ZEN.Auxiliary.gridRowDescriptor(XMLNAME = "summaryRow", ZENSETTING = 0);\n'})}),"\n",(0,s.jsx)(l.p,{children:"Optional descriptor for the summary row."}),"\n",(0,s.jsx)(l.h3,{id:"sortcolumn",children:"sortColumn"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property sortColumn As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"For sortable tables, this is the column used for sorting results (1-based)."}),"\n",(0,s.jsx)(l.h3,{id:"sortorder",children:"sortOrder"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property sortOrder As %ZEN.Datatype.string(VALUELIST = ",asc,desc");\n'})}),"\n",(0,s.jsx)(l.p,{children:'For sortable tables, this is the order to sort values within the current column. Values can be "", "asc" (ascending), or "desc" (descending).'}),"\n",(0,s.jsx)(l.h3,{id:"sortmode",children:"sortMode"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property sortMode As %ZEN.Datatype.string(VALUELIST = ",client,server") [ InitialExpression = "client" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:'Indicates where column-wise sorting should occur. This can be "client" or "server".'}),"\n",(0,s.jsx)(l.h3,{id:"pagingmode",children:"pagingMode"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property pagingMode As %ZEN.Datatype.string(VALUELIST = ",client,server") [ InitialExpression = "client" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Indicates where data paging should occur."}),"\n",(0,s.jsx)(l.h3,{id:"showrowselector",children:"showRowSelector"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property showRowSelector As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, display a check box in each row to allow selection of the row."}),"\n",(0,s.jsx)(l.h3,{id:"canresizecolumns",children:"canResizeColumns"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property canResizeColumns As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, the user can resize columnns with the mouse."}),"\n",(0,s.jsx)(l.h3,{id:"checkedrows",children:"checkedRows"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property checkedRows As %ZEN.Datatype.csv;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This property contains a csv-list of the row numbers (1-based) in which the row selector checkbox is currently set.",(0,s.jsx)(l.br,{}),'\nIf all rows are checked, it is set to "all".']}),"\n",(0,s.jsx)(l.h3,{id:"gridtitle",children:"gridTitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property gridTitle As %ZEN.Datatype.caption;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional title to display along top of grid."}),"\n",(0,s.jsx)(l.h3,{id:"gridtitlestyle",children:"gridTitleStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property gridTitleStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional style to apply to grid title."}),"\n",(0,s.jsx)(l.h3,{id:"gridstatusstyle",children:"gridStatusStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property gridStatusStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Optional style to apply to grid status area."}),"\n",(0,s.jsx)(l.h3,{id:"showcolumnlabels",children:"showColumnLabels"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property showColumnLabels As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Specifies whether column labels should be displayed."}),"\n",(0,s.jsx)(l.h3,{id:"rowlabelwidth",children:"rowLabelWidth"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowLabelWidth As %ZEN.Datatype.integer;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Width used for row labels. This is a number of pixels. If not defined, then a width is calculated."}),"\n",(0,s.jsx)(l.h3,{id:"columnwidth",children:"columnWidth"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnWidth As %ZEN.Datatype.integer;\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is the default width (in pixels) used for columns that do not supply a width. If not defined, then a width is calculated."}),"\n",(0,s.jsx)(l.h3,{id:"rowheight",children:"rowHeight"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowHeight As %ZEN.Datatype.integer;\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is the default height (in pixels) used for rows that do not supply a height. If not defined, then the height is calculated."}),"\n",(0,s.jsx)(l.h3,{id:"showrowlabels",children:"showRowLabels"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property showRowLabels As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Specifies whether row labels should be displayed."}),"\n",(0,s.jsx)(l.h3,{id:"rowlabelspan",children:"rowLabelSpan"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowLabelSpan As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This specifies how parent row labels with multiple child labels are displayed.",(0,s.jsx)(l.br,{}),"\nIf true, then one parent label is displayed for each set of children. If false, then the parent row label is repeated for each child."]}),"\n",(0,s.jsx)(l.h3,{id:"columnlabelspan",children:"columnLabelSpan"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnLabelSpan As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This specifies how parent column labels with multiple child labels are displayed.",(0,s.jsx)(l.br,{}),"\nIf true, then one parent label is displayed for each set of children. If false, then the parent row label is repeated for each child."]}),"\n",(0,s.jsx)(l.h3,{id:"onheaderclick",children:"onheaderclick"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onheaderclick As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsx)(l.p,{children:'onheaderclick event handler: If defined, this event is fired when the user clicks on a row or column header. The variable which will indicate which header is clicked: "row" or "column". The variable index will indicate the ordinal number of the header (1-based).'}),"\n",(0,s.jsx)(l.h3,{id:"currrow",children:"currRow"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property currRow As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is the row number (1-based) of the current selected cell."}),"\n",(0,s.jsx)(l.h3,{id:"currcolumn",children:"currColumn"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property currColumn As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is the column number (1-based) of the current selected cell."}),"\n",(0,s.jsx)(l.h3,{id:"currpage",children:"currPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property currPage As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:'This is the current "page" when this grid is paging through data. Use the getCurrPage method to view this.'}),"\n",(0,s.jsx)(l.h3,{id:"pagesize",children:"pageSize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property pageSize As %ZEN.Datatype.integer [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:'This is the current "page" size when this grid is paging through data. Use the getPageSize method to view this.'}),"\n",(0,s.jsx)(l.h3,{id:"selectedrange",children:"selectedRange"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property selectedRange As %ZEN.Datatype.csv;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["This specifies the current selected range of cells as a comma-separated list of integers. The list is of the form:",(0,s.jsx)(l.br,{}),"\nstartRow,startCol,endRow,endCol",(0,s.jsx)(l.br,{}),"\nAll cells numbers are 1-based.",(0,s.jsx)(l.br,{}),'\nIf the range is equal to "", then no cells are selected.',(0,s.jsx)(l.br,{}),"\nThis is only used if multiSelect is true."]}),"\n",(0,s.jsx)(l.h3,{id:"valuecolumn",children:"valueColumn"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property valueColumn As %ZEN.Datatype.integer [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"This is the column number (1-based) of the column that supplies the value for a row within the table."}),"\n",(0,s.jsx)(l.h3,{id:"selectmode",children:"selectMode"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property selectMode As %ZEN.Datatype.string(VALUELIST = ",rows,cells") [ InitialExpression = "rows" ];\n'})}),"\n",(0,s.jsxs)(l.p,{children:["Specifies how selection works within the grid.",(0,s.jsx)(l.br,{}),'\nIf "rows", then the user selects entire rows at a time.',(0,s.jsx)(l.br,{}),'\nIf "cells", then the user can select and move between individual cells.']}),"\n",(0,s.jsx)(l.h3,{id:"filterkey",children:"filterKey"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property filterKey As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsx)(l.p,{children:"If supplied, this is a key used to filter results that are already on the client."}),"\n",(0,s.jsx)(l.h3,{id:"multiselect",children:"multiSelect"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property multiSelect As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, users can select a range of cells in the grid."}),"\n",(0,s.jsx)(l.h3,{id:"hasformulas",children:"hasFormulas"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property hasFormulas As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"If true, this grid will display formula values when a cell is edited. Otherwise the current value of the cell is displayed."}),"\n",(0,s.jsx)(l.h3,{id:"format",children:"format"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property format As %ZEN.Datatype.string;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Default format to apply to cells in this grid.",(0,s.jsx)(l.br,{}),'\nThis is a DeepSee format string: e.g., "###.##" This is overridden by row and column-level formatting.']}),"\n",(0,s.jsx)(l.h3,{id:"alwaysstring",children:"alwaysString"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property alwaysString As %ZEN.Datatype.boolean [ InitialExpression = 0 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Sometimes datagrid is *never* used to enter numbers only strings, for instance diagnostic codes with 0s trailing to the left or after a decimal point"}),"\n",(0,s.jsx)(l.h3,{id:"style",children:"style"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property style As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Additional style to apply to cells in this grid.",(0,s.jsx)(l.br,{}),"\nThis is applied before any row and column-level styles."]}),"\n",(0,s.jsx)(l.h3,{id:"columnheaderstyle",children:"columnHeaderStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property columnHeaderStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Additional style to apply to column headers in this grid."}),"\n",(0,s.jsx)(l.h3,{id:"rowheaderstyle",children:"rowHeaderStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property rowHeaderStyle As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Additional style to apply to row headers in this grid."}),"\n",(0,s.jsx)(l.h3,{id:"showzebra",children:"showZebra"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property showZebra As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Specify whether zebra striping should be applied to the grid."}),"\n",(0,s.jsx)(l.h3,{id:"evenrowbackground",children:"evenRowBackground"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property evenRowBackground As %ZEN.Datatype.style [ InitialExpression = "#F8F8F8" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Background color to apply to even rows when zebra striping is on."}),"\n",(0,s.jsx)(l.h3,{id:"evenrowcolor",children:"evenRowColor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property evenRowColor As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Foreground color to apply to even rows when zebra striping is on."}),"\n",(0,s.jsx)(l.h3,{id:"oddrowbackground",children:"oddRowBackground"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property oddRowBackground As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Style to apply to odd rows when zebra striping is on. Background color to apply to odd rows when zebra striping is on."}),"\n",(0,s.jsx)(l.h3,{id:"oddrowcolor",children:"oddRowColor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property oddRowColor As %ZEN.Datatype.style;\n"})}),"\n",(0,s.jsx)(l.p,{children:"Foreground color to apply to odd rows when zebra striping is on."}),"\n",(0,s.jsx)(l.h3,{id:"cellhovercolor",children:"cellHoverColor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property cellHoverColor As %ZEN.Datatype.string [ InitialExpression = "#EEEEEE" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Background color of cells when mouse is over them."}),"\n",(0,s.jsx)(l.h3,{id:"currcellbackground",children:"currCellBackground"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property currCellBackground As %ZEN.Datatype.style [ InitialExpression = "#D0D0FF" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Background color to apply to the current cell."}),"\n",(0,s.jsx)(l.h3,{id:"currcellcolor",children:"currCellColor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property currCellColor As %ZEN.Datatype.style [ InitialExpression = "#000000" ];\n'})}),"\n",(0,s.jsx)(l.p,{children:"Foreground color to apply to the current cell."}),"\n",(0,s.jsx)(l.h3,{id:"ondrawcell",children:"ondrawcell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property ondrawcell As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["ondrawcell event handler: If defined, this event is fired when a cell is about to be drawn. The event is passed value, row, and col (1-based). If this event handler returns a value, then it is used to render the cell contents.",(0,s.jsx)(l.br,{}),"\nThe return of this event is either null, in which case the default rendering is used for the cell or an object with any of the following properties:",(0,s.jsx)(l.br,{}),"\ncontent - HTML to display within the cell.",(0,s.jsx)(l.br,{}),"\nalign - horizontal alignment for the cell.",(0,s.jsx)(l.br,{}),"\nstyle - CSS style for the cell.",(0,s.jsx)(l.br,{}),"\nformat - format string for the cell (ignored if content is supplied).",(0,s.jsx)(l.br,{}),"\nimage - image for the cell (ignored if content is supplied).",(0,s.jsx)(l.br,{}),"\ntype - type for the cell (ignored if content is supplied).",(0,s.jsx)(l.br,{}),"\nvalue - value for the cell (ignored if content is supplied)."]}),"\n",(0,s.jsx)(l.h3,{id:"onselectcell",children:"onselectcell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onselectcell As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["onselectcell event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the user navigates to a new cell.",(0,s.jsx)(l.br,{}),"\nThe current cell row and column number is updated before this call is made.",(0,s.jsx)(l.br,{}),"\nThe event handler is passed 2 variables, row and col, which contain the row and column number of the current cell (1-based)."]}),"\n",(0,s.jsx)(l.h3,{id:"onselectrow",children:"onselectrow"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onselectrow As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["onselectrow event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the user toggles any of the visible row selector checkboxes within the grid",(0,s.jsx)(l.br,{}),'\nThe event handler is passed one variable, range, a string enumerating the currently checked rows. This range has two special values: "" indicating that no rows are currently checked, or the reserved value "all" indicating that all rows have been checked. Between these extremes, the range parameter will become a CSV string listing the (1-based) indices of the currently checked rows.',(0,s.jsx)(l.br,{}),"\nAs this event is linked to the toggling of the row selectors, it only fires if showRowSelector is true"]}),"\n",(0,s.jsx)(l.h3,{id:"onchangecell",children:"onchangecell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onchangecell As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["onchangecell event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the user finished editing a cell value.",(0,s.jsx)(l.br,{}),"\nThe current cell row and column number is updated before this call is made.",(0,s.jsx)(l.br,{}),"\nThe event handler is passed value (the new cell value). It should return the value to be placed into the cell or null to cancel the edit."]}),"\n",(0,s.jsx)(l.h3,{id:"ongetfunctions",children:"ongetfunctions"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property ongetfunctions As %ZEN.Datatype.eventHandler [ Internal ];\n"})}),"\n",(0,s.jsxs)(l.p,{children:["ongetfunctions event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the formula engine for this component is initialized.",(0,s.jsx)(l.br,{}),"\nIt should return a list of additional functions that can be evaluated by the formula engine."]}),"\n",(0,s.jsx)(l.h3,{id:"onaction",children:"onaction"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onaction As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["onaction event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the user executes an action within a cell (such as clicking on a column-defined checkbox, button, or link.)",(0,s.jsx)(l.br,{}),"\nThe current cell row and column number is updated before this call is made.",(0,s.jsx)(l.br,{}),"\nThe event handler is passed 3 variables, row, name, and value, which contain the row number of the current cell (1-based), the logical name of the column, and the current value of the action control, if applicable."]}),"\n",(0,s.jsx)(l.h3,{id:"ongetlookupdata",children:"ongetlookupdata"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property ongetlookupdata As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["ongetlookupdata event handler:",(0,s.jsx)(l.br,{}),"\nReturn a javascript array of data to display within the popup for a lookup column. This can be any array of object or literal values."]}),"\n",(0,s.jsx)(l.h3,{id:"ongettitle",children:"ongettitle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property ongettitle As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsx)(l.p,{children:"ongettitle event handler: If defined, this event returns the HTML that will be displayed within the title area of this grid (top of grid). This supercedes the gridTitle property if defined."}),"\n",(0,s.jsx)(l.h3,{id:"ongetstatus",children:"ongetstatus"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property ongetstatus As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsx)(l.p,{children:"ongetstatus event handler: If defined, this event returns the HTML that will be displayed within the status area of this grid (bottom of grid)."}),"\n",(0,s.jsx)(l.h3,{id:"onfiltercell",children:"onfiltercell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property onfiltercell As %ZEN.Datatype.eventHandler;\n"})}),"\n",(0,s.jsxs)(l.p,{children:["onfiltercell event handler:",(0,s.jsx)(l.br,{}),"\nIf defined, this event is fired when the user enters a new filter key.",(0,s.jsx)(l.br,{}),"\nThe event handler is passed an object, info, with the properties row,col,value, and key. The event handler should return true if the row containing the cell matches the filter or false otherwise."]}),"\n",(0,s.jsx)(l.h3,{id:"lblsearch",children:"lblSearch"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblSearch As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Search")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblworking",children:"lblWorking"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblWorking As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Working")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblerrorrendercontents",children:"lblErrorRenderContents"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblErrorRenderContents As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Error in renderContents.")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblerrorrenderskeleton",children:"lblErrorRenderSkeleton"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblErrorRenderSkeleton As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Error in renderSkeleton.")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblerrorrendercells",children:"lblErrorRenderCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblErrorRenderCells As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Error in renderCells.")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblerroradjustsizes",children:"lblErrorAdjustSizes"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblErrorAdjustSizes As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Error in adjustSizes.")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"lblerrorselectcell",children:"lblErrorSelectCell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:'Property lblErrorSelectCell As %ZEN.Datatype.caption [ InitialExpression = {$$$Text("Error in selectCell.")} ];\n'})}),"\n",(0,s.jsx)(l.h3,{id:"useengine",children:"useEngine"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"Property useEngine As %ZEN.Datatype.boolean [ InitialExpression = 1 ];\n"})}),"\n",(0,s.jsx)(l.p,{children:"Setting this to 0 will disable code execution when loading and rendering the grid This is useful when you want to enter = and not a formula in a particular column. This is a grid wide setting"}),"\n",(0,s.jsx)(l.h2,{id:"xdatas",children:"XDatas"}),"\n",(0,s.jsx)(l.h3,{id:"style-1",children:"Style"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"XData Style\n"})}),"\n",(0,s.jsx)(l.p,{children:"defines style sheet used by this component."}),"\n",(0,s.jsx)(l.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(l.h3,{id:"oncreate",children:"onCreate"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod onCreate() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Initialize additional client-side values"}),"\n",(0,s.jsx)(l.h3,{id:"initengine",children:"initEngine"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod initEngine() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Initialize the calculation engine."}),"\n",(0,s.jsx)(l.h3,{id:"recalc",children:"recalc"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod recalc() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Recalculate values of cells using the formula engine."}),"\n",(0,s.jsx)(l.h3,{id:"evaluate",children:"evaluate"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod evaluate(expr, row, col) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Evaluate a single expression (outside of the general set of cells)."}),"\n",(0,s.jsx)(l.h3,{id:"rendercontents",children:"renderContents"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod renderContents() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Client-side method to render this component."}),"\n",(0,s.jsx)(l.h3,{id:"renderskeleton",children:"renderSkeleton"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod renderSkeleton() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Render the main divs (without content)."}),"\n",(0,s.jsx)(l.h3,{id:"extractuserstylesetting",children:"extractUserStyleSetting"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod extractUserStyleSetting(styleStr, attr) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Utility for pulling specific settings out of a user defined style string"}),"\n",(0,s.jsx)(l.h3,{id:"rendercells",children:"renderCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod renderCells(recalc) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Render the data and headers within the grid."}),"\n",(0,s.jsx)(l.h3,{id:"getcellcontent",children:"getCellContent"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellContent(value, r, c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Test for override of cell content. This may be overridden by subclasses."}),"\n",(0,s.jsx)(l.h3,{id:"getpaginghtml",children:"getPagingHTML"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPagingHTML() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the HTML for the paging buttons."}),"\n",(0,s.jsx)(l.h3,{id:"getcellvalue",children:"getCellValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellValue(r, c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the (resolved) value of the given cell (0-based)."}),"\n",(0,s.jsx)(l.h3,{id:"setcellvalue",children:"setCellValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setCellValue(value, r, c) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Set the value of grid cell; Row and column are 0-based."}),"\n",(0,s.jsx)(l.h3,{id:"setfilterkey",children:"setFilterKey"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setFilterKey(key, update) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Set the client-side filter key."}),"\n",(0,s.jsx)(l.h3,{id:"updategrid",children:"updateGrid"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod updateGrid(reset) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Reset and re-render the entire grid contents."}),"\n",(0,s.jsx)(l.h3,{id:"updatecells",children:"updateCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod updateCells(immediate, reindex, delay) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Re-render the data cells within this grid.",(0,s.jsx)(l.br,{}),"\nIf immediate is true, execute immediately. Otherwise use a timer."]}),"\n",(0,s.jsx)(l.h3,{id:"reallyupdatecells",children:"reallyUpdateCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod reallyUpdateCells() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Do the actual work of rerendering the data within this grid."}),"\n",(0,s.jsx)(l.h3,{id:"setsize",children:"setSize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setSize(width, height) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Set the size of this component (in pixels)."}),"\n",(0,s.jsx)(l.h3,{id:"definegetcomputedstyle",children:"defineGetComputedStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod defineGetComputedStyle() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function to define the method getComputedStyle() is the browser does not already have an innate one (i.e. IE8)"}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizesincolumnresize",children:"adjustSizesInColumnResize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesInColumnResize(sz) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function for AdjustSizes to address special logic needs of interactive Column width resizing."}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizesareaspagingstatus",children:"adjustSizesAreasPagingStatus"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesAreasPagingStatus(sz, pagingDiv, statusDiv) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper method to service the Paging and Status DIVs when processing an AdjustSizes request. Note: this call may change the value of sz.encHgt."}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizescolumnheaders",children:"adjustSizesColumnHeaders"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesColumnHeaders(sz, cols) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function for adjustSizes. This snippet walks over the column headers to update the cwid entries of the sizing object based on attribute settings or, in their absence, actual rendered avatars. In addition, the column header height cHdrHgt, is updated to reflect the maximum bounds of any of the cells visited."}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizesrowheaders",children:"adjustSizesRowHeaders"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesRowHeaders(sz, rows, hdrLabels) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function for adjustSizes. This snippet walks over the rows and row headers to update the rhgt and rHdrWid entries of the sizing object based on attribute settings or, in their absence, actual rendered avatars."}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizessummaryrow",children:"adjustSizesSummaryRow"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesSummaryRow(sz, cols) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function for adjustSizes. This snippet walks over various elements that comprise the summary row, sets the attribute cSumHgt and may upwardly adjust the values of cwid and rHdrHgt depending on current values and its own rendering needs."}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizesdatacells",children:"adjustSizesDataCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizesDataCells(sz, cols, rows) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Helper function for adjustSizes. This snippet walks over actual data cells and may upwardly adjust the values of cwid and rhgt depending on current values rendering needs."}),"\n",(0,s.jsx)(l.h3,{id:"initializesizingobject",children:"initializeSizingObject"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod initializeSizingObject(inResize, encDiv, titleDiv) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Initialize sizing object with the current style contraints we need to satisfy"}),"\n",(0,s.jsx)(l.h3,{id:"adjustsizes",children:"adjustSizes"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod adjustSizes() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Adjust sizes of this component."}),"\n",(0,s.jsx)(l.h3,{id:"getrowcount",children:"getRowCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowCount(filtered) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Return number of displayed rows in this grid.",(0,s.jsx)(l.br,{}),"\nIf filtered (the default), return only filtered results."]}),"\n",(0,s.jsx)(l.h3,{id:"getcolumncount",children:"getColumnCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnCount() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return number of displayed columns in this grid."}),"\n",(0,s.jsx)(l.h3,{id:"wheelhandler",children:"wheelHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod wheelHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse wheel handler."}),"\n",(0,s.jsx)(l.h3,{id:"cellscrollvt",children:"cellScrollVt"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellScrollVt() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Vertical Scroll handler."}),"\n",(0,s.jsx)(l.h3,{id:"cellscrollhz",children:"cellScrollHz"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellScrollHz() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Horizontal Scroll handler.."}),"\n",(0,s.jsx)(l.h3,{id:"resizemousedblclick",children:"resizeMouseDblClick"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod resizeMouseDblClick(evt, index) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse double-click handler for column resize."}),"\n",(0,s.jsx)(l.h3,{id:"resizemousedown",children:"resizeMouseDown"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod resizeMouseDown(evt, index) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse down handler for column resize."}),"\n",(0,s.jsx)(l.h3,{id:"resizemouseup",children:"resizeMouseUp"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod resizeMouseUp(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse up handler for resize handle (connected to window)."}),"\n",(0,s.jsx)(l.h3,{id:"resizemousemove",children:"resizeMouseMove"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod resizeMouseMove(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse move handler for column resize."}),"\n",(0,s.jsx)(l.h3,{id:"sizehandlemousedown",children:"sizeHandleMouseDown"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod sizeHandleMouseDown(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse down handler for selector resize."}),"\n",(0,s.jsx)(l.h3,{id:"sizehandlemouseup",children:"sizeHandleMouseUp"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod sizeHandleMouseUp(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse up handler for size handle (connected to window)."}),"\n",(0,s.jsx)(l.h3,{id:"sizehandlemousemove",children:"sizeHandleMouseMove"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod sizeHandleMouseMove(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse move handler for selector resize."}),"\n",(0,s.jsx)(l.h3,{id:"gridkeyfocus",children:"gridKeyFocus"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gridKeyFocus() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Focus passed to the grid's invisible edit control."}),"\n",(0,s.jsx)(l.h3,{id:"gridkeyblur",children:"gridKeyBlur"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gridKeyBlur() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Focus taken from the grid's invisible edit control."}),"\n",(0,s.jsx)(l.h3,{id:"gridkeydownhandler",children:"gridKeyDownHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gridKeyDownHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Process keydown event within the grid's invisible edit control."}),"\n",(0,s.jsx)(l.h3,{id:"gridkeypresshandler",children:"gridKeyPressHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod gridKeyPressHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Process keypress event within the grid's invisible edit control."}),"\n",(0,s.jsx)(l.h3,{id:"celleditkeyuphandler",children:"cellEditKeyUpHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellEditKeyUpHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Process key up event within the grid's cell edit control."}),"\n",(0,s.jsx)(l.h3,{id:"celleditkeyhandler",children:"cellEditKeyHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellEditKeyHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Process keys pressed within the grid's cell edit control."}),"\n",(0,s.jsx)(l.h3,{id:"focus",children:"focus"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod focus() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Client-side method to give input focus to this control."}),"\n",(0,s.jsx)(l.h3,{id:"movetocell",children:"moveToCell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod moveToCell(dir, updateRange) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:['Move to a new, editable, cell. dir is "up","down","left","right","end",or "home". Returns true if move was successful.',(0,s.jsx)(l.br,{}),'\nupdateRange indicates that we are in "select range" mode.']}),"\n",(0,s.jsx)(l.h3,{id:"selectcell",children:"selectCell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectCell(row, col, notify, updateRange) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Make the specified cell the current cell.",(0,s.jsx)(l.br,{}),"\nrow and col are 1-based.",(0,s.jsx)(l.br,{}),"\nIf notify is true, then raise an onSelectCell event."]}),"\n",(0,s.jsx)(l.h3,{id:"selectcellhandler",children:"selectCellHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectCellHandler(r, c) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Notification that user is about to move to a new cell."}),"\n",(0,s.jsx)(l.h3,{id:"cellactionhandler",children:"cellActionHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellActionHandler(r, name, value) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Notification that user has fired a cell action."}),"\n",(0,s.jsx)(l.h3,{id:"highlightcells",children:"highlightCells"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod highlightCells(flag) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Hilight (or unhighlight) the current selected cell headers."}),"\n",(0,s.jsx)(l.h3,{id:"movecellselector",children:"moveCellSelector"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod moveCellSelector(startRow, startCol, endRow, endCol) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Move the cell selector to the given cells (1-based)."}),"\n",(0,s.jsx)(l.h3,{id:"cellinputclickhandler",children:"cellInputClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellInputClickHandler(event) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Handler for the dynamic cell editor control to allow the user to click the mouse to initially position the cursor and, thereafter, use left and right arrow keys to move within the edited string."}),"\n",(0,s.jsx)(l.h3,{id:"editcell",children:"editCell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod editCell(defval, which) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Display edit control in the current cell. If defval is defined, then use it as the initial value in the editor. which indicates what type of cell is being edited: "row" (row label), "column" (column label), otherwise a data cell.'}),"\n",(0,s.jsx)(l.h3,{id:"celleditblur",children:"cellEditBlur"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellEditBlur() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Focus taken from the grid's cell edit control."}),"\n",(0,s.jsx)(l.h3,{id:"stopeditcell",children:"stopEditCell"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod stopEditCell(cancel) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Stop editing of the current cell.",(0,s.jsx)(l.br,{}),"\nIf cancel is true, then do not save current control value."]}),"\n",(0,s.jsx)(l.h3,{id:"getcelleditor",children:"getCellEditor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellEditor() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the html element for the current cell editor, if there is one."}),"\n",(0,s.jsx)(l.h3,{id:"getcellselector",children:"getCellSelector"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellSelector() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the html element for the current cell selector, if there is one."}),"\n",(0,s.jsx)(l.h3,{id:"iscelleditable",children:"isCellEditable"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod isCellEditable(r, c) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return whether a given cell can be edited; Row and column are 1-based."}),"\n",(0,s.jsx)(l.h3,{id:"iscellvisible",children:"isCellVisible"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod isCellVisible(r, c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return whether a given cell is visible; Row and column are 1-based."}),"\n",(0,s.jsx)(l.h3,{id:"cellmouseover",children:"cellMouseOver"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellMouseOver(row, col, evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse over for a cell."}),"\n",(0,s.jsx)(l.h3,{id:"cellmouseout",children:"cellMouseOut"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellMouseOut(row, col, evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Mouse out for a cell."}),"\n",(0,s.jsx)(l.h3,{id:"selectorclickhandler",children:"selectorClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectorClickHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has clicked on the cell selector."}),"\n",(0,s.jsx)(l.h3,{id:"selectordblclickhandler",children:"selectorDblClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectorDblClickHandler(evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has dbl-clicked on the cell selector."}),"\n",(0,s.jsx)(l.h3,{id:"cellclickhandler",children:"cellClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellClickHandler(row, col, evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has clicked on a cell."}),"\n",(0,s.jsx)(l.h3,{id:"celldblclickhandler",children:"cellDblClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cellDblClickHandler(row, col, evt) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has dbl-clicked on a cell."}),"\n",(0,s.jsx)(l.h3,{id:"buildsortindex",children:"buildSortIndex"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod buildSortIndex() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Build the client-side sort index for this grid. This also takes care of filterKey filtering, if needed."}),"\n",(0,s.jsx)(l.h3,{id:"buildrowindex",children:"buildRowIndex"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod buildRowIndex() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Resolve all row descriptors for this grid into a set of row info objects that are used for actual rendering."}),"\n",(0,s.jsx)(l.h3,{id:"buildrowleafindex",children:"buildRowLeafIndex"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod buildRowLeafIndex(rowArray, list, dimInfo, depth, parent) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Build a list of leaf row descriptors (with spanning headers if needed). Return the number of leaf nodes."}),"\n",(0,s.jsx)(l.h3,{id:"getrowdescriptorcount",children:"getRowDescriptorCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowDescriptorCount() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the number of row descriptors."}),"\n",(0,s.jsx)(l.h3,{id:"getrowdescriptor",children:"getRowDescriptor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowDescriptor(r) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an object containing the descriptor for row r (0-based). r is an index into the actual set of row descriptors."}),"\n",(0,s.jsx)(l.h3,{id:"getrowdescriptors",children:"getRowDescriptors"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowDescriptors() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an array of row descriptors (or null)."}),"\n",(0,s.jsx)(l.h3,{id:"getcolumndescriptors",children:"getColumnDescriptors"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnDescriptors() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an array of column descriptors (or null)."}),"\n",(0,s.jsx)(l.h3,{id:"getrowinfo",children:"getRowInfo"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowInfo(r) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an object containing display information for row r (0-based). r is a resolved row number within the current page!!!."}),"\n",(0,s.jsx)(l.h3,{id:"buildcolumnindex",children:"buildColumnIndex"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod buildColumnIndex() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Resolve all column descriptors for this grid into a set of column info objects that are used for actual rendering."}),"\n",(0,s.jsx)(l.h3,{id:"buildcolumnleafindex",children:"buildColumnLeafIndex"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod buildColumnLeafIndex(columnArray, list, dimInfo, depth, parent) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Build a list of leaf node column descriptors. Return the number of leaf nodes."}),"\n",(0,s.jsx)(l.h3,{id:"getcolumndescriptorcount",children:"getColumnDescriptorCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnDescriptorCount() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the number of column descriptors."}),"\n",(0,s.jsx)(l.h3,{id:"getcolumndescriptor",children:"getColumnDescriptor"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnDescriptor(c) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an object containing the descriptor for column c (0-based). c is an index into the actual set of column descriptors."}),"\n",(0,s.jsx)(l.h3,{id:"getcolumninfo",children:"getColumnInfo"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getColumnInfo(c) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return an object containing display information for column c (0-based). If there are nested columns, this always refers to the bottom-most set of columns."}),"\n",(0,s.jsx)(l.h3,{id:"getdesignmode",children:"getDesignMode"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getDesignMode() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Test if this grid is in "design" mode;.'}),"\n",(0,s.jsx)(l.h3,{id:"getpagecount",children:"getPageCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPageCount() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Return number of data "pages" within this grid.'}),"\n",(0,s.jsx)(l.h3,{id:"getrowsonpage",children:"getRowsOnPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowsOnPage() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Return number of rows on the current "page".'}),"\n",(0,s.jsx)(l.h3,{id:"getpagesize",children:"getPageSize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPageSize() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Return size of data "pages" within this grid. 0 indicates no paging is used.'}),"\n",(0,s.jsx)(l.h3,{id:"setpagesize",children:"setPageSize"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setPageSize(pageSize) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Set the size of data "pages" within this grid. 0 indicates no paging is used.'}),"\n",(0,s.jsx)(l.h3,{id:"getcurrpage",children:"getCurrPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCurrPage() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Number of the current "page" when paging (1-based).'}),"\n",(0,s.jsx)(l.h3,{id:"setcurrpage",children:"setCurrPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setCurrPage(page) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Set the current "page" when paging (1-based).'}),"\n",(0,s.jsx)(l.h3,{id:"nextpage",children:"nextPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod nextPage() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Show next page in grid."}),"\n",(0,s.jsx)(l.h3,{id:"prevpage",children:"prevPage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod prevPage() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Show previous page in grid."}),"\n",(0,s.jsx)(l.h3,{id:"getrowoffset",children:"getRowOffset"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowOffset() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"When paging, return the row number (0-based) of the current visible top row."}),"\n",(0,s.jsx)(l.h3,{id:"rowclickhandler",children:"rowClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod rowClickHandler(evt, row) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has clicked on a row header."}),"\n",(0,s.jsx)(l.h3,{id:"rowdblclickhandler",children:"rowDblClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod rowDblClickHandler(evt, row) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has double-clicked on a row header."}),"\n",(0,s.jsx)(l.h3,{id:"columnclickhandler",children:"columnClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod columnClickHandler(evt, col) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has clicked on a column header."}),"\n",(0,s.jsx)(l.h3,{id:"columndblclickhandler",children:"columnDblClickHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod columnDblClickHandler(evt, col) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User has double-clicked on a column header."}),"\n",(0,s.jsx)(l.h3,{id:"splitstyle",children:"splitStyle"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod splitStyle(style, info) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Split a css value into the style values into styles for an inner and outer cell div."}),"\n",(0,s.jsx)(l.h3,{id:"cbclick",children:"cbClick"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod cbClick(which) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"User click on a row selector check box."}),"\n",(0,s.jsx)(l.h3,{id:"showmessage",children:"showMessage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showMessage(msg) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Display a message for this form."}),"\n",(0,s.jsx)(l.h3,{id:"hidemessage",children:"hideMessage"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod hideMessage() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Hide the message for this form."}),"\n",(0,s.jsx)(l.h3,{id:"beginwait",children:"beginWait"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod beginWait() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'Start "wait" state for this grid.'}),"\n",(0,s.jsx)(l.h3,{id:"endwait",children:"endWait"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod endWait() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:'End "wait" state for this grid.'}),"\n",(0,s.jsx)(l.h3,{id:"showoverlay",children:"showOverlay"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showOverlay(content) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Show the given content in the overlay for this grid."}),"\n",(0,s.jsx)(l.h3,{id:"hideoverlay",children:"hideOverlay"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod hideOverlay() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Hide the overlay for this grid."}),"\n",(0,s.jsx)(l.h3,{id:"notifyviewhandler",children:"notifyViewHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod notifyViewHandler(reason, data1, data2, data3) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Notification that the dataController associated with this grid has raised an event."}),"\n",(0,s.jsx)(l.h3,{id:"getcellrowcount",children:"getCellRowCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellRowCount() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Number of rows. Part of formula provider API."}),"\n",(0,s.jsx)(l.h3,{id:"getcellcolumncount",children:"getCellColumnCount"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellColumnCount() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Number of columns. Part of formula provider API."}),"\n",(0,s.jsx)(l.h3,{id:"getcellcolumnname",children:"getCellColumnName"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellColumnName(c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Column name (0-based). Part of formula provider API."}),"\n",(0,s.jsx)(l.h3,{id:"getcelleditdata",children:"getCellEditData"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellEditData(r, c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get the value to display within the cell editor. This is either the raw value (which may be a formula) or the resolved value depending on the hasFormulas property."}),"\n",(0,s.jsx)(l.h3,{id:"getcelldata",children:"getCellData"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellData(r, c) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get raw cell value (0-based). Part of formula provider API."}),"\n",(0,s.jsx)(l.h3,{id:"getcellexternaldata",children:"getCellExternalData"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCellExternalData(r, prop) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get raw cell value from controller (row is 0-based). Part of formula provider API."}),"\n",(0,s.jsx)(l.h3,{id:"getrowvalue",children:"getRowValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowValue(row) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the value (using the valueColumn) of the given row (1-based)."}),"\n",(0,s.jsx)(l.h3,{id:"setproperty",children:"setProperty"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod setProperty(property, value, value2) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Set the value of a named property."}),"\n",(0,s.jsx)(l.h3,{id:"showpopup",children:"showPopup"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showPopup(spec) [ Language = javascript ]\n"})}),"\n",(0,s.jsxs)(l.p,{children:["Display the dropdown popup window.",(0,s.jsx)(l.br,{}),"\nspec is an object with any of the following properties:",(0,s.jsx)(l.br,{}),"\ntop - top edge of popup.",(0,s.jsx)(l.br,{}),"\nleft - left edge of popup.",(0,s.jsx)(l.br,{}),"\nparentDiv - if supplied, use this to place the popup.",(0,s.jsx)(l.br,{}),"\nvalue - current logical value.",(0,s.jsx)(l.br,{}),"\ndata - array of data elements to display; can be an array of objects or literal values.",(0,s.jsx)(l.br,{}),"\npropertyList - if data contains objects, this is a csv-list of properties to display.",(0,s.jsx)(l.br,{}),"\nidProperty - if data contains objects, this the name of the property supplying the id value.",(0,s.jsx)(l.br,{}),"\ntextProperty - if data contains objects, this the name of the property supplying the display value.",(0,s.jsx)(l.br,{}),"\ntitle - title to display in popup.",(0,s.jsx)(l.br,{}),"\napplyValue - function to call a value is selected within the popup."]}),"\n",(0,s.jsx)(l.h3,{id:"applyvalue",children:"applyValue"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod applyValue(value, text) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Value applied from popup."}),"\n",(0,s.jsx)(l.h3,{id:"getpopupcontent",children:"getPopupContent"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getPopupContent(group) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the content for the popup/dropdown."}),"\n",(0,s.jsx)(l.h3,{id:"getlookuptablehtml",children:"getLookupTableHTML"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getLookupTableHTML(spec, filter) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Get the HTML contents of the popup lookup table."}),"\n",(0,s.jsx)(l.h3,{id:"applyfilter",children:"applyFilter"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod applyFilter() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Apply contents of filter control."}),"\n",(0,s.jsx)(l.h3,{id:"killevent",children:"killEvent"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod killEvent(evt) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Utility to stop the propagation of an event to other handlers"}),"\n",(0,s.jsx)(l.h3,{id:"filterkeydown",children:"filterKeyDown"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod filterKeyDown(evt) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Keydown in popup."}),"\n",(0,s.jsx)(l.h3,{id:"filterkeyup",children:"filterKeyUp"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod filterKeyUp(evt) [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Key up in popup."}),"\n",(0,s.jsx)(l.h3,{id:"showgrouphandler",children:"showGroupHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod showGroupHandler() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Notification that the popup group is displayed."}),"\n",(0,s.jsx)(l.h3,{id:"hidegrouphandler",children:"hideGroupHandler"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod hideGroupHandler() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Notification that the popup group is hidden."}),"\n",(0,s.jsx)(l.h3,{id:"getsearchdiv",children:"getSearchDiv"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getSearchDiv() [ Internal, Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Find the search results div (wrapper around lookup results table)."}),"\n",(0,s.jsx)(l.h3,{id:"selectpopupitem",children:"selectPopupItem"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod selectPopupItem(index) [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Select an item within the popup (used by keyboard handling)."}),"\n",(0,s.jsx)(l.h3,{id:"getrowheaderlabels",children:"getRowHeaderLabels"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getRowHeaderLabels() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the array of row header labels to be displayed in the upper left nub."}),"\n",(0,s.jsx)(l.h3,{id:"getcurrrow",children:"getCurrRow"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCurrRow() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the number of the current row (1 based)."}),"\n",(0,s.jsx)(l.h3,{id:"getcurrcolumn",children:"getCurrColumn"}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{className:"language-objectscript-class",children:"ClientMethod getCurrColumn() [ Language = javascript ]\n"})}),"\n",(0,s.jsx)(l.p,{children:"Return the number of the current column (1 based)."})]})}function d(e={}){const{wrapper:l}={...(0,r.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>i,x:()=>t});var s=n(96540);const r={},a=s.createContext(r);function i(e){const l=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function t(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:l},e.children)}}}]);