"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[60943],{63664:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>r,default:()=>c,frontMatter:()=>a,toc:()=>l});var s=i(74848),n=i(28453);const a={pagination_prev:null,pagination_next:null},r="%DeepSee.Model.measure",l=[{value:"Properties",id:"properties",level:2},{value:"cube",id:"cube",level:3},{value:"aggregate",id:"aggregate",level:3},{value:"type",id:"type",level:3},{value:"scale",id:"scale",level:3},{value:"hidden",id:"hidden",level:3},{value:"searchable",id:"searchable",level:3},{value:"formatString",id:"formatstring",level:3},{value:"units",id:"units",level:3},{value:"iKnowSource",id:"iknowsource",level:3},{value:"iKnowDomain",id:"iknowdomain",level:3},{value:"iKnowParameters",id:"iknowparameters",level:3},{value:"iKnowDictionaries",id:"iknowdictionaries",level:3},{value:"listingFilterValue",id:"listingfiltervalue",level:3},{value:"listingFilterOperator",id:"listingfilteroperator",level:3},{value:"factNumber",id:"factnumber",level:3},{value:"Methods",id:"methods",level:2},{value:"%Validate",id:"validate",level:3},{value:"%AtScaleExport",id:"atscaleexport",level:3}];function o(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"deepseemodelmeasure",children:"%DeepSee.Model.measure"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Class %DeepSee.Model.measure Extends (%DeepSee.Model.node, %DeepSee.Model.source) [ Inheritance = right, System = 3 ]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Meta-data object that represents a measure within a DeepSee cube.",(0,s.jsx)(t.br,{}),'\nAt query processing time, a measure is treated as if it were a member of a special dimension called "Measures".']}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h3,{id:"cube",children:"cube"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Relationship cube As %DeepSee.Model.cube(XMLPROJECTION = "none") [ Cardinality = one, Inverse = measures ];\n'})}),"\n",(0,s.jsx)(t.p,{children:"Cube that this measure belongs to."}),"\n",(0,s.jsx)(t.h3,{id:"aggregate",children:"aggregate"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property aggregate As %DeepSee.Datatype.string(VALUELIST = ",COUNT,SUM,MIN,MAX,AVG", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Default aggregate function applied to this measure.",(0,s.jsx)(t.br,{}),"\nIf not specified, the default aggregate for numeric measures is SUM and COUNT for all other types."]}),"\n",(0,s.jsx)(t.h3,{id:"type",children:"type"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property type As %DeepSee.Datatype.string(VALUELIST = ",integer,number,boolean,string,date,age,text,iKnow", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This indicates the type of this measure.",(0,s.jsx)(t.br,{}),"\nThe type specifies how this measure is used within MDX processing. The type can be one of the following:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:'"integer" - the measure contains an integer value that can be aggregated within an MDX query. If no aggregate is specified, then SUM is used.'}),"\n",(0,s.jsx)(t.li,{children:'"number" - the measure contains a numeric value that can be aggregated within an MDX query. If no aggregate is specified, then SUM is used.'}),"\n",(0,s.jsx)(t.li,{children:'"boolean" - the measure contains a boolean value that can be aggregated within an MDX query. If no aggregate is specified, then COUNT is used (which is equivalent to SUM).'}),"\n",(0,s.jsx)(t.li,{children:'"date" - the measure contains a date value (in +$H format). The only aggregates that can be used with a date measure are MIN, MAX, and AVG. If no aggregate is specified, then MAX is used.'}),"\n",(0,s.jsx)(t.li,{children:'"age" - the measure contains an age value (in days). The only aggregates that can be used with an age measure are MIN, MAX, and AVG. If no aggregate is specified, then AVG is used.'}),"\n",(0,s.jsx)(t.li,{children:'"string" - the measure contains a string value. The only aggregate that can be used with a string measure is COUNT.\nA string measure can be used as a way to add arbitrary data to a cube\'s fact table. String measures are not indexed.'}),"\n",(0,s.jsx)(t.li,{children:'"text" - similar to a "string" measure, except that it is indexed using a text index.'}),"\n",(0,s.jsx)(t.li,{children:'"iKnow" - a text value that is processed and indexed using the iKnow Smart Indexing API.\nIf not specified then the type will match the source property, as best as possible or be set to "number".'}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"scale",children:"scale"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property scale As %Integer(MINVAL = 0, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"The scale value (number of digits following the decimal point) used for numeric measures. If not specified, then the scale of the source property is used, if possible."}),"\n",(0,s.jsx)(t.h3,{id:"hidden",children:"hidden"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property hidden As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,s.jsxs)(t.p,{children:["If true, this measure is hidden. That is, it will not be listed among the cube's members within the various DeepSee utilities.",(0,s.jsx)(t.br,{}),"\nIt can still be used within MDX queries and expressions."]}),"\n",(0,s.jsx)(t.h3,{id:"searchable",children:"searchable"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property searchable As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,s.jsxs)(t.p,{children:["If true, this measure can be used to filter results.",(0,s.jsx)(t.br,{}),"\nSetting this true may result in additional indices being defined for this measure."]}),"\n",(0,s.jsx)(t.h3,{id:"formatstring",children:"formatString"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property formatString As %DeepSee.Datatype.string(MAXLEN = 100, XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Optional format string to apply to this member."}),"\n",(0,s.jsx)(t.h3,{id:"units",children:"units"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property units As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Optional. Units applied to this measure.",(0,s.jsx)(t.br,{}),"\nThis is not currently used."]}),"\n",(0,s.jsx)(t.h3,{id:"iknowsource",children:"iKnowSource"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property iKnowSource As %DeepSee.Datatype.string(VALUELIST = ",string,stream,file,domain", XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsxs)(t.p,{children:['If this is an "iKnow" measure, then this indicates the type of the source text for this measure:',(0,s.jsx)(t.br,{}),'\n"string" -- source is a string property or expression,',(0,s.jsx)(t.br,{}),'\n"stream" -- source is a character stream property,',(0,s.jsx)(t.br,{}),'\n"file" -- source is a string containing a file name.',(0,s.jsx)(t.br,{}),'\n"domain" -- source is a string containing the external ID of a text already indexed in a domain identified by the iKnowDomain attribute.',(0,s.jsx)(t.br,{}),"\nFor other measure types, this attribute is ignored."]}),"\n",(0,s.jsx)(t.h3,{id:"iknowdomain",children:"iKnowDomain"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property iKnowDomain As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:'If this is an "iKnow" measure and iKnowSource="domain", this attribute indicates which domain the text corresponding to this fact is stored in.'}),"\n",(0,s.jsx)(t.h3,{id:"iknowparameters",children:"iKnowParameters"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property iKnowParameters As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:'If this is an "iKnow" measure, this property can be used to supply additional domain parameters for the corresponding iKnow domain. This should be a semicolon-delimited list of double-colon-delimited parameter-name / parameter-value pairs. For example: "DefaultConfig::Spanish;Mat:DefaultProfile::-1" will force this domain to use the Configuration named "Spanish" and default Matching Profile -1. NOTE: this attribute cannot be used for iKnow-managed domains'}),"\n",(0,s.jsx)(t.h3,{id:"iknowdictionaries",children:"iKnowDictionaries"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property iKnowDictionaries As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:'If this is an "iKnow" measure, use this property to identify which Term Lists should be loaded as dictionaries for iKnow to match the iKnow measures text contents against. This attribute should contain a comma-separated list of existing Term List names. NOTE: this attribute cannot be used for iKnow-managed domains'}),"\n",(0,s.jsx)(t.h3,{id:"listingfiltervalue",children:"listingFilterValue"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property listingFilterValue As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.h3,{id:"listingfilteroperator",children:"listingFilterOperator"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property listingFilterOperator As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.h3,{id:"factnumber",children:"factNumber"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:'Property factNumber As %DeepSee.Datatype.string(XMLPROJECTION = "attribute");\n'})}),"\n",(0,s.jsx)(t.p,{children:"Define a stable fact number for this measure"}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"validate",children:"%Validate"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %Validate() As %Status\n"})}),"\n",(0,s.jsx)(t.p,{children:"Test if this measure's definition is valid. As a side-effect, set the aggregate function if not specified."}),"\n",(0,s.jsx)(t.h3,{id:"atscaleexport",children:"%AtScaleExport"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-objectscript-class",children:"Method %AtScaleExport(pStatus As %Status = {$$$OK}, ByRef pAuxiliaryIndex As %DynamicAbstractObject = {$$$NULLOREF}) As %DynamicAbstractObject\n"})}),"\n",(0,s.jsx)(t.p,{children:"Produce the structures needed to emit the appropriate JSON and export this item to AtScale"})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>l});var s=i(96540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);