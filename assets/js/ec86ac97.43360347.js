"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[17705],{25158:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,toc:()=>i});var r=n(74848),t=n(28453);const l={pagination_prev:null,pagination_next:null},a="%iKnow.Model.parameter",i=[{value:"Properties",id:"properties",level:2},{value:"parent",id:"parent",level:3},{value:"name",id:"name",level:3},{value:"value",id:"value",level:3},{value:"isList",id:"islist",level:3},{value:"isNull",id:"isnull",level:3},{value:"Methods",id:"methods",level:2},{value:"GetValue",id:"getvalue",level:3},{value:"%Create",id:"create",level:3},{value:"%CreateNull",id:"createnull",level:3}];function o(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"iknowmodelparameter",children:"%iKnow.Model.parameter"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %iKnow.Model.parameter Extends %iKnow.Model.node [ Deprecated, System = 3 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Model representation of a domain, lister, processor or converter parameter. This type of parent defines what the parameter value should contain;"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Domain Parameters"})," are name-value pairs, with the names and possible values discussed in chapter 2 of the iKnow user guide"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Lister Parameters"})," are documented by their corresponding Lister class (a subclass of %iKnow.Source.Lister"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Processor Parameters"})," are documented by their corresponding Processor class (a subclass of %iKnow.Source.Processor"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Converter Parameters"})," are documented by their corresponding Converter class (a subclass of %iKnow.Source.Converter"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"parent",children:"parent"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Relationship parent As %iKnow.Model.nodeWithParameters(XMLPROJECTION = "none") [ Cardinality = one, Inverse = parameters ];\n'})}),"\n",(0,r.jsx)(s.h3,{id:"name",children:"name"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property name As %String(MAXLEN = 100, XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsx)(s.p,{children:"Name of the property. Only required for domain properties."}),"\n",(0,r.jsx)(s.h3,{id:"value",children:"value"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property value As %String(MAXLEN = 1000, XMLPROJECTION = "attribute");\n'})}),"\n",(0,r.jsx)(s.p,{children:"Property value"}),"\n",(0,r.jsx)(s.h3,{id:"islist",children:"isList"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property isList As %Boolean(XMLPROJECTION = "attribute") [ InitialExpression = 0 ];\n'})}),"\n",(0,r.jsx)(s.p,{children:"Whether or not the contents of this property should be treated as a %List"}),"\n",(0,r.jsx)(s.h3,{id:"isnull",children:"isNull"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:'Property isNull As %Boolean(XMLPROJECTION = "NONE") [ InitialExpression = 0, Transient ];\n'})}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"getvalue",children:"GetValue"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Method GetValue(Output pIsExpression As %Boolean) As %String\n"})}),"\n",(0,r.jsx)(s.p,{children:"Returns the value of this parameter instance, taking into account the the value of isList. If value is an expression, it's still returned as a string representation, but pIsExpression is set to 1."}),"\n",(0,r.jsx)(s.h3,{id:"create",children:"%Create"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %Create(pValue As %String, pIsList As %Boolean = 0) As %iKnow.Model.parameter [ Internal ]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"createnull",children:"%CreateNull"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod %CreateNull() As %iKnow.Model.parameter [ Internal ]\n"})})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>i});var r=n(96540);const t={},l=r.createContext(t);function a(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);