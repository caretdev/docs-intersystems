"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[33960],{81150:(e,s,a)=>{a.r(s),a.d(s,{contentTitle:()=>r,default:()=>o,frontMatter:()=>i,toc:()=>l});var n=a(74848),t=a(28453);const i={pagination_prev:null,pagination_next:null},r="Config.Configuration",l=[{value:"Methods",id:"methods",level:2},{value:"Activate",id:"activate",level:3},{value:"StartupConfiguration",id:"startupconfiguration",level:3},{value:"AddDatabase",id:"adddatabase",level:3},{value:"AddDataServer",id:"adddataserver",level:3},{value:"AddDevice",id:"adddevice",level:3},{value:"AddGlobalMapping",id:"addglobalmapping",level:3},{value:"CPFImport",id:"cpfimport",level:3},{value:"AddNamespace",id:"addnamespace",level:3},{value:"ValidateCfg",id:"validatecfg",level:3},{value:"CreateDatabase",id:"createdatabase",level:3},{value:"AllSignOnsStatus",id:"allsignonsstatus",level:3},{value:"DatabaseRWStatus",id:"databaserwstatus",level:3},{value:"TelnetSignOnsStatus",id:"telnetsignonsstatus",level:3},{value:"DeleteDatabase",id:"deletedatabase",level:3},{value:"GetDataServer",id:"getdataserver",level:3},{value:"GetDatabase",id:"getdatabase",level:3},{value:"GetDevice",id:"getdevice",level:3},{value:"GetGlobalMapping",id:"getglobalmapping",level:3},{value:"GetNamespace",id:"getnamespace",level:3},{value:"ModifyDataServer",id:"modifydataserver",level:3},{value:"ModifyDatabase",id:"modifydatabase",level:3},{value:"ModifyDevice",id:"modifydevice",level:3},{value:"ModifyGlobalMapping",id:"modifyglobalmapping",level:3},{value:"ModifyNamespace",id:"modifynamespace",level:3},{value:"RemoveDataServer",id:"removedataserver",level:3},{value:"RemoveDatabase",id:"removedatabase",level:3},{value:"RemoveDevice",id:"removedevice",level:3},{value:"RemoveGlobalMapping",id:"removeglobalmapping",level:3},{value:"RemoveNamespace",id:"removenamespace",level:3},{value:"RenameDatabase",id:"renamedatabase",level:3},{value:"StartOnBoot",id:"startonboot",level:3}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"configconfiguration",children:"Config.Configuration"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Class Config.Configuration Extends %SYSTEM.Help [ Abstract, Deprecated, System = 4 ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This class and all its methods are deprecated. See the remaining Config classes to manipulate individual sections in the iris.cpf file."}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"activate",children:"Activate"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Activate() As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.CPF.Activate() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"startupconfiguration",children:"StartupConfiguration"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StartupConfiguration() As %Status\n"})}),"\n",(0,n.jsx)(s.p,{children:"This method is DEPRECATED and will be removed in a future version."}),"\n",(0,n.jsx)(s.h3,{id:"adddatabase",children:"AddDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddDatabase(Name As DBName, Directory As %String, Server As %String = "", MountAtStartup As %Boolean = 0, ClusterMountMode As %Boolean = 0, MountRequired As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Create() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"adddataserver",children:"AddDataServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddDataServer(Name As %String, Address As %String = "", Port As %Integer = 1972, IsMirrorConnection As %Boolean = 0) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.ECPServers.Create() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"adddevice",children:"AddDevice"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddDevice(Name As %String, PhysicalDevice As %String = "", Type As %String = "", SubType As %String = "", Prompt As %String = "", OpenParameters As %String = "", AlternateDevice As %String = "", Description As %String = "", Alias As %String = "") As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Devices.Create() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"addglobalmapping",children:"AddGlobalMapping"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddGlobalMapping(Namespace As NSName, Global As %String, Subscript As %String = "", DataLocation As %String, LockLocation As %String = "", Collation As %Integer = 5, SLMLocation As %String = "") As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.MapGlobals.Create() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"cpfimport",children:"CPFImport"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CPFImport(CPFFile As %String = "") As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.CPF.Activate() method instead.",(0,n.jsx)(s.br,{}),"\nThis method currently performs no action, and returns 1 as its status.",(0,n.jsx)(s.br,{}),"\nCPF activation methods only work with the CPF file which was originally activated starting with version 2009.1. Changes can be made to the activated CPF file, and then activated by the Config.CPF.Activate() method. You cannot import a differently named CPF file and activate it. The naming of which CPF file to use only happens at system startup. An alternate method to activate a different CPF file is to to copy the entire file which you want to activate into the one which is currently activated, and then call Config.CPF.Activate(). For example if c:\\iris\\iris.cpf is active:"]}),"\n",(0,n.jsxs)(s.p,{children:['s x=##Class(%Library.File).CopyFile("c:\\iris\\iris.cpf_backup","c:\\iris\\iris.cpf")',(0,n.jsx)(s.br,{}),"\ns x=##Class(Config.CPF).Activate()"]}),"\n",(0,n.jsx)(s.h3,{id:"addnamespace",children:"AddNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod AddNamespace(Name As NSName, Globals As DBName, Routines As DBName, SysGlobals As DBName = "IRISSYS", SysRoutines As DBName = "IRISSYS", Library As DBName = "IRISLIB", TempGlobals As DBName = "IRISTEMP", Description As %String = "") As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Namespaces.Create() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"validatecfg",children:"ValidateCfg"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"Method ValidateCfg() As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Internal method. Performs some cross checks. For instance, if JoinCluster is set, the ECP service must be on and the PIJ directory must be non empty."}),"\n",(0,n.jsx)(s.h3,{id:"createdatabase",children:"CreateDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod CreateDatabase(Name As DBName, Directory As %String, Size As %Integer = 1, BlockSize As %Integer = 8192, MountAtStartup As %Boolean = 0, ClusterMountMode As %Boolean = 0, MountRequired As %Boolean = 0, EncryptedDB As %Boolean = 0, Resource As %String = "%DB_%DEFAULT", GlobalJournalState As %Integer) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Create(), and SYS.Database.CreateDatabase() instead."]}),"\n",(0,n.jsx)(s.h3,{id:"allsignonsstatus",children:"AllSignOnsStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod AllSignOnsStatus(ByRef CurValue As %Boolean, NewValue As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This method is DEPRECATED and will be removed in a future version."}),"\n",(0,n.jsx)(s.h3,{id:"databaserwstatus",children:"DatabaseRWStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DatabaseRWStatus(ByRef CurValue As %Boolean, NewValue As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This method is DEPRECATED and will be removed in a future version."}),"\n",(0,n.jsx)(s.h3,{id:"telnetsignonsstatus",children:"TelnetSignOnsStatus"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod TelnetSignOnsStatus(ByRef CurValue As %Boolean, NewValue As %Boolean) As %Status [ Internal ]\n"})}),"\n",(0,n.jsx)(s.p,{children:"This method is DEPRECATED and will be removed in a future version."}),"\n",(0,n.jsx)(s.h3,{id:"deletedatabase",children:"DeleteDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod DeleteDatabase(Name As DBName) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Delete() and SYS.Databases.DeleteDatabase() methods instead."]}),"\n",(0,n.jsx)(s.h3,{id:"getdataserver",children:"GetDataServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod GetDataServer(Name As %String = "", ByRef Address As %String, ByRef Port As %Integer) As %Status\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.ECPServers.Get() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"getdatabase",children:"GetDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDatabase(Name As DBName, ByRef Directory As %String, ByRef Server As %String, ByRef MountAtStartup As %Boolean, ByRef ClusterMountMode As %Boolean, ByRef MountRequired As %Boolean) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Get() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"getdevice",children:"GetDevice"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetDevice(Name As %String, ByRef PhysicalDevice As %String, ByRef Type As %String, ByRef SubType As %String, ByRef Prompt As %String, ByRef OpenParameters As %String, ByRef AlternateDevice As %String, ByRef Description As %String, ByRef Alias As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Devices.Get() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"getglobalmapping",children:"GetGlobalMapping"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetGlobalMapping(Namespace As NSName, Global As %String, Subscript As %String, ByRef Database As %String, ByRef LockDatabase As %String, ByRef Collation As %Integer, ByRef SLMLocation As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.MapGlobals.Get() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"getnamespace",children:"GetNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod GetNamespace(Name As NSName, ByRef Globals As DBName, ByRef Routines As DBName, ByRef SysGlobals As DBName, ByRef SysRoutines As DBName, ByRef Library As DBName, ByRef TempGlobals As DBName) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Namespaces.Get() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"modifydataserver",children:"ModifyDataServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyDataServer(Name As %String, Address As %String, Port As %Integer) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.ECPServers.Modify() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"modifydatabase",children:"ModifyDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyDatabase(Name As DBName, Directory As %String, Server As %String, MountAtStartup As %Boolean, ClusterMountMode As %Boolean, MountRequired As %Boolean) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Modify() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"modifydevice",children:"ModifyDevice"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyDevice(Name As %String, PhysicalDevice As %String, Type As %String, SubType As %String, Prompt As %String, OpenParameters As %String, AlternateDevice As %String, Description As %String, Alias As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Devices.Modfy() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"modifyglobalmapping",children:"ModifyGlobalMapping"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyGlobalMapping(Namespace As NSName, Global As %String, Subscript As %String, DataLocation As %String, LockLocation As %String, Collation As %Integer, SLMLocation As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.MapGlobals.Modify() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"modifynamespace",children:"ModifyNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod ModifyNamespace(Name As NSName, Globals As DBName, Routines As DBName, SysGlobals As DBName, SysRoutines As DBName, Library As DBName, TempGlobals As DBName) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Namespaces.Modify() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"removedataserver",children:"RemoveDataServer"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveDataServer(Name As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.ECPServers.Delete() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"removedatabase",children:"RemoveDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveDatabase(Name As DBName) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Databases.Delete() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"removedevice",children:"RemoveDevice"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveDevice(Name As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Devices.Delete() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"removeglobalmapping",children:"RemoveGlobalMapping"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveGlobalMapping(Namespace As NSName, Global As %String, Subscript As %String) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.MapGlobals.Delete() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"removenamespace",children:"RemoveNamespace"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod RemoveNamespace(Name As NSName) As %Status\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.Namespaces.Delete() method instead."]}),"\n",(0,n.jsx)(s.h3,{id:"renamedatabase",children:"RenameDatabase"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:'ClassMethod RenameDatabase(OldName As DBName = "", NewName As DBName = "") As %Status [ Internal ]\n'})}),"\n",(0,n.jsx)(s.p,{children:"This method is DEPRECATED and will be removed in a future version."}),"\n",(0,n.jsx)(s.h3,{id:"startonboot",children:"StartOnBoot"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod StartOnBoot(Arg1 As %Boolean = 1) As %Status [ Internal ]\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This method is DEPRECATED and will be removed in a future version.",(0,n.jsx)(s.br,{}),"\nUse Config.WinStartup class instead."]})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>l});var n=a(96540);const t={},i=n.createContext(t);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);