"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[45361],{14433:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>a,default:()=>h,frontMatter:()=>n,toc:()=>i});var s=t(74848),o=t(28453);const n={pagination_prev:null,pagination_next:null},a="%CSP.ErrorLog",i=[{value:"Parameters",id:"parameters",level:2},{value:"PRIVATE",id:"private",level:3},{value:"LICENSEERRORPAGE",id:"licenseerrorpage",level:3},{value:"PAGENOTFOUNDERRORPAGE",id:"pagenotfounderrorpage",level:3},{value:"OTHERSTATICERRORPAGE",id:"otherstaticerrorpage",level:3},{value:"Methods",id:"methods",level:2},{value:"HyperEventError",id:"hypereventerror",level:3},{value:"OnPage",id:"onpage",level:3},{value:"LogError",id:"logerror",level:3},{value:"OnErrorSetup",id:"onerrorsetup",level:3},{value:"ClassifyError",id:"classifyerror",level:3},{value:"DecomposeError",id:"decomposeerror",level:3}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"csperrorlog",children:"%CSP.ErrorLog"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Class %CSP.ErrorLog Extends %CSP.Page [ System = 3 ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"This is the default CSP error page. When writing any error pages you should make this your superclass. If an error occurs while running a hyperevent then the response is controled from the HyperEventError. If it is an error on a standard page then you writing normal HTML output."}),"\n",(0,s.jsx)(r.p,{children:"This error page is designed to log the information to the %ETN system error log and display a simple 'An error has occurred' to the user to avoid leaking any potentially sensitive information. If you would like a more developer friendly error page change the error page to %CSP.Error which will display this same information directly in the page response."}),"\n",(0,s.jsxs)(r.p,{children:["Two particularly interesting errors are the session timeout and the decryption failure errors are both of these can be the result of attempting to go to a page when the users session has timed out or been ended. Commonly you would redirect them to the login page so they can re-enter the application for example in OnPreHTTP method you can write: ",(0,s.jsx)(r.code,{children:'Set errorcode=$get(%request.Data("Error:ErrorNumber",1)) If errorcode=$$$ERRORCODE($$$CSPSessionTimeout)||(errorcode=$$$ERRORCODE($$$InvalidDecrypt)) { Set %response.Redirect="/application/login.csp" Quit 1 }'})," When an error occurs several variables are set in the %request object because these may be overwritten in generating the error page itself. These variables are all prefixed by 'Error:' and the list is:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:ErrorCode"})," - The %Status code for this error"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:ErrorNumber"})," - The error number assocaited with the ErrorCode"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:Namespace"})," - The namespace the page was running in when the error occurred"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:URL"})," - The URL of the page in which the error occurred."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:PageName"})," - The name of the page in which the error occurred."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:ResponseContentType"})," - The %response.ContentType at the time of the error."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Error:ResponseStatus"})," - The %response.Status at the time of the error.\nThe error page will automatically set the %response.Status for some of the standard errors, such as not being able to find the CSP page . If you wish to override this setting do so in the OnPreHTTP method."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(r.h3,{id:"private",children:"PRIVATE"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Parameter PRIVATE = 1;\n"})}),"\n",(0,s.jsx)(r.p,{children:"Error pages should be private to avoid the chance the user can go to them directly by just typing in the address."}),"\n",(0,s.jsx)(r.h3,{id:"licenseerrorpage",children:"LICENSEERRORPAGE"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Parameter LICENSEERRORPAGE As STRING;\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the user with a new session goes to a page and CSP is unable to allocate a license we can not run the normal error page as this requires a license. The default behavior is to report a 'HTTP/1.1 404 Page not found' HTTP response as this does not require a license. You may change this by setting the class parameter LICENSEERRORPAGE on the error page for this CSP application (or the default error page in the case of the application not found error). The values are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:'"" - Return the 404 Page not found error (this is the default)'}),"\n",(0,s.jsx)(r.li,{children:"Path to a static HTML page - Will display this static page, for example '/csp/samples/static.html' will use the stream server to serve up this static file. This does not require a license, but it will only work with static content."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"pagenotfounderrorpage",children:"PAGENOTFOUNDERRORPAGE"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Parameter PAGENOTFOUNDERRORPAGE As STRING;\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the user with a new session goes to a page that is not present then in order to display the standard error page to report this error CSP would take out a license. To avoid this license use if the error is because the application is not found, or the page is not found, or the class does not exist, or the page is private and the token is not correct then the default behavior is to report a 'HTTP/1.1 404 Page not found' HTTP response. This does not require a license and it is standard behavior if you goto a page that is not present on a normal web server. You may change this by setting the class parameter PAGENOTFOUNDERRORPAGE on the error page for this CSP application (or the default error page in the case of the application not found error). The values are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:'"" - Return the 404 Page not found error (this is the default)'}),"\n",(0,s.jsx)(r.li,{children:"1 - Will obtain a license and display the standard error page."}),"\n",(0,s.jsx)(r.li,{children:"Path to a static HTML page - Will display this static page, for example '/csp/samples/static.html' will use the stream server to serve up this static file. This does not require a license, but it will only work with static content."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"otherstaticerrorpage",children:"OTHERSTATICERRORPAGE"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"Parameter OTHERSTATICERRORPAGE As STRING;\n"})}),"\n",(0,s.jsx)(r.p,{children:"If the user with a new session goes to a page that causes an error before a license is obtained then in order to display the standard error page to report this error CSP would take out a license. To avoid this license use in this case the default behavior is to report a 'HTTP/1.1 404 Page not found' HTTP response. This does not require a license. You may change this by setting the class parameter OTHERSTATICERRORPAGE on the error page for this CSP application (or the default error page in the case of the application not found error). The values are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:'"" - Return the 404 Page not found error (this is the default)'}),"\n",(0,s.jsx)(r.li,{children:"1 - Will obtain a license and display the standard error page."}),"\n",(0,s.jsx)(r.li,{children:"Path to a static HTML page - Will display this static page, for example '/csp/samples/static.html' will use the stream server to serve up this static file. This does not require a license, but it will only work with static content."}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(r.h3,{id:"hypereventerror",children:"HyperEventError"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod HyperEventError()\n"})}),"\n",(0,s.jsx)(r.p,{children:"If an error occurs while processing a HyperEvent then this method is called. This method will write out javascript code that will be executed on the browser. Note that the variable 'CSPPage' refers to the 'self' of the page on which the Hyperevent was called as this may be different to the current 'self'."}),"\n",(0,s.jsxs)(r.p,{children:["You could use this javascript to redirect the browser to another page: ",(0,s.jsx)(r.code,{children:"Write \"CSPPage.window.location='/csp/samples/menu.csp';\",!"})," Or you could popup an alert box with the error message in it: ",(0,s.jsx)(r.code,{children:"Write \"alert('An error occurred');\",!"})]}),"\n",(0,s.jsx)(r.h3,{id:"onpage",children:"OnPage"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod OnPage() As %Status\n"})}),"\n",(0,s.jsx)(r.p,{children:"Output the error page as HTML. This makes use of the ##class(%CSP.Utils).DisplayAllObjects() call to display as much information as possible about the state of the %request, %response, %server objects when the error occurred."}),"\n",(0,s.jsx)(r.h3,{id:"logerror",children:"LogError"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod LogError() [ ProcedureBlock = 0 ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"Dump all information to local arrays and call %ETN to log this error"}),"\n",(0,s.jsx)(r.h3,{id:"onerrorsetup",children:"OnErrorSetup"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod OnErrorSetup(ByRef skipheader As %Boolean) As %Boolean [ ProcedureBlock = 1 ]\n"})}),"\n",(0,s.jsx)(r.p,{children:"This is called before the OnPreHTTP and will handle the HyperEvent errors and setup the status line in the response for the standard errors."}),"\n",(0,s.jsx)(r.h3,{id:"classifyerror",children:"ClassifyError"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod ClassifyError(err) As %String\n"})}),"\n",(0,s.jsx)(r.p,{children:'Classify if this is an expected error like a page not found and if so return the %response.Status information. If the error is not an expected error it will return "".'}),"\n",(0,s.jsx)(r.h3,{id:"decomposeerror",children:"DecomposeError"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-objectscript-class",children:"ClassMethod DecomposeError(sc As %Status, ByRef ErrorInfo As %String) As %Status\n"})}),"\n",(0,s.jsx)(r.p,{children:"Return an array of information in ErrorInfo about the error suitable for display with a bit of formatting. You pass in the sc which is the status code of the error. It assumes you are dealing with CSP related errors."})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var s=t(96540);const o={},n=s.createContext(o);function a(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);