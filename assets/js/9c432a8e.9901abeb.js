"use strict";(self.webpackChunkdocs_intersystems=self.webpackChunkdocs_intersystems||[]).push([[87442],{20337:(e,s,n)=>{n.r(s),n.d(s,{contentTitle:()=>i,default:()=>a,frontMatter:()=>o,toc:()=>c});var r=n(74848),t=n(28453);const o={pagination_prev:null,pagination_next:null},i="%CSP.Daemon",c=[{value:"Methods",id:"methods",level:2},{value:"CleanPerfCounters",id:"cleanperfcounters",level:3},{value:"Run",id:"run",level:3},{value:"SessionTimeout",id:"sessiontimeout",level:3},{value:"purgeHistoricConnections",id:"purgehistoricconnections",level:3},{value:"purgeZombieSecurityTokens",id:"purgezombiesecuritytokens",level:3},{value:"purgeCSPRequests",id:"purgecsprequests",level:3},{value:"purgeGroupEntries",id:"purgegroupentries",level:3}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"cspdaemon",children:"%CSP.Daemon"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"Class %CSP.Daemon [ System = 3 ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"This class is used internally by InterSystems IRIS. You should not make direct use of it within your applications. There is no guarantee made about either the behavior or future operation of this class."}),"\n",(0,r.jsx)(s.p,{children:"The %CSP.Daemon class runs to cleanup expired CSP sessions."}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"cleanperfcounters",children:"CleanPerfCounters"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod CleanPerfCounters()\n"})}),"\n",(0,r.jsx)(s.p,{children:"Purge our performance counters"}),"\n",(0,r.jsx)(s.h3,{id:"run",children:"Run"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod Run() [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"The main body of the CSP Daemon"}),"\n",(0,r.jsx)(s.h3,{id:"sessiontimeout",children:"SessionTimeout"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod SessionTimeout(sessionId As %String, ts As %String, skiplock As %Boolean = 0) As %Boolean [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Called when a session timeout is detected."}),"\n",(0,r.jsx)(s.h3,{id:"purgehistoricconnections",children:"purgeHistoricConnections"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod purgeHistoricConnections() [ Internal ]\n"})}),"\n",(0,r.jsx)(s.h3,{id:"purgezombiesecuritytokens",children:"purgeZombieSecurityTokens"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod purgeZombieSecurityTokens() [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"cspServer now stores security-context/tokens in 'Security Limbo'. These security objects timeout and become zombies. The Daemon uses purgeZombieSecurityTokens() to get rid of any timed out security tokens."}),"\n",(0,r.jsx)(s.h3,{id:"purgecsprequests",children:"purgeCSPRequests"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod purgeCSPRequests(purgeToThisStream As %Integer) As %Integer [ Internal ]\n"})}),"\n",(0,r.jsx)(s.p,{children:"The CSP Gateway requests cleanup after themselves if they are called successfully. However, if an error occurs some data may be left around. So every once in a while we clean up anything left around"}),"\n",(0,r.jsx)(s.h3,{id:"purgegroupentries",children:"purgeGroupEntries"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-objectscript-class",children:"ClassMethod purgeGroupEntries()\n"})})]})}function a(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var r=n(96540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);