/// <p>This Builder implementation leverages a model defined in PMML for the numerical part
/// of the categorization task. Term selection occurs as normal, but before calling
/// <method>%GenerateClassifier</method> or <method>%CreateClassifierClass</method>, either of
/// the following two steps needs to be taken:
/// <ul><li>Register a valid <class>%DeepSee.PMML.Builder.AbstractBuilder</class> instance as
/// <property>PMMLBuilder</property>, which will then generate the PMML code automatically when
/// generating the classifier definition as usual</li>
/// <li>Use an external tool to build the model, based on the training data table generated through
/// a call to <method>%ExportDataTable</method> on the builder object. Then copy the PMML code generated by this external
/// tool into this instance's <property>PMMLString</property> property.</li></ul>
Class %iKnow.Classification.Methods.pmml Extends Base [ Deprecated, System = 4 ]
{

/// A valid and fully configured PMML Builder instance. Note that the DataSet and TargetField
/// properties of the PMML Builder will be configured automatically.
Property PMMLBuilder As %DeepSee.PMML.Builder.AbstractBuilder;

/// A valid PMML model, using data field names corresponding to the columns of the table
/// generated by <method>%ExportDataTable</method>.
Property PMMLString As %String(MAXLEN = "");

Method %BuildClassificationMethod(ByRef pClassifier As %iKnow.Classification.Definition.Classifier, pIncludeBuilderParams As %Boolean = 1, pVerbose As %Boolean = 1) As %Status
{
}

Method %LoadFromModel(pDefinition As %iKnow.Classification.Definition.Classifier) As %Status
{
}

}
